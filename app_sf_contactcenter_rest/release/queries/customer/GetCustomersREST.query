<?xml version="1.0" encoding="UTF-8"?>
<query>
<parameters>
	<parameter name="Domains" type="java.util.List" optional="false"/>
	<parameter name="SingleSearchField" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
	<parameter name="CustomerNo" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
	<parameter name="FirstName" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
	<parameter name="LastName" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
	<parameter name="Birthday" type="java.util.Date" optional="true"/>
	<parameter name="EMail" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
	<parameter name="PhoneNo" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
	<parameter name="PostCode" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
	<parameter name="City" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
	<parameter name="CountryCode" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
	<parameter name="CustomerCreationDateFrom" type="java.util.Date" optional="true"/>
	<parameter name="CustomerCreationDateTo" type="java.util.Date" optional="true"/>
	<parameter name="Limit" type="java.lang.Integer" optional="true"/>
</parameters>
<return-mappings>
	<return-mapping name="CustomerBO" type="bo-orm" class="com.intershop.component.customer.orm.internal.orm.CustomerPO" mapperclass="CustomerPOToCustomerBOMapperCC">
		<return-attribute name="UUID"/>
	</return-mapping>
	<return-mapping name="DomainIDs" type="constructor" class="com.intershop.component.customer.orm.internal.query.mapping.ArrayToCollectionMapping">
		<return-attribute name="domainIds"/>
	</return-mapping>
	<return-mapping name="UserIDs" type="constructor" class="com.intershop.component.customer.orm.internal.query.mapping.ArrayToCollectionMapping">
		<return-attribute name="users"/>
	</return-mapping>
</return-mappings>

<processor name="OracleSQL"/>

<template type="countedobjects">
	<sql-dialect name="Oracle">
		<template-if condition="isDefined(Limit)">
			select * from
			(
		</template-if>
			select cuuid as uuid,
				   CAST(COLLECT(DISTINCT buuid) AS collectionOfUUIDs) AS users,
				   CAST(COLLECT(DISTINCT cdomainid) AS collectionOfUUIDs) AS domainIds,
				   COUNT(DISTINCT cuuid) OVER() AS "ROWCOUNT"
			from(
				select c.uuid as cuuid, bp.uuid as buuid, c.domainid as cdomainid
				from customer c
				left join customerprofileassignment cpa on (c.uuid=cpa.customerid) 
				left join basicprofile bp on (cpa.profileid=bp.uuid)
				left join customeraddress ca on (c.uuid=ca.customerid)
				left join companyprofile cp on (cp.customerid=c.uuid)	
				where c.domainid IN 
						(<template-loop iterator="Domains" alias="Domain">
							<loop-statement>
								<template-variable value="Domain"/>
							</loop-statement>
							<loop-separator>, </loop-separator>
						</template-loop>)
				<template-if condition="isDefined(SingleSearchField)">
					<template-call name="inc/SearchExpression2LikeWithSeparator"><call-parameter name="SearchExpression" value="SingleSearchField"/><call-parameter name="ColumnNames" value="&quot;bp.lastName;bp.email;c.customerno;&quot;"/><call-parameter name="CaseInsensitive" value="true()"/><call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/><call-parameter name="Separator" value="&quot;;&quot;"/></template-call>
				</template-if>
				<template-if condition="isDefined(CustomerNo)">
					<template-call name="inc/SearchExpression2Like"><call-parameter name="SearchExpression" value="CustomerNo"/><call-parameter name="ColumnNames" value="&quot;c.customerno&quot;"/><call-parameter name="CaseInsensitive" value="true()"/><call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/></template-call>	
				</template-if>
				<template-if condition="isDefined(FirstName)">
					<template-call name="inc/SearchExpression2Like"><call-parameter name="SearchExpression" value="FirstName"/><call-parameter name="ColumnNames" value="&quot;bp.firstname&quot;"/><call-parameter name="CaseInsensitive" value="true()"/><call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/></template-call>	
				</template-if>
				<template-if condition="isDefined(LastName)">
					<template-call name="inc/SearchExpression2Like"><call-parameter name="SearchExpression" value="LastName"/><call-parameter name="ColumnNames" value="&quot;bp.lastname&quot;"/><call-parameter name="CaseInsensitive" value="true()"/><call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/></template-call>	
				</template-if>
				<template-if condition="isDefined(Birthday)">
					AND (<template-variable value="Birthday"/> = bp.birthdaydate)
				</template-if>
				<template-if condition="isDefined(EMail)">
					<template-call name="inc/SearchExpression2Like"><call-parameter name="SearchExpression" value="EMail"/><call-parameter name="ColumnNames" value="&quot;bp.email&quot;"/><call-parameter name="CaseInsensitive" value="true()"/><call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/></template-call>	
				</template-if>
				<template-if condition="isDefined(PhoneNo)">
					<template-call name="inc/SearchExpression2LikeWithSeparator"><call-parameter name="SearchExpression" value="PhoneNo"/><call-parameter name="ColumnNames" value="&quot;bp.phonehome;bp.phonebusiness;bp.phonemobile&quot;"/><call-parameter name="CaseInsensitive" value="true()"/><call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/><call-parameter name="Separator" value="&quot;;&quot;"/></template-call>	
				</template-if>
				<template-if condition="isDefined(PostCode)">
					<template-call name="inc/SearchExpression2LikeWithSeparator"><call-parameter name="SearchExpression" value="PostCode"/><call-parameter name="ColumnNames" value="&quot;ca.postalcode&quot;"/><call-parameter name="CaseInsensitive" value="true()"/><call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/><call-parameter name="Separator" value="&quot;;&quot;"/></template-call>	
				</template-if>
				<template-if condition="isDefined(City)">
					<template-call name="inc/SearchExpression2LikeWithSeparator"><call-parameter name="SearchExpression" value="City"/><call-parameter name="ColumnNames" value="&quot;ca.city&quot;"/><call-parameter name="CaseInsensitive" value="true()"/><call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/><call-parameter name="Separator" value="&quot;;&quot;"/></template-call>	
				</template-if>
				<template-if condition="isDefined(CountryCode)">
					<template-call name="inc/SearchExpression2Like"><call-parameter name="SearchExpression" value="CountryCode"/><call-parameter name="ColumnNames" value="&quot;ca.countrycode&quot;"/><call-parameter name="CaseInsensitive" value="true()"/><call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/></template-call>	
				</template-if>
				AND
				(
					3=3
					<template-if condition="isDefined(CustomerCreationDateFrom)">
						AND <template-variable value="CustomerCreationDateFrom"/> &lt;= (case when cp.creationdate is null then bp.creationdate else cp.creationdate end)
					</template-if>
					<template-if condition="isDefined(CustomerCreationDateTo)">
						AND <template-variable value="CustomerCreationDateTo"/> &gt;= (case when cp.creationdate is null then bp.creationdate else cp.creationdate end)
					</template-if>
				)
			)
			GROUP BY cuuid
		<template-if condition="isDefined(Limit)">
			) WHERE ROWNUM &lt;= <template-variable value="Limit"/>
		</template-if>
	</sql-dialect>

	<sql-dialect name="Microsoft">
		<template-if condition="isDefined(Limit)">
			SELECT * FROM
			(
		</template-if>
			SELECT uuid, users, domainIds, COUNT(uuid) OVER(PARTITION BY uuid ) AS "ROWCOUNT", ROW_NUMBER() OVER(ORDER BY uuid ASC) as ROWNUM  FROM (
			SELECT DISTINCT e.cuuid AS uuid, 
				SUBSTRING(
					(
						SELECT ','+a.buuid  
						FROM (SELECT DISTINCT c.uuid AS cuuid, bp.uuid AS buuid, c.domainid AS cdomainid
						FROM
						customer c 
						LEFT JOIN customerprofileassignment cpa ON (c.uuid=cpa.customerid) 
						LEFT JOIN basicprofile bp on (cpa.profileid=bp.uuid)
						LEFT JOIN customeraddress ca ON (c.uuid=ca.customerid)
						LEFT JOIN companyprofile cp ON (cp.customerid=c.uuid)) a
						WHERE a.cuuid = e.cuuid
						ORDER BY a.cuuid
						For XML PATH ('')
					), 2, 1000) users,
					
						SUBSTRING(
					(
						SELECT ','+a.cdomainid  
						FROM (SELECT DISTINCT c.uuid AS cuuid, bp.uuid AS buuid, c.domainid AS cdomainid
						FROM
						customer c 
						LEFT JOIN customerprofileassignment cpa ON (c.uuid=cpa.customerid) 
						LEFT JOIN basicprofile bp ON (cpa.profileid=bp.uuid)
						LEFT JOIN customeraddress ca ON (c.uuid=ca.customerid)
						LEFT JOIN companyprofile cp ON (cp.customerid=c.uuid)) a
						WHERE a.cuuid = e.cuuid
						ORDER BY a.cuuid
						For XML PATH ('')
					), 2, 1000) domainIds
			FROM (SELECT DISTINCT c.uuid AS cuuid, bp.uuid AS buuid, c.domainid AS cdomainid
						FROM
						customer c 
						LEFT JOIN customerprofileassignment cpa ON (c.uuid=cpa.customerid) 
						LEFT JOIN basicprofile bp ON (cpa.profileid=bp.uuid)
						LEFT JOIN customeraddress ca ON (c.uuid=ca.customerid)
						LEFT JOIN companyprofile cp ON (cp.customerid=c.uuid)

				where c.domainid IN 
						(<template-loop iterator="Domains" alias="Domain">
							<loop-statement>
								<template-variable value="Domain"/>
							</loop-statement>
							<loop-separator>, </loop-separator>
						</template-loop>)
				<template-if condition="isDefined(SingleSearchField)">
					<template-call name="inc/SearchExpression2LikeWithSeparator"><call-parameter name="SearchExpression" value="SingleSearchField"/><call-parameter name="ColumnNames" value="&quot;bp.lastName;bp.email;c.customerno;&quot;"/><call-parameter name="CaseInsensitive" value="true()"/><call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/><call-parameter name="Separator" value="&quot;;&quot;"/></template-call>
				</template-if>
				<template-if condition="isDefined(CustomerNo)">
					<template-call name="inc/SearchExpression2Like"><call-parameter name="SearchExpression" value="CustomerNo"/><call-parameter name="ColumnNames" value="&quot;c.customerno&quot;"/><call-parameter name="CaseInsensitive" value="true()"/><call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/></template-call>	
				</template-if>
				<template-if condition="isDefined(FirstName)">
					<template-call name="inc/SearchExpression2Like"><call-parameter name="SearchExpression" value="FirstName"/><call-parameter name="ColumnNames" value="&quot;bp.firstname&quot;"/><call-parameter name="CaseInsensitive" value="true()"/><call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/></template-call>	
				</template-if>
				<template-if condition="isDefined(LastName)">
					<template-call name="inc/SearchExpression2Like"><call-parameter name="SearchExpression" value="LastName"/><call-parameter name="ColumnNames" value="&quot;bp.lastname&quot;"/><call-parameter name="CaseInsensitive" value="true()"/><call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/></template-call>	
				</template-if>
				<template-if condition="isDefined(Birthday)">
					AND (<template-variable value="Birthday"/> = bp.birthdaydate)
				</template-if>
				<template-if condition="isDefined(EMail)">
					<template-call name="inc/SearchExpression2Like"><call-parameter name="SearchExpression" value="EMail"/><call-parameter name="ColumnNames" value="&quot;bp.email&quot;"/><call-parameter name="CaseInsensitive" value="true()"/><call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/></template-call>	
				</template-if>
				<template-if condition="isDefined(PhoneNo)">
					<template-call name="inc/SearchExpression2LikeWithSeparator"><call-parameter name="SearchExpression" value="PhoneNo"/><call-parameter name="ColumnNames" value="&quot;bp.phonehome;bp.phonebusiness;bp.phonemobile&quot;"/><call-parameter name="CaseInsensitive" value="true()"/><call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/><call-parameter name="Separator" value="&quot;;&quot;"/></template-call>	
				</template-if>
				<template-if condition="isDefined(PostCode)">
					<template-call name="inc/SearchExpression2LikeWithSeparator"><call-parameter name="SearchExpression" value="PostCode"/><call-parameter name="ColumnNames" value="&quot;ca.postalcode&quot;"/><call-parameter name="CaseInsensitive" value="true()"/><call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/><call-parameter name="Separator" value="&quot;;&quot;"/></template-call>	
				</template-if>
				<template-if condition="isDefined(City)">
					<template-call name="inc/SearchExpression2LikeWithSeparator"><call-parameter name="SearchExpression" value="City"/><call-parameter name="ColumnNames" value="&quot;ca.city&quot;"/><call-parameter name="CaseInsensitive" value="true()"/><call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/><call-parameter name="Separator" value="&quot;;&quot;"/></template-call>	
				</template-if>
				<template-if condition="isDefined(CountryCode)">
					<template-call name="inc/SearchExpression2Like"><call-parameter name="SearchExpression" value="CountryCode"/><call-parameter name="ColumnNames" value="&quot;ca.countrycode&quot;"/><call-parameter name="CaseInsensitive" value="true()"/><call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/></template-call>	
				</template-if>
				AND
					(
						3=3
					<template-if condition="isDefined(CustomerCreationDateFrom)">
						AND <template-variable value="CustomerCreationDateFrom"/> &lt;= (case when cp.creationdate is null then bp.creationdate else cp.creationdate end)
					</template-if>
					<template-if condition="isDefined(CustomerCreationDateTo)">
						AND <template-variable value="CustomerCreationDateTo"/> &gt;= (case when cp.creationdate is null then bp.creationdate else cp.creationdate end)
					</template-if>
					)
			) e ) d
		<template-if condition="isDefined(Limit)">
			) a WHERE ROWNUM &lt;= <template-variable value="Limit"/>
		</template-if>
	</sql-dialect>
</template>
</query>