<?xml version="1.0" encoding="UTF-8" ?>
<query description="@Deprecated since 7.10. Currently unused and will be removed in a future release.">
	<parameters>
		<parameter name="Profile" type="com.intershop.beehive.core.capi.profile.Profile" optional="false" />
		<parameter name="AddressTypeCode" type="java.lang.Integer" optional="true" />		
		<parameter name="SortByAddress" type="java.lang.String" optional="true" />
		<parameter name="SortDirection" type="java.lang.String" optional="true" />
		<parameter name="Country" type="java.lang.String" optional="true"/>	
		<parameter name="CountryCode" type="java.lang.String" optional="true"/>	
		<parameter name="State" type="java.lang.String" optional="true"/>	
		<parameter name="AddressNameExpression" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
		<parameter name="ZIPExpression" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>	
		<parameter name="CityExpression" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>							
		<parameter name="StreetExpression" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>									
		<parameter name="AddressNrExpression" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>									
	</parameters>
	<return-mappings>
		<return-mapping name="Address" type="orm"
			class="com.intershop.beehive.core.internal.profile.BasicAddressPO">
			<return-attribute name="UUID" />
		</return-mapping>
	</return-mappings>
	<processor name="OracleSQL">
	</processor>
	<template type="countedobjects">
		SELECT ba.uuid AS uuid, COUNT(*) over() AS "rowcount", 
		<template-if condition="(isDefined(SortByAddress))">
			<template-if condition="(SortByAddress EQ 'AddressName')">	
				ba.AddressName
			<if-elseif condition="(SortByAddress EQ 'Country')"/>			
				ba.County
			<if-elseif condition="(SortByAddress EQ 'CountryCode')"/>			
				ct_av.STRINGVALUE					
			<if-elseif condition="(SortByAddress EQ 'State')"/>				
				coalesce(loc_spav.stringvalue, en_spav.stringvalue)
			<if-elseif condition="(SortByAddress EQ 'ZIP')"/>					
				ba.PostalCode
			<if-elseif condition="(SortByAddress EQ 'City')"/>						
				ba.City
			<if-elseif condition="(SortByAddress EQ 'AddressNr')"/>						
				ba.AddressNr
			<if-else/>	
				ba.AddressName
			</template-if>	
			as sorting FROM basicaddress ba
			<template-if condition="(SortByAddress EQ 'CountryCode')">
				JOIN COUNTRY ct on (ba.COUNTRYCODE = ct.ID)
				JOIN COUNTRY_AV ct_av on (ct_av.Ownerid = ct.UUID and ct_av.LOCALEID=<template-variable value="Profile:PreferredLocale" />)</template-if>
			<template-if condition="isDefined(SortByAddress) AND (SortByAddress EQ 'State')">
				<!-- join preferred language and default locale and use first non-null value (prefer selected locale) -->
				left outer join country loc_co on (loc_co.id = ba.countrycode)
				left outer join stateprovince loc_sp on (loc_sp.id = ba.state and loc_co.uuid = loc_sp.countryid)
				left outer join stateprovince_av loc_spav on (loc_spav.ownerid = loc_sp.uuid and loc_spav.name='displayName' and loc_spav.localeid = <template-variable value="Profile:PreferredLocale" />)
				left outer join country en_co on (en_co.id = ba.countrycode)
				left outer join stateprovince en_sp on (en_sp.id = ba.state and en_co.uuid = en_sp.countryid)
				left outer join stateprovince_av en_spav on (en_spav.ownerid = en_sp.uuid and en_spav.name='displayName' and en_spav.localeid = 'en_US')
			</template-if>
		<if-else/>
			ba.AddressName as sorting from basicaddress ba
		</template-if>
		WHERE ba.ProfileID = <template-variable value="Profile:UUID" />		
		<template-if condition="isDefined(AddressTypeCode)">
			<sql-dialect name="Oracle">
			AND bitand(ba.typecode, <template-variable value="AddressTypeCode"/>)>0
			</sql-dialect>
			<sql-dialect name="Microsoft">
				AND (cast(ba.typecode as int) &amp; <template-variable value="AddressTypeCode"/>)>0
			</sql-dialect>
		</template-if>
		<template-if condition="isDefined(Country) AND ((Country NE '') AND (Country NE 'All'))">
			AND ba.county = <template-variable value="Country"/>
		</template-if>
		<template-if condition="isDefined(CountryCode) AND ((CountryCode NE '') AND (CountryCode NE 'All'))">
			AND ba.countrycode = <template-variable value="CountryCode"/>
		</template-if>
		<template-if condition="isDefined(State) AND (State NE '')">
			AND ba.state = <template-variable value="State"/>
		</template-if>
		<template-if condition="isDefined(AddressNameExpression)">
			<template-call name="inc/SearchExpression2Like">
				<call-parameter name="SearchExpression" value="AddressNameExpression"/>
				<call-parameter name="ColumnNames" value="&quot;ba.addressname&quot;"/>
				<call-parameter name="CaseInsensitive" value="true()"/>
				<call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/>
			</template-call>
		</template-if>
		<template-if condition="isDefined(ZIPExpression)">
			<template-call name="inc/SearchExpression2Like">
				<call-parameter name="SearchExpression" value="ZIPExpression"/>
				<call-parameter name="ColumnNames" value="&quot;ba.postalcode&quot;"/>
				<call-parameter name="CaseInsensitive" value="true()"/>
				<call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/>
			</template-call>
		</template-if>
		<template-if condition="isDefined(CityExpression)">
			<template-call name="inc/SearchExpression2Like">
				<call-parameter name="SearchExpression" value="CityExpression"/>
				<call-parameter name="ColumnNames" value="&quot;ba.city&quot;"/>
				<call-parameter name="CaseInsensitive" value="true()"/>
				<call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/>
			</template-call>
		</template-if>
		<template-if condition="isDefined(StreetExpression)">
			<template-call name="inc/SearchExpression2Like">
				<call-parameter name="SearchExpression" value="StreetExpression"/>
				<call-parameter name="ColumnNames" value="&quot;ba.street&quot;"/>
				<call-parameter name="CaseInsensitive" value="true()"/>
				<call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/>
			</template-call>
		</template-if>
		<template-if condition="isDefined(AddressNrExpression)">
			<template-call name="inc/SearchExpression2Like">
				<call-parameter name="SearchExpression" value="AddressNrExpression"/>
				<call-parameter name="ColumnNames" value="&quot;ba.addressnr&quot;"/>
				<call-parameter name="CaseInsensitive" value="true()"/>
				<call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/>
			</template-call>
		</template-if>
		
		<sql-dialect name="Oracle">
		order by sorting
		<template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ 'D'">
			desc NULLS FIRST
		<if-else />
			asc NULLS LAST
		</template-if>
		</sql-dialect>
																	
		<sql-dialect name="Microsoft">
			order by
			<template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ 'D'">
				(CASE
					WHEN 
						<template-if condition="(SortByAddress EQ 'AddressName')">	
							ba.AddressName
						<if-elseif condition="(SortByAddress EQ 'Country')"/>			
							ba.County
						<if-elseif condition="(SortByAddress EQ 'CountryCode')"/>			
							ct_av.STRINGVALUE					
						<if-elseif condition="(SortByAddress EQ 'State')"/>				
							coalesce(loc_spav.stringvalue, en_spav.stringvalue)
						<if-elseif condition="(SortByAddress EQ 'ZIP')"/>					
							ba.PostalCode
						<if-elseif condition="(SortByAddress EQ 'City')"/>						
							ba.City
						<if-elseif condition="(SortByAddress EQ 'AddressNr')"/>						
							ba.AddressNr
						<if-else/>	
							ba.AddressName
						</template-if>	
					IS NULL THEN 0
					ELSE 1
				END), sorting desc
			<if-else />
				(CASE 
					WHEN 
						<template-if condition="(SortByAddress EQ 'AddressName')">	
							ba.AddressName
						<if-elseif condition="(SortByAddress EQ 'Country')"/>			
							ba.County
						<if-elseif condition="(SortByAddress EQ 'CountryCode')"/>			
							ct_av.STRINGVALUE					
						<if-elseif condition="(SortByAddress EQ 'State')"/>				
							coalesce(loc_spav.stringvalue, en_spav.stringvalue)
						<if-elseif condition="(SortByAddress EQ 'ZIP')"/>					
							ba.PostalCode
						<if-elseif condition="(SortByAddress EQ 'City')"/>						
							ba.City
						<if-elseif condition="(SortByAddress EQ 'AddressNr')"/>						
							ba.AddressNr
						<if-else/>	
							ba.AddressName
						</template-if>
					IS NULL THEN 1
					ELSE 0 
				END), sorting asc
			</template-if>
		</sql-dialect>																		
	</template>
</query>
