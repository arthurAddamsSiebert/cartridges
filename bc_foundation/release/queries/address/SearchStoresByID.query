<?xml version="1.0" encoding="UTF-8" ?>
<query description="@Deprecated since 7.10. Currently unused and will be removed in a future release.">
    <parameters>
        <parameter name="Profile" type="com.intershop.beehive.core.capi.profile.Profile" optional="false" />
        <parameter name="AddressTypeCode" type="java.lang.Integer" optional="true" /> 
        <parameter name="storeID" type="java.lang.String" optional="true" />
    </parameters>
    <return-mappings>
        <return-mapping name="Address" type="orm"
            class="com.intershop.beehive.core.internal.profile.BasicAddressPO">
            <return-attribute name="UUID" />
        </return-mapping>
    </return-mappings>
    <processor name="OracleSQL">
    </processor>
    <template type="countedobjects">
        SELECT ba.uuid AS uuid, COUNT(*) over() AS "rowcount", ba.AddressName as sorting from basicaddress ba
        
        WHERE ba.ProfileID = <template-variable value="Profile:UUID" />     
        <template-if condition="isDefined(AddressTypeCode)">
        	<sql-dialect name="Oracle">
            	AND bitand(ba.typecode, <template-variable value="AddressTypeCode"/>)>0
            </sql-dialect>
            <sql-dialect name="Microsoft">
            	AND CAST(ba.typecode as int) &amp; <template-variable value="AddressTypeCode"/> >0
            </sql-dialect>
        </template-if>
        <template-if condition="isDefined(storeID) AND (storeID NE '')">
           AND ba.AddressName = <template-variable value="storeID"/>
        </template-if>
			order by CASE WHEN ba.AddressName IS NULL THEN 0 ELSE 1 END DESC, sorting ASC
    </template>
</query>