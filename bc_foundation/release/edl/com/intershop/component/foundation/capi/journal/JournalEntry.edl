import "enfinity:/bc_foundation/edl/com/intershop/component/foundation/capi/journal/SnapShotData.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObject.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/PersistentObject.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.component.foundation.capi.journal
{
    /*
     * The object journal entry can be used to store the change history of a <code>PersistenceObject</code>.The associations of a journal entry to the object are read only and can therefore not be modified after creation. The changeDate is set automatically at creation time. The type of change (insert, update, delete) is classified  by the attribute chnageType. By the use of the attribute typeCode the scope of the journal entry can be defined . The attribute userID can be used to store a unique ID for simple serach "changed By".
     * The journal entry can hold the old and the new data of a <code>PersistenceObject</code>. The object <code>SnapShotData</code> is used for that.
     */
    cartridge interface JournalEntry extends ExtensibleObject
    {
        attribute changeDate : datetime required;

        attribute changeType : int required;

        attribute typeCode : int required;

        attribute state : int required;

        attribute processName : string required;

        attribute objectID : string required;

        attribute objectName : string required;

        attribute userID : string required;

        attribute lockProcessID : string required;

        relation object : PersistentObject[0..1];

        relation newSnapShotData : SnapShotData[0..1];

        relation oldSnapShotData : SnapShotData[0..1];
    }
}
