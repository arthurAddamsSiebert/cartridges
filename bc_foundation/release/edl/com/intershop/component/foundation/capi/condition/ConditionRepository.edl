import "enfinity:/bc_foundation/edl/com/intershop/component/foundation/capi/condition/Condition.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/Domain.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/PersistentObject.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.component.foundation.capi.condition
{
	/*
	 * The repository handles condition objects 
	 *
	 * @author Torsten Herrmann
	 */
	cartridge interface ConditionRepository 
	{
		/**
		 * Creates a condition owned by a persistent object 
		 */
		operation createCondition(domain : Domain, conditionDescriptorID : String) : Condition;
		
		/**
		 * Creates a condition owned by a parent condition
		 */
		operation createCondition(conditionDescriptorID : String) : Condition;
		
		/**
		 * Resolves a condition owned by an persistent object 
		 */
		operation getConditionByOwner(owner : PersistentObject) : Condition;
		
		/**
		 * Resolves a condition owned by an persistent object using owner's UUID
		 */
		operation getConditionByOwnerID(ownerID : String) : Condition;
		
		/**
		 * Gets a condition by its ID
		 */
		operation getConditionByID(conditionID : String) : Condition;
		
		/**
		 * Removes a condition
		 */
		 operation removeCondition(condition : Condition) : void;
		
	}
}
