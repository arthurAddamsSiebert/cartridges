import "enfinity:/bc_foundation/edl/com/intershop/component/foundation/capi/application/ConfigurationDescriptor.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

external ConditionEvaluation type "com.intershop.component.foundation.capi.condition.ConditionEvaluator";
external ConditionParameter type "com.intershop.component.foundation.capi.condition.ConditionParameter";

namespace com.intershop.component.foundation.capi.condition
{
	/*
	 * Interface for a condition descriptor
	 * 
	 * @author Torsten Herrmann
	 */
	cartridge interface ConditionDescriptor extends ConfigurationDescriptor
	{
		/*
		 * Returns the localized name
		 */
		attribute name : string readonly;
		
		/*
		 * the template for condition configuration in backoffice
		 */
		attribute configTemplate : string readonly;
		
		/*
		 * the template for condition configuration errors in backoffice
		 */
		attribute configErrorTemplate : string readonly;
		
		/*
		 * the pipeline for condition configuration in backoffice
		 */
		attribute configPipeline : string readonly;

		/*
		 * the template for condition display in backoffice
		 */
		attribute displayTemplate : string readonly;
		
		/*
		 * flag defines if there are inclusion and/ or exclusion allowed 
		 */
		attribute includeExclude : boolean readonly;  
		
		/*
		 * flag defines if the condition is an operator condition 
		 */
		attribute operator : boolean readonly;
		
		/*
		 * flag defines if the condition is an filter condition 
		 */
		attribute filterCondition : boolean readonly;
		
		/*
		 * Checks if a condition can be configured
		 */
		operation isConfigurable (contextObject : Object) : boolean;
		
	}
			
}
