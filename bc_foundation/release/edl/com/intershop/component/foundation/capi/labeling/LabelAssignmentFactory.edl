import "enfinity:/bc_foundation/edl/com/intershop/component/foundation/capi/labeling/Label.edl";
import "enfinity:/bc_foundation/edl/com/intershop/component/foundation/capi/labeling/LabelAssignment.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.component.foundation.capi.labeling
{
    /*
     * label assignment factory provides methods that are used by the label manager to create label assignments to an object.
     * a custom label assignment objects factory have to implement this interface to enable the label manager assigning labels to the custom object.
     */
    cartridge interface LabelAssignmentFactory
    {
        /*
         * creates a new label assignment for the given object.
         * An implementation may simply route to the generated create method of the concrete subclass.
         */
        operation createLabelAssignment(object : Object, label : Label) : LabelAssignment;

        /*
         * removes a label assignment for the passed object. If there is no label assignment for this object no action is taken.
         */
        operation removeLabelAssignment(object : Object, label : Label) : void;

        /*
         * needs to return a map with  a short identifying type string as key and the object class as value specifying the type and class of objects this factory is able to handle label assignments for.
         * The type string have to correspond to the type returned by the LabelAssignment#getType method of the LabelAssignment interface.
         */
        operation getAssignableObjectClassMap() : Map;

        /*
         * gets the label assignments to objects of the classes that this label assignment factory handles. The parameters are optional and may be null. The method returns the appropriate collections for the following combination of parameters.
         * If label is null, return all labels of the passed object or empty collection.
         * If object is null, returns the labeled objects of the passed label.
         * if object and label is not null, returns the (single) label assignment if the object is assigned to the label or empty collection.
         * the types parameter may be optionally used to further restrict the set of returned  label assignments.
         */
        operation getLabelAssignments(object : Object, label : Label, types : string[]) : Collection;
    }
}
