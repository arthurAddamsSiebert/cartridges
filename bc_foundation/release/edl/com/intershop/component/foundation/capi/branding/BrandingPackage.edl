import "enfinity:/bc_foundation/edl/com/intershop/component/foundation/capi/branding/BrandingInstallation.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObject.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

external File type "java.io.File";

namespace com.intershop.component.foundation.capi.branding
{
    /*
     * A branding package represents a package of branding content that can be used (i.e. installed) in order to customize the look-and-feel of a site. The branding package content is stored within a zip archive located in the shared file system of the owning domain.
     * 
     * @author Jan Fiedler
     */
    cartridge interface BrandingPackage extends ExtensibleObject
    {
        /*
         * The display name is used to represent a branding package within the graphical user interface.
         */
        attribute displayName : string required localized;

        /*
         * The short description is used to provide descriptive details about the branding package.
         */
        attribute shortDescription : string required localized;

        /*
         * The preview flag specifies whether a preview image is available for the branding package. The preview image can be used to evaluate the visual appearance of a branding package prior to installation.
         */
        attribute previewAvailable : boolean readonly required;

        relation archive : File[0..1] readonly;

        relation installations : BrandingInstallation[0..n] readonly;

        /*
         * Returns a content reference of the preview image (if available). A content reference is a special formatted string pointing into the shared file system of an organization. The returned reference can be used in templates by the <code>ContentURL</code> call for generating image links for the preview image.
         * 
         * @return The content reference of the preview image or <code>null</code> in case no preview image is available.
         */
        operation getPreviewRef() : string;

        /*
         * Return the file size of the underlying branding archive. The branding archive is a simple zip containing the actual branding resources.
         * 
         * @return The file size of the branding archive.
         */
        operation getArchiveSize() : long;
    }
}
