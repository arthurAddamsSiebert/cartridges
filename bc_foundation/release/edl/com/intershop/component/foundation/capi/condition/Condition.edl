import "enfinity:/bc_foundation/edl/com/intershop/component/foundation/capi/condition/ConditionDescriptor.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/PersistentObject.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObject.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

external conditionList type "java.util.List<com.intershop.component.foundation.capi.condition.Condition>";

namespace com.intershop.component.foundation.capi.condition
{
	/*
	 * Interface defines a condition.
	 * 
	 * @author Torsten Herrmann
	 */
    cartridge interface Condition extends ExtensibleObject
    { 

        /**
         * Name of the condition
         */
        attribute name: string;

        /**
         * An operator condition with a grouping flag
         */
        attribute groupingOperator: boolean;

        /**
         * An operator condition
         */
        attribute operator: boolean;
        
        /**
         * A type group operator
         */
		attribute typeGroupOperator : boolean;
		
        /**
         * Position under an parent condition
         */
        attribute position: int;
         
        /**
		 * ID of the condition descriptor
		 */
		attribute conditionDescriptorID : String required; 
		 
        /**
         * Rebate where the condition is assigned to
         */
        relation owner: PersistentObject[0..1];

        /**
         * Parent rebate condition
         */
        relation parentCondition: Condition[0..1];

        /**
         * Sub conditions
         */
        relation subConditions: Condition[0..n] readonly;

        /*
         * Sub conditions sorted by position number
         */
        operation getSortedSubConditions(): conditionList;

        /**
         * Returns the operator condition to display in UI
         */
        operation getDisplayOperator() : Condition;
    }

}
