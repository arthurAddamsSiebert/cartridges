import "enfinity:/bc_foundation/edl/com/intershop/component/foundation/capi/labeling/Label.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.component.foundation.capi.labeling
{
    /*
     * common interface for all label assignments provides methods for retrieving the underlying labeld object its type as a short indentifying string and an id that uniquely identifies the underlying object which can be used to retrieve the underlying object from the database or otherwise reinstantiating the object.
     */
    cartridge interface LabelAssignment
    {
        relation Label : Label[0..1] readonly;

        /*
         * gets the underlying object for this label assignment.
         */
        operation getObject() : Object;

        /*
         * gets a name for the labeled object. If the object does not exist anymore this method should return <code>null</code>
         */
        operation getName() : string;

        /*
         * gets the type of a label assignment. The type is a short identifying string that uniquely identifies the kind of objects this label assignment points to. It directly maps to a object class as defined by the LabelAssignmentFactory which is responsible for handling this type of label assignment.
         */
        operation getType() : string;

        /*
         * get a unique ID for the object that this label assignment points to.
         */
        operation getID() : string;

        /*
         * sets the object for this label assignment.
         */
        operation setObject(object : Object) : void;
    }
}
