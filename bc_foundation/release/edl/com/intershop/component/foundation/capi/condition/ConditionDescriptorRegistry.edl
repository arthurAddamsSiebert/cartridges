import "enfinity:/bc_foundation/edl/com/intershop/component/foundation/capi/condition/Condition.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";
import "enfinity:/bc_foundation/edl/com/intershop/component/foundation/capi/condition/ConditionDescriptor.edl";

namespace com.intershop.component.foundation.capi.condition
{
	/*
	 * Defines operations to handle condition descriptors
	 *
	 * @author Torsten Herrmann
	 */
	cartridge interface ConditionDescriptorRegistry 
	{
		/*
		 * Get all operational condition descriptors
		 */
		relation operators : ConditionDescriptor[0..n] readonly;
		
		/*
		 * Returns only selectable condition descriptors (without operators)
		 */
		relation selectableDescriptors :  ConditionDescriptor[0..n] readonly;
		
		/*
		 * Returns all registered condition descriptors
		 */
		relation allDescriptors : ConditionDescriptor[0..n] readonly;
		
		/*
		 * Returns 'AND' operator
		 */
		operation getAndOperator() : ConditionDescriptor; 
		
		/*
		 * Returns 'OR' operator
		 */
		operation getOrOperator() : ConditionDescriptor;
		
		/**
		 * Gets a condition descriptor by its ID
		 */
		operation getDescriptor(id : String) : ConditionDescriptor; 

		/**
		 * 	Gets a condition descriptor of a condition	
		 */	
		operation getDescriptor(condition : Condition) : ConditionDescriptor;
		
		/**
		 * Checks if type grouping should be used for this condition
		 */
		operation isTypeGroupingEnabled (condition : Condition) : boolean;
	}
}
