<?xml version="1.0" encoding="UTF-8"?>
<query>
<parameters>
	<parameter name="Repositories" type="com.intershop.beehive.foundation.util.ResettableIterator" optional="true"/>
	<parameter name="FilterDomainID" type="java.lang.String" optional="true"/>
	<parameter name="ChangeType" type="java.lang.Integer" optional="true"/>
	<parameter name="ChangedSince" type="java.util.Date" optional="true"/>
	<parameter name="ChangedByExpression" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true" description="Either ChangedByExpression is available, or ProcessNameExpression/UserIDExpression."/>
	<parameter name="ProcessNameExpression" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true" description="Used in combination with UserIDExpression only if ChangedByExpression is not present."/>
	<parameter name="UserIDExpression" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true" description="Used in combination with ProcessNameExpression only if ChangedByExpression is not present."/>
</parameters>
<return-mappings>
	<return-mapping name="JournalEnrtry" type="orm" class="com.intershop.component.foundation.internal.journal.JournalEntryPO">
		<return-attribute name="UUID"/>
	</return-mapping>
</return-mappings>
<processor name="OracleSQL">
	<processor-preprocessing output="ChangedBy" input="ChangedByExpression" processing="SearchExpression2Contains"/>
	<processor-preprocessing output="ProcessName" input="ProcessNameExpression" processing="SearchExpression2Contains"/>
	<processor-preprocessing output="UserID" input="UserIDExpression" processing="SearchExpression2Contains"/>
</processor>
<template type="countedobjects" sqlDialect="Oracle">
	SELECT DISTINCT changeDate, uuid, COUNT(distinct uuid) OVER() as "rowcount"
	FROM
	(
	SELECT DISTINCT j.changeDate, j.uuid
	FROM journalentry j

	<template-if condition="isDefined(ChangeType) AND (ChangeType EQ '1')">
	inner join journalentry_av av on av.OWNERID = j.UUID
		                             AND av.name = &apos;ProductChanged&apos;
		                             AND av.INTVALUE = 1
	</template-if>

	<template-if condition="isDefined(FilterDomainID)">
		join product p on p.DomainID = <template-variable value="FilterDomainID"/>
		AND j.objectuuid = p.offeredproductid
	</template-if>
	WHERE

	<template-if condition="isDefined(Repositories)">
		(
		<template-loop iterator="Repositories" alias="Repository"><loop-statement>
				    j.DomainID = <template-variable value="Repository:DomainID"/>
			</loop-statement>
			<loop-separator> OR </loop-separator>
		</template-loop>
		)
		<if-else/>
		j.DomainID = &apos;21&apos;
	</template-if>

	AND j.State = 1

	<template-if condition="isDefined(ChangeType)">
		AND j.ChangeType = <template-variable value="ChangeType"/>
	</template-if>
	<template-comment>
		for changetype 1 add those entries that do not have the snapshots are handled below
	</template-comment>
	<template-if condition="isDefined(ChangeType) AND (ChangeType EQ '1')">
		AND ( j.OLDSNAPSHOTDATAUUID is not null OR j.NEWSNAPSHOTDATAUUID is not null)
	</template-if>

	<template-if condition="isDefined(ChangedSince)">
		AND j.ChangeDate&gt;<template-variable value="ChangedSince"/>
	</template-if>

	<template-if condition="isDefined(ChangedByExpression)">
		AND (CONTAINS(j.UserID, <template-variable value="ChangedBy"/>)&gt;0 
			OR CONTAINS(j.ProcessName,<template-variable value="ChangedBy"/>)&gt;0)
	<if-elseif condition="isDefined(ProcessNameExpression) and isDefined(UserIDExpression)"/>
		AND CONTAINS(j.ProcessName, <template-variable value="ProcessName"/>)&gt;0
		AND CONTAINS(j.UserID, <template-variable value="UserID"/>)&gt;0
	</template-if>
	<template-comment>
		for changetype 1 add those entries that do not have the attribute - but also do not have details tracked
	</template-comment>
	<template-if condition="isDefined(ChangeType) AND (ChangeType EQ '1')">
		UNION
		SELECT DISTINCT j.changeDate, j.uuid
		FROM journalentry j
		<template-if condition="isDefined(FilterDomainID)">
			join product p on p.DomainID = <template-variable value="FilterDomainID"/>
			AND j.objectuuid = p.offeredproductid
		</template-if>


		WHERE

		<template-if condition="isDefined(Repositories)">
			(
			<template-loop iterator="Repositories" alias="Repository"><loop-statement>
					    j.DomainID = <template-variable value="Repository:DomainID"/>
				</loop-statement>
				<loop-separator> OR </loop-separator>
			</template-loop>
			)
			<if-else/>
			j.DomainID = &apos;21&apos;
		</template-if>

		AND j.State = 1
		AND j.OLDSNAPSHOTDATAUUID is null
		AND j.NEWSNAPSHOTDATAUUID is null
		AND j.ChangeType = 1

		<template-if condition="isDefined(ChangedSince)">
			AND j.ChangeDate&gt;<template-variable value="ChangedSince"/>
		</template-if>

		<template-if condition="isDefined(ChangedByExpression)">
			AND (CONTAINS(j.UserID, <template-variable value="ChangedBy"/>)&gt;0 
				OR CONTAINS(j.ProcessName, <template-variable value="ChangedBy"/>)&gt;0)
		<if-elseif condition="isDefined(ProcessNameExpression) and isDefined(UserIDExpression)"/>
			AND CONTAINS(j.ProcessName, <template-variable value="ProcessName"/>)&gt;0
			AND CONTAINS(j.UserID, <template-variable value="UserID"/>)&gt;0
		</template-if>
	</template-if>
	)
	ORDER BY changeDate asc

</template>
<template type="countedobjects" sqlDialect="Microsoft">
	SELECT changeDate, uuid, COUNT(uuid) OVER() as "rowcount" FROM (
		SELECT DISTINCT changeDate, uuid
		FROM
		(
		SELECT DISTINCT j.changeDate, j.uuid
		FROM journalentry j

		<template-if condition="isDefined(ChangeType) AND (ChangeType EQ '1')">
		inner join journalentry_av av on av.OWNERID = j.UUID
										 AND av.name = &apos;ProductChanged&apos;
										 AND av.INTVALUE = 1
		</template-if>

		<template-if condition="isDefined(FilterDomainID)">
			join product p on p.DomainID = <template-variable value="FilterDomainID"/>
			AND j.objectuuid = p.offeredproductid
		</template-if>
		WHERE

		<template-if condition="isDefined(Repositories)">
			(
			<template-loop iterator="Repositories" alias="Repository"><loop-statement>
						j.DomainID = <template-variable value="Repository:DomainID"/>
				</loop-statement>
				<loop-separator> OR </loop-separator>
			</template-loop>
			)
			<if-else/>
			j.DomainID = &apos;21&apos;
		</template-if>

		AND j.State = 1

		<template-if condition="isDefined(ChangeType)">
			AND j.ChangeType = <template-variable value="ChangeType"/>
		</template-if>
		<template-comment>
			for changetype 1 add those entries that do not have the snapshots are handled below
		</template-comment>
		<template-if condition="isDefined(ChangeType) AND (ChangeType EQ '1')">
			AND ( j.OLDSNAPSHOTDATAUUID is not null OR j.NEWSNAPSHOTDATAUUID is not null)
		</template-if>

		<template-if condition="isDefined(ChangedSince)">
			AND j.ChangeDate&gt;<template-variable value="ChangedSince"/>
		</template-if>

		<template-if condition="isDefined(ChangedByExpression)">
			AND (CONTAINS(j.UserID, <template-variable value="ChangedBy"/>) 
				OR CONTAINS(j.ProcessName,<template-variable value="ChangedBy"/>))
		<if-elseif condition="isDefined(ProcessNameExpression) and isDefined(UserIDExpression)"/>
			AND CONTAINS(j.ProcessName, <template-variable value="ProcessName"/>)
			AND CONTAINS(j.UserID, <template-variable value="UserID"/>)
		</template-if>
		<template-comment>
			for changetype 1 add those entries that do not have the attribute - but also do not have details tracked
		</template-comment>
		<template-if condition="isDefined(ChangeType) AND (ChangeType EQ '1')">
			UNION
			SELECT DISTINCT j.changeDate, j.uuid
			FROM journalentry j
			<template-if condition="isDefined(FilterDomainID)">
				join product p on p.DomainID = <template-variable value="FilterDomainID"/>
				AND j.objectuuid = p.offeredproductid
			</template-if>


			WHERE

			<template-if condition="isDefined(Repositories)">
				(
				<template-loop iterator="Repositories" alias="Repository"><loop-statement>
							j.DomainID = <template-variable value="Repository:DomainID"/>
					</loop-statement>
					<loop-separator> OR </loop-separator>
				</template-loop>
				)
				<if-else/>
				j.DomainID = &apos;21&apos;
			</template-if>

			AND j.State = 1
			AND j.OLDSNAPSHOTDATAUUID is null
			AND j.NEWSNAPSHOTDATAUUID is null
			AND j.ChangeType = 1

			<template-if condition="isDefined(ChangedSince)">
				AND j.ChangeDate&gt;<template-variable value="ChangedSince"/>
			</template-if>

			<template-if condition="isDefined(ChangedByExpression)">
				AND (CONTAINS(j.UserID, <template-variable value="ChangedBy"/>) 
					OR CONTAINS(j.ProcessName, <template-variable value="ChangedBy"/>))
			<if-elseif condition="isDefined(ProcessNameExpression) and isDefined(UserIDExpression)"/>
				AND CONTAINS(j.ProcessName, <template-variable value="ProcessName"/>)
				AND CONTAINS(j.UserID, <template-variable value="UserID"/>)
			</template-if>
		</template-if>
		) a
	)b
	ORDER BY changeDate asc

</template>
</query>
