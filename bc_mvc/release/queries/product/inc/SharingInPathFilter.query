<?xml version="1.0" encoding="UTF-8"?>
<query>
<parameters>
	<parameter name="Name" type="java.lang.String" optional="false"/>
	<parameter name="Type" type="java.lang.String" optional="true"/>
	<parameter name="LocaleInformation" type="com.intershop.beehive.core.capi.localization.LocaleInformation" optional="true"/>
	<parameter name="SearchString" type="java.lang.String" optional="true"/>
	<parameter name="SearchExpression" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
	<parameter name="ProductDomain" type="com.intershop.beehive.core.capi.domain.Domain" optional="false"/>
	<parameter name="NegativeComparison" type="java.lang.String" optional="true"/>
</parameters>
<processor name="OracleSQL">
</processor>
<template sqlDialect="Oracle">
    <template-if condition="len(SearchString) &lt;= 2000">
        <template-if condition="isDefined(LocaleInformation)">
            SELECT p1.uuid
              FROM product p1
              LEFT OUTER JOIN derivedproduct dp1 ON (dp1.baseproductid=p1.uuid AND dp1.domainid=<template-variable value="ProductDomain:UUID"/>)
             WHERE (contains(dp1.attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>,                                                             &apos;HASPATH (//attr[@name=&quot;<template-variable value="Name" processing="text"/>&quot;]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>)&apos;)=0
             		AND extractvalue(sys.xmltype.createxml(dp1.attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>), '//attrs/attr[@name="' || <template-variable value="Name"/> || '"]/*/text()') IS NULL)
               AND (contains(p1.attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>, &apos;HASPATH (//attr[@name=&quot;<template-variable value="Name" processing="text"/>&quot;]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>)&apos;)<template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">=<if-else/>&gt;</template-if>0
               AND contains( p1.attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>, &apos;(&apos;||<template-variable value="SearchString"/>||&apos;)  INPATH (//attr[@name=&quot;<template-variable value="Name" processing="text"/>&quot;]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>)&apos;)<template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">=<if-else/>&gt;</template-if>0
               		AND extractvalue(sys.xmltype.createxml(p1.attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>), '//attrs/attr[@name="' || <template-variable value="Name"/> || '"]/*/text()') <template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">IS NULL<if-else/>IS NOT NULL</template-if>)
            UNION ALL
            SELECT baseproductid
              FROM derivedproduct
             WHERE domainid=<template-variable value="ProductDomain:UUID"/>
               AND (contains(attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>, &apos;HASPATH (//attr[@name=&quot;<template-variable value="Name" processing="text"/>&quot;]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>)&apos;)&gt;0
               		AND extractvalue(sys.xmltype.createxml(attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>), '//attrs/attr[@name="' || <template-variable value="Name"/> || '"]/*/text()') IS NOT NULL
               		AND contains(attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>, &apos;(&apos;||<template-variable value="SearchString"/>||&apos;)  INPATH (//attr[@name=&quot;<template-variable value="Name" processing="text"/>&quot;]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>)&apos;)<template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">=<if-else/>&gt;</template-if>0)
        <if-else/>
            SELECT p1.uuid
              FROM product p1
              LEFT OUTER JOIN derivedproduct dp1 ON (dp1.baseproductid=p1.uuid AND dp1.domainid=<template-variable value="ProductDomain:UUID"/>)
             WHERE (contains(dp1.attributes, &apos;HASPATH (//attr[@name=&quot;<template-variable value="Name" processing="text"/>&quot;]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>)&apos;)=0
             		AND extractvalue(sys.xmltype.createxml(dp1.attributes), '//attrs/attr[@name="' || <template-variable value="Name"/> || '"]/*/text()') IS NULL)
               AND (contains(p1.attributes, &apos;HASPATH (//attr[@name=&quot;<template-variable value="Name" processing="text"/>&quot;]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>)&apos;)<template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">=<if-else/>&gt;</template-if>0
               AND contains( p1.attributes, &apos;(&apos;||<template-variable value="SearchString"/>||&apos;)                                                                            INPATH (//attr[@name=&quot;<template-variable value="Name" processing="text"/>&quot;]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>)&apos;)<template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">=<if-else/>&gt;</template-if>0
               		AND extractvalue(sys.xmltype.createxml(p1.attributes), '//attrs/attr[@name="' || <template-variable value="Name"/> || '"]/*/text()') <template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">IS NULL<if-else/>IS NOT NULL</template-if>)
            UNION ALL
            SELECT baseproductid
              FROM derivedproduct
             WHERE domainid=<template-variable value="ProductDomain:UUID"/>
               AND (contains(attributes, &apos;HASPATH (//attr[@name=&quot;<template-variable value="Name" processing="text"/>&quot;]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>)&apos;)<template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">=<if-else/>&gt;</template-if>0
               AND contains(attributes, &apos;(&apos;||<template-variable value="SearchString"/>||&apos;)                                                                                INPATH (//attr[@name=&quot;<template-variable value="Name" processing="text"/>&quot;]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>)&apos;)<template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">=<if-else/>&gt;</template-if>0
               		AND extractvalue(sys.xmltype.createxml(attributes), '//attrs/attr[@name="' || <template-variable value="Name"/> || '"]/*/text()') <template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">IS NULL<if-else/>IS NOT NULL</template-if>)
        </template-if>
    <if-else/>
        <template-if condition="isDefined(LocaleInformation)">
            SELECT p1.uuid
              FROM product p1
              LEFT OUTER JOIN derivedproduct dp1 ON (dp1.baseproductid=p1.uuid AND dp1.domainid=<template-variable value="ProductDomain:UUID"/>)
             WHERE (contains(dp1.attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>, &apos;HASPATH (//attr[@name=&quot;<template-variable value="Name" processing="text"/>&quot;]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>)&apos;)=0
             		AND extractvalue(sys.xmltype.createxml(dp1.attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>), '//attrs/attr[@name="' || <template-variable value="Name"/> || '"]/*/text()') IS NULL)
               AND (contains( p1.attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>,   TO_CLOB('(') <template-loop iterator="split(SearchString, ' \\| ')" alias="Phrase"> <loop-statement> || TO_CLOB(<template-variable value="Phrase"/>) </loop-statement> <loop-separator> || TO_CLOB(' | ')</loop-separator> </template-loop> || TO_CLOB(') INPATH (//attr[@name=&quot;<template-variable value="Name" processing="text"/>&quot;] <template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>)'))<template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">=<if-else/>&gt;</template-if>0
               		AND contains(p1.attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>, &apos;HASPATH (//attr[@name=&quot;<template-variable value="Name" processing="text"/>&quot;]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>)&apos;)<template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">=<if-else/>&gt;</template-if>0
               		AND extractvalue(sys.xmltype.createxml(p1.attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>), '//attrs/attr[@name="' || <template-variable value="Name"/> || '"]/*/text()') <template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">IS NULL<if-else/>IS NOT NULL</template-if>)
            UNION ALL
            SELECT baseproductid
              FROM derivedproduct
             WHERE domainid=<template-variable value="ProductDomain:UUID"/>
               AND (contains(attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>, &apos;HASPATH (//attr[@name=&quot;<template-variable value="Name" processing="text"/>&quot;]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>)&apos;)&gt;0
               		AND extractvalue(sys.xmltype.createxml(attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>), '//attrs/attr[@name="' || <template-variable value="Name"/> || '"]/*/text()') IS NOT NULL
               		AND contains(attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>,       TO_CLOB('(') <template-loop iterator="split(SearchString, ' \\| ')" alias="Phrase"> <loop-statement> || TO_CLOB(<template-variable value="Phrase"/>) </loop-statement> <loop-separator> || TO_CLOB(' | ')</loop-separator> </template-loop> || TO_CLOB(') INPATH (//attr[@name=&quot;<template-variable value="Name" processing="text"/>&quot;] <template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>)'))<template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">=<if-else/>&gt;</template-if>0)
        <if-else/>
            SELECT p1.uuid
              FROM product p1
              LEFT OUTER JOIN derivedproduct dp1 ON (dp1.baseproductid=p1.uuid AND dp1.domainid=<template-variable value="ProductDomain:UUID"/>)
             WHERE (contains(dp1.attributes, &apos;HASPATH (//attr[@name=&quot;<template-variable value="Name" processing="text"/>&quot;]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>)&apos;)=0
             		AND extractvalue(sys.xmltype.createxml(dp1.attributes), '//attrs/attr[@name="' || <template-variable value="Name"/> || '"]/*/text()') IS NULL)
               AND (contains( p1.attributes, TO_CLOB('(') <template-loop iterator="split(SearchString, ' \\| ')" alias="Phrase"> <loop-statement> || TO_CLOB(<template-variable value="Phrase"/>) </loop-statement> <loop-separator> || TO_CLOB(' | ')</loop-separator> </template-loop> || TO_CLOB(') INPATH (//attr[@name=&quot;<template-variable value="Name" processing="text"/>&quot;] <template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>)'))<template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">=<if-else/>&gt;</template-if>0
               		AND contains(p1.attributes, &apos;HASPATH (//attr[@name=&quot;<template-variable value="Name" processing="text"/>&quot;]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>)&apos;)<template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">=<if-else/>&gt;</template-if>0
               		AND extractvalue(sys.xmltype.createxml(p1.attributes), '//attrs/attr[@name="' || <template-variable value="Name"/> || '"]/*/text()') <template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">IS NULL<if-else/>IS NOT NULL</template-if>)
            UNION ALL
            SELECT baseproductid
              FROM derivedproduct
             WHERE domainid=<template-variable value="ProductDomain:UUID"/>
               AND (contains(attributes, TO_CLOB('(') <template-loop iterator="split(SearchString, ' \\| ')" alias="Phrase"> <loop-statement> || TO_CLOB(<template-variable value="Phrase"/>) </loop-statement> <loop-separator> || TO_CLOB(' | ')</loop-separator> </template-loop> || TO_CLOB(') INPATH (//attr[@name=&quot;<template-variable value="Name" processing="text"/>&quot;] <template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>)'))<template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">=<if-else/>&gt;</template-if>0
               		AND contains(attributes, &apos;HASPATH (//attr[@name=&quot;<template-variable value="Name" processing="text"/>&quot;]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>)&apos;)<template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">=<if-else/>&gt;</template-if>0
               		AND extractvalue(sys.xmltype.createxml(attributes), '//attrs/attr[@name="' || <template-variable value="Name"/> || '"]/*/text()') <template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">IS NULL<if-else/>IS NOT NULL</template-if>)
        </template-if>
    </template-if>
</template>
<template sqlDialect="Microsoft">
 <template-if condition="len(SearchString) &lt;= 2000">
 <template-if condition="isDefined(LocaleInformation)">
            SELECT p1.uuid
              FROM product p1
              LEFT OUTER JOIN derivedproduct dp1 ON (dp1.baseproductid=p1.uuid AND dp1.domainid=<template-variable value="ProductDomain:UUID"/>)
             WHERE 
			  ((dp1.attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>.exist('//attrs/attr[@name="<template-variable value="Name" processing="text" />"]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>'))=0 OR (dp1.attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>.exist('//attrs/attr[@name="<template-variable value="Name" processing="text" />"]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>')) IS NULL)
			  
               AND
				 p1.attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>.exist('//attrs/attr[@name="<template-variable value="Name" processing="text"/>"]/string [<template-variable value="SearchExpression:XPathSnippet" processing="text"/>]')<template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">=<if-else/>&gt;</template-if>0
            UNION ALL
            SELECT baseproductid
              FROM derivedproduct
             WHERE domainid=<template-variable value="ProductDomain:UUID"/>
               AND (attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>.exist('//attrs/attr[@name="<template-variable value="Name" processing="text" />"]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>'))>0
				AND attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>.exist('//attrs/attr[@name="<template-variable value="Name" processing="text"/>"]/string [<template-variable value="SearchExpression:XPathSnippet" processing="text"/>]')<template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">=<if-else/>&gt;</template-if>0
        <if-else/>
            SELECT p1.uuid
              FROM product p1
              LEFT OUTER JOIN derivedproduct dp1 ON (dp1.baseproductid=p1.uuid AND dp1.domainid=<template-variable value="ProductDomain:UUID"/>)
             WHERE 
			 ((dp1.attributes.exist('//attrs/attr[@name="<template-variable value="Name" processing="text" />"]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>'))=0 OR (dp1.attributes.exist('//attrs/attr[@name="<template-variable value="Name" processing="text" />"]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>')) IS NULL)	  
               AND
				 p1.attributes.exist('//attrs/attr[@name="<template-variable value="Name" processing="text"/>"]/string [<template-variable value="SearchExpression:XPathSnippet" processing="text"/>]')<template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">=<if-else/>&gt;</template-if>0			   
            UNION ALL
            SELECT baseproductid
              FROM derivedproduct
             WHERE domainid=<template-variable value="ProductDomain:UUID"/>
			 AND attributes.exist('//attrs/attr[@name="<template-variable value="Name" processing="text"/>"]/string [<template-variable value="SearchExpression:XPathSnippet" processing="text"/>]')<template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">=<if-else/>&gt;</template-if>0               
        </template-if>
		 <if-else/>	
		  <template-if condition="isDefined(LocaleInformation)">
		  
		  SELECT p1.uuid
              FROM product p1
              LEFT OUTER JOIN derivedproduct dp1 ON (dp1.baseproductid=p1.uuid AND dp1.domainid=<template-variable value="ProductDomain:UUID"/>)
             WHERE 			 
			 ((dp1.attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>.exist('//attrs/attr[@name="<template-variable value="Name" processing="text" />"]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>'))=0 OR (dp1.attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>.exist('//attrs/attr[@name="<template-variable value="Name" processing="text" />"]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>')) IS NULL)
               AND 
			   p1.attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>.exist(&apos;//attrs/attr[<template-loop iterator="split(SearchString, ' or ')" alias="Phrase"><loop-statement>@name="<template-variable value="Name" processing="text"/>"</loop-statement><loop-separator> or </loop-separator></template-loop>]
			   <template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/>			 
			   </template-if>[<template-variable value="SearchExpression:XPathSnippet" processing="text"/>]&apos;) 
			  <template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">=<if-else/>&gt;</template-if>0			  
    
            UNION ALL
			
			SELECT baseproductid
              FROM derivedproduct
             WHERE domainid=<template-variable value="ProductDomain:UUID"/>
            AND 			 
			 (attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>.exist('//attrs/attr[@name="<template-variable value="Name" processing="text" />"]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>'))&gt;0				
               AND 
			   attributes_<template-variable value="LocaleInformation:LocaleID" processing="text"/>.exist(&apos;//attrs/attr[<template-loop iterator="split(SearchString, ' or ')" alias="Phrase"><loop-statement>@name="<template-variable value="Name" processing="text"/>"</loop-statement><loop-separator> or </loop-separator></template-loop>]
			   <template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/>			 
			   </template-if>[<template-variable value="SearchExpression:XPathSnippet" processing="text"/>]&apos;) 
			  <template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">=<if-else/>&gt;</template-if>0
			  
        
        <if-else/>
		
		SELECT p1.uuid
              FROM product p1
              LEFT OUTER JOIN derivedproduct dp1 ON (dp1.baseproductid=p1.uuid AND dp1.domainid=<template-variable value="ProductDomain:UUID"/>)
            WHERE 			 
			 ((dp1.attributes.exist('//attrs/attr[@name="<template-variable value="Name" processing="text" />"]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>'))=0 OR (dp1.attributes.exist('//attrs/attr[@name="<template-variable value="Name" processing="text" />"]<template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/></template-if>')) IS NULL) 		
               AND 
			   p1.attributes.exist(&apos;//attrs/attr[<template-loop iterator="split(SearchString, ' OR ')" alias="Phrase"><loop-statement>@name="<template-variable value="Name" processing="text"/>"</loop-statement><loop-separator> | </loop-separator></template-loop>]
			   <template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/>			 
			   </template-if>[<template-variable value="SearchExpression:XPathSnippet" processing="text"/>]&apos;) 
			  <template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">=<if-else/>&gt;</template-if>0
		
            UNION ALL
			
			SELECT baseproductid
              FROM derivedproduct
             WHERE domainid=<template-variable value="ProductDomain:UUID"/>
            AND attributes.exist(&apos;//attrs/attr[<template-loop iterator="split(SearchString, ' or ')" alias="Phrase"><loop-statement>@name="<template-variable value="Name" processing="text"/>"</loop-statement><loop-separator> or </loop-separator></template-loop>]
			   <template-if condition="isDefined(Type)">/<template-variable value="Type" processing="text"/>			 
			   </template-if>[<template-variable value="SearchExpression:XPathSnippet" processing="text"/>]&apos;) 
			  <template-if condition="isDefined(NegativeComparison) AND (NegativeComparison EQ 'true')">=<if-else/>&gt;</template-if>0			  

        </template-if>
		</template-if>
</template>
</query>
