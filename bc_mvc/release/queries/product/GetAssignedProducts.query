<?xml version="1.0" encoding="UTF-8"?>
<query>
<parameters>
    <parameter name="ProductDomain" type="com.intershop.beehive.core.capi.domain.Domain" optional="false"/>
    <parameter name="LocaleInformation" type="com.intershop.beehive.core.capi.localization.LocaleInformation" optional="true"/>
    <parameter name="Online" type="java.lang.Integer" optional="true"/>
    <parameter name="CatalogCategory" type="com.intershop.beehive.xcs.capi.catalog.CatalogCategory" optional="false"/>
    <parameter name="SortAttribute" type="java.lang.String" optional="true"/>
    <parameter name="SortDirection" type="java.lang.String" optional="true"/>
    <parameter name="SortAttributeType" type="java.lang.String" optional="true"/>
    <parameter name="SortAttributeLocalizedFlag" type="java.lang.Integer" optional="true"/>
    <parameter name="Currency" type="java.lang.String" optional="true"/>
    <parameter name="Filters" type="java.util.Iterator" optional="true"/>
    <parameter name="NameOrID" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
</parameters>
<return-mappings>
    <return-mapping name="Product" type="provider" class="ProductViewProvider">
        <return-attribute name="UUID"/>
        <return-attribute name="DOMAINID"/>
    </return-mapping>
</return-mappings>
<processor name="OracleSQL">
    <processor-preprocessing output="ProductConfiguration" input="" processing="ProductConfigurationQueryProcessor"/>
</processor>
<template type="countedobjects">
    SELECT
        p.uuid AS UUID, 
        <template-variable value="ProductDomain:UUID"/> as DOMAINID, 
        count(*) over() as "ROWCOUNT",
        p.sorting AS SORTING
    FROM 
    (
      <template-if condition="ProductConfiguration:ProductIgnoreOnline">
        <template-call name="product/GetProductsByAdvancedSearch">
            <call-parameter name="ProductDomain" value="ProductDomain"/>
            <call-parameter name="LocaleInformation" value="LocaleInformation"/>
            <call-parameter name="NameOrID"  value="NameOrID"/>
            <call-parameter name="Currency" value="Currency"/>
            <call-parameter name="SortAttribute" value="SortAttribute"/>
            <call-parameter name="SortAttributeType" value="SortAttributeType"/>
            <call-parameter name="SortAttributeLocalizedFlag" value="SortAttributeLocalizedFlag"/>
            <call-parameter name="Filters" value="Filters"/>
        </template-call>
      <if-else/>
        <template-call name="product/GetProductsByAdvancedSearch">
            <call-parameter name="ProductDomain" value="ProductDomain"/>
            <call-parameter name="LocaleInformation" value="LocaleInformation"/>
            <call-parameter name="NameOrID"  value="NameOrID"/>
            <call-parameter name="Online" value="Online"/>
            <call-parameter name="Currency" value="Currency"/>
            <call-parameter name="SortAttribute" value="SortAttribute"/>
            <call-parameter name="SortAttributeType" value="SortAttributeType"/>
            <call-parameter name="SortAttributeLocalizedFlag" value="SortAttributeLocalizedFlag"/>
            <call-parameter name="Filters" value="Filters"/>
        </template-call>
      </template-if>
    ) p
    JOIN
    (
        <template-call name="catalog/GetProductCategoryAssignmentsByCategoryID">
            <call-parameter name="ProductDomain" value="ProductDomain"/>
            <call-parameter name="CatalogCategory" value="CatalogCategory"/>
        </template-call>
    ) pca ON (p.uuid = pca.productid)
    ORDER BY CASE WHEN pca.position IS NULL THEN 1 ELSE 0 END asc, pca.position ASC, CASE WHEN SORTING IS NULL THEN 1 ELSE 0 END ASC, SORTING 
    <template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ &apos;D&apos;">
        DESC
    <if-else/>
        ASC
    </template-if>
    , p.uuid
    <template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ &apos;D&apos;">
        DESC
    <if-else/>
        ASC
    </template-if>
</template>
</query>
