<?xml version="1.0" encoding="UTF-8" ?>
<query>
    <parameters>
        <parameter name="OwningDomain" type="com.intershop.beehive.core.capi.domain.Domain" optional="false"/>
        <parameter name="StateGroup" type="java.lang.String" optional="false" />
        <parameter name="SortByQuote" type="java.lang.String" optional="true" />
        <parameter name="SortByQuoteEvent" type="java.lang.String" optional="true" />
        <parameter name="SortByOrganization" type="java.lang.String" optional="true" />
        <parameter name="SortDirection" type="java.lang.String" optional="true" />
        <parameter name="SimpleSearchExpression" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>   
    </parameters>
    <return-mappings>
        <return-mapping name="count" type="rename">
            <return-attribute name="count" />
        </return-mapping>
        <return-mapping name="ProductList" type="orm"
            class="com.intershop.component.mvc.internal.product.ProductListPO">
            <return-attribute name="UUID" />
        </return-mapping>
    </return-mappings>
    <processor name="OracleSQL">
        <processor-preprocessing output="ContainsSearchExpression" input="SearchExpression" processing="SearchExpression2Contains" />
    </processor>
    <template type="count">
        SELECT count(*) as count from productlist pl
        WHERE pl.OwningDomainUUID = <template-variable value="OwningDomain:UUID"/>
        AND pl.typecode = 4
        <template-if condition="StateGroup EQ &apos;Inbox&apos;">
            AND pl.state in (3,5)
        <if-elseif condition="StateGroup EQ &apos;Outbox&apos;" />
            AND pl.state in (4,6)
        <if-elseif condition="StateGroup EQ &apos;Accepted&apos;" />
            AND pl.state in (7,8)
        <if-elseif condition="StateGroup EQ &apos;Archive&apos;" />
            AND pl.state in (10,11,12)
        </template-if>
        <template-if condition="isDefined(SimpleSearchExpression)">
            <template-call name="inc/SearchExpression2Like">
                <call-parameter name="SearchExpression" value="SimpleSearchExpression"/>
                <call-parameter name="ColumnNames" value="&quot;pl.DocumentNo&quot;"/>
                <call-parameter name="CaseInsensitive" value="true()"/>
                <call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/>
            </template-call>
        </template-if>
    </template>
    <template type="objects">
        SELECT pl.uuid as uuid,
        <template-if condition="(isDefined(SortByQuote))">
            <template-if condition="(SortByQuote EQ 'DocumentNo')"> 
                pl.DocumentNo
            <if-elseif condition="(SortByQuote EQ 'ValidFrom')"/>           
                pl.ValidFrom
            <if-elseif condition="(SortByQuote EQ 'ValidTo')"/>             
                pl.ValidTo
            <if-elseif condition="(SortByQuote EQ 'TotalValue')"/>                  
                pl.TotalValue
            <if-elseif condition="(SortByQuote EQ 'State')"/>                       
                pl.State
            <if-else/>  
                pl.DocumentNo
            </template-if>  
            as sorting FROM productlist pl
        <if-elseif condition="(isDefined(SortByQuoteEvent))"/>  
            ple.EventDate as sorting FROM productlist pl
            LEFT OUTER JOIN productlistevent ple ON ple.productlistUUID = pl.uuid
        <if-elseif condition="(isDefined(SortByOrganization))"/>    
            di.DomainName as sorting FROM productlist pl
            INNER JOIN domaininformation di ON pl.domainID = di.domainID
        <if-else/>
            pl.DocumentNo as sorting from productlist pl
        </template-if>
        WHERE pl.OwningDomainUUID = <template-variable value="OwningDomain:UUID"/>
        AND pl.typecode = 4
        <template-if condition="isDefined(SimpleSearchExpression)">
            <template-call name="inc/SearchExpression2Like">
                <call-parameter name="SearchExpression" value="SimpleSearchExpression"/>
                <call-parameter name="ColumnNames" value="&quot;pl.DocumentNo&quot;"/>
                <call-parameter name="CaseInsensitive" value="true()"/>
                <call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/>
            </template-call>
        </template-if>
        <template-if condition="StateGroup EQ &apos;Inbox&apos;">
            AND pl.state in (3,5)
        <if-elseif condition="StateGroup EQ &apos;Outbox&apos;" />
            AND pl.state in (4,6)
        <if-elseif condition="StateGroup EQ &apos;Accepted&apos;" />
            AND pl.state in (7,8)
        <if-elseif condition="StateGroup EQ &apos;Archive&apos;" />
            AND pl.state in (10,11,12)
        </template-if>

        <template-if condition="(isDefined(SortByQuoteEvent))">
            <template-if condition="(SortByQuoteEvent EQ 'ReceivedOn')">
                AND (ple.TypeCode is null or (pl.state=3 AND ple.TypeCode='SubmittedToSeller') OR (pl.state=5 AND ple.TypeCode='RespondedByApprover'))
            <if-elseif condition="(SortByQuoteEvent EQ 'SubmittedOn')"/>
                AND (ple.TypeCode is null or (pl.state=4 AND ple.TypeCode='RespondedBySeller') OR (pl.state=6 AND ple.TypeCode='AcceptedBySeller'))
            <if-elseif condition="(SortByQuoteEvent EQ 'AcceptedOn')"/>
                AND (ple.TypeCode is null or (pl.state=7 AND ple.TypeCode='AcceptedByApprover') OR (pl.state=8 AND ple.TypeCode='AutoAccepted'))
            <if-elseif condition="(SortByQuoteEvent EQ 'ArchivedOn')"/>
                AND (ple.TypeCode is null or (pl.state=10 AND ple.TypeCode='CancelledBySeller') OR (pl.state=11 AND ple.TypeCode='CancelledByApprover') OR (pl.state=12 AND ple.TypeCode='ClosedByBuyer'))
            </template-if>   
        </template-if>
		<sql-dialect name="Oracle">
			order by sorting
			<template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ 'D'">
				desc NULLS FIRST
			<if-else />
				asc NULLS LAST
			</template-if>
		</sql-dialect>
		<sql-dialect name="Microsoft">
			order by 
			<template-if condition="(isDefined(SortByQuote))">
				<template-if condition="(SortByQuote EQ 'DocumentNo')"> 
					CASE WHEN pl.DocumentNo IS NULL THEN 1 ELSE 0 END 
					<template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ 'D'">
						desc, pl.DocumentNo DESC 
					<if-else />
						asc, pl.DocumentNo ASC 
					</template-if>
				<if-elseif condition="(SortByQuote EQ 'ValidFrom')"/>           
					CASE WHEN pl.ValidFrom IS NULL THEN 1 ELSE 0 END 
					<template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ 'D'">
						desc, pl.ValidFrom DESC 
					<if-else />
						asc, pl.ValidFrom ASC 
					</template-if>
				<if-elseif condition="(SortByQuote EQ 'ValidTo')"/>             
					CASE WHEN pl.ValidTo IS NULL THEN 1 ELSE 0 END 
					<template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ 'D'">
						desc, pl.ValidTo DESC 
					<if-else />
						asc, pl.ValidTo ASC 
					</template-if>
				<if-elseif condition="(SortByQuote EQ 'TotalValue')"/>                  
					CASE WHEN pl.TotalValue IS NULL THEN 1 ELSE 0 END 
					<template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ 'D'">
						desc, pl.TotalValue DESC 
					<if-else />
						asc, pl.TotalValue ASC 
					</template-if>
				<if-elseif condition="(SortByQuote EQ 'State')"/>                       
					CASE WHEN pl.State IS NULL THEN 1 ELSE 0 END 
					<template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ 'D'">
						desc, pl.State DESC 
					<if-else />
						asc, pl.State ASC 
					</template-if>
				<if-else/>  
					CASE WHEN pl.DocumentNo IS NULL THEN 1 ELSE 0 END 
					<template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ 'D'">
						desc, pl.DocumentNo DESC 
					<if-else />
						asc, pl.DocumentNo ASC 
					</template-if>
				</template-if>  
			<if-elseif condition="(isDefined(SortByQuoteEvent))"/>  
				CASE WHEN ple.EventDate IS NULL THEN 1 ELSE 0 END 
					<template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ 'D'">
						desc, ple.EventDate DESC 
					<if-else />
						asc, ple.EventDate ASC 
					</template-if>
			<if-elseif condition="(isDefined(SortByOrganization))"/>    
				CASE WHEN di.DomainName IS NULL THEN 1 ELSE 0 END 
					<template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ 'D'">
						desc, di.DomainName DESC 
					<if-else />
						asc, di.DomainName ASC 
					</template-if>
			<if-else/>
				CASE WHEN pl.DocumentNo IS NULL THEN 1 ELSE 0 END 
					<template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ 'D'">
						desc, pl.DocumentNo DESC 
					<if-else />
						asc, pl.DocumentNo ASC 
					</template-if>
			</template-if>
		</sql-dialect>
    </template>
</query>
