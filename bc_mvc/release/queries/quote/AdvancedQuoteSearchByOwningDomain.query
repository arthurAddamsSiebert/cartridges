<?xml version="1.0" encoding="UTF-8" ?>
<query>
    <parameters>
        <parameter name="OwningDomain" type="com.intershop.beehive.core.capi.domain.Domain" optional="false" />
        <parameter name="SortByQuote" type="java.lang.String" optional="true" />
        <parameter name="SortDirection" type="java.lang.String" optional="true" />
        <parameter name="SearchPriceFrom" type="java.lang.Double" optional="true" />
        <parameter name="SearchPriceTo" type="java.lang.Double" optional="true" />
        <parameter name="SearchState" type="java.lang.Integer" optional="true" />
        <parameter name="SearchValidFrom" type="java.util.Date" optional="true" />
        <parameter name="SearchValidTo" type="java.util.Date" optional="true" />
        <parameter name="DocumentNoSearchExpression" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>   
        <parameter name="CustomerSearchExpression" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/> 
    </parameters>
    <return-mappings>
        <return-mapping name="count" type="rename">
            <return-attribute name="count" />
        </return-mapping>
        <return-mapping name="ProductList" type="orm"
            class="com.intershop.component.mvc.internal.product.ProductListPO">
            <return-attribute name="UUID" />
        </return-mapping>
    </return-mappings>
    <processor name="OracleSQL">
        <processor-preprocessing output="ContainsSearchExpression" input="SearchExpression" processing="SearchExpression2Contains" />
    </processor>
    <template type="count">
        SELECT count(*) as count from productlist pl
        <template-if condition="isDefined(CustomerSearchExpression)">
            , DomainInformation di
        </template-if>
        WHERE pl.OwningDomainUUID= <template-variable value="OwningDomain:UUID" />
        AND pl.typecode = 4
        <template-if condition="isDefined(DocumentNoSearchExpression)">
            <template-call name="inc/SearchExpression2Like">
                <call-parameter name="SearchExpression" value="DocumentNoSearchExpression"/>
                <call-parameter name="ColumnNames" value="&quot;pl.DocumentNo&quot;"/>
                <call-parameter name="CaseInsensitive" value="true()"/>
                <call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/>
            </template-call>
        </template-if>
        <template-if condition="isDefined(CustomerSearchExpression)">
            AND pl.DomainID = di.DomainID
            <template-call name="inc/SearchExpression2Like">
                <call-parameter name="SearchExpression" value="CustomerSearchExpression"/>
                <call-parameter name="ColumnNames" value="&quot;di.DomainName&quot;"/>
                <call-parameter name="CaseInsensitive" value="true()"/>
                <call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/>
            </template-call>
        </template-if>
        <template-if condition="isDefined(SearchPriceFrom)">
            AND pl.TotalValue &gt;= <template-variable value="SearchPriceFrom" />
        </template-if>
        <template-if condition="isDefined(SearchPriceTo)">
            AND pl.TotalValue &lt;= <template-variable value="SearchPriceTo" />
        </template-if>
        <template-if condition="isDefined(SearchValidFrom)">
            AND pl.ValidFrom &gt;= <template-variable value="SearchValidFrom" />
        </template-if>
        <template-if condition="isDefined(SearchValidTo)">
            AND pl.ValidTo &lt;= <template-variable value="SearchValidTo" />
        </template-if>
        <template-if condition="isDefined(SearchState)">
            <template-if condition="SearchState EQ '10'">
                AND pl.State in (10,11)
            <if-else/>
                AND pl.State = <template-variable value="SearchState" />
            </template-if>  
        <if-else/>
            AND pl.State &gt; 2 AND pl.State not in (9) 
        </template-if>
    </template>
    <template type="objects">
        SELECT pl.uuid as uuid,
        <template-if condition="(isDefined(SortByQuote))">
            <template-if condition="(SortByQuote EQ 'DocumentNo')">  
                pl.DocumentNo
            <if-elseif condition="(SortByQuote EQ 'ValidFrom')"/>               
                pl.ValidFrom
            <if-elseif condition="(SortByQuote EQ 'ValidTo')"/>             
                pl.ValidTo
            <if-elseif condition="(SortByQuote EQ 'TotalValue')"/>                  
                pl.TotalValue
            <if-elseif condition="(SortByQuote EQ 'State')"/>                       
                pl.State
            <if-elseif condition="(SortByQuote EQ 'Customer')"/>    
                di.DomainName
            <if-else/>  
                pl.DocumentNo
            </template-if>  
        <if-else/>  
            pl.DocumentNo
        </template-if>
        as sorting FROM productlist pl
        <template-if condition="(isDefined(CustomerSearchExpression)) OR ((isDefined(SortByQuote)) AND (SortByQuote EQ 'Customer'))">
            INNER JOIN DomainInformation di ON pl.DomainID = di.DomainID
        </template-if>
        WHERE pl.OwningDomainUUID = <template-variable value="OwningDomain:UUID" />
        AND pl.typecode = 4
        <template-if condition="isDefined(DocumentNoSearchExpression)">
            <template-call name="inc/SearchExpression2Like">
                <call-parameter name="SearchExpression" value="DocumentNoSearchExpression"/>
                <call-parameter name="ColumnNames" value="&quot;pl.DocumentNo&quot;"/>
                <call-parameter name="CaseInsensitive" value="true()"/>
                <call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/>
            </template-call>
        </template-if>
        <template-if condition="isDefined(CustomerSearchExpression)">
            AND pl.DomainID = di.DomainID
            <template-call name="inc/SearchExpression2Like">
                <call-parameter name="SearchExpression" value="CustomerSearchExpression"/>
                <call-parameter name="ColumnNames" value="&quot;di.DomainName&quot;"/>
                <call-parameter name="CaseInsensitive" value="true()"/>
                <call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/>
            </template-call>
        </template-if>
        <template-if condition="isDefined(SearchPriceFrom)">
            AND pl.TotalValue &gt;= <template-variable value="SearchPriceFrom"/>
        </template-if>  
        <template-if condition="isDefined(SearchPriceTo)">
            AND pl.TotalValue &lt;= <template-variable value="SearchPriceTo" />
        </template-if>
        <template-if condition="isDefined(SearchValidFrom)">
            AND pl.ValidFrom &gt;= <template-variable value="SearchValidFrom" />
        </template-if>
        <template-if condition="isDefined(SearchValidTo)">
            AND pl.ValidTo &lt;= <template-variable value="SearchValidTo" />
        </template-if>
        <template-if condition="isDefined(SearchState)">
            <template-if condition="SearchState EQ '10'">
                AND pl.State in (10,11)
            <if-else/>
                AND pl.State = <template-variable value="SearchState" />
            </template-if>  
        <if-else/>
            AND pl.State &gt; 2 AND pl.State not in (9) 
        </template-if>
		<sql-dialect name="Oracle">
			order by sorting
			<template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ 'D'">
				desc NULLS FIRST
			<if-else />
				asc NULLS LAST
			</template-if>
		</sql-dialect>
		<sql-dialect name="Microsoft">
			order by 
			<template-if condition="(isDefined(SortByQuote))">
				<template-if condition="(SortByQuote EQ 'DocumentNo')">  
					CASE WHEN pl.DocumentNo IS NULL THEN 1 ELSE 0 END
					<template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ 'D'">
						desc, pl.DocumentNo DESC
					<if-else />
						asc, pl.DocumentNo ASC
					</template-if>
				<if-elseif condition="(SortByQuote EQ 'ValidFrom')"/>               
					CASE WHEN pl.ValidFrom IS NULL THEN 1 ELSE 0 END
					<template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ 'D'">
						desc, pl.ValidFrom DESC
					<if-else />
						asc, pl.ValidFrom ASC
					</template-if>
				<if-elseif condition="(SortByQuote EQ 'ValidTo')"/>             
					CASE WHEN pl.ValidTo IS NULL THEN 1 ELSE 0 END
					<template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ 'D'">
						desc, pl.ValidTo DESC
					<if-else />
						asc, pl.ValidTo ASC
					</template-if>
				<if-elseif condition="(SortByQuote EQ 'TotalValue')"/>                  
					CASE WHEN pl.TotalValue IS NULL THEN 1 ELSE 0 END
					<template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ 'D'">
						desc, pl.TotalValue DESC
					<if-else />
						asc, pl.TotalValue ASC
					</template-if>
				<if-elseif condition="(SortByQuote EQ 'State')"/>                       
					CASE WHEN pl.State IS NULL THEN 1 ELSE 0 END
					<template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ 'D'">
						desc, pl.State DESC
					<if-else />
						asc, pl.State ASC
					</template-if>
				<if-elseif condition="(SortByQuote EQ 'Customer')"/>    
					CASE WHEN di.DomainName IS NULL THEN 1 ELSE 0 END
					<template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ 'D'">
						desc, di.DomainName DESC
					<if-else />
						asc, di.DomainName ASC
					</template-if>
				<if-else/>  
					CASE WHEN pl.DocumentNo IS NULL THEN 1 ELSE 0 END
					<template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ 'D'">
						desc, pl.DocumentNo DESC
					<if-else />
						asc, pl.DocumentNo ASC
					</template-if>
				</template-if>  
			<if-else/>  
				CASE WHEN pl.DocumentNo IS NULL THEN 1 ELSE 0 END
				<template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ 'D'">
					desc, pl.DocumentNo DESC
				<if-else />
					asc, pl.DocumentNo ASC
				</template-if>
			</template-if>
		</sql-dialect>
    </template>
</query>
