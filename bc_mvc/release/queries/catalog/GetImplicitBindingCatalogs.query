<?xml version="1.0" encoding="UTF-8"?>
<query description="gets the catalogs that use implicit binding from a list of catalogs">
<parameters>
	<parameter name="Catalogs" type="java.util.Iterator" optional="false" description="the catalogs to check"/>
	<parameter name="OnlineFlag" type="java.lang.Integer" optional="true" description="the onlineflag of binding category to check"/>
	<parameter name="LargeCatalogsSet" type="java.lang.Boolean" optional="true" description="specifies whether the provided Catalogs are more than 1000"/>
</parameters>
<return-mappings>
	<return-mapping name="ImplicitBindingCatalogs" type="orm" class="com.intershop.component.mvc.internal.catalog.CatalogPO" description="the catalogs that have implicit binding at the categories enabled">
	  <return-attribute name="UUID"/>
	</return-mapping>
</return-mappings>
<processor name="OracleSQL">
	<processor-preprocessing output="CatalogConfiguration" input="" processing="CatalogConfigurationQueryProcessor"/>
</processor>
<template type="objects">
SELECT UUID FROM catalog
WHERE catalogdomainid IN
  (SELECT domainid 
   FROM catalogcategory c1
   WHERE 
     c1.rootcategoryflag = 1
     AND EXISTS ( SELECT 1 FROM catalogcategory c2 
                  WHERE productbindingtype = 1 AND 
                        c1.domainid = c2.domainid 
                        <template-if condition="isDefined(OnlineFlag) AND NOT (CatalogConfiguration:CatalogIgnoreOnline)">
                        AND c2.onlineflag = <template-variable value="OnlineFlag"/>
                        </template-if>
                )
    <template-if condition="hasLoopElements(Catalogs)">
	    AND (
	    	   <template-if condition="isDefined(LargeCatalogsSet) and LargeCatalogsSet">
    	   	      <template-loop alias="Catalog" iterator="Catalogs">
			         <loop-statement>
			           c1.domainid = <template-variable value="Catalog:CatalogDomain:DomainID"/>
			         </loop-statement>
		          	 <loop-separator>OR</loop-separator>
		          </template-loop>
			   <if-else/>
			      c1.domainid IN (
			      	 <template-loop alias="Catalog" iterator="Catalogs">
				         <loop-statement>
				         	<template-variable value="Catalog:CatalogDomain:DomainID"/>
				         </loop-statement>
			          	 <loop-separator>,</loop-separator>
			          </template-loop>
			      )
	    	   </template-if>
	       )
    </template-if>
  )  
</template>
</query>
