<?xml version="1.0" encoding="UTF-8"?>
<query description="This query retrieves all catalogs owned by the domain specified by its uuid as parameter. The result can be further refined by specifying type codes the catalogs must have or/and by specifying if proxy catalogs should be included or excluded.">
<parameters>
	<parameter name="OwningDomainUUID" type="java.lang.String" optional="false"/>
</parameters>
<return-mappings>
	<return-mapping name="Catalog" type="orm" class="com.intershop.component.mvc.internal.catalog.CatalogPO">
		<return-attribute name="UUID"/>
	</return-mapping>
</return-mappings>
<processor name="OracleSQL">
</processor>
<template type="countedobjects">
	SELECT 
	    c.uuid AS UUID, count(*) over() AS "rowcount"
	FROM 
	    catalog c
	INNER JOIN relation r ON (r.domain1_id = c.catalogdomainid)
	AND (r.RELATIONDEFINITIONNAME=&apos;PUBLIC_CATALOG&apos; AND r.DOMAIN2_ID=<template-variable value="OwningDomainUUID"/>)
	
	WHERE
	    c.domainid &lt;&gt; <template-variable value="OwningDomainUUID"/>
	AND c.typecode = 1
	    	AND NOT EXISTS (SELECT 1 FROM catalog sc WHERE sc.catalogdomainid = c.catalogdomainid AND (sc.TYPECODE=4 AND sc.DOMAINID=<template-variable value="OwningDomainUUID"/>))	
</template>
</query>
