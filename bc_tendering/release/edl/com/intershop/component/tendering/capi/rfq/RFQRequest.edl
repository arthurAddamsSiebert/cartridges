import "enfinity:/bc_tendering/edl/com/intershop/component/tendering/capi/rfq/RFQ.edl";
import "enfinity:/bc_tendering/edl/com/intershop/component/tendering/capi/rfq/RFQParameterValue.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/Domain.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObject.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";
import "enfinity:/xcs/edl/com/intershop/beehive/xcs/capi/product/Product.edl";

namespace com.intershop.component.tendering.capi.rfq
{
    cartridge interface RFQRequest extends ExtensibleObject
    {
        attribute state : int required;

        attribute creationDate : datetime required;

        attribute supplierID : string required;

        /*
         * The values of a RFQ request represent the answers given by a certain RFQ participant (represented by the <code>RFQRequest</code>) for a certain RFQ questions (represented by a <code>RFQParameter</code>).
         */
        relation values : RFQParameterValue[0..n] readonly;

        /*
         * The products relations allows RFQ participants to attach product descriptions that might be relevant in the context of the RFQ. In case of suppliers participanting in a RFQ it is very common that they do not just answer the questions stated in the RFQ but also provide a view upon the products that they would deliver.
         */
        relation proposedProducts : Product[0..n] readonly;

        /*
         * The supplier relations references that actual participants of a RFQ that have been invited by the RFQ submitter (invitations are represented as <code>RFQRequest</code>). Note that you can attach any organizational entity (represented as domain) - not just suppliers.
         */
        relation supplier : Domain[0..1] readonly;

        operation getRFQ() : RFQ;

        operation getProposedProductState(product : Product) : int;

        operation setProposedProductState(product : Product, state : int) : void;
    }
}
