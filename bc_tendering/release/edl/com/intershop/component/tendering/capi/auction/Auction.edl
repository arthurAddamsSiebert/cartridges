import "enfinity:/bc_tendering/edl/com/intershop/component/tendering/capi/auction/AuctionBid.edl";
import "enfinity:/bc_tendering/edl/com/intershop/component/tendering/capi/auction/AuctionDefinition.edl";
import "enfinity:/bc_tendering/edl/com/intershop/component/tendering/capi/auction/AuctionItem.edl";
import "enfinity:/bc_tendering/edl/com/intershop/component/tendering/capi/auction/AuctionParticipant.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObject.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

external User type "com.intershop.beehive.core.capi.user.User";

namespace com.intershop.component.tendering.capi.auction
{
    cartridge interface Auction extends ExtensibleObject
    {
        /*
         * The display name of an auction.
         */
        attribute displayName : string required localized;

        /*
         * The short description of an auction.
         */
        attribute shortDescription : string required localized;

        /*
         * This attribute defines the type of the auction (i.e. one of english, dutch, forward or reverse).
         * The TypeCode is just copied from the assigned auction definition to avoid performance critical joins when searching for auctions of a defined type.
         */
        attribute typeCode : int readonly required;

        /*
         * The state of the auction defines it's actual processing status and can be one of New Scheduled Running Extended Finnished Cancelled or Evaluated.
         */
        attribute state : int required;

        /*
         * This attribute defines the time this auction was created.
         */
        attribute creationTime : datetime required;

        /*
         * This defines the start time of the auction (auction changes it's state to running).
         */
        attribute startTime : datetime required;

        /*
         * This defines the end time of the auction (auction changes it's state to finnished). Note that auction can be created as extensible and an extension can change this end date to a later time.
         */
        attribute endTime : datetime required;

        /*
         * Counts how often the current auction can be extended furthermore.
         */
        attribute extensionCount : int required;

        /*
         * Counts how often the current auction can be repeated furthermore.
         */
        attribute repeatingCount : int required;

        relation definition : AuctionDefinition[0..1] readonly;

        relation owner : User[0..1];

        relation bids : AuctionBid[0..n] readonly;

        relation parentAuction : Auction[0..1];

        relation childAuctions : Auction[0..n] readonly;

        relation items : AuctionItem[0..n] readonly;

        relation participants : AuctionParticipant[0..n] readonly;

        /*
         * This method returns the latest placed bid of the auction or the startBid (the first bid placed by the auctioneer with status Initial), if no valid placed bid was found.
         */
        operation getCurrentBid() : AuctionBid;

        /*
         * This method returns the startBid of the auction (the first bid placed by the auctioneer with status Initial).
         */
        operation getStartBid() : AuctionBid;
    }
}
