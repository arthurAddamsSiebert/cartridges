import "enfinity:/bc_tendering/edl/com/intershop/component/tendering/capi/rfq/RFQParameterGroup.edl";
import "enfinity:/bc_tendering/edl/com/intershop/component/tendering/capi/rfq/RFQRequest.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObject.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.component.tendering.capi.rfq
{
    /*
     * This interface represents a request for quote / request for information process usually initiated by an organization as a kind of information retrieval process prior to the actual purchasing phase.
     * <p>
     * Every RFQ consists of 2 major parts. The first part is defined by the RFQ submitter and basically consists of an arbitrary structured questionaire that describes the goods or services information or quotes are requested for. The second part of an RFQ is used to track the interactions between the RFQ submitter and the RFQ participants. The RFQ submitter publishes the RFQ to RFQ participants by creating instances of <code>RFQRequest</code>. Based on these request instances, participants can respond to the questions or specifications stated by the RFQ submitter. Participants basically provide values for the RFQ parameters defined by the submitter. In addition, participants can also attach other objects (such as product instances) to the <code>RFQRequest</code> instance.
     * <p>
     * Note that the <code>RFQRequest</code> basically takes the semantic of an response for the RFQ participant. However, from the RFQ submitter prospective, the semantik of this <code>RFQRequest</code> is clearly a request (for a participant response).
     * 
     * @see com.intershop.component.tendering.capi.rfq.RFQParameterGroup
     * @see com.intershop.component.tendering.capi.rfq.RFQRequest
     */
    cartridge interface RFQ extends ExtensibleObject
    {
        attribute displayName : string required localized;

        attribute shortDescription : string required localized;

        attribute state : int required;

        attribute validFrom : datetime required;

        attribute validTo : datetime required;

        attribute lastStateChange : datetime required;

        /*
         * This relation represent the RFQ requests created in order to invite participants (e.g. suppliers) to the RFQ process.
         * <p>
         * Note that the <code>RFQRequest</code> basically takes the semantic of an response for the RFQ participant. However, from the RFQ submitter prospective, the semantik of this <code>RFQRequest</code> is clearly a request (for a participant response).
         */
        relation requests : RFQRequest[0..n] readonly;

        /*
         * RFQ parameter groups provide a hierachical structuring mechanism for individual RFQ parameters. Every RFQ has at least one RFQ parameter group that is referenced through this relation as root group.
         */
        relation rootParameterGroup : RFQParameterGroup[0..1] readonly;
    }
}
