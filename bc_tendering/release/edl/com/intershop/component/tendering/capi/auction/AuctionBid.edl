import "enfinity:/bc_tendering/edl/com/intershop/component/tendering/capi/auction/Auction.edl";
import "enfinity:/bc_tendering/edl/com/intershop/component/tendering/capi/auction/AuctionBidPriceDetail.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObject.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

external User type "com.intershop.beehive.core.capi.user.User";

namespace com.intershop.component.tendering.capi.auction
{
    cartridge interface AuctionBid extends ExtensibleObject
    {
        attribute creationTime : datetime required;

        attribute state : int required;

        attribute bidValue : Money required;

        attribute bidValueExtension : Money required;

        /*
         * The bid value type indicates whether the bid is meant as gross or net bid (i.e. including or excluding taxes). This information information is useful in reverse auctions where bidders might need to separate taxes from the actual bid.
         */
        attribute bidValueType : int required;

        /*
         * The tax rate (as a percentage value 0 ... 100) of the bid. Depending on whether the bid is a gross or net bid, the tax is included or to be added to the actual bid value. Taxes can be specified as percentage rates or a absolute amounts (but not both at the same time). The missing value (either percentage of amount) will be calculated on the fly.
         */
        attribute taxRate : double required;

        /*
         * The tax amount of the bid. Depending on whether the bid is a gross or net bid, the tax is included or to be added to the actual bid value. Taxes can be specified as percentage rates or a absolute amounts (but not both at the same time). The missing value (either percentage of amount) will be calculated on the fly.
         */
        attribute taxAmount : Money required;

        attribute comment : string required mapped;

        attribute anonymous : boolean required;

        relation auction : Auction[0..1] readonly;

        relation owner : User[0..1] readonly;

        relation priceDetails : AuctionBidPriceDetail[0..n] readonly;

        operation getPriceDetail(^key : string) : AuctionBidPriceDetail;

        operation addPriceDetail(^key : string, name : string, description : string, price : Money) : void;

        operation removePriceDetail(^key : string) : void;
    }
}
