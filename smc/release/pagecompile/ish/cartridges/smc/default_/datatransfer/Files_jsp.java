/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.smc.default_.datatransfer;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class Files_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
      out.write("<tr>\n\t<td class=\"form_bg w e\">\n\t\t<!-- confirm settings -->\n\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("Select"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",4,e);}if (_boolean_result) { 
      out.write("\n\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"100%\" class=\"confirm_box\">\n\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (hasLoopElements("Clipboard:ObjectUUIDs") ? Boolean.TRUE : Boolean.FALSE)).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",6,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t");
 processOpenTag(response, pageContext, "messagebox", new TagParameter[] {
new TagParameter("colspan","1"),
new TagParameter("subject",localizeText(context.getFormattedValue("Files.LogFiles.subject",null))),
new TagParameter("type","mde"),
new TagParameter("message",localizeText(context.getFormattedValue("Files.PleaseSelectAtLeastOneLogFile.message",null)))}, 7); 
      out.write("\n\t\t\t\t");
 } 
      out.write("\n\t\t\t</table>\n\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ErrorCode"),null).equals(context.getFormattedValue("AttachmentMaxSizeError",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",10,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"4\" width=\"100%\" class=\"confirm_box s\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td class=\"error_icon e\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/error.gif\" width=\"16\" height=\"15\" alt=\"\" border=\"0\"/></td>\n\t\t\t\t\t\t<td colspan=\"2\" class=\"error\" width=\"100%\">");
 {out.write(localizeISText("Files.TheEMailCouldNotBeCreatedTheSelectedFile.error",null,null,encodeString(context.getFormattedValue(getObject("MailAttachmentMaxSize"),null)),null,null,null,null,null,null,null,null,null));} 
      out.write("\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t");
 } 
      out.write('\n');
      out.write('	');
      out.write('	');
 } 
      out.write("\n\n\t\t<!-- message about the deleted and not deleted log files, if any -->\n\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("Delete"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",22,e);}if (_boolean_result) { 
      out.write("\n\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("DeletedFilesCount"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",23,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"4\" width=\"100%\" class=\"confirm_box s\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td class=\"confirm\" width=\"100%\">");
 {out.write(localizeISText("Files.FilesDeleted.confirm","",null,context.getFormattedValue(getObject("DeletedFilesCount"),null),null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t");
 } 
      out.write("\n\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("NotDeletedFilesCount"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",30,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"4\" width=\"100%\" class=\"confirm_box s\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td class=\"confirm\" width=\"100%\">");
 {out.write(localizeISText("Files.FilesCouldNotBeDeleted.confirm","",null,context.getFormattedValue(getObject("NotDeletedFilesCount"),null),null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t");
 } 
      out.write('\n');
      out.write('	');
      out.write('	');
 } 
      out.write("\n\n\t\t<!-- delete confirmation if one or more are selected and error if nothing is selected -->\n\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("confirmDelete"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",40,e);}if (_boolean_result) { 
      out.write("\n\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"100%\" class=\"confirm_box\">\n\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("Clipboard:ObjectUUIDs") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",42,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t");
 processOpenTag(response, pageContext, "messagebox", new TagParameter[] {
new TagParameter("colspan","1"),
new TagParameter("subject",localizeText(context.getFormattedValue("Files.LogFiles.subject",null))),
new TagParameter("cancelbtnname","cancel"),
new TagParameter("okbtnname","Delete"),
new TagParameter("type","mdc"),
new TagParameter("message",localizeText(context.getFormattedValue("Files.DeleteAllSelectedLogFiles.message",null)))}, 43); 
      out.write("\n\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t");
 processOpenTag(response, pageContext, "messagebox", new TagParameter[] {
new TagParameter("colspan","1"),
new TagParameter("subject",localizeText(context.getFormattedValue("Files.LogFiles.subject",null))),
new TagParameter("type","mde"),
new TagParameter("message",localizeText(context.getFormattedValue("Files.PleaseSelectAtLeastOneLogFile.message",null)))}, 45); 
      out.write("\n\t\t\t\t");
 } 
      out.write("\n\t\t\t</table>\n\t\t");
 } 
      out.write("\n\t\t<!-- EO confirm settings -->\n\n\t\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\">\n\t\t\t<tr>\n\t\t\t\t<td class=\"table_header e s\" nowrap=\"nowrap\">\n\t\t\t\t\t<div id=\"A\">\n\t\t\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" class=\"table_header center\" width=\"80\">\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td nowrap=\"nowrap\"><a href=\"javascript:selectAllFiles('dataTransferForm','SelectedObjectUUID');\" class=\"tableheader\">");
 {out.write(localizeISText("Files.SelectAll.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"B\" style=\"display:none\">\n\t\t\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" class=\"table_header center\" width=\"80\">\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td nowrap=\"nowrap\"><a href=\"javascript:selectAllFiles('dataTransferForm','SelectedObjectUUID');\" class=\"tableheader\">");
 {out.write(localizeISText("Files.ClearAll.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</td>\n\t\t\t\t<td class=\"table_header e s\" width=\"100%\">\n\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SortDirection"),null).equals(context.getFormattedValue("descending",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",70,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t<a class=\"tableheader\" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("DataTransfer-Sort",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("SortBy",null),context.getFormattedValue("name",null))).addURLParameter(context.getFormattedValue("SortDirection",null),context.getFormattedValue("ascending",null))),null));
      out.write('"');
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("Files.Name.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a>\n\t\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t<a class=\"tableheader\" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("DataTransfer-Sort",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("SortBy",null),context.getFormattedValue("name",null))).addURLParameter(context.getFormattedValue("SortDirection",null),context.getFormattedValue("descending",null))),null));
      out.write('"');
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("Files.Name.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a>\n\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t</td>\n\t\t\t\t<td class=\"table_header e s\" width=\"100%\">\n\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SortDirection"),null).equals(context.getFormattedValue("descending",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",77,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t<a class=\"tableheader\" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("DataTransfer-Sort",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("SortBy",null),context.getFormattedValue("size",null))).addURLParameter(context.getFormattedValue("SortDirection",null),context.getFormattedValue("ascending",null))),null));
      out.write('"');
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("Files.Size.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a>\n\t\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t<a class=\"tableheader\" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("DataTransfer-Sort",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("SortBy",null),context.getFormattedValue("size",null))).addURLParameter(context.getFormattedValue("SortDirection",null),context.getFormattedValue("descending",null))),null));
      out.write('"');
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("Files.Size.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a>\n\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t</td>\n\t\t\t\t<td class=\"table_header e s\" nowrap=\"nowrap\" width=\"100%\">");
 {out.write(localizeISText("Files.ViewFile.table_header","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n\t\t\t\t<td class=\"table_header s\" nowrap=\"nowrap\" width=\"100%\">");
 {out.write(localizeISText("Files.DownloadFile.table_header","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n\t\t\t</tr>\n\t\t");
 while (loop("LogFilesPageable","File",null)) { 
      out.write("\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"table_detail center s e\" width=\"75\">\n\t\t\t\t\t\t");
 {Object temp_obj = (getObject("File")); getPipelineDictionary().put("CurrentFile", temp_obj);} 
      out.write("\n\t\t\t\t\t\t");

							getPipelineDictionary().put("FileLength", ((java.io.File) getPipelineDictionary().get("CurrentFile")).length());
						
      out.write("\n\t\t\t\t\t\t<input type=\"checkbox\" name=\"SelectedObjectUUID\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("File:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {93}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("File:Name"),null).equals(context.getFormattedValue(getObject("Clipboard:ObjectUUID(File:Name)"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",94,e);}if (_boolean_result) { 
      out.write("checked=\"checked\"");
 } 
      out.write("\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input type=\"hidden\" name=\"ObjectUUID\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("File:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {96}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"table_detail top s e\"><a href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("DataTransfer-Download",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("SelectedFile",null),context.getFormattedValue(getObject("File:Name"),null)))),null));
      out.write("\" class=\"table_detail_link\">");
 {String value = null;try{value=context.getFormattedValue(getObject("File:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {98}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</a>&nbsp;</td>\n\t\t\t\t\t<td class=\"table_detail top s e\" nowrap=\"nowrap\">\n\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("FileLength")).doubleValue() <((Number)(((new Double( ((Number) new Double(1024)).doubleValue() *((Number) new Double(1024)).doubleValue()))))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",100,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t");
 {String value = null;try{value=context.getFormattedValue((new Double( ((Number) getObject("FileLength")).doubleValue() /((Number) new Double(1024)).doubleValue())),"#.##",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {101}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;KB\n\t\t\t\t\t  \t");
 } else { 
      out.write("\n\t\t\t\t\t  \t\t");
 {String value = null;try{value=context.getFormattedValue((new Double( ((Number) getObject("FileLength")).doubleValue() /((Number) ((new Double( ((Number) new Double(1024)).doubleValue() *((Number) new Double(1024)).doubleValue())))).doubleValue())),"#.##",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {103}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;MB\n\t\t\t\t\t  \t");
 } 
      out.write("\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"table_detail top s e\">\n\t\t\t\t\t  ");
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("FileLength")).doubleValue() >((Number)(((new Double( ((Number) new Double(1024)).doubleValue() * ((Number) new Double(1024)).doubleValue() *((Number) getObject("LogFileMaxSize")).doubleValue()))))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",107,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t     ");
 {out.write(localizeISText("Files.SizeNA.table_detail","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\n\t\t\t\t\t  ");
 } else { 
      out.write("\n\t\t\t\t\t  \t <a href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("DataTransfer-FileDetails",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("SelectedFile",null),context.getFormattedValue(getObject("File:Name"),null)))),null));
      out.write("\" class=\"table_detail_link\">");
 {out.write(localizeISText("Files.View.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a>&nbsp;\n\t\t\t\t\t  ");
 } 
      out.write("\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"table_detail top s\"><a href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("DataTransfer-Download",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("SelectedFile",null),context.getFormattedValue(getObject("File:Name"),null)))),null));
      out.write("\" class=\"table_detail_link\">");
 {out.write(localizeISText("Files.Download.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a>&nbsp;</td>\n\t\t\t\t</tr>\n\t\t");
 } 
      out.write("\n\t\t</table>\n\t</td>\n</tr>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
