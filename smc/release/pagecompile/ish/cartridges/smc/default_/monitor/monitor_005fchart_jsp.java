/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.smc.default_.monitor;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;
import com.intershop.beehive.core.capi.url.*;
import com.intershop.beehive.core.capi.url.*;

public final class monitor_005fchart_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
      out.write("<!-- Main Content -->\n<table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"w100\">\n<!-- Navigation and Content Area -->\n<tr>\n<td class=\"breadcrumb\"><a href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("Monitor-Start",null),context.getFormattedValue("",null),context.getFormattedValue("SMC",null)))),null));
      out.write("\" class=\"breadcrumb\">");
 {out.write(localizeISText("monitor.Monitoring.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a>&nbsp;&gt;&nbsp;<a href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("Monitor-BackgroundMonitoring",null),context.getFormattedValue("",null),context.getFormattedValue("SMC",null)))),null));
      out.write("\" class=\"breadcrumb\">");
 {out.write(localizeISText("monitor.Background.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a>&nbsp;&gt;&nbsp; ");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("MemoryChart"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",7,e);}if (_boolean_result) { 
 {out.write(localizeISText("monitor.MemoryCharts.link","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("SessionChart"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",7,e);}if (_boolean_result) { 
 {out.write(localizeISText("monitor.SessionCharts.link","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PerformanceChart"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",7,e);}if (_boolean_result) { 
 {out.write(localizeISText("monitor.PerformanceCharts.link","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
      out.write("</td>\n</tr>\n<tr><td><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"1\" height=\"6\" alt=\"\" border=\"0\"/></td></tr>\n<tr>\n<td>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("MemoryChart"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",12,e);}if (_boolean_result) { 
 {Object temp_obj = ("Memory"); getPipelineDictionary().put("ChartTarget", temp_obj);} 
      out.write(' ');
      out.write('\n');
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("SessionChart"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",15,e);}if (_boolean_result) { 
 {Object temp_obj = ("Session"); getPipelineDictionary().put("ChartTarget", temp_obj);} 
      out.write(' ');
      out.write('\n');
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PerformanceChart"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",18,e);}if (_boolean_result) { 
 {Object temp_obj = ("Performance"); getPipelineDictionary().put("ChartTarget", temp_obj);} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("Start_Day"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",22,e);}if (_boolean_result) { 
 {out.flush();
URLRewriteHandler handler = getTemplateExecutionConfig().getURLRewriteHandler();
try
{
getTemplateExecutionConfig().setURLRewriteHandler(NullURLRewriteHandler.getInstance());
processRemoteIncludeAutomatic((com.intershop.beehive.core.capi.request.ServletResponse)response,context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewServerSelection-Start",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("TargetPipeline",null),context.getFormattedValue(context.getFormattedValue("ViewChart-",null) + context.getFormattedValue(getObject("ChartTarget"),null),null))).addURLParameter(context.getFormattedValue("TargetServerID",null),context.getFormattedValue(getObject("TargetServerID"),null)).addURLParameter(context.getFormattedValue("SelectDateRange",null),context.getFormattedValue(getObject("TRUE"),null)).addURLParameter(context.getFormattedValue("Start_Day",null),context.getFormattedValue(getObject("Start_Day"),null)).addURLParameter(context.getFormattedValue("Start_Time",null),context.getFormattedValue(getObject("Start_Time"),null)).addURLParameter(context.getFormattedValue("End_Day",null),context.getFormattedValue(getObject("End_Day"),null)).addURLParameter(context.getFormattedValue("End_Time",null),context.getFormattedValue(getObject("End_Time"),null))),null), null, null, "23");}
finally
{
    getTemplateExecutionConfig().setURLRewriteHandler(handler);
}} 
 } else { 
 {out.flush();
URLRewriteHandler handler = getTemplateExecutionConfig().getURLRewriteHandler();
try
{
getTemplateExecutionConfig().setURLRewriteHandler(NullURLRewriteHandler.getInstance());
processRemoteIncludeAutomatic((com.intershop.beehive.core.capi.request.ServletResponse)response,context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewServerSelection-Start",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("TargetPipeline",null),context.getFormattedValue(context.getFormattedValue("ViewChart-",null) + context.getFormattedValue(getObject("ChartTarget"),null),null))).addURLParameter(context.getFormattedValue("TargetServerID",null),context.getFormattedValue(getObject("TargetServerID"),null)).addURLParameter(context.getFormattedValue("SelectDateRange",null),context.getFormattedValue(getObject("TRUE"),null))),null), null, null, "25");}
finally
{
    getTemplateExecutionConfig().setURLRewriteHandler(handler);
}} 
      out.write(' ');
      out.write('\n');
 } 
      out.write("</td>\n</tr>\n<tr>\n<td><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/spacer.gif\" width=\"1\" height=\"5\" border=\"0\" alt=\"\"/></td> <!-- blank line, separates server select from content -->\n</tr>");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (disableErrorMessages().isDefined(getObject("ErrorCode")))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",35,e);}if (_boolean_result) { 
      out.write("<!-- Content Area -->\n<tr>\n<td>\n<table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"aldi w100\">\n<tr>\n<td class=\"table_title s\">");
 {out.write(localizeISText("monitor_chart.BackgroundMonitoring.table_title","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(' ');
      out.write('-');
      out.write(' ');
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("MemoryChart"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",41,e);}if (_boolean_result) { 
 {out.write(localizeISText("monitor.MemoryCharts.table_title","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("SessionChart"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",41,e);}if (_boolean_result) { 
 {out.write(localizeISText("monitor.SessionCharts.table_title","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PerformanceChart"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",41,e);}if (_boolean_result) { 
 {out.write(localizeISText("monitor.PerformanceCharts.table_title","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
      out.write("</td>\n</tr>\n<tr>\n<td class=\"table_title_description\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("MemoryChart"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",45,e);}if (_boolean_result) { 
 {out.write(localizeISText("monitor.PageDisplaysMemoryUsageInformation.table_title_description","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("SessionChart"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",46,e);}if (_boolean_result) { 
 {out.write(localizeISText("monitor.PageDisplaysSessionInformation.table_title_description","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PerformanceChart"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",47,e);}if (_boolean_result) { 
 {out.write(localizeISText("monitor.PageDisplaysDetailedPerformanceInformation.table_title_description","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
      out.write("</td>\n</tr>\n</table>\n</td>\n</tr>\n<tr><td><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"1\" height=\"6\" alt=\"\" border=\"0\"/></td></tr>\n<tr>\n<td>\n<table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"w100\">\n<tr>\n<td colspan=\"2\">\n<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("MemoryChart"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",60,e);}if (_boolean_result) { 
      out.write("<tr><td colspan=\"2\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/spacer.gif\" width=\"1\" height=\"20\" border=\"0\" alt=\"\"/></td></tr>\n<tr>\n<td colspan=\"2\">\n<img src=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("Monitor-DisplayLineChart",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("title",null),context.getFormattedValue("Process Memory",null))).addURLParameter(context.getFormattedValue("ytitle",null),context.getFormattedValue("(Bytes)",null)).addURLParameter(context.getFormattedValue("height",null),context.getFormattedValue("400",null)).addURLParameter(context.getFormattedValue("width",null),context.getFormattedValue("750",null)).addURLParameter(context.getFormattedValue("series0",null),context.getFormattedValue("Total Size",null)).addURLParameter(context.getFormattedValue("series1",null),context.getFormattedValue("In-Memory Size",null)).addURLParameter(context.getFormattedValue("startDate",null),context.getFormattedValue(getObject("StartDateTimeStamp"),null)).addURLParameter(context.getFormattedValue("endDate",null),context.getFormattedValue(getObject("EndDateTimeStamp"),null)).addURLParameter(context.getFormattedValue("minimumGapSize",null),context.getFormattedValue(getObject("MinimumGapSize"),null))),null));
      out.write("\" alt=\"\"/>\n</td>\n</tr>\n<tr><td colspan=\"2\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/spacer.gif\" width=\"1\" height=\"20\" border=\"0\" alt=\"\"/></td></tr>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("MemoryChart"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",80,e);}if (_boolean_result) { 
      out.write("<tr><td colspan=\"2\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/spacer.gif\" width=\"1\" height=\"20\" border=\"0\" alt=\"\"/></td></tr>\n<tr>\n<td colspan=\"2\">\n<img src=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("Monitor-DisplayLineChart",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("title",null),context.getFormattedValue("Java VM Memory",null))).addURLParameter(context.getFormattedValue("ytitle",null),context.getFormattedValue("(Bytes)",null)).addURLParameter(context.getFormattedValue("height",null),context.getFormattedValue("400",null)).addURLParameter(context.getFormattedValue("width",null),context.getFormattedValue("750",null)).addURLParameter(context.getFormattedValue("series0",null),context.getFormattedValue("Total Heap",null)).addURLParameter(context.getFormattedValue("series1",null),context.getFormattedValue("Used Heap",null)).addURLParameter(context.getFormattedValue("startDate",null),context.getFormattedValue(getObject("StartDateTimeStamp"),null)).addURLParameter(context.getFormattedValue("endDate",null),context.getFormattedValue(getObject("EndDateTimeStamp"),null)).addURLParameter(context.getFormattedValue("minimumGapSize",null),context.getFormattedValue(getObject("MinimumGapSize"),null))),null));
      out.write("\" alt=\"\"/>\n</td>\n</tr>\n<tr><td colspan=\"2\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/spacer.gif\" width=\"1\" height=\"20\" border=\"0\" alt=\"\"/></td></tr>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("MemoryChart"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",100,e);}if (_boolean_result) { 
      out.write("<tr><td colspan=\"2\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/spacer.gif\" width=\"1\" height=\"20\" border=\"0\" alt=\"\"/></td></tr>\n<tr>\n<td colspan=\"2\">\n<img src=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("Monitor-DisplayLineChart",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("title",null),context.getFormattedValue("ORM Cache",null))).addURLParameter(context.getFormattedValue("ytitle",null),context.getFormattedValue("(Count)",null)).addURLParameter(context.getFormattedValue("height",null),context.getFormattedValue("400",null)).addURLParameter(context.getFormattedValue("width",null),context.getFormattedValue("750",null)).addURLParameter(context.getFormattedValue("series0",null),context.getFormattedValue("Cache Size",null)).addURLParameter(context.getFormattedValue("startDate",null),context.getFormattedValue(getObject("StartDateTimeStamp"),null)).addURLParameter(context.getFormattedValue("endDate",null),context.getFormattedValue(getObject("EndDateTimeStamp"),null)).addURLParameter(context.getFormattedValue("minimumGapSize",null),context.getFormattedValue(getObject("MinimumGapSize"),null))),null));
      out.write("\" alt=\"\"/>\n</td>\n</tr>\n<tr><td colspan=\"2\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/spacer.gif\" width=\"1\" height=\"20\" border=\"0\" alt=\"\"/></td></tr>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("SessionChart"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",119,e);}if (_boolean_result) { 
      out.write("<tr><td colspan=\"2\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/spacer.gif\" width=\"1\" height=\"20\" border=\"0\" alt=\"\"/></td></tr>\n<tr>\n<td colspan=\"2\">\n<img src=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("Monitor-DisplayLineChart",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("title",null),context.getFormattedValue("Total Sessions",null))).addURLParameter(context.getFormattedValue("ytitle",null),context.getFormattedValue("(count)",null)).addURLParameter(context.getFormattedValue("height",null),context.getFormattedValue("400",null)).addURLParameter(context.getFormattedValue("width",null),context.getFormattedValue("750",null)).addURLParameter(context.getFormattedValue("series0",null),context.getFormattedValue("Total Sessions",null)).addURLParameter(context.getFormattedValue("startDate",null),context.getFormattedValue(getObject("StartDateTimeStamp"),null)).addURLParameter(context.getFormattedValue("endDate",null),context.getFormattedValue(getObject("EndDateTimeStamp"),null)).addURLParameter(context.getFormattedValue("minimumGapSize",null),context.getFormattedValue(getObject("MinimumGapSize"),null))),null));
      out.write("\" alt=\"\"/>\n</td>\n</tr>\n<tr><td colspan=\"2\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/spacer.gif\" width=\"1\" height=\"20\" border=\"0\" alt=\"\"/></td></tr>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("SessionChart"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",138,e);}if (_boolean_result) { 
      out.write("<tr><td colspan=\"2\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/spacer.gif\" width=\"1\" height=\"20\" border=\"0\" alt=\"\"/></td></tr>\n<tr>\n<td colspan=\"2\">\n<img src=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("Monitor-DisplayLineChart",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("title",null),context.getFormattedValue("Active Sessions",null))).addURLParameter(context.getFormattedValue("ytitle",null),context.getFormattedValue("(count)",null)).addURLParameter(context.getFormattedValue("height",null),context.getFormattedValue("400",null)).addURLParameter(context.getFormattedValue("width",null),context.getFormattedValue("750",null)).addURLParameter(context.getFormattedValue("series0",null),context.getFormattedValue("Active Sessions",null)).addURLParameter(context.getFormattedValue("startDate",null),context.getFormattedValue(getObject("StartDateTimeStamp"),null)).addURLParameter(context.getFormattedValue("endDate",null),context.getFormattedValue(getObject("EndDateTimeStamp"),null)).addURLParameter(context.getFormattedValue("minimumGapSize",null),context.getFormattedValue(getObject("MinimumGapSize"),null))),null));
      out.write("\" alt=\"\"/>\n</td>\n</tr>\n<tr><td colspan=\"2\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/spacer.gif\" width=\"1\" height=\"20\" border=\"0\" alt=\"\"/></td></tr>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("SessionChart"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",157,e);}if (_boolean_result) { 
      out.write("<tr><td colspan=\"2\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/spacer.gif\" width=\"1\" height=\"20\" border=\"0\" alt=\"\"/></td></tr>\n<tr>\n<td colspan=\"2\">\n<img src=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("Monitor-DisplayLineChart",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("title",null),context.getFormattedValue("Active Requests",null))).addURLParameter(context.getFormattedValue("ytitle",null),context.getFormattedValue("(count)",null)).addURLParameter(context.getFormattedValue("height",null),context.getFormattedValue("400",null)).addURLParameter(context.getFormattedValue("width",null),context.getFormattedValue("750",null)).addURLParameter(context.getFormattedValue("series0",null),context.getFormattedValue("Active Requests",null)).addURLParameter(context.getFormattedValue("startDate",null),context.getFormattedValue(getObject("StartDateTimeStamp"),null)).addURLParameter(context.getFormattedValue("endDate",null),context.getFormattedValue(getObject("EndDateTimeStamp"),null)).addURLParameter(context.getFormattedValue("minimumGapSize",null),context.getFormattedValue(getObject("MinimumGapSize"),null))),null));
      out.write("\" alt=\"\"/>\n</td>\n</tr>\n<tr><td colspan=\"2\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/spacer.gif\" width=\"1\" height=\"20\" border=\"0\" alt=\"\"/></td></tr>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PerformanceChart"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",176,e);}if (_boolean_result) { 
      out.write("<tr><td colspan=\"2\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/spacer.gif\" width=\"1\" height=\"20\" border=\"0\" alt=\"\"/></td></tr>\n<tr>\n<td colspan=\"2\">\n<img src=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("Monitor-DisplayLineChart",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("title",null),context.getFormattedValue("Average Response Times",null))).addURLParameter(context.getFormattedValue("ytitle",null),context.getFormattedValue("(ms)",null)).addURLParameter(context.getFormattedValue("height",null),context.getFormattedValue("400",null)).addURLParameter(context.getFormattedValue("width",null),context.getFormattedValue("750",null)).addURLParameter(context.getFormattedValue("series0",null),context.getFormattedValue("Avg. Response Time",null)).addURLParameter(context.getFormattedValue("startDate",null),context.getFormattedValue(getObject("StartDateTimeStamp"),null)).addURLParameter(context.getFormattedValue("endDate",null),context.getFormattedValue(getObject("EndDateTimeStamp"),null)).addURLParameter(context.getFormattedValue("minimumGapSize",null),context.getFormattedValue(getObject("MinimumGapSize"),null))),null));
      out.write("\" alt=\"\"/>\n</td>\n</tr>\n<tr><td colspan=\"2\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/spacer.gif\" width=\"1\" height=\"20\" border=\"0\" alt=\"\"/></td></tr>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PerformanceChart"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",195,e);}if (_boolean_result) { 
      out.write("<tr><td colspan=\"2\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/spacer.gif\" width=\"1\" height=\"20\" border=\"0\" alt=\"\"/></td></tr>\n<tr>\n<td colspan=\"2\">\n<img src=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("Monitor-DisplayLineChart",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("title",null),context.getFormattedValue("CPU Usage",null))).addURLParameter(context.getFormattedValue("ytitle",null),context.getFormattedValue("(Percentage)",null)).addURLParameter(context.getFormattedValue("height",null),context.getFormattedValue("400",null)).addURLParameter(context.getFormattedValue("width",null),context.getFormattedValue("750",null)).addURLParameter(context.getFormattedValue("series0",null),context.getFormattedValue("CPU Usage",null)).addURLParameter(context.getFormattedValue("startDate",null),context.getFormattedValue(getObject("StartDateTimeStamp"),null)).addURLParameter(context.getFormattedValue("endDate",null),context.getFormattedValue(getObject("EndDateTimeStamp"),null)).addURLParameter(context.getFormattedValue("minimumGapSize",null),context.getFormattedValue(getObject("MinimumGapSize"),null))),null));
      out.write("\" alt=\"\"/>\n</td>\n</tr>\n<tr><td colspan=\"2\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/spacer.gif\" width=\"1\" height=\"20\" border=\"0\" alt=\"\"/></td></tr>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PerformanceChart"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",214,e);}if (_boolean_result) { 
      out.write("<tr><td colspan=\"2\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/spacer.gif\" width=\"1\" height=\"20\" border=\"0\" alt=\"\"/></td></tr>\n<tr>\n<td colspan=\"2\">\n<img src=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("Monitor-DisplayLineChart",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("title",null),context.getFormattedValue("Load Factor",null))).addURLParameter(context.getFormattedValue("ytitle",null),context.getFormattedValue("(Probability)",null)).addURLParameter(context.getFormattedValue("height",null),context.getFormattedValue("400",null)).addURLParameter(context.getFormattedValue("width",null),context.getFormattedValue("750",null)).addURLParameter(context.getFormattedValue("series0",null),context.getFormattedValue("Probability",null)).addURLParameter(context.getFormattedValue("startDate",null),context.getFormattedValue(getObject("StartDateTimeStamp"),null)).addURLParameter(context.getFormattedValue("endDate",null),context.getFormattedValue(getObject("EndDateTimeStamp"),null)).addURLParameter(context.getFormattedValue("minimumGapSize",null),context.getFormattedValue(getObject("MinimumGapSize"),null))),null));
      out.write("\" alt=\"\"/>\n</td>\n</tr>\n<tr><td colspan=\"2\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/spacer.gif\" width=\"1\" height=\"20\" border=\"0\" alt=\"\"/></td></tr>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PerformanceChart"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",233,e);}if (_boolean_result) { 
      out.write("<tr><td colspan=\"2\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/spacer.gif\" width=\"1\" height=\"20\" border=\"0\" alt=\"\"/></td></tr>\n<tr>\n<td colspan=\"2\">\n<img src=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("Monitor-DisplayLineChart",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("title",null),context.getFormattedValue("Thread Count",null))).addURLParameter(context.getFormattedValue("ytitle",null),context.getFormattedValue("(count)",null)).addURLParameter(context.getFormattedValue("height",null),context.getFormattedValue("400",null)).addURLParameter(context.getFormattedValue("width",null),context.getFormattedValue("750",null)).addURLParameter(context.getFormattedValue("series0",null),context.getFormattedValue("System Threads",null)).addURLParameter(context.getFormattedValue("startDate",null),context.getFormattedValue(getObject("StartDateTimeStamp"),null)).addURLParameter(context.getFormattedValue("endDate",null),context.getFormattedValue(getObject("EndDateTimeStamp"),null)).addURLParameter(context.getFormattedValue("minimumGapSize",null),context.getFormattedValue(getObject("MinimumGapSize"),null))),null));
      out.write("\" alt=\"\"/>\n</td>\n</tr>\n<tr><td colspan=\"2\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/spacer.gif\" width=\"1\" height=\"20\" border=\"0\" alt=\"\"/></td></tr>");
 } 
      out.write("</table>\n</td>\n</tr>\n</table>\n</td>\n</tr>");
 } 
      out.write("</table>\n<!-- /Main Content -->");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
