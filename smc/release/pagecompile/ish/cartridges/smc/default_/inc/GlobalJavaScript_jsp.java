/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.smc.default_.inc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class GlobalJavaScript_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
      out.write("<script language=\"JavaScript\" type=\"text/javascript\">\n<!--\n//Selects or deselects all elements of a specific form with a specific name\n//(or part of the name), as well as enables and disables a layer with specified\n//id's. It depends on the visibility of the select layer whether the form\n//elements are selected or not.\n//formName: name of the form to handle\n//partOfFormElementName: part of the name of the form elements\n//selectLayerID: the layer that contains the 'Select All' link\n//clearLayerID: the layer that contains the 'Clear All' link\nfunction selectAllWithName(formName, partOfFormElementName, selectLayerID, clearLayerID)\n{\n//alert(formName + \", \" + partOfFormElementName + \", \" + selectLayerID + \", \" + clearLayerID);\nvar formElements = document.forms[formName].elements;\nvar select = true;\nif (document.getElementById(selectLayerID).style.display == \"none\") \n{\nselect = false;\n}\nfor (var i=0; i<formElements.length; i++) \n{\nif ( ( -1 != formElements[i].name.indexOf(partOfFormElementName) ) &&\n( formElements[i].disabled == false ) &&\n");
      out.write("( ( formElements[i].type == \"checkbox\" ) ||\n( formElements[i].type == \"radio\" ) ) ) \n{\nformElements[i].checked = select;\n}\n}\nif ( select ) \n{\ndocument.getElementById(selectLayerID).style.display=\"none\";\ndocument.getElementById(clearLayerID).style.display=\"block\";\n}\nelse \n{\ndocument.getElementById(selectLayerID).style.display=\"block\";\ndocument.getElementById(clearLayerID).style.display=\"none\";\n}\n}\nfunction selectAllServer(formName)\n{\nvar state = (document.getElementById('C').style.display == \"none\") ? 1 : 0; \nvar cbTotal = document[formName].elements.length;\nfor (var i = 0; i < cbTotal; i++)\n{\nif (state == 0)\n{\nselectElement(document[formName].elements[i], true);\n}\nelse\n{\nselectElement(document[formName].elements[i], false);\n}\n}\nif (state == 0)\n{\nstate = 1;\ndocument.getElementById('C').style.display = \"none\";\ndocument.getElementById('D').style.display = \"block\";\n}\nelse\n{\nstate = 0;\ndocument.getElementById('C').style.display = \"block\";\ndocument.getElementById('D').style.display = \"none\";\n}\n}\nfunction selectAllFiles(formName, elementName)\n");
      out.write("{\nvar state = (document.getElementById('A').style.display == \"none\") ? 1 : 0; \nvar cbTotal = document[formName].elements.length;\nfor (var i = 0; i < cbTotal; i++)\n{\nif (document[formName].elements[i].name == elementName)\n{\nif (state == 0)\n{\nselectElement(document[formName].elements[i], true);\n}\nelse\n{\nselectElement(document[formName].elements[i], false);\n}\n}\n}\nif (state == 0)\n{\nstate = 1;\ndocument.getElementById('A').style.display = \"none\";\ndocument.getElementById('B').style.display = \"block\";\n}\nelse\n{\nstate = 0;\ndocument.getElementById('A').style.display = \"block\";\ndocument.getElementById('B').style.display = \"none\";\n}\n}\nfunction selectElement(element, value) \n{\nif (element.disabled != true)\n{\nelement.checked = value;\n}\n}\nfunction changeElementState(id)\n{\nvar element = document.getElementById(id);\nif (element.disabled == true)\n{\nelement.disabled = false;\n}\nelse\n{\nif (element.value == \"\")\n{\nelement.disabled = true;\n}\n}\n}\nfunction selectAll(formName)\n{\nvar state = (document.getElementById('A').style.display == \"none\") ? 1 : 0; \n");
      out.write("var cbTotal = document[formName].elements.length;\nfor (var i = 0; i < cbTotal; i++) \n{\nif (state == 0)\n{\nselectElement(document[formName].elements[i], true);\n}\nelse\n{\nselectElement(document[formName].elements[i], false);\n}\n}\nif (state == 0)\n{\nstate = 1;\ndocument.getElementById('A').style.display = \"none\";\ndocument.getElementById('B').style.display = \"block\";\n}\nelse\n{\nstate = 0;\ndocument.getElementById('A').style.display = \"block\";\ndocument.getElementById('B').style.display = \"none\";\n}\n}\n// -->\n</script>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
