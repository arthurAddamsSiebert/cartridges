/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.smc.default_.configuration.inc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class ContextSelection_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
 URLPipelineAction action79 = new URLPipelineAction(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewConfiguration-Select",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("TargetServerID",null),context.getFormattedValue(getObject("TargetServerID"),null)))),null));String site79 = null;String serverGroup79 = null;String actionValue79 = context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewConfiguration-Select",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("TargetServerID",null),context.getFormattedValue(getObject("TargetServerID"),null)))),null);if (site79 == null){  site79 = action79.getDomain();  if (site79 == null)  {      site79 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getDomainName();  }}if (serverGroup79 == null){  serverGroup79 = action79.getServerGroup();  if (serverGroup79 == null)  {      serverGroup79 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getServerGroup();  }}out.print("<form");out.print(" method=\"");out.print("post");out.print("\"");out.print(" action=\"");out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewConfiguration-Select",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("TargetServerID",null),context.getFormattedValue(getObject("TargetServerID"),null)))),null));out.print("\"");out.print(" name=\"");out.print("ConfigurationSelect");out.print("\"");out.print(">");out.print(context.prepareWACSRFTag(actionValue79, site79, serverGroup79,true)); 
      out.write("<table border=\"0\" cellspacing=\"0\" cellpadding=\"4\" class=\"infobox aldi w100\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ErrorKey"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",4,e);}if (_boolean_result) { 
      out.write("<tr><td colspan=\"2\">\n<table width=\"100%\" cellspacing=\"0\" cellpadding=\"4\" border=\"0\" class=\"error_box\">\n<tr valign=\"top\">\n<td class=\"error_icon top\"><img width=\"16\" height=\"15\" border=\"0\" alt=\"\" src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/error.gif\"></td>\n<td width=\"100%\" class=\"error top\">");
 {out.write(localizeISText(context.getFormattedValue(getObject("ErrorKey"),null),"",null,getObject("ErrorIdentifier"),null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>\n</table>\n</td></tr>");
 } 
      out.write("<tr>\n<td class=\"infobox_description\" colspan=\"2\">");
 {out.write(localizeISText("ContextSelection.EnterTheDetailsBelow.infobox_description","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>\n<tr>\n<td class=\"infobox_item\" valign=\"top\" width=\"100px\">");
 {out.write(localizeISText("ContextSelection.Scope.infobox_description","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</td>\n<td>\n<select id=\"ContextSelection_SelectedScope\" name=\"SelectedScope\" class=\"inputfield_en\" onChange=\"setSelectionVisibility();\">");
 while (loop("ConfigurationScopes","ConfigurationScope",null)) { 
      out.write("<option value=\"");
      out.print(context.getFormattedValue(stringToHtml(context.getFormattedValue(getObject("ConfigurationScope"),null)),null));
      out.write('"');
      out.write(' ');
      out.write('\n');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("SelectedScope")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("SelectedScope"),null).equals(context.getFormattedValue(getObject("ConfigurationScope"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",27,e);}if (_boolean_result) { 
      out.write("\nselected=\"true\"\n");
 } 
      out.write("\n> \n");
 {String value = null;try{value=context.getFormattedValue(getObject("ConfigurationScope"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {31}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(" \n</option>");
 } 
      out.write("</select>\n</td>\n</tr>\n<tr id=\"ContextSelection_DomainNameRow\">\n<td class=\"infobox_item\" valign=\"top\" width=\"100px\">");
 {out.write(localizeISText("ContextSelection.DomainName.infobox_description","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</td>\n<td>\n<select name=\"SelectedDomainName\" class=\"inputfield_en\">");
 while (loop("DomainNames","DomainName",null)) { 
      out.write("<option value=\"");
      out.print(context.getFormattedValue(stringToHtml(context.getFormattedValue(getObject("DomainName"),null)),null));
      out.write('"');
      out.write(' ');
      out.write('\n');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("SelectedDomainName")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("SelectedDomainName"),null).equals(context.getFormattedValue(getObject("DomainName"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",43,e);}if (_boolean_result) { 
      out.write("\nselected=\"true\"\n");
 } 
      out.write("\n> \n");
 {String value = null;try{value=context.getFormattedValue(getObject("DomainName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {47}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(" \n</option>");
 } 
      out.write("</select>\n</td>\n</tr>\n<tr id=\"ContextSelection_AppNameRow\">\n<td class=\"infobox_item\" valign=\"top\" width=\"100px\">");
 {out.write(localizeISText("ContextSelection.AppName.infobox_description","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</td>\n<td>\n<select name=\"SelectedAppName\" class=\"inputfield_en\">");
 while (loop("Apps","App",null)) { 
      out.write("<option value=\"");
      out.print(context.getFormattedValue(stringToHtml(context.getFormattedValue(getObject("App:ID"),null)),null));
      out.write('"');
      out.write(' ');
      out.write('\n');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("SelectedAppName")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("SelectedAppName"),null).equals(context.getFormattedValue(getObject("App:ID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",59,e);}if (_boolean_result) { 
      out.write("\nselected=\"true\"\n");
 } 
      out.write("\n> \n");
 {String value = null;try{value=context.getFormattedValue(getObject("App:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {63}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(" \n</option>");
 } 
      out.write("</select>\n</td>\n</tr>\n<tr>\n<td class=\"infobox_item\" valign=\"top\" width=\"100px\">");
 {out.write(localizeISText("ContextSelection.KeyPrefixCanBeLeftBlank.infobox_description","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</td>\n<td>\n<input type=\"text\" class=\"inputfield_en\" name=\"SelectedKeyPrefix\" size=\"75\"\n");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("SelectedKeyPrefix"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",73,e);}if (_boolean_result) { 
      out.write("\nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("SelectedKeyPrefix"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {74}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('\n');
 } 
      out.write("\n/>\n</td>\n</tr>\n<tr>\n<td class=\"w100\" colspan=\"2\">\n<table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n<tr>\n<td class=\"button\"><input type=\"submit\" name=\"apply\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("ContextSelection.Apply.button",null)),null));
      out.write("\" class=\"button\"/></td>\n</tr>\n</table>\n</td>\n</tr>\n</table>\n<script language=\"JavaScript\" type=\"text/javascript\">\n<!--\nfunction setSelectionVisibility()\n{\nif (document.getElementById('ContextSelection_SelectedScope').value == 'domain')\n{\ndocument.getElementById('ContextSelection_DomainNameRow').className='displayTableRow';\ndocument.getElementById('ContextSelection_AppNameRow').className='displayTableRow';\n}\nelse\n{\ndocument.getElementById('ContextSelection_DomainNameRow').className='hideTableRow';\nif(document.getElementById('ContextSelection_SelectedScope').value == 'server')\n{\ndocument.getElementById('ContextSelection_AppNameRow').className='displayTableRow';\n}\nelse\n{\ndocument.getElementById('ContextSelection_AppNameRow').className='hideTableRow';\n}\n}\n}\nsetSelectionVisibility();\n-->\n</script>");
 out.print("</form>"); 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
