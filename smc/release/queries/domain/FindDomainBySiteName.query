<?xml version="1.0" encoding="UTF-8"?>
<query>
<parameters>	
	<parameter name="SearchWord" type="java.lang.String" optional="false"/>
	<parameter name="SortOrder" type="java.lang.String" optional="false"/>
</parameters>
<return-mappings>
	<return-mapping name="DomainInformationPO" type="orm" class="com.intershop.beehive.core.internal.domain.DomainInformationPO">
		<return-attribute name="DomainName"/>
	</return-mapping>
</return-mappings>
<processor name="OracleSQL">
</processor>
<template type="countedobjects">
	SELECT this.domainname as DomainName, COUNT(this.domainname) OVER() AS "ROWCOUNT" 
	FROM domaininformation this
		LEFT OUTER JOIN domain d ON (this.domainid = d.uuid)
		LEFT OUTER JOIN domaininformation site_di ON (d.siteid = site_di.domainid) 
	WHERE lower(this.domainname) like <template-variable value="SearchWord"/>
	ORDER BY lower(site_di.domainname)
	<template-if condition="SortOrder EQ 'ascending'"> ASC </template-if>
	<template-if condition="SortOrder NE 'ascending'"> DESC </template-if>
</template>
</query>
