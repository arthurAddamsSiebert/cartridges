/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fch_005fbase.default_.searchindex.inc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class AttributeDataTypeSelectBox_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
      out.write('\n');
 
setEncodingType("text/html"); 
      out.write("<script type=\"text/javascript\">\nfunction enableTextOptions(element) {\nif( typeof element.form.UpdateAttributeForm_SpellCheck == \"undefined\"\n|| typeof element.form.UpdateAttributeForm_AutoSuggest == \"undefined\" ) return; \nif ( (element.form.UpdateAttributeForm_DataType.value == \"0\") \n|| (element.form.UpdateAttributeForm_DataType.value == \"6\")\n|| (element.form.UpdateAttributeForm_DataType.value == \"14\") ) {\nelement.form.UpdateAttributeForm_SpellCheck.disabled = false;\nelement.form.UpdateAttributeForm_AutoSuggest.disabled = false;\n} else {\nelement.form.UpdateAttributeForm_SpellCheck.checked = false;\nelement.form.UpdateAttributeForm_SpellCheck.disabled = true;\nelement.form.UpdateAttributeForm_AutoSuggest.checked = false;\nelement.form.UpdateAttributeForm_AutoSuggest.disabled = true;\n}\nreturn true;\n}\nfunction enableSortOptions(element) {\nif(typeof element.form.UpdateAttributeForm_Sortable == \"undefined\"\n|| typeof element.form.UpdateAttributeForm_LabelAsc == \"undefined\"\n|| typeof element.form.UpdateAttributeForm_LabelDesc == \"undefined\") return;\n");
      out.write("// no sorting possible for multiple types, so disable \"Sortable\" checkbox\nif ((element.form.UpdateAttributeForm_DataType.value == \"4\") \n|| (element.form.UpdateAttributeForm_DataType.value == \"5\")\n|| (element.form.UpdateAttributeForm_DataType.value == \"6\")\n|| (element.form.UpdateAttributeForm_DataType.value == \"15\")\n|| (element.form.UpdateAttributeForm_DataType.value == \"16\")\n|| (element.form.UpdateAttributeForm_DataType.value == \"17\")\n|| (element.form.UpdateAttributeForm_DataType.value == \"18\")) \n{\nelement.form.UpdateAttributeForm_LabelAsc.value = '';\nelement.form.UpdateAttributeForm_LabelAsc.disabled = true;\nelement.form.UpdateAttributeForm_LabelDesc.value = '';\nelement.form.UpdateAttributeForm_LabelDesc.disabled = true;\nelement.form.UpdateAttributeForm_Sortable.checked = false;\nelement.form.UpdateAttributeForm_Sortable.disabled = true;\n} \nelse \n{\nelement.form.UpdateAttributeForm_Sortable.disabled = false;\n}\nreturn true;\n}\n</script>\n<select name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("SelectBoxName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {50}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" id=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("SelectBoxName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {50}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" class=\"select inputfield_en\" onchange=\"enableTextOptions(this); enableSortOptions(this)\" \n");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("readonly")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("readonly"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",51,e);}if (_boolean_result) { 
      out.write("disabled=\"disabled\"");
 } 
      out.write(" >\n<option value=\"0\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("SelectedOptionValue"),null).equals(context.getFormattedValue("0",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("SelectedOptionValue"),null).equals(context.getFormattedValue("3",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",52,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("AttributeDataTypeSelectBox.String.option",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n<option value=\"1\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SelectedOptionValue"),null).equals(context.getFormattedValue("1",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",53,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("AttributeDataTypeSelectBox.Integer.option",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n<option value=\"2\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SelectedOptionValue"),null).equals(context.getFormattedValue("2",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",54,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("AttributeDataTypeSelectBox.Double.option",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n<option value=\"4\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SelectedOptionValue"),null).equals(context.getFormattedValue("4",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",55,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("AttributeDataTypeSelectBox.MultipleInt.option",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n<option value=\"5\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SelectedOptionValue"),null).equals(context.getFormattedValue("5",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",56,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("AttributeDataTypeSelectBox.MultipleDouble.option",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n<option value=\"6\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SelectedOptionValue"),null).equals(context.getFormattedValue("6",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",57,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("AttributeDataTypeSelectBox.MultipleString.option",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n<option value=\"8\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SelectedOptionValue"),null).equals(context.getFormattedValue("8",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",58,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("AttributeDataTypeSelectBox.Long.option",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n<option value=\"9\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SelectedOptionValue"),null).equals(context.getFormattedValue("9",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",59,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("AttributeDataTypeSelectBox.Boolean.option",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n<option value=\"10\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SelectedOptionValue"),null).equals(context.getFormattedValue("10",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",60,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("AttributeDataTypeSelectBox.Date.option",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n<option value=\"11\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SelectedOptionValue"),null).equals(context.getFormattedValue("11",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",61,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("AttributeDataTypeSelectBox.Decimal.option",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n<option value=\"12\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SelectedOptionValue"),null).equals(context.getFormattedValue("12",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",62,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("AttributeDataTypeSelectBox.Money.option",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n<option value=\"13\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SelectedOptionValue"),null).equals(context.getFormattedValue("13",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",63,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("AttributeDataTypeSelectBox.Quantity.option",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n<option value=\"14\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SelectedOptionValue"),null).equals(context.getFormattedValue("14",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",64,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("AttributeDataTypeSelectBox.Text.option",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n<option value=\"15\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SelectedOptionValue"),null).equals(context.getFormattedValue("15",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",65,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("AttributeDataTypeSelectBox.MultipleLong.option",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n<option value=\"16\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SelectedOptionValue"),null).equals(context.getFormattedValue("16",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",66,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("AttributeDataTypeSelectBox.MultipleBoolean.option",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n<option value=\"17\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SelectedOptionValue"),null).equals(context.getFormattedValue("17",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",67,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("AttributeDataTypeSelectBox.MultipleDate.option",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n<option value=\"18\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SelectedOptionValue"),null).equals(context.getFormattedValue("18",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",68,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("AttributeDataTypeSelectBox.MultipleDecimal.option",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n</select>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
