/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fch_005fbase.default_.product;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class ChannelProductImageAssignmentValidationRule_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
      out.write("<script type=\"text/javascript\">\n$(document).ready(function() {\n$(document).delegate('#' + 'RuleDescriptorDiv_com_intershop_component_product_validation_internal_rules_imageassignment_ProductBOImageAssignmentValidationRuleDescriptor', 'onJSONReady', function(ev, data) {\n$.each(data, function(key, value){\nvar cfgKey = key;\n$(this).each(function(key, value){\nif (cfgKey === 'AssignedToAllImages' && (value != 'off')) {\n$('#ProductImageAssignmentValidationRuleConfigurationForm_assignedToAllImages').prop('checked', 'true');\n} \nif (cfgKey === 'AssignedToOneImage' && (value != 'off')) {\n$('#ProductImageAssignmentValidationRuleConfigurationForm_assignedToOneImage').prop('checked', 'true');\n}\n});\n});\n});\n});\n</script>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n<tr valign=\"top\">\n<td>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"\" width=\"100%\">\n<tr>\n<th nowrap=\"nowrap\" class=\"table_detail_without_bground\" align=\"left\">");
 {out.write(localizeISText("validationrule.product.imageassignment.page.imageassignments","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n</tr>\n<tr\nid=\"ProductImageAssignmentValidationRuleConfigurationForm_EmptyRuleParameter_ErrorContainer\"\nclass=\"ErrorContainer\" style=\"display: none;\">\n<td>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"4\" width=\"100%\"\nclass=\"error_box\">\n<tr>\n<td><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/error.gif\" width=\"16\"\nheight=\"15\" alt=\"\" border=\"0\" /></td>\n<td width=\"100%\" class=\"product_validation_error\">");
 {out.write(localizeISText("validationrule.page.selectAtLeastOneImageAssignment","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("!</td>\n</tr>\n</table>\n</td>\n</tr>\n<tr>\n<td>\n<table border=\"0\" cellpadding=\"3\" cellspacing=\"\" width=\"100%\">\n<tr>\n<td class=\"input_checkbox\" width=\"4%\">\n<input type=\"checkbox\" id=\"ProductImageAssignmentValidationRuleConfigurationForm_assignedToAllImages\" name=\"ProductImageAssignmentValidationRuleConfigurationForm_assignedToAllImages\" class=\"rule_configuration_input\"/>\n</td>\n<td nowrap=\"nowrap\" class=\"label_checkbox_text\">\n<label class=\"label label_checkbox_text label_light\" for=\"ProductImageAssignmentValidationRuleConfigurationForm_assignedToAllImages\">");
 {out.write(localizeISText("validationrule.product.imageassignment.page.allimagesassignments","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label>\n</td>\n</tr>\n<tr>\n<td class=\"input_checkbox\" width=\"4%\">\n<input type=\"checkbox\" id=\"ProductImageAssignmentValidationRuleConfigurationForm_assignedToOneImage\" name=\"ProductImageAssignmentValidationRuleConfigurationForm_assignedToOneImage\" class=\"rule_configuration_input\"/>\n</td>\n<td nowrap=\"nowrap\" class=\"label_checkbox_text\">\n<label class=\"label label_checkbox_text label_light\" for=\"ProductImageAssignmentValidationRuleConfigurationForm_assignedToOneImage\">");
 {out.write(localizeISText("validationrule.product.imageassignment.page.atleastoneimagesassignments","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label>\n</td>\n</tr>\n</table>\n</td>\n</tr>\n</table>\n</td>\n</tr>\n</table>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
