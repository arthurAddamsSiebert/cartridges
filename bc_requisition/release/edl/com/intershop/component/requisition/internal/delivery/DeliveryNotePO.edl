import "enfinity:/bc_requisition/edl/com/intershop/component/requisition/capi/delivery/DeliveryNote.edl";
import "enfinity:/bts/edl/com/intershop/beehive/bts/capi/orderprocess/ProductLineItem.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObjectPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.component.requisition.internal.delivery
{
    orm class DeliveryNotePO extends ExtensibleObjectPO implements DeliveryNote
    {
        index(lineItemID);

        index(representativeID);

        attribute lineItemID : uuid searchable;

        attribute representativeID : uuid searchable;

        /*
         * The delivery note quantity serves a the primary tracking tool for goods deliveries. This attribute is set by the user receiving goods to represent the quantity of items he actually received.
         * <p>
         * In case the delivery quantity is smaller that the quantity in of the original line item, we have a partial delivery. The delivery quantities of all delivery note instances attached to a single line item are supposed to sum up to the purchase order line item quantity before the line item is considered to be delivered in full.
         */
        attribute quantity : Quantity;

        /*
         * Comments can be used to track delivery related information. This information is maintained by the user that actually receives goods.
         */
        attribute comment : string<4000> column "commenttext";

        /*
         * The document number references the actual paper delivery note or packing slip attached to the physical shipment.
         */
        attribute documentNo : string<256> searchable;

        /*
         * The delivery timestamp captures the time of the delivery action. The timestamp will be set automatically to the creation time of the delivery note.
         */
        attribute ^timestamp : datetime;

        dependency lineItem : ProductLineItem handler "com.intershop.beehive.bts.capi.orderprocess.basket.BasketMgr"
        {
            foreign key(lineItemID);
        }
    }
}
