<%@  page buffer="none" import="java.util.*,java.io.*,com.intershop.beehive.core.internal.template.*,com.intershop.beehive.core.internal.template.isml.*,com.intershop.beehive.core.capi.log.*,com.intershop.beehive.core.capi.resource.*,com.intershop.beehive.core.capi.util.UUIDMgr,com.intershop.beehive.core.capi.util.XMLHelper,com.intershop.beehive.foundation.util.*,com.intershop.beehive.core.internal.url.*,com.intershop.beehive.core.internal.resource.*,com.intershop.beehive.core.internal.wsrp.*,com.intershop.beehive.core.capi.pipeline.PipelineDictionary,com.intershop.beehive.core.capi.naming.NamingMgr,com.intershop.beehive.core.capi.pagecache.PageCacheMgr,com.intershop.beehive.core.capi.request.SessionMgr,com.intershop.beehive.core.internal.request.SessionMgrImpl,com.intershop.beehive.core.pipelet.PipelineConstants" extends="com.intershop.beehive.core.internal.template.AbstractTemplate" %><% 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 %><% %><%@ page contentType="text/html;charset=utf-8" %><%setEncodingType("text/html"); %><% _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("PH:EventID"),null).equals(context.getFormattedValue("Authorization",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",3,e);}if (_boolean_result) { %><table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="30%" class="table_detail e s "><% {out.write(localizeISText("PaymentHistoryBO.AmountAuthorized.table_detail","",null,null,null,null,null,null,null,null,null,null,null));} %></td><td width="70%" class="table_detail s"><% {String value = null;try{value=context.getFormattedValue(getObject("PH:Amount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {6}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>&nbsp;</td>
</tr>
<tr>
<td width="30%" class="table_detail e s "><% {out.write(localizeISText("PaymentHistoryBO.ErrorCode.table_detail","",null,null,null,null,null,null,null,null,null,null,null));} %></td><td width="70%" class="table_detail s "><% {String value = null;try{value=context.getFormattedValue(getObject("PH:ErrorCode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {9}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>&nbsp;</td>
</tr>
<tr>
<td width="30%" class="table_detail e "><% {out.write(localizeISText("PaymentHistoryBO.EnfinityTransactionID.table_detail","",null,null,null,null,null,null,null,null,null,null,null));} %></td><td width="70%" class="table_detail"><% {String value = null;try{value=context.getFormattedValue(getObject("PH:TransactionID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {12}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>&nbsp;</td>
</tr><% _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PH:ErrorMsg"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",14,e);}if (_boolean_result) { %><tr>
<td width="30%" class="table_detail n e s "><% {out.write(localizeISText("PaymentHistoryBO.ErrorMsg.table_detail","",null,null,null,null,null,null,null,null,null,null,null));} %></td><td width="70%" class="table_detail n s "><% {String value = null;try{value=context.getFormattedValue(getObject("PH:ErrorMsg"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {16}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>&nbsp;</td>
</tr>
<tr>
<td width="30%" class="table_detail e "><% {out.write(localizeISText("PaymentHistoryBO.ErrorMessage.table_detail","",null,null,null,null,null,null,null,null,null,null,null));} %></td><td width="70%" class="table_detail "><% {String value = null;try{value=context.getFormattedValue(getObject("PH:ErrorMessage"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {19}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>&nbsp;</td>
</tr><% } %></table><% } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("PH:EventID"),null).equals(context.getFormattedValue("Refund",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",23,e);}if (_boolean_result) { %><table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="30%" class="table_detail e s "><% {out.write(localizeISText("PaymentHistoryBO.AmountRefunded.table_detail","",null,null,null,null,null,null,null,null,null,null,null));} %></td><td width="70%" class="table_detail s "><% {String value = null;try{value=context.getFormattedValue(getObject("PH:Amount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {26}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>&nbsp;</td>
</tr>
<tr>
<td width="30%" class="table_detail e s "><% {out.write(localizeISText("PaymentHistoryBO.RefundStatus.table_detail","",null,null,null,null,null,null,null,null,null,null,null));} %></td><td width="70%" class="table_detail s "><% {String value = null;try{value=context.getFormattedValue(getObject("PH:RefundStatus"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {29}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>&nbsp;</td>
</tr>
<tr>
<td width="30%" class="table_detail e"><% {out.write(localizeISText("PaymentHistoryBO.RefundReason.table_detail","",null,null,null,null,null,null,null,null,null,null,null));} %></td><td width="70%" class="table_detail"><% {String value = null;try{value=context.getFormattedValue(getObject("PH:RefundReason"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {32}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>&nbsp;</td>
</tr><% _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PH:ErrorMsg"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",34,e);}if (_boolean_result) { %><tr>
<td width="30%" class="table_detail n e "><% {out.write(localizeISText("PaymentHistoryBO.ErrorMsg.table_detail1","",null,null,null,null,null,null,null,null,null,null,null));} %></td><td width="70%" class="table_detail n "><% {String value = null;try{value=context.getFormattedValue(getObject("PH:ErrorMsg"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {36}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>&nbsp;</td>
</tr>
<tr>
<td width="30%" class="table_detail n e"><% {out.write(localizeISText("PaymentHistoryBO.ErrorMessage.table_detail1","",null,null,null,null,null,null,null,null,null,null,null));} %></td><td width="70%" class="table_detail n"><% {String value = null;try{value=context.getFormattedValue(getObject("PH:ErrorMessage"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {39}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>&nbsp;</td>
</tr><% } %></table><% }} %><% printFooter(out); %>