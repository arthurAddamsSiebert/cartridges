import "enfinity:/bc_pmc/edl/com/intershop/component/pmc/capi/pagelet/Placeholder.edl";
import "enfinity:/bc_pmc/edl/com/intershop/component/pmc/internal/pagelet/PageletPO.edl";
import "enfinity:/bc_pmc/edl/com/intershop/component/pmc/internal/pagelet/template/AbstractPlaceholderPO.edl";
import "enfinity:/bc_pmc/edl/com/intershop/component/pmc/internal/pagelet/template/overriding/OverrideDefinitionPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/PersistentObjectPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";
external OverridingPlaceholder type "com.intershop.component.pmc.capi.pagelet.template.overriding.OverridingPlaceholder";

namespace com.intershop.component.pmc.internal.pagelet.template.overriding
{
	/*
	 * This kind of placeholder only exist for shared pagelets (i.e. in domains unequal to the owning domain of the pagelet)
	 * that shall contain a different (domain specific) composition. Instances of {@code OverridingPlaceholder}
	 * are always linked to an overriding placeholder definition. See {@link PlaceholderDefinition#isExternal()}
	 */
	orm class OverridingPageletPlaceholderPO
	   implements OverridingPlaceholder, Placeholder
	   extends AbstractPlaceholderPO 
	   table "placeholder_override"
	{
		attribute id: string required readonly;
		
		alternate key(id,domainID);
		
        attribute overrideDefinitionID : uuid;

        attribute pageletID : uuid required;

		relation pageletPO : PageletPO[1..1] inverse overridingPlaceholderPOs implements template
		{
			foreign key(pageletID) -> (UUID);
		}

		relation overrideDefinitionPO : OverrideDefinitionPO[1..1] inverse sourcePlaceholderPO delete propagate  
		{
			foreign key(overrideDefinitionID) -> (UUID);
		}

	}
}
