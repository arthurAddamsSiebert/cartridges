import "enfinity:/bc_pmc/edl/com/intershop/component/pmc/capi/pagelet/ConfigurationParameterCtnr.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/Domain.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObject.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/localization/LocaleInformation.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

external ConfigurationParameterDefinition type "com.intershop.component.pmc.capi.definition.pagelet.ConfigurationParameterDefinition";
external ConfigurationParameterType type "com.intershop.component.pmc.capi.definition.pagelet.ConfigurationParameterType";

namespace com.intershop.component.pmc.capi.pagelet
{
    cartridge interface ConfigurationParameter extends ExtensibleObject
    {
        /*
         * Unique name within the parameters of a pagelet.
         */
        attribute name : string required readonly;

        /*
         * Related pagelet parameter definition id of pagelet definition model.
         */
        attribute definitionQualifiedName : string required readonly;
        
        /*
         * Resource set identifier part of the pagelet definition 
         */
        attribute resourceSetId: string required readonly;

        /*
         * Typecode of pagelet parameter.
         */
        attribute ^type : int required readonly;
        
        attribute localized : boolean required readonly;

        relation configurationParameterCtnr : ConfigurationParameterCtnr[0..1];

        /**
         * Returns the associated ConfigurationParameterDefinition of this configuration parameter instance.
         */
        operation getConfigurationParameterDefinition() : ConfigurationParameterDefinition;

        /*
         * Returns the object representation of the value of this configuration parameter instance. The actual object
         * type depends on the type of the configuration parameter definition this configuration parameter relates to.
         * The value is selected by using the locale of the current request if available, otherwise the lead locale
         * will be used.
         */
        operation getValue() : Object;
        
        /*
         * Returns the object representation of the value of this configuration parameter instance. The actual object
         * type depends on the type of the configuration parameter definition this configuration parameter relates to.
         * The value is selected by using the locale provided as input parameter.
         */
        operation getValue(locale : LocaleInformation) : Object; 
        
        /*
         * Returns the type that is associated with the parameter definition
         * of this configuration parameter instance.
         */
        operation getConfigurationParameterType() : ConfigurationParameterType;
        
        /**
         * Returns true, if the parameter value is overloading a value from parent configuration parameter container
         * for the specified locale, and false, if the parameter value from parent container should be inherited. For
         * non-localized parameters the locale is ignored.                 
         */
        operation isOverloading(locale : LocaleInformation) : boolean;
        
        /**
         * Updates the value of the configuration parameter for the given locale and switches it to overloading state.
         * For non-localized parameters the locale is ignored.                 
         */
        operation setOverloadingValue(value : Object, locale : LocaleInformation) : void;
        
        /**
         * Sets the value for parameter in the given locale to inheriting state. For
         * non-localized parameters the locale is ignored.                 
         */
        operation setInheriting(locale : LocaleInformation) : void;
    }
}
