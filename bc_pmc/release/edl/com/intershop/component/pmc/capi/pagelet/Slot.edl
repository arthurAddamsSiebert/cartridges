import "enfinity:/bc_pmc/edl/com/intershop/component/pmc/capi/pagelet/ConfigurationParameterCtnr.edl";
import "enfinity:/bc_pmc/edl/com/intershop/component/pmc/capi/pagelet/PlaceholderDefinition.edl";
import "enfinity:/bc_pmc/edl/com/intershop/component/pmc/capi/pagelet/Pagelet.edl";
import "enfinity:/bc_pmc/edl/com/intershop/component/pmc/capi/pagelet/SlotPageletAssignment.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/Domain.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

external SlotDefinition type "com.intershop.component.pmc.capi.definition.pagelet.SlotDefinition";
external ContentEntryPoint type "com.intershop.component.pmc.capi.pagelet.ContentEntryPoint<Slot>";
external Nameable type "com.intershop.beehive.core.capi.util.Nameable";
external ContentEntryPointOverridable type "com.intershop.component.pmc.capi.pagelet.template.overriding.OverridableContentEntryPoint<Slot>";

namespace com.intershop.component.pmc.capi.pagelet
{
    cartridge interface Slot extends ConfigurationParameterCtnr, ContentEntryPoint, Nameable, ContentEntryPointOverridable
    {
        /*
         * This attributes indicates whether a slot instance can be modified in a sharing scenario or not. If set to true it is possible to assign pagelets in a sharing context to the slot.
         */
        attribute readOnly : boolean;
    	
        /*
         * This attribute indicates if a slot can be modified in a context it is shared to in that it allows a content editor to decide whether the slot is visible or not in that context at render time.
         * @deprecated Since ICM 7.8, f_content 12.0.0 you can hide contents of a slot via 'overriding'. If this slot shall never be hidden, mark it to be read only.
         */
        attribute hideable : boolean;

        /*
         * Indicates whether the slot must have pagelets or not.
         */
        attribute optional : boolean;

        relation parentPagelet : Pagelet[0..1] readonly;

        relation slotSubPageletAssignments : SlotPageletAssignment[0..n] readonly;
        
        /*
         * A reference to the placeholder definition which maps the contents of this placeholder
         * to the outside. The owning pagelet of the returned placeholder definition must be  
         * identical to the owning pagelet of this slot.
         */
        relation placeholderDefinition : PlaceholderDefinition[0..1] readonly;

        /*
         * Returns the minimum value of 'position' attribute held by this slot's pagelets.
         */
        operation getSubPageletsMinPosition() : double;

        operation getSubPageletsMinPosition(domain : Domain) : double;

        /*
         * Returns the maximum value of 'position' attribute held by this slot's pagelets.
         */
        operation getSubPageletsMaxPosition() : double;

        operation getSubPageletsMaxPosition(domain : Domain) : double;

        /*
         * This methods returns an iterator over all assignments of pagelets to this slot which are located in the domain passed as input parameter.
         * @deprecated Since 7.0 this method has been replaced by {@link ContentEntryPoint} API
         */
        operation getSlotSubPageletAssignments(domain : Domain) : Iterator;

        /*
         * This method returns an iterator over all assignments of pagelets to this slot which are located in the domain of this slot. The assignments are sorted according their position values.
         * @deprecated Since 7.0 this method has been replaced by {@link ContentEntryPoint} API
         */
        operation getSortedSlotSubPageletAssignments() : Iterator;

        /*
         * This method returns an iterator over all assignments of pagelets to this slot which are located in the domain passed as input parameter. The assignments are sorted according their position values.
         * @deprecated Since 7.0 this method has been replaced by {@link ContentEntryPoint} API
         */
        operation getSortedSlotSubPageletAssignments(domain : Domain) : Iterator;

        /*
         * @deprecated Since 7.0 this method has been replaced by {@link ContentEntryPoint} API
         */
        operation getSubPagelets(staticContext : Boolean) : Iterator;

        /*
         * @deprecated Since 7.0 this method has been replaced by {@link ContentEntryPoint} API
         */
        operation getSubPagelets(domain : Domain, staticContext : Boolean) : Iterator;

        /*
         * Returns all pagelets assigned to this slot that are visible at the given date in an order defined by the sorting configuration of the slot.
         * @deprecated Since 7.0 this method has been replaced by {@link ContentEntryPoint} API
         */
        operation getSubPagelets(date : datetime, staticContext : Boolean) : Iterator;

        /*
         * Returns all pagelets assigned to this slot that are visible at the given date and located in the given domain in an order defined by the sorting configuration of the slot.
         * @deprecated Since 7.0 this method has been replaced by {@link ContentEntryPoint} API
         */
        operation getSubPagelets(date : datetime, domain : Domain, staticContext : Boolean) : Iterator;

        /*
         * Returns the associated SlotDefinition of this slot instance.
         */
        operation getSlotDefinition() : SlotDefinition;

		/*
		 * Answers with true if this slot is overridden with an empty {@link com.intershop.component.pmc.capi.pagelet.template.overriding.OverridingPlaceholder} instance. Otherwise it answers with false.
		 * @deprecated Since ICM 7.8, f_content 12.0.0 it is replaced by overriding placeholder concept.
		 */
        operation isHidden(domain : Domain) : boolean;

		/*
		 * @deprecated Since ICM 7.8, f_content 12.0.0 please use {@link com.intershop.component.pmc.capi.pagelet.PageletPlaceholderMgr#createSlotOverridingPlaceholder(Slot, Domain)} to produce an empty {@link com.intershop.component.pmc.capi.pagelet.template.overriding.OverridingPlaceholder} instance.
		 */
        operation setHidden(hiddenFlag : boolean, domain : Domain) : void;

        operation getSortedSlotSubPageletAssignments(date : datetime) : Iterator;

        operation getSortedSlotSubPageletAssignments(date : datetime, domain : Domain) : Iterator;
        
        /*
         * @deprecated Since ICM 7.8, f_content 12.0.0 concept of handling domain specific 'Allow Changes' setting has been completely be removed. Only if domain == owning domain a readOnlyFlag value gets accepted.
         */
         operation setReadOnly(readOnlyFlag : boolean, domain : Domain) : void;

        /*
         * @deprecated Since ICM 7.8, f_content 12.0.0 concept of handling domain specific 'Allow Changes' setting has been completely be removed. Only if domain == owning domain a readOnlyFlag value gets accepted.
         */
         operation isReadOnly(domain : Domain) : boolean;
    }
}
