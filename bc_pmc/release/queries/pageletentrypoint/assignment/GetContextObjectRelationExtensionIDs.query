<?xml version="1.0" encoding="UTF-8"?>
<query description="Returns the DefinitionQualifiedNames of all PEPAs in the given Domain.">
<parameters>
	<parameter name="RepositoryDomain" type="com.intershop.beehive.core.capi.domain.Domain" optional="false" description="The repository domain in which to search for PEPAs."/>
</parameters>
<return-mappings>
	<return-mapping name="PageletEntryPointAssignmentQualifiedName" type="rename">
		<return-attribute name="definitionqualifiedname"/>
	</return-mapping>
</return-mappings>
<processor name="OracleSQL">
</processor>
<template type="countedobjects" sqlDialect="Oracle">
	SELECT distinct(pepa.definitionqualifiedname), count(distinct(pepa.definitionqualifiedname)) over() as "rowcount" 
	FROM
	(
	    SELECT &apos;dummy&apos; as definitionqualifiedname, 1 from dual where 1=2 
	<template-comment>Do not remove white spaces around Prefix parameter value</template-comment>
	<template-call extension="PageletEntryPointAssignmentQualifiedName">
		<call-parameter name="RepositoryDomain" value="RepositoryDomain"/>
		<call-parameter name="Prefix" value="&apos; UNION &apos;"/>
	</template-call>
	) pepa
</template>
<template type="countedobjects" sqlDialect="Microsoft">
	SELECT definitionqualifiedname, count(pepa.definitionqualifiedname) over() as "rowcount"
	FROM
	(
		SELECT distinct(pepa.definitionqualifiedname)  as definitionqualifiedname
		FROM
		(
				SELECT &apos;dummy&apos; as definitionqualifiedname, 1 as count1
		<template-comment>Do not remove white spaces around Prefix parameter value</template-comment>
		<template-call extension="PageletEntryPointAssignmentQualifiedName">
			<call-parameter name="RepositoryDomain" value="RepositoryDomain"/>
			<call-parameter name="Prefix" value="&apos; UNION &apos;"/>
		</template-call>
		) pepa
	) pepa
</template>
</query>
