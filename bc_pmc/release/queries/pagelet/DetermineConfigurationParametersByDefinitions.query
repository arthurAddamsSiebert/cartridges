<?xml version="1.0" encoding="UTF-8"?>
<query description="This query determines configuration parameters which have given configuration parameter definitions.">
<parameters>
	<parameter name="ConfigurationParameterDomain" type="com.intershop.beehive.core.capi.domain.Domain" optional="true"/>
	<parameter name="ConfigurationParameterDefinitions" type="java.util.Collection" optional="false"/>
</parameters>
<return-mappings>
	<return-mapping name="ConfigurationParameters" type="orm" class="com.intershop.component.pmc.internal.pagelet.ConfigurationParameterPO">
		<return-attribute name="UUID"/>
	</return-mapping>
</return-mappings>
<processor name="OracleSQL">
</processor>
<template type="objects">
	SELECT 
	CONFIG_PARAM.UUID AS UUID,
	COUNT(*) OVER() AS "ROWCOUNT"
	FROM 
	CONFIGURATIONPARAMETER CONFIG_PARAM 
	WHERE
	1 = 1
	<template-comment>
		Filter by definition qualified name below. This should significantly reduce
		the number of the parameters that should be later processed.
	</template-comment>
	<template-if condition="hasElements(ConfigurationParameterDefinitions)">
		AND CONFIG_PARAM.DEFINITIONQUALIFIEDNAME IN 
		(
   			<template-loop iterator="ConfigurationParameterDefinitions" alias="ConfigurationParameterDefinition">
	   			<loop-statement>
	       			<template-variable value="ConfigurationParameterDefinition:QualifiedName"/>
	       		</loop-statement>
				<loop-separator>, </loop-separator>
			</template-loop> 
		)
	</template-if>
	<template-if condition="isDefined(ConfigurationParameterDomain)">
		AND CONFIG_PARAM.DOMAINID = <template-variable value="ConfigurationParameterDomain:UUID"/>
	</template-if>
</template>
</query>
