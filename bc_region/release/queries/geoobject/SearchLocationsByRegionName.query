<?xml version="1.0" encoding="UTF-8"?>
<query>
	<parameters>
		<parameter name="Domain" type="com.intershop.beehive.core.capi.domain.Domain" optional="false" />
		<parameter name="RegionID" type="java.lang.String" optional="false" />
		<parameter name="GeoObjectDomain" type="com.intershop.beehive.core.capi.domain.Domain" optional="false" />
		<parameter name="Locale" type="com.intershop.beehive.core.capi.localization.LocaleInformation" optional="true"/>
		<parameter name="NameOrID" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
		<parameter name="Country" type="com.intershop.component.region.capi.geoobject.Country" optional="true"/>
	</parameters>
	<return-mappings>
		<return-mapping name="Locations" type="orm" class="com.intershop.component.region.internal.geoobject.LocationPO">
			<return-attribute name="uuid"/>
		</return-mapping>
	</return-mappings>
	<processor name="OracleSQL">
	</processor>
	<template type="countedobjects">
		
	SELECT l.uuid,l.postalcode AS sorting, COUNT(*) over() AS "rowcount" 
	FROM location l 
	LEFT JOIN country c ON l.countryid = c.uuid
	WHERE 
	    l.domainid = <template-variable value="GeoObjectDomain:DomainID"/>
		<template-if condition="isDefined(Country)">
			AND
				l.countryid = <template-variable value="Country:UUID"/>
			</template-if>
			AND
				l.uuid in
				(
					select distinct geoobjectid from regiongeoobjectassignment
					where regionid = (select uuid from region where id =
					<template-variable value="RegionID" />
					and domainid =
					<template-variable value="Domain:DomainID" />)
				)			
			<template-if condition="isDefined(NameOrID) AND (NameOrID NE '') AND NameOrID:NotEmpty">
				<template-if condition="hasElements(NameOrID:Phrases)">
					AND(
					<template-loop iterator="NameOrID:Phrases" alias="Phrase">
						<loop-statement>
							<template-if condition="Phrase:Type EQ 'WildcardMatch'">	
							 				
								l.postalcode LIKE <template-variable value="Phrase:getQueryString('%','_','#')"/> ESCAPE '#'
							<if-elseif condition="Phrase:Type EQ 'ExactMatch'"/>
								l.postalcode = <template-variable value="Phrase:Value"/>								
							<if-else/>
								l.postalcode LIKE <template-variable value="Phrase:Value.'%'" />							
							</template-if>							
						</loop-statement>
						<loop-separator> OR </loop-separator>
					</template-loop>
					)
				</template-if>
			</template-if>
			<sql-dialect name="Oracle">
				ORDER BY sorting
				ASC NULLS LAST
			</sql-dialect>
			<sql-dialect name="Microsoft">
				ORDER BY
				CASE
					WHEN l.postalcode is null THEN 1
					ELSE 0
				END ASC, l.postalcode ASC
			</sql-dialect>
	</template>
</query>
