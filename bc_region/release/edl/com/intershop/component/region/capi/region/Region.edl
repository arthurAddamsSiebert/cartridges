import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObject.edl";

external RegionList type "java.util.List<Region>";

namespace com.intershop.component.region.capi.region
{
    /*
     * <br/>
     * A region is a group of geo objects. 
     * One geo object can belong to one or more regions.
     * A region can exclude other regions as complement.
     * <br/>
     */
	cartridge interface Region extends ExtensibleObject
	{
		/*
		 * <br/>
		 * the id of the region
		 * <br/>
		 */
		attribute id : string required readonly;
		
		/*
		 * <br/>
		 * indicates if the region is active
		 * <br/>
		 */
		attribute active : boolean;
		
		/*
		 * <br/>
		 * indicates if the region is the default region
		 * <br/>
		 */
		attribute defaultRegion : boolean readonly;
		
		attribute displayName : string localized;
		
		attribute description : string localized;
	
	    /*
	     * <br/>
	     * stores the regions address type, regular for an ordinary region,
	     * others for special regions like APO
	     * <br/>
	     */
	    attribute addressType : string;	    
	  
	    /*
	     * 
	     * Returns the regions excluded from this region.
	     * An excluded region is a region that acts as complement, to exclude geo
         * objects from an region. This object acts as assignment.
	     * 
	     */  		
		operation getExcludedRegions() : RegionList;
	    
	    /*
	     * 
	     * Returns the regions excluding this region.
	     * An excluded region is a region that acts as complement, to exclude geo
         * objects from an region. This object acts as assignment.
	     * 
	     */  
	    operation getExcludingRegions() : RegionList;
	    
	    /*
	     * An excluded region is a region that acts as complement, to exclude geo
         * objects from an region. This object acts as assignment.
	     * 
	     */ 
	    relation excludedRegions : Region[0..n] readonly;

	}
}
