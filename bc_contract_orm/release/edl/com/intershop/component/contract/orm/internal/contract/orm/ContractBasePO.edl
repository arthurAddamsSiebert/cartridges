import "enfinity:/bc_contract_orm/edl/com/intershop/component/contract/orm/internal/contract/orm/ContractRevenueAssignmentPO.edl";
import "enfinity:/bc_contract_orm/edl/com/intershop/component/contract/orm/internal/contract/orm/ContractSalesTargetPO.edl";
import "enfinity:/bc_mvc/edl/com/intershop/component/mvc/internal/product/ProductListPO.edl";
import "enfinity:/bc_pricing/edl/com/intershop/component/pricing/internal/pricelist/PriceListPO.edl";
import "enfinity:/bc_customer_orm/edl/com/intershop/component/customer/orm/internal/orm/CustomerPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObjectPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.component.contract.^orm.internal.contract.^orm
{
	orm class ContractBasePO extends ExtensibleObjectPO
	{
		/*
         * Unique id within the domain.
         */
        attribute ID : string required;
        
		/*
		 * The contracts localized Name
		 */ 
		 
         attribute name: string localized required;
		/*
		 * The contracts localized description
		 */ 
		 attribute description: string localized;
		
		/*
		 * The start date.
		 */ 
		 attribute startDate: datetime;
		/*
		 * The end date.
		 */ 
		 attribute endDate: datetime;
		 /*
		  * The customer id.
		  */
		 attribute customerUUID: uuid;
		 /*
		  * the current contract type code
		  * percentage=1, fixed quantity=2, fixed price=4, fixed end date=8
		  */
		 attribute typeCode : int;
		 /*
		  * the current contract status
		  * new=1, started=2, expired=3, canceled=4
		  */
		 attribute status : int;
         /*
          * indicates the notification email has been sent to the account manager(s)
          */
         attribute notificationSent : boolean;
         /*
          * holds the timestamp when notification email was sent to the account manager(s)
          */
		 attribute notificationSentDate : datetime;

		 relation contractRevenueAssignmentPOs : ContractRevenueAssignmentPO[0..n] inverse contractBasePO;

		 relation contractSalesTargetPOs : ContractSalesTargetPO[0..n] inverse contractBasePO;
		 
		 dependency customer: CustomerPO
		 {
		 	foreign key (customerUUID);
		 }
	}
}
