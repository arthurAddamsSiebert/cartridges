# Localizable properties associated with isml_functions.objectpathfunctions

#Localizable properties associated with isml.objectpathfunctions
#Thu Aug 10 09:22:10 CEST 2017
OPFunctionDescription.URL.description=The function <b>url</b>() are used in a template to dynamically generate a URL that is part of a link. Any reference in a storefront page needs to be generated by one of these function calls. Use the attribute action for generating that part of a URL that contains information about the storefront name, language/locale, currency, etc. The parameter attribute can be used to extend the URL with additional key-value pairs which can forward additional data to the called pipeline.
OPFunctionDescription.URL.parameter.parameter.description=The function <b>parameter</b>(string,string) defines a parameter in combination with the url() and urlex() functions. It returns an encoded URL key-value pair that is used to transmit data to the requested pipeline.
OPFunctionDescription.URL.target.action.action.description=The function <b>action</b>() is used as a parameter in combination with the functions url(), pipeline() and urlex(). It generates the part of an URL string containing information about the requested pipeline, server group, domain (storefront name), locale, and currency. It is possible to specify only an empty string ("") for an attribute; in this case, the default value of the attribute is used. If action() is used without specifying any attributes at all, the function will address the default page (home page) of the domain.
OPFunctionDescription.URL.target.service.service.description=The function <b>service</b>() generates dynamic content via a  REST service.
OPFunctionDescription.URL.target.servlet.servlet.description=The function <b>servlet</b>() generates dynamic content via servlets instead of pipelines.
OPFunctionDescription.URLEx.description=The function <b>urlex</b>() are used in a template to dynamically generate a URL that is part of a link. Any reference in a storefront page needs to be generated by one of these function calls. Use the attribute action for generating that part of a URL that contains information about the storefront name, language/locale, currency, etc. The parameter attribute can be used to extend the URL with additional key-value pairs which can forward additional data to the called pipeline.
OPFunctionDescription.URLEx.parameter.parameter.description=The function <b>parameter</b>(string,string) defines a parameter in combination with the url() and urlex() functions. It returns an encoded URL key-value pair that is used to transmit data to the requested pipeline.
OPFunctionDescription.URLEx.target.action.action.description=The function <b>action</b>() is used as a parameter in combination with the functions url(), pipeline() and urlex(). It generates the part of an URL string containing information about the requested pipeline, server group, domain (storefront name), locale, and currency. It is possible to specify only an empty string ("") for an attribute; in this case, the default value of the attribute is used. If action() is used without specifying any attributes at all, the function will address the default page (home page) of the domain.
OPFunctionDescription.URLEx.target.service.service.description=The function <b>service</b>() generates dynamic content via a  REST service.
OPFunctionDescription.URLEx.target.servlet.servlet.description=The function <b>servlet</b>() generates dynamic content via servlets instead of pipelines.
OPFunctionDescription.contentURL.description=The <b>contentURL</b>() function is used to reference static content in the static content directory of the current unit, e.g., share/sites/site_name/version-id/static/units/unit_name/static.
OPFunctionDescription.contentURLEx.description=The <b>contentURLEx</b>() function is used to reference static content. In contrast to <b>ContentURL</b>() , the <b>ContentURLEx</b>() function always returns an absolute URL.
OPFunctionDescription.encodeValue.description=The function <b>encodeValue</b>(value, [encoding]) is used to encode strings. If the default 'html' encoding is not sufficient the second parameter allows to enforce a particular encoding type.
OPFunctionDescription.existsTemplate.description=The function <b>existsTemplate</b>(string) checks if an ISML template exists.
OPFunctionDescription.false.description=The function <b>false</b>() returns false.
OPFunctionDescription.getCookie.description=The function <b>getCookie</b>(string) returns the value of a cookie. You must specify the name of the desired cookie as a function attribute. In case a cookie with the specified name has not been received, the function returns an empty string.
OPFunctionDescription.getHeader.description=The function <b>getHeader</b>(string) returns the value of a request header field of the current request. You must specify the name of the desired field as a function attribute. In case the specified header field does not exist, the function returns an empty string. For additional information, consult the HTTP 1.0 specification, available at the World Wide Web Consortium Web site, http://www.w3.org.
OPFunctionDescription.getTemplateSourceLocation.description=The function <b>getTemplateSourceLocation</b>() gets the source location of a template.
OPFunctionDescription.getValue.description=The function <b>getValue</b>(expression) can be used to format the result of an expression. The value of an ISML expression is returned by getValue() as a formatted string. The standard formatter classes control how the string is formatted.
OPFunctionDescription.hasElements.description=The function <b>hasElements</b>(iterator) allows you to check whether an iterator contains any elements.
OPFunctionDescription.hasLoopElements.description=The function <b>hasLoopElements</b>() allows you to check whether an iterator contains any elements.
OPFunctionDescription.hasNext.description=The <b>hasNext</b>(iterator) function allows you to check whether an iterator has more elements. If the iterator passed in has more element the function returns true, otherwise false.
OPFunctionDescription.isDefined.description=The function <b>isDefined</b>(expression) returns true if an expression evaluates into a non-null value.
OPFunctionDescription.isSSSenabled.description=With <b>isSSSenabled</b>(), you can check whether or not server-side scripting is enabled for the current store. If server-side scripting is enabled, the function returns true, otherwise false.
OPFunctionDescription.lcase.description=The function <b>lcase</b>(string) returns a string that is converted to lowercase.
OPFunctionDescription.len.description=The function <b>len</b>(string) returns the number of characters in a string. If the source string is empty, 0 is returned.
OPFunctionDescription.localizeText.description=The function <b>localizeText</b>(string,...) gets a text from a resource bundle.
OPFunctionDescription.localizeTextEx.ParameterList.ParameterList.description=The function <b>parameterList</b>(string,...) adds replacement parameters.
OPFunctionDescription.localizeTextEx.description=The function <b>localizeTextEx</b>(string,..,ParameterList()) gets a text from a resource bundle.
OPFunctionDescription.null.description=The function <b>null</b>() returns NULL.
OPFunctionDescription.pad.description=The function <b>pad</b>(string,int) justifies text to the left or right side of a field. For example, if you need to print out prices in a list, you probably want them exactly aligned at one side. pad() has two attributes. The first specifies the source string to be processed. The second defines the field width as a positive or negative number of characters. A positive number produces left-aligned text, a negative number right-aligned text. If the source string is longer than the padding value, the output string is truncated on the right.
OPFunctionDescription.paramMap.description=The function <b>paramMap</b>() is used to gather parameter entries in pipeline calls via tag &lt;ispipeline&gt;.
OPFunctionDescription.paramMap.parameter.paramEntry.description=The function <b>paramEntry</b>(string,Object) defines a parameter for the paramMap() function.
OPFunctionDescription.pipeline.description=The function <b>pipeline</b>() is used in a template to dynamically invoke a pipeline. The parameter attribute can be used to pass additional key-value pairs as arguments which can forward additional data to the called pipeline.
OPFunctionDescription.pipeline.parameter.parameter.description=The function <b>parameter</b>(string,string) defines a parameter in combination with the url() and urlex() functions. It returns an encoded URL key-value pair that is used to transmit data to the requested pipeline.
OPFunctionDescription.replace.description=The function <b>replace</b>(string,string,string) replaces each substring of the string given as first argument that matches the as second argument given regular expression with the as third argument given replacement. 
OPFunctionDescription.sessionlessURL.description=The function <b>sessionlessURL</b>() are used in a template to dynamically generate a session independent URL that is part of a link. Any reference in a storefront page needs to be generated by one of these function calls. Use the attribute action for generating that part of a URL that contains information about the storefront name, language/locale, currency, etc. The parameter attribute can be used to extend the URL with additional key-value pairs which can forward additional data to the called pipeline.
OPFunctionDescription.sessionlessURL.parameter.parameter.description=The function <b>parameter</b>(string,string) defines a parameter in combination with the url() and urlex() functions. It returns an encoded URL key-value pair that is used to transmit data to the requested pipeline.
OPFunctionDescription.sessionlessURL.target.action.action.description=The function <b>action</b>() is used as a parameter in combination with the functions url(), pipeline() and urlex(). It generates the part of an URL string containing information about the requested pipeline, server group, domain (storefront name), locale, and currency. It is possible to specify only an empty string ("") for an attribute; in this case, the default value of the attribute is used. If action() is used without specifying any attributes at all, the function will address the default page (home page) of the domain.
OPFunctionDescription.sessionlessURL.target.servlet.servlet.description=The function <b>servlet</b>() generates dynamic content via servlets instead of pipelines.
OPFunctionDescription.sessionlessURLEx.description=The function <b>sessionlessURLEx</b>() are used in a template to dynamically generate a session independent URL that is part of a link. Any reference in a storefront page needs to be generated by one of these function calls. Use the attribute action for generating that part of a URL that contains information about the storefront name, language/locale, currency, etc. The parameter attribute can be used to extend the URL with additional key-value pairs which can forward additional data to the called pipeline.
OPFunctionDescription.sessionlessURLEx.parameter.parameter.description=The function <b>parameter</b>(string,string) defines a parameter in combination with the url() and urlex() functions. It returns an encoded URL key-value pair that is used to transmit data to the requested pipeline.
OPFunctionDescription.sessionlessURLEx.target.action.action.description=The function <b>action</b>() is used as a parameter in combination with the functions url(), pipeline() and urlex(). It generates the part of an URL string containing information about the requested pipeline, server group, domain (storefront name), locale, and currency. It is possible to specify only an empty string ("") for an attribute; in this case, the default value of the attribute is used. If action() is used without specifying any attributes at all, the function will address the default page (home page) of the domain.
OPFunctionDescription.sessionlessURLEx.target.servlet.servlet.description=The function <b>servlet</b>() generates dynamic content via servlets instead of pipelines.
OPFunctionDescription.split.description=The function <b>split</b>(string,string) splits the string given as first argument around matches of the regular expression that is given as second argument. 
OPFunctionDescription.stringToHtml.description=The <b>stringToHtml</b>(string) function returns the result of a string expression after converting any special characters, such as &amp;, &lt; or &gt; into their appropriate HTML encoding sequences.
OPFunctionDescription.stringToWml.description=The <b>stringToWml</b>(string) function returns the result of a string expression after converting any special characters, such as &amp;, &lt; or &gt; into their appropriate WML encoding sequences.
OPFunctionDescription.stringToXml.description=The <b>stringToXml</b>(string) function returns the result of a string expression after converting any special characters, such as &amp;, &lt; or &gt; into their appropriate XML encoding sequences.
OPFunctionDescription.trim.description=The function <b>trim</b>(string) strips white space from the beginning and end of a string.
OPFunctionDescription.true.description=The function <b>true</b>() returns TRUE.
OPFunctionDescription.ucase.description=The function <b>ucase</b>(string) returns a string that is converted to uppercase.
OPFunctionDescription.val.description=The function <b>val</b>(string) returns the numbers contained in a string in floating point representation. If the string contains non-numeric characters, a zero is returned.
OPFunctionDescription.webRoot.description=The function <b>webRoot</b>() is used to reference static content, e.g., images or other external files, within ISML templates. It points to the static content directory of the current site (e.g., share/sites/site_name/version-id/static) or the cartridge-based content directories, where reference material is stored.
OPFunctionDescription.webRootEx.description=The function <b>webRootEx</b>() is used to reference static content. However, in contrast to <b>webRoot</b>(), the <b>webRootEx</b>() function always returns an absolute URL, hence is used in templates in which an absolute URL is required, such as in mail templates. 
OPFunctionParameterDescription.URL.parameter.description=The function <b>parameter</b>(string,string) defines a parameter in combination with the url() and urlex() functions. It returns an encoded URL key-value pair that is used to transmit data to the requested pipeline.
OPFunctionParameterDescription.URL.target.action.description=The function <b>action</b>() is used as a parameter in combination with the functions url(), pipeline() and urlex(). It generates the part of an URL string containing information about the requested pipeline, server group, domain (storefront name), locale, and currency. It is possible to specify only an empty string ("") for an attribute; in this case, the default value of the attribute is used. If action() is used without specifying any attributes at all, the function will address the default page (home page) of the domain.
OPFunctionParameterDescription.URL.target.service.description=The function <b>service</b>() generates dynamic content via a  REST service.
OPFunctionParameterDescription.URL.target.servlet.description=The function <b>servlet</b>() generates dynamic content via servlets instead of pipelines.
OPFunctionParameterDescription.URLEx.parameter.description=The function <b>parameter</b>(string,string) defines a parameter in combination with the url() and urlex() functions. It returns an encoded URL key-value pair that is used to transmit data to the requested pipeline.
OPFunctionParameterDescription.URLEx.target.action.description=The function <b>action</b>() is used as a parameter in combination with the functions url(), pipeline() and urlex(). It generates the part of an URL string containing information about the requested pipeline, server group, domain (storefront name), locale, and currency. It is possible to specify only an empty string ("") for an attribute; in this case, the default value of the attribute is used. If action() is used without specifying any attributes at all, the function will address the default page (home page) of the domain.
OPFunctionParameterDescription.URLEx.target.service.description=The function <b>service</b>() generates dynamic content via a  REST service.
OPFunctionParameterDescription.URLEx.target.servlet.description=The function <b>servlet</b>() generates dynamic content via servlets instead of pipelines.
OPFunctionParameterDescription.localizeTextEx.ParameterList.description=The function <b>parameterList</b>(string,...) adds replacement parameters.
OPFunctionParameterDescription.paramMap.parameter.description=The function <b>paramEntry</b>(string,Object) defines a parameter for the paramMap() function.
OPFunctionParameterDescription.pipeline.parameter.description=The function <b>parameter</b>(string,string) defines a parameter in combination with the url() and urlex() functions. It returns an encoded URL key-value pair that is used to transmit data to the requested pipeline.
OPFunctionParameterDescription.sessionlessURL.parameter.description=The function <b>parameter</b>(string,string) defines a parameter in combination with the url() and urlex() functions. It returns an encoded URL key-value pair that is used to transmit data to the requested pipeline.
OPFunctionParameterDescription.sessionlessURL.target.action.description=The function <b>action</b>() is used as a parameter in combination with the functions url(), pipeline() and urlex(). It generates the part of an URL string containing information about the requested pipeline, server group, domain (storefront name), locale, and currency. It is possible to specify only an empty string ("") for an attribute; in this case, the default value of the attribute is used. If action() is used without specifying any attributes at all, the function will address the default page (home page) of the domain.
OPFunctionParameterDescription.sessionlessURL.target.servlet.description=The function <b>servlet</b>() generates dynamic content via servlets instead of pipelines.
OPFunctionParameterDescription.sessionlessURLEx.parameter.description=The function <b>parameter</b>(string,string) defines a parameter in combination with the url() and urlex() functions. It returns an encoded URL key-value pair that is used to transmit data to the requested pipeline.
OPFunctionParameterDescription.sessionlessURLEx.target.action.description=The function <b>action</b>() is used as a parameter in combination with the functions url(), pipeline() and urlex(). It generates the part of an URL string containing information about the requested pipeline, server group, domain (storefront name), locale, and currency. It is possible to specify only an empty string ("") for an attribute; in this case, the default value of the attribute is used. If action() is used without specifying any attributes at all, the function will address the default page (home page) of the domain.
OPFunctionParameterDescription.sessionlessURLEx.target.servlet.description=The function <b>servlet</b>() generates dynamic content via servlets instead of pipelines.
OPOperatorDescription.and.description=Boolean conjunction.
OPOperatorDescription.concat.description=String concatenation.
OPOperatorDescription.div.description=Division operation.
OPOperatorDescription.equals.description=Numerical equals.
OPOperatorDescription.greaterThan.description=Numerical greater than comparison.
OPOperatorDescription.greaterThanEquals.description=Numerical greater than or equals comparison.
OPOperatorDescription.lesserThan.description=Numerical lesser than comparison.
OPOperatorDescription.lesserThanEquals.description=Numerical lesser than or equals comparison.
OPOperatorDescription.minus.description=Subtraction operation.
OPOperatorDescription.mod.description=Modulo operation.
OPOperatorDescription.mult.description=Multiplication operation.
OPOperatorDescription.not.description=Boolean inverse.
OPOperatorDescription.notEquals.description=Numerical <b>NOT</b> equals.
OPOperatorDescription.opProperty.description=Object Path Property Resolution.
OPOperatorDescription.or.description=Boolean disjunction.
OPOperatorDescription.plus.description=Addition operation.
OPOperatorDescription.stringEquals.description=String equals.
OPOperatorDescription.stringNotEquals.description=String <b>NOT</b> equals.
OPOperatorDescription.xor.description=Boolean exclusive disjunction.
OPParameterDescription.encodeValue.encoding.description=The encoding to be applied. Common value are  'html', 'javascript', 'json', 'url', 'nl2b3', 'xml', 'wml'.
OPParameterDescription.if.trueValue.description=The value that will be the result of 'if' in case the expression evaluates to true.
OPParameterDescription.if.falseValue.description=The value that will be the result of 'if' in case the expression evaluates to false.
OPFunctionDescription.if.description=The function <b>if</b>(expression,trueValue, [falseValue]) returns the trueValue if the expression geven as forst parameter evaluates to true. If the expression evaluates to false, the third parameter is returned, if it is present.
OPParameterDescription.if.expression.description=An expression that decides whether the second or third parameter of if() gets returned. 
OPParameterDescription.encodeValue.s.description=The value to encode.

