/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:30:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.bc_005fcustomer_005form.default_;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;
import java.util.Iterator;
import com.intershop.component.customer.capi.CustomerBO;
import com.intershop.component.customer.capi.CustomerBOPrivateCustomerExtension;
import com.intershop.component.user.capi.UserBO;
import com.intershop.beehive.core.capi.impex.AttributeValueIterator;
import com.intershop.beehive.core.capi.user.User;
import com.intershop.beehive.core.capi.profile.Profile;
import com.intershop.beehive.core.capi.profile.ProfileMgr;
import com.intershop.beehive.core.capi.paging.PageableIterator;
import com.intershop.beehive.core.capi.domain.PersistentObjectBOExtension;
import com.intershop.component.customer.orm.internal.orm.CustomerPO;
import com.intershop.beehive.core.capi.domain.ExtensibleObject;
import com.intershop.beehive.core.capi.query.Row;
import com.intershop.beehive.foundation.util.ConcatenationIterator;

public final class LegacyCustomerExport_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

 protected Boolean printTemplateMarker() { return Boolean.FALSE; } 
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/xml;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 


setEncodingType("text/xml"); 
      out.write("\n\n\n\n");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((Boolean) (disableErrorMessages().isDefined(getObject("MultiThreadingEnabled")))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue() || ((Boolean) ((((Boolean) getObject("MultiThreadingEnabled")).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",18,e);}if (_boolean_result) { 
      out.write('\n');
      out.write('	');
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"UserExportHeader", null, "19");} 
      out.write('\n');
 } 
      out.write('\n');
      out.write('\n');
      out.write('	');
 context.setCustomTagTemplateName("user","inc/FNDUser",false,new String[]{"user","customattributes"},null); 
      out.write('\n');
      out.write('	');
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("Objects"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",23,e);}if (_boolean_result) { 
      out.write('\n');
      out.write('	');
      out.write('	');

			ProfileMgr profileMgr = (ProfileMgr) NamingMgr.getInstance().lookupManager(ProfileMgr.REGISTRY_NAME);
			Iterator objects = (Iterator)getObject("Objects");

			if (objects instanceof PageableIterator)
			{
			    objects = ((PageableIterator) objects).toSequence();
			}

			while (objects.hasNext())
			{
			    Object object = objects.next();
			    CustomerBO customerBO;
			    if (object instanceof Row)
			    {
			        Row row = (Row)object;
			        customerBO = (CustomerBO)row.get("CustomerBO");
			    }
			    else
			    {
			        customerBO = (CustomerBO)object;
			    }

			    if (null != customerBO)
			    {
			        CustomerBOPrivateCustomerExtension privateCustomerExtension = customerBO.getExtension("PrivateCustomer");
		    	    if (null != privateCustomerExtension)
		    	    {
		    	        UserBO customerUser = privateCustomerExtension.getUserBO();
		    	        Profile profile = profileMgr.resolveProfileFromID(customerUser.getID());
		    	        User user = new User(profile.getProfileID());
		    	        if (null != user)
		    	        {
		    	            PersistentObjectBOExtension ex = customerBO.getExtension(PersistentObjectBOExtension.class);
							CustomerPO customerPO = (CustomerPO)ex.getPersistentObject();
							if (null != customerPO)
							{
			    	            Iterator customerAttr = new AttributeValueIterator(customerPO.createAttributeValuesIterator(), customerPO);
			    	            Iterator profileAttr = new AttributeValueIterator(((ExtensibleObject)profile).createAttributeValuesIterator(), (ExtensibleObject) profile);
			    	            ConcatenationIterator conIter = new ConcatenationIterator();
	                            conIter.addIterator(customerAttr);
	                            conIter.addIterator(profileAttr);
	                            getPipelineDictionary().put("CustomAttributes", conIter);
			    	            getPipelineDictionary().put("Object", user);
								
 processOpenTag(response, pageContext, "user", new TagParameter[] {
new TagParameter("user",getObject("Object")),
new TagParameter("customattributes",getObject("CustomAttributes"))}, 68); 

							}
		    	        }
		    	    }
			    }
			}
		
      out.write('\n');
      out.write('	');
 } 
      out.write('\n');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((Boolean) (disableErrorMessages().isDefined(getObject("MultiThreadingEnabled")))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue() || ((Boolean) ((((Boolean) getObject("MultiThreadingEnabled")).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",76,e);}if (_boolean_result) { 
      out.write('\n');
      out.write('	');
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"DefaultExportFooter", null, "77");} 
      out.write('\n');
 } 
      out.write('\n');
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
