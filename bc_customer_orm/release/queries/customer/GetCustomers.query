<?xml version="1.0" encoding="UTF-8"?>
<query description="A wrapper (facede) query for the Customers page search. Based on the parameters it swithes to either a lightweigh and more performant query over only CUSTOMER table (if possible),
                    or to a full capabilities more complex query joining with BASICPROFILE and BASICCREDENTIALS tables.">
  <parameters>
    <parameter name="CustomerBORepository" type="com.intershop.component.customer.capi.CustomerBORepository" optional="false"/>
    <parameter name="NameOrID" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
    <parameter name="CustomerNo" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
    <parameter name="CompanyName" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
    <parameter name="BusinessPartnerNo" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
    <parameter name="Login"  type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
    <parameter name="FirstName"  type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
    <parameter name="LastName"  type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
    <parameter name="UserID" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
    <parameter name="CustomerType" type="java.lang.String" optional="true"/>

    <parameter name="CustomerCreationDateFrom" type="java.util.Date" optional="true"/>
    <parameter name="CustomerCreationDateTo" type="java.util.Date" optional="true"/>
    <parameter name="UserCreationDateFrom" type="java.util.Date" optional="true"/>
    <parameter name="UserCreationDateTo" type="java.util.Date" optional="true"/>

    <parameter name="EnabledCustomersOnly" type="java.lang.Boolean" optional="true"/>
    <parameter name="DisabledCustomersOnly" type="java.lang.Boolean" optional="true"/>
    <parameter name="EnabledUsersOnly" type="java.lang.Boolean" optional="true"/>
    <parameter name="DisabledUsersOnly" type="java.lang.Boolean" optional="true"/>

    <parameter name="CustomerApprovalStatus" type="java.lang.String" optional="true"/>

    <parameter name="SortBy" type="java.lang.String" optional="true"/>
    <parameter name="SortDirection" type="java.lang.String" optional="true"/>
    
    <parameter name="IndividualCustomersCount" type="java.lang.Integer" optional="true"/>
  </parameters>

  <return-mappings>
    <return-mapping name="CustomerBO" type="bo-orm" class="com.intershop.component.customer.orm.internal.orm.CustomerPO" mapperclass="CustomerPOToCustomerBOMapper">
      <return-attribute name="UUID"/>
    </return-mapping>
    <return-mapping name="UserIDs" type="constructor" class="com.intershop.component.customer.orm.internal.query.mapping.ArrayToCollectionMapping">
      <return-attribute name="users"/>
    </return-mapping>
  </return-mappings>

  <processor name="OracleSQL"/>

  <template type="countedobjects">

  select 
  <sql-dialect name="Microsoft">
		top 100 percent cuuid as uuid,
         users,
         SORTING,
         COUNT(cuuid) OVER() AS "ROWCOUNT"
	</sql-dialect>
		<sql-dialect name="Oracle">
		cuuid as uuid,
         users,
         SORTING,
         COUNT(cuuid) OVER() AS "ROWCOUNT"
		</sql-dialect>
  
    from (
            <template-if condition="(isDefined(IndividualCustomersCount) and (IndividualCustomersCount &gt; 0))
                               or isDefined(NameOrID) or isDefined(BusinessPartnerNo) or isDefined(Login) or isDefined(FirstName) or isDefined(LastName) or isDefined(UserID)
                               or isDefined(CustomerCreationDateFrom) or isDefined(CustomerCreationDateTo) or isDefined(UserCreationDateFrom) or isDefined(UserCreationDateTo) or isDefined(EnabledCustomersOnly)
                               or isDefined(DisabledCustomersOnly) or isDefined(EnabledUsersOnly) or isDefined(DisabledUsersOnly) or isDefined(CustomerApprovalStatus)">
         <template-call name="customer/inc/FullCustomersSearch">
              <call-parameter name="CustomerBORepository" value="CustomerBORepository"/>
              <call-parameter name="NameOrID" value="NameOrID"/>
              <call-parameter name="CustomerNo" value="CustomerNo"/>
              <call-parameter name="CompanyName" value="CompanyName"/>
              <call-parameter name="BusinessPartnerNo" value="BusinessPartnerNo"/>
              <call-parameter name="Login" value="Login"/>
              <call-parameter name="FirstName" value="FirstName"/>
              <call-parameter name="LastName" value="LastName"/>
              <call-parameter name="UserID" value="UserID"/>
              <call-parameter name="CustomerType" value="CustomerType"/>
              <call-parameter name="CustomerCreationDateFrom" value="CustomerCreationDateFrom"/>
              <call-parameter name="CustomerCreationDateTo" value="CustomerCreationDateTo"/>
              <call-parameter name="UserCreationDateFrom" value="UserCreationDateFrom"/>
              <call-parameter name="UserCreationDateTo" value="UserCreationDateTo"/>
              <call-parameter name="EnabledCustomersOnly" value="EnabledCustomersOnly"/>
              <call-parameter name="DisabledCustomersOnly" value="DisabledCustomersOnly"/>
              <call-parameter name="EnabledUsersOnly" value="EnabledUsersOnly"/>
              <call-parameter name="DisabledUsersOnly" value="DisabledUsersOnly"/>
              <call-parameter name="CustomerApprovalStatus" value="CustomerApprovalStatus"/>
              <call-parameter name="SortBy" value="SortBy"/>
              <call-parameter name="SortDirection" value="SortDirection"/>
            </template-call>
          <if-else/> 
            <template-call name="customer/inc/LightCustomersSearch">
              <call-parameter name="CustomerBORepository" value="CustomerBORepository"/>
              <call-parameter name="CustomerNo" value="CustomerNo"/>
              <call-parameter name="CompanyName" value="CompanyName"/>
              <call-parameter name="CustomerType" value="CustomerType"/>
              <call-parameter name="CustomerApprovalStatus" value="CustomerApprovalStatus"/>
              <call-parameter name="SortBy" value="SortBy"/>
              <call-parameter name="SortDirection" value="SortDirection"/>
            </template-call>
          </template-if>
         ) a
   ORDER BY SORTING
    <template-if condition="isDefined(SortDirection) AND SortDirection EQ &apos;descending&apos;">
       <sql-dialect name="Oracle">
       	DESC NULLS LAST
       </sql-dialect>
       <sql-dialect name="Microsoft">
       	DESC, 
       	CASE
       		WHEN sorting is null THEN 0
       		ELSE 1
       	END
       </sql-dialect>
    <if-else/>
       <sql-dialect name="Oracle">
       	ASC NULLS FIRST
       </sql-dialect>
       <sql-dialect name="Microsoft">
        ASC, 
        CASE
        	WHEN sorting is null THEN 1
        	ELSE 0
        END
       </sql-dialect>
    </template-if>

  </template>
</query>
