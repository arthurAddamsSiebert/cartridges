<?xml version="1.0" encoding="UTF-8"?>
<query
    description="Searches for all customers explicitly assigned to a given TargetGroup or the related user groups.
        If the optional flag &quot;OnlyExplicitAssignemnts&quot; is set true, the query only returns customers directly 
        assigned to the TargetGroup (e.g. to a promotion itself). 
        If this flag is not set or false, the query also searchs recursively for all indirectly assigned customers. 
        i.e. All customers explicitly assigned to one of the usergroups that are assigned to the TargetGroup.">
    <parameters>
        <parameter name="TargetGroupID" type="java.lang.String" optional="false" />
        <parameter name="UserDomainID" type="java.lang.String" optional="true" />
        <parameter name="OnlyDirectAssignments" type="java.lang.Boolean" optional="true"
            description="If this optional flag is set true, the query only returns customers directly assigned to the 
            TargetGroup (e.g. to a promotion itself). 
            If this flag is not set or false, the query also searchs recursively for all indirectly assigned customers. 
            i.e. All customers explicitly assigned to one of the usergroups that are assigned to the TargetGroup." />
		<parameter name="SortBy" type="java.lang.String" optional="true"/>
		<parameter name="SortDirection" type="java.lang.String" optional="true"/>
    </parameters>
    <return-mappings>
        <return-mapping name="CustomerBOs" type="bo-orm"
            class="com.intershop.component.customer.orm.internal.orm.CustomerPO"
            mapperclass="CustomerPOToCustomerBOMapper">
            <return-attribute name="UUID" />
        </return-mapping>
    </return-mappings>
    <processor name="OracleSQL">
    </processor>
	
    <template type="countedobjects">
	<sql-dialect name="Microsoft">
	  ;with cte( childusergroupid,parentusergroupdomainid,parentusergroupid,childusergroupdomainid)  
   as 
   (
		SELECT ug2ug.childusergroupid, ug2ug.childusergroupdomainid,ug2ug.parentusergroupid,ug2ug.parentusergroupdomainid
		FROM usergroupassignment ug2ug where ug2ug.parentusergroupid = <template-variable value="TargetGroupID" />
		union all 

			SELECT  ug2ug.childusergroupid, ug2ug.childusergroupdomainid,ug2ug.parentusergroupid,ug2ug.parentusergroupdomainid from usergroupassignment ug2ug inner join cte ct on ug2ug.childusergroupid = ct.parentusergroupid
		AND  ug2ug.childusergroupdomainid = ct.parentusergroupdomainid
		
   
   )
   SELECT distinct c.uuid as UUID,
        	 <template-if condition="NOT isDefined(SortBy) OR SortBy EQ &apos;CreationDate&apos;">
				case when cp.creationdate is null then bp.creationdate else cp.creationdate end 
			 </template-if>		 	    
		     <template-if condition="SortBy EQ &apos;CustomerTypeID&apos;">
			    c.customertypeid
			 </template-if>   
		     <template-if condition="SortBy EQ &apos;Customer&apos;">
		       case when cp.uuid is null then bp.firstname else cp.companyname end
		     </template-if>    
		     <template-if condition="SortBy EQ &apos;CustomerNo&apos;">    
		       c.customerno
		     </template-if>
			 <template-if condition="SortBy EQ &apos;Status&apos;">
			    case when cp.uuid is null then bc.disabledflag else cp.disabledflag end 
			 </template-if>	 
			 <template-if condition="SortBy EQ &apos;CustomerApprovalStatus&apos;">    
		       c.approvalStatus
		     </template-if>	 
			 as SORTING,
             count((c.uuid)) over() as "rowcount"
        FROM customer c
        LEFT JOIN companyprofile cp ON c.uuid = cp.customerid
        LEFT JOIN customerprofileassignment cpa ON c.uuid = cpa.customerid
        JOIN basicprofile bp ON cpa.profileid = bp.uuid
        LEFT JOIN basiccredentials bc on bp.uuid = bc.basicprofileid
        JOIN usergroupuserassignment ug2u ON bp.uuid = ug2u.userid
        WHERE
          bp.typecode = 3
          <template-if condition="isDefined(UserDomainID)">
              AND bp.domainid = <template-variable value="UserDomainID" />
          </template-if>
          AND (
          		 <template-if condition="(NOT isDefined(OnlyDirectAssignments)) OR (NOT OnlyDirectAssignments)">
          		 	EXISTS (select 1 from cte ct WHERE ct.childusergroupid=ug2u.usergroupid and  ct.childusergroupdomainid=ug2u.usergroupdomainid)
          		 	OR 
                </template-if> 
				 ug2u.usergroupid = <template-variable value="TargetGroupID" />
           ) 
    	ORDER BY SORTING 
	    	<template-if condition="isDefined(SortDirection) AND SortDirection EQ &apos;descending&apos;"> 
		   		DESC 
			<if-else/>
		   		ASC 
			   </template-if>
	</sql-dialect>
		<sql-dialect name="Oracle">
		SELECT distinct c.uuid as UUID,
        	 <template-if condition="NOT isDefined(SortBy) OR SortBy EQ &apos;CreationDate&apos;">
				case when cp.creationdate is null then bp.creationdate else cp.creationdate end 
			 </template-if>		 	    
		     <template-if condition="SortBy EQ &apos;CustomerTypeID&apos;">
			    c.customertypeid
			 </template-if>   
		     <template-if condition="SortBy EQ &apos;Customer&apos;">
		       case when cp.uuid is null then bp.firstname else cp.companyname end
		     </template-if>    
		     <template-if condition="SortBy EQ &apos;CustomerNo&apos;">    
		       c.customerno
		     </template-if>
			 <template-if condition="SortBy EQ &apos;Status&apos;">
			    case when cp.uuid is null then bc.disabledflag else cp.disabledflag end 
			 </template-if>	 
			 <template-if condition="SortBy EQ &apos;CustomerApprovalStatus&apos;">    
		       c.approvalStatus
		     </template-if>	 
			 as SORTING,
             count(distinct (c.uuid)) over() as "rowcount"
        FROM customer c
        LEFT JOIN companyprofile cp ON c.uuid = cp.customerid
        LEFT JOIN customerprofileassignment cpa ON c.uuid = cpa.customerid
        JOIN basicprofile bp ON cpa.profileid = bp.uuid
        LEFT JOIN basiccredentials bc on bp.uuid = bc.basicprofileid
        JOIN usergroupuserassignment ug2u ON bp.uuid = ug2u.userid
        WHERE 
          bp.typecode = 3
          <template-if condition="isDefined(UserDomainID)">
              AND bp.domainid = <template-variable value="UserDomainID" />
          </template-if>
          AND (
                <template-if condition="(NOT isDefined(OnlyDirectAssignments)) OR (NOT OnlyDirectAssignments)">
                    (ug2u.usergroupid, ug2u.usergroupdomainid) IN 
                        (
                                SELECT ug2ug.childusergroupid, ug2ug.childusergroupdomainid
                                FROM usergroupassignment ug2ug
                                CONNECT BY 
                                            PRIOR ug2ug.childusergroupid = ug2ug.parentusergroupid
                                        AND PRIOR ug2ug.childusergroupdomainid = ug2ug.parentusergroupdomainid
                                START WITH ug2ug.parentusergroupid = <template-variable value="TargetGroupID" />
                        )
                OR 
                </template-if>
                    (ug2u.usergroupid = <template-variable value="TargetGroupID" />)
				)

		ORDER BY SORTING 
	    	<template-if condition="isDefined(SortDirection) AND SortDirection EQ &apos;descending&apos;"> 
		   		DESC NULLS LAST
			<if-else/>
		   		ASC NULLS FIRST 
				</template-if>
		</sql-dialect>
		
		
        
     
	</template>
</query>
