<?xml version="1.0" encoding="UTF-8"?>
<query>
<parameters>
    <parameter name="ProductDomain" type="com.intershop.beehive.core.capi.domain.Domain" optional="false"/>
    <parameter name="Currency" type="com.intershop.beehive.core.capi.currency.Currency" optional="false"/> 
    <parameter name="SearchCurrency" type="com.intershop.beehive.core.capi.currency.Currency" optional="false"/>
    <parameter name="LocaleInformation" type="com.intershop.beehive.core.capi.localization.LocaleInformation" optional="false"/>
    <parameter name="SearchExpression" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
    <parameter name="SortDirection" type="java.lang.String" optional="true"/>
    <parameter name="SortByProduct" type="java.lang.String" optional="true"/>
    <parameter name="SortByListPrice" type="java.lang.String" optional="true"/>
</parameters>
<return-mappings>
    <return-mapping name="count" type="rename">
        <return-attribute name="count"/>
    </return-mapping>
    <return-mapping name="Product" type="provider" class="ProductViewProvider">
        <return-attribute name="UUID"/>
        <return-attribute name="DOMAINID"/>
    </return-mapping>
</return-mappings>
<processor name="OracleSQL">
    <processor-preprocessing output="SearchExpressionc" input="SearchExpression" processing="SearchExpression2Contains"/>
</processor>
<template type="count">
    SELECT count(p.uuid) as count 
    FROM ( 
    <template-call name="product/GetProductsByAdvancedSearch">
        <call-parameter name="ProductDomain" value="ProductDomain"/>
        <call-parameter name="LocaleInformation" value="LocaleInformation"/>
        <call-parameter name="NameOrID" value="SearchExpression"/>
    </template-call>
    ) p,
    (
        <template-call name="price/GetListPricesByDomain">
            <call-parameter name="ProductDomain" value="ProductDomain"/>
        </template-call>
    ) searchpl
    WHERE  
        searchpl.CURRENCY = <template-variable value="SearchCurrency:Mnemonic"/> 
        AND searchpl.PRODUCTID = p.uuid
</template>
<template type="objects">
SELECT
    p.uuid AS UUID,
    <template-variable value="ProductDomain:UUID"/> AS DOMAINID,
    <template-if condition="isDefined(SortByListPrice)">
        pl.VALUE AS SORTING
    <if-else/>
        p.sorting AS SORTING
    </template-if>
FROM
    (
    <template-call name="product/GetProductsByAdvancedSearch">
        <call-parameter name="ProductDomain" value="ProductDomain"/>
        <call-parameter name="LocaleInformation" value="LocaleInformation"/>
        <call-parameter name="NameOrID" value="SearchExpression"/>
        <call-parameter name="SortAttribute" value="SortByProduct"/>
    </template-call>
    ) p,
    (
        <template-call name="price/GetListPricesByDomain">
            <call-parameter name="ProductDomain" value="ProductDomain"/>
        </template-call>
    ) searchpl
    <template-if condition="isDefined(SortByListPrice)">
        , 
        (
            <template-call name="price/GetListPricesByDomain">
                <call-parameter name="ProductDomain" value="ProductDomain"/>
            </template-call>
        ) pl
    </template-if>
	WHERE 
    searchpl.CURRENCY = <template-variable value="SearchCurrency:Mnemonic"/> 
    AND searchpl.PRODUCTID = p.uuid
    <template-if condition="isDefined(SortByListPrice)">
           AND (pl.CURRENCY = <template-variable value="Currency:Mnemonic"/>     OR pl.CURRENCY  IS NULL )
           AND (pl.PRODUCTID = p.uuid OR  pl.PRODUCTID IS NULL)
    </template-if>
  
    <template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ 'D'">
			
		
	<sql-dialect name="Oracle">
		ORDER BY SORTING  desc NULLS LAST
	</sql-dialect>
	<sql-dialect name="Microsoft">
	    ORDER BY SORTING DESC 
	</sql-dialect>		

    <if-else />
	<sql-dialect name="Microsoft">
		ORDER BY 
		<template-if condition="isDefined(SortByListPrice)">
			CASE WHEN pl.VALUE IS NULL THEN 0 ELSE 1 END DESC, pl.VALUE ASC
		<if-else/>
			CASE WHEN p.sorting IS NULL THEN 0 ELSE 1 END DESC, p.sorting ASC
		</template-if>
	</sql-dialect>
	<sql-dialect name="Oracle">
		ORDER BY SORTING   asc NULLS LAST
	</sql-dialect>
    </template-if>
</template>
</query>



