import "enfinity:/bc_marketing/edl/com/intershop/component/marketing/capi/promotion/evaluation/PromotionConditionEvaluator.edl";
import "enfinity:/bc_marketing/edl/com/intershop/component/marketing/capi/promotion/evaluation/PromotionEvaluationResult.edl";
import "enfinity:/bc_marketing/edl/com/intershop/component/marketing/capi/promotion/evaluation/PromotionEvaluationObjects.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

external Condition type "com.intershop.component.foundation.capi.condition.Condition";
external PromotionEvaluationContext type "com.intershop.component.marketing.capi.promotion.evaluation.PromotionEvaluationContext";

namespace com.intershop.component.marketing.capi.promotion.evaluation
{
	/*
	 * Interface defines a context for a promotion condition evaluation based on given filter id
	 *
	 */
	cartridge interface PromotionFilterConditionEvaluator extends PromotionConditionEvaluator 
	{
		/**
		 * Evaluation method
		 * 
		 * @param condition The condition to evaluate
		 * @param promotionEvaluationObjects Container
		 * @param iterationCount 
		 * @param context The Promotion Evaluation Context
		 * @param filterConditionID An optional filter condition ID if this condition is combined with a filter condition   
		 * @param filterConditionMandatory Flag if the optional filter condition ID is mandatory 
		 * @param effectDiscountLevel 
		 * @return PromotionEvaluationResult 
		 */
		operation evaluate(condition : Condition, promotionEvaluationObjects : PromotionEvaluationObjects, iterationCount : int, context : PromotionEvaluationContext, filterConditionID : string, filterConditionMandatory: boolean, effectDiscountLevel : boolean ) : PromotionEvaluationResult ;
	}
}
