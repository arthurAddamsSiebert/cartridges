import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

external PromotionConsumer type "com.intershop.component.marketing.capi.promotion.evaluation.PromotionConsumer";
external PromotionProduct type "com.intershop.component.marketing.capi.promotion.evaluation.PromotionProduct";
external PromotionLineItemContainer type "com.intershop.component.marketing.capi.promotion.evaluation.PromotionLineItemContainer";
external AbstractPromotionEvaluationObject type "com.intershop.component.marketing.capi.promotion.evaluation.AbstractPromotionEvaluationObject";

namespace com.intershop.component.marketing.capi.promotion.evaluation
{
	/**
	 * Class holds interface for all mapped objects. Only promotion evaluation 
	 * context based objects set. 
	 * 
	 * The AbstractPromotionEvaluationObject allows to store and access custom attributes.
	 * 
	 * @author Marko Langbein
	 */
	cartridge class PromotionEvaluationObjects extends AbstractPromotionEvaluationObject
	{
		/**
		 * EvaluationDate is used for all evaluator's which need date dependent evaluation.
		 */
		attribute evaluationDate : datetime;
		
	    /**
	     * PromotionConsumer is promotion mapping object for Consumer
	     */
	    attribute promotionConsumer : PromotionConsumer;    
	     
	    /**      
	     * PromotionProduct is promotion mapping object for Product
	     */
	    attribute promotionProduct : PromotionProduct;
	    
	    /**   
	     * whole promotion product, shipping, payment line items 
	     */
	    attribute promotionLineItemContainer : PromotionLineItemContainer;
	    
	    /**
	     * promotion product line items, which filtered from other condition  
	     */
	    attribute filteredPromotionLineItemContainer : PromotionLineItemContainer;
    
	}
}
