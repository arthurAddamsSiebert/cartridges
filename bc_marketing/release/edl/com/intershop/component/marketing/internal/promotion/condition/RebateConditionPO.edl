import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObjectPO.edl";

import "enfinity:/bc_marketing/edl/com/intershop/component/marketing/internal/rebate/RebateFilterGroupAssignmentPO.edl";
import "enfinity:/bc_marketing/edl/com/intershop/component/marketing/internal/rebate/RebatePO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObjectPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";
import "enfinity:/bc_foundation/edl/com/intershop/component/foundation/capi/condition/Condition.edl";


namespace com.intershop.component.marketing.internal.promotion.condition
{
	/*
	 * Stores a condition to trigger a promotion
	 */
	orm class RebateConditionPO extends ExtensibleObjectPO implements Condition
	{
		index(rebateID);
	
		index(parentConditionID, position);
		
		/*
		 * UUID of a rebate
		 */
		attribute rebateID : uuid;
		
		/**
		 * Position under an parent
		 */
		 attribute position : int;
		
		/*
		 * UUID of parent condition
		 */
		attribute parentConditionID : uuid;
		
		/*
		 * ID of condition descriptor
		 */
		attribute conditionDescriptorID : string<256> required;
		
		/*
		 * Name of the rebate condition
		 */
		attribute name : string<256>;
		
		/**
		 * Condition is an operator condition
		 */
		attribute typeCode : int;
		
		/**
		 * Inverse condition
		 */
		 attribute not : boolean;
		
		/*
		 * Relation to rebate
		 */
		relation rebatePO : RebatePO[0..1] inverse rebateConditionPO implements owner
		{ 
		
			foreign key(rebateID) -> (UUID);
		}
		
		/*
		 * Relation to parent condition
		 */
 		relation parentConditionPO : RebateConditionPO[0..1] inverse subConditionPOs implements parentCondition
        {
            foreign key(parentConditionID) -> (UUID);
        }		
        
        /*
         * Relation to sub conditions
         */
		relation subConditionPOs : RebateConditionPO[0..n] inverse parentConditionPO implements subConditions cached strong delete propagate;
		        
		/*
		 * Relation to condition filter group assignments
		 */
		relation conditionFilterGroupAssignmentPOs : RebateFilterGroupAssignmentPO[0..n] inverse conditionPO;
	}
}
