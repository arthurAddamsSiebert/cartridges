/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-14 11:34:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fbo_005fch_005fsales_005fb2b.default_;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;
import com.intershop.component.customer.capi.CustomerBOCustomerApprovalExtension;
import java.util.Iterator;
import com.intershop.component.customer.capi.CustomerBO;
import com.intershop.component.customer.capi.CustomerBOCompanyCustomerExtension;
import com.intershop.component.customer.capi.CustomerBOGroupCustomerExtension;
import com.intershop.component.customer.capi.CustomerBOPrivateCustomerExtension;
import com.intershop.component.user.capi.UserBO;
import com.intershop.beehive.core.capi.impex.AttributeValueIterator;
import com.intershop.beehive.core.capi.profile.Profile;
import com.intershop.beehive.core.capi.profile.ProfileMgr;
import com.intershop.beehive.core.capi.domain.PersistentObjectBOExtension;
import com.intershop.component.customer.orm.internal.orm.CustomerPO;
import com.intershop.component.customer.orm.internal.orm.CustomerBasicProfileAssignmentPO;
import com.intershop.component.customer.orm.internal.ProfileFilter;
import com.intershop.beehive.orm.capi.common.ORMHelper;
import com.intershop.beehive.foundation.util.FilterIterator;
import com.intershop.beehive.core.capi.paging.PageableIterator;
import com.intershop.beehive.core.capi.query.Row;

public final class CustomerExport_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

 protected Boolean printTemplateMarker() { return Boolean.FALSE; } 
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/xml;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
      out.write('\n');
 


setEncodingType("text/xml"); 
      out.write("\n\n\n\n");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((Boolean) (disableErrorMessages().isDefined(getObject("MultiThreadingEnabled")))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue() || ((Boolean) ((((Boolean) getObject("MultiThreadingEnabled")).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",22,e);}if (_boolean_result) { 
      out.write('\n');
      out.write('	');
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"CustomerExportHeader", null, "23");} 
      out.write('\n');
 } 
      out.write('\n');
      out.write('\n');
      out.write('	');
 context.setCustomTagTemplateName("user","inc/FNDUser",false,new String[]{"user"},null); 
      out.write('\n');
      out.write('	');
 context.setCustomTagTemplateName("addresses","inc/CustomerAddresses",false,new String[]{"customerprofile"},null); 
      out.write('\n');
      out.write('	');
 context.setCustomTagTemplateName("customattributes","inc/CustomAttributes",false,new String[]{"attributes"},null); 
      out.write('\n');
      out.write('	');
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("Objects"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",29,e);}if (_boolean_result) { 
      out.write('\n');
      out.write('	');
      out.write('	');

			ProfileMgr profileMgr = (ProfileMgr) NamingMgr.getInstance().lookupManager(ProfileMgr.REGISTRY_NAME);
			Iterator objects = (Iterator)getObject("Objects");
			
			if (objects instanceof PageableIterator)
			{
			    objects = ((PageableIterator) objects).toSequence();
			}

			while(objects.hasNext())
			{
			    Object object = objects.next();
			    CustomerBO customerBO;
			    if (object instanceof Row)
			    {
			        Row row = (Row)object;
			        customerBO = (CustomerBO)row.get("CustomerBO");
			    }
			    else
			    {
			        customerBO = (CustomerBO)object;
			    }

			    if (null != customerBO)
				{
			        CustomerBOCompanyCustomerExtension companyCustomerExtension = customerBO.getExtension("CompanyCustomer");
				    if (null != companyCustomerExtension)
				    {
				    	getPipelineDictionary().put("CompanyCustomerExtension", companyCustomerExtension);
				    }
				    
				    CustomerBOCustomerApprovalExtension customerApprovalExtension = customerBO.getExtension("CustomerApproval");
				    if (null != customerApprovalExtension)
				    {
				        getPipelineDictionary().put("CustomerApprovalExtension", customerApprovalExtension);
				    }
				    
			        getPipelineDictionary().put("CustomerBO", customerBO);
			        PersistentObjectBOExtension ex = customerBO.getExtension(PersistentObjectBOExtension.class);
					CustomerPO customerPO = (CustomerPO)ex.getPersistentObject();
					if (null != customerPO)
					{
						getPipelineDictionary().put("CustomerCustomAttributes", new AttributeValueIterator(customerPO.createAttributeValuesIterator(), customerPO));
      out.write("\n\n\t\t\t\t\t    <customer id=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CustomerBO:CustomerNo"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {74}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n\t\t\t\t\t    \t<customer-type>");
 {String value = null;try{value=context.getFormattedValue(getObject("CustomerBO:CustomerType:CustomerTypeID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {75}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</customer-type>\n\t\t\t\t\t    \t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("CompanyCustomerExtension"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",76,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("CompanyCustomerExtension:CompanyName"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",77,e);}if (_boolean_result) { 
      out.write("<company-name>");
 {String value = null;try{value=context.getFormattedValue(getObject("CompanyCustomerExtension:CompanyName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {77}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</company-name>");
 } 
      out.write("\n\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("CompanyCustomerExtension:CompanyName2"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",78,e);}if (_boolean_result) { 
      out.write("<company-name2>");
 {String value = null;try{value=context.getFormattedValue(getObject("CompanyCustomerExtension:CompanyName2"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {78}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</company-name2>");
 } 
      out.write("\n\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("CompanyCustomerExtension:Description"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",79,e);}if (_boolean_result) { 
      out.write("<description>");
 {String value = null;try{value=context.getFormattedValue(getObject("CompanyCustomerExtension:Description"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {79}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</description>");
 } 
      out.write("\n\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("CompanyCustomerExtension:TaxationID"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",80,e);}if (_boolean_result) { 
      out.write("<taxation-id>");
 {String value = null;try{value=context.getFormattedValue(getObject("CompanyCustomerExtension:TaxationID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {80}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</taxation-id>");
 } 
      out.write("\n\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("CompanyCustomerExtension:Industry"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",81,e);}if (_boolean_result) { 
      out.write("<industry>");
 {String value = null;try{value=context.getFormattedValue(getObject("CompanyCustomerExtension:Industry"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {81}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</industry>");
 } 
      out.write("\n\t\t\t\t\t\t\t\t<enabled>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("CompanyCustomerExtension:Active"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",82,e);}if (_boolean_result) { 
      out.write('1');
 } else { 
      out.write('0');
 } 
      out.write("</enabled>\n\t\t\t\t\t    \t");
 } 
      out.write("\n\t\t\t\t\t    \t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("CustomerApprovalExtension"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",84,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("CustomerApprovalExtension:Rejected"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",85,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t\t<approval-status>2</approval-status>\n\t\t\t\t\t\t\t\t");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(getObject("CustomerApprovalExtension:Approved"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",87,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t\t<approval-status>1</approval-status>\n\t\t\t\t\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t\t\t\t<approval-status>0</approval-status>\n\t\t\t\t\t\t\t\t");
 }} 
      out.write("\n\t\t\t\t\t    \t");
 } 
      out.write("\n\t\t\t\t\t    \t");
 processOpenTag(response, pageContext, "customattributes", new TagParameter[] {
new TagParameter("attributes",getObject("CustomerCustomAttributes"))}, 93); 
      out.write("\n\t\t\t\t\t    \t<users>");

					    		CustomerBOGroupCustomerExtension groupCustomerExtension = customerBO.getExtension("GroupCustomer");
					    		if (null == groupCustomerExtension)
							    {
						    	    CustomerBOPrivateCustomerExtension privateCustomerExtension = customerBO.getExtension("PrivateCustomer");
						    	    if (null != privateCustomerExtension)
						    	    {
						    	        UserBO customerUser = privateCustomerExtension.getUserBO();
						    	        Profile customerUserProfile = profileMgr.resolveProfileFromID(customerUser.getID());
						    	    	getPipelineDictionary().put("CustomerUserProfile", customerUserProfile);
						    	    	
 processOpenTag(response, pageContext, "user", new TagParameter[] {
new TagParameter("user",getObject("CustomerUserProfile"))}, 104); 

						    	    }
							    }
						    	else
						    	{
									Iterator<CustomerBasicProfileAssignmentPO> assignments = new FilterIterator<CustomerBasicProfileAssignmentPO>(
							                        customerPO.createCustomerBasicProfileAssignmentsIterator(),
							                        ProfileFilter.CUSTOMER.getCondition());
									Profile customerProfile = assignments.next().getProfile();
							        ORMHelper.closeIterator(assignments);
							        getPipelineDictionary().put("CustomerProfile", customerProfile);
									
 processOpenTag(response, pageContext, "addresses", new TagParameter[] {
new TagParameter("customerprofile",getObject("CustomerProfile"))}, 115); 

									Collection<UserBO> users = groupCustomerExtension.getAllUserBOs();
								    for(UserBO customerUser : users)
								    {
								        Profile customerUserProfile = profileMgr.resolveProfileFromID(customerUser.getID());
								        getPipelineDictionary().put("CustomerUserProfile", customerUserProfile);
								        
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("CompanyCustomerExtension"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",121,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t        \t");
 processOpenTag(response, pageContext, "user", new TagParameter[] {
new TagParameter("user",getObject("CustomerUserProfile"))}, 122); 
      out.write("\n\t\t\t\t\t\t\t\t        ");
 } else { 
      out.write("\n\t\t\t\t\t\t\t\t        \t");
 processOpenTag(response, pageContext, "user", new TagParameter[] {
new TagParameter("user",getObject("CustomerUserProfile")),
new TagParameter("exportaddresses","false")}, 124); 
      out.write("\n\t\t\t\t\t\t\t\t        ");
 } 

								    }
								}
      out.write("\n\t\t\t\t\t\t\t</users>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("CustomerBO:PreferredInvoiceToAddressBO"),null).equals(context.getFormattedValue(getObject("null"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",131,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t");
 {Object temp_obj = (getObject("CustomerBO:PreferredInvoiceToAddressBO")); getPipelineDictionary().put("addressBO", temp_obj);} 
      out.write("\t\t\t\t\n\t\t\t\t\t\t\t\t");
 {Object temp_obj = (getObject("addressBO:Extension(\"PersistentObjectBOExtension\"):PersistentObject")); getPipelineDictionary().put("address", temp_obj);} 
      out.write("\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<preferred-invoice-to-address name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("address:AddressName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {134}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n\t\t\t\t\t\t\t\t\t");
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"export/AddressDataExport", null, "135");} 
      out.write("\n\t\t\t\t\t\t\t\t</preferred-invoice-to-address>\n\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("CustomerBO:PreferredShipToAddressBO"),null).equals(context.getFormattedValue(getObject("null"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",139,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t");
 {Object temp_obj = (getObject("CustomerBO:PreferredShipToAddressBO")); getPipelineDictionary().put("addressBO", temp_obj);} 
      out.write("\t\t\t\t\n\t\t\t\t\t\t\t\t");
 {Object temp_obj = (getObject("addressBO:Extension(\"PersistentObjectBOExtension\"):PersistentObject")); getPipelineDictionary().put("address", temp_obj);} 
      out.write("\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<preferred-ship-to-address name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("address:AddressName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {142}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n\t\t\t\t\t\t\t\t\t");
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"export/AddressDataExport", null, "143");} 
      out.write("\n\t\t\t\t\t\t\t\t</preferred-ship-to-address>\n\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("CustomerBO:AddressBOs") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",149,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t<addresses>\t \n\t\t\t\t\t\t\t\t \t");
 while (loop("CustomerBO:AddressBOs","addressBO",null)) { 
      out.write("\n\t\t\t\t\t\t\t\t\t \t");
 {Object temp_obj = (getObject("addressBO:Extension(\"PersistentObjectBOExtension\"):PersistentObject")); getPipelineDictionary().put("address", temp_obj);} 
      out.write("\n\t\t\t\t\t\t\t\t         <address name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("address:AddressName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {153}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n\t\t\t\t\t\t\t\t\t     \t");
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"export/AddressDataExport", null, "154");} 
      out.write("\n\t\t\t\t\t\t\t\t\t     </address>\n\t\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t\t</addresses>\t \n\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t");
 {Object temp_obj = (getObject("CustomerBO:Extension(\"AccountManagers\"):AccountManagerBOs")); getPipelineDictionary().put("AccountManagerBOs", temp_obj);} 
      out.write("\n\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("AccountManagerBOs") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",162,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t<account-managers>\n\t\t\t\t\t\t\t\t\t");
 while (loop("AccountManagerBOs","AccountManager",null)) { 
      out.write("\n\t\t\t\t\t\t\t\t\t\t<account-manager id=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("AccountManager:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {165}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n\t\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t\t</account-managers>\n\t\t\t\t\t\t\t");
 } 
      out.write("\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t");
 {Object temp_obj = (getObject("CustomerBO:Extension(\"CostObjectType\"):CostObjectTypeBOs")); getPipelineDictionary().put("CostObjectTypeBOs", temp_obj);} 
      out.write("\n\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("CostObjectTypeBOs") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",172,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t");
 {Object temp_obj = (getObject("CurrentAppContext:Variable(\"CurrentApplicationBO\"):Locales")); getPipelineDictionary().put("Locales", temp_obj);} 
      out.write("\n\t\t\t\t\t\t\t\t<cost-object-types>\n\t\t\t\t\t\t\t\t\t");
 while (loop("CostObjectTypeBOs","CostObjectTypeBO",null)) { 
      out.write("\n\t\t\t\t\t\t\t\t\t\t<cost-object-type name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CostObjectTypeBO:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {176}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n\t\t\t\t\t\t\t\t\t\t");
 while (loop("Locales","Locale",null)) { 
      out.write("\n\t\t\t\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("CostObjectTypeBO:DisplayName(Locale)"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",178,e);}if (_boolean_result) { 
      out.write("<display-name xml:lang=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Locale:XMLLocaleID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {178}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {String value = null;try{value=context.getFormattedValue(getObject("CostObjectTypeBO:DisplayName(Locale)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {178}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</display-name>");
 } 
      out.write("\n\t\t\t\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("CostObjectTypeBO:Description(Locale)"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",179,e);}if (_boolean_result) { 
      out.write("<description xml:lang=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Locale:XMLLocaleID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {179}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {String value = null;try{value=context.getFormattedValue(getObject("CostObjectTypeBO:Description(Locale)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {179}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</description>");
 } 
      out.write("\n\t\t\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t\t\t\t</cost-object-type>\n\t\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t\t</cost-object-types>\n\t\t\t\t\t\t\t");
 } 
      out.write("\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t");
 {Object temp_obj = (getObject("CustomerBO:Extension(\"CostCenter\"):CostCenterBOs")); getPipelineDictionary().put("CostCenterBOs", temp_obj);} 
      out.write("\n\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("CostCenterBOs") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",188,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t<cost-centers>\n\t\t\t\t\t\t\t\t\t");
 while (loop("CostCenterBOs","CostCenterBO",null)) { 
      out.write("\n\t\t\t\t\t\t\t\t\t\t<cost-center id=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CostCenterBO:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {191}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CostCenterBO:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {191}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" active=\"");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("CostCenterBO:Active"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",191,e);}if (_boolean_result) { 
      out.write('1');
 } else { 
      out.write('0');
 } 
      out.write("\">\n\t\t\t\t\t\t\t\t\t\t\t<budget period=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CostCenterBO:BudgetPeriod"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {192}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" value=\"");
 processOpenTag(response, pageContext, "money", new TagParameter[] {
new TagParameter("money",getObject("CostCenterBO:Budget"))}, 192); 
      out.write("\"/>\n\t\t\t\t\t\t\t\t\t\t\t<owner login=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CostCenterBO:Owner:Login"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {193}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n\t\t\t\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("CostCenterBO:Buyers") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",194,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t\t\t\t\t<buyers>\n\t\t\t\t\t\t\t\t\t\t\t\t");
 while (loop("CostCenterBO:Buyers","Buyer",null)) { 
      out.write("\n\t\t\t\t\t\t\t\t\t\t\t\t\t");
 {Object temp_obj = (getObject("Buyer:Extension(\"UserBOCostCenterBudgetExtension\")")); getPipelineDictionary().put("BuyerCostCenterBudgetExtension", temp_obj);} 
      out.write("\n\t\t\t\t\t\t\t\t\t\t\t\t\t<buyer login=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Buyer:Login"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {198}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("BuyerCostCenterBudgetExtension"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",199,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<budget period=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("BuyerCostCenterBudgetExtension:BudgetPeriod(CostCenterBO:ID)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {200}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" value=\"");
 processOpenTag(response, pageContext, "money", new TagParameter[] {
new TagParameter("money",getObject("BuyerCostCenterBudgetExtension:Budget(CostCenterBO:ID)"))}, 200); 
      out.write("\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t\t\t\t\t\t\t</buyer>\n\t\t\t\t\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t\t\t\t\t\t</buyers>\n\t\t\t\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t\t\t\t</cost-center>\n\t\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t\t</cost-centers>\n\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t</customer>");


						getPipelineDictionary().remove("BuyerCostCenterBudgetExtension");
						getPipelineDictionary().remove("CompanyCustomerExtension");
						getPipelineDictionary().remove("CustomerCustomAttributes");
						getPipelineDictionary().remove("CustomerProfile");
						getPipelineDictionary().remove("CustomerUserProfile");
					}
				}
			}
		
      out.write('\n');
      out.write('	');
 } 
      out.write('\n');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((Boolean) (disableErrorMessages().isDefined(getObject("MultiThreadingEnabled")))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue() || ((Boolean) ((((Boolean) getObject("MultiThreadingEnabled")).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",222,e);}if (_boolean_result) { 
      out.write('\n');
      out.write('	');
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"DefaultExportFooter", null, "223");} 
      out.write('\n');
 } 
      out.write('\n');
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
