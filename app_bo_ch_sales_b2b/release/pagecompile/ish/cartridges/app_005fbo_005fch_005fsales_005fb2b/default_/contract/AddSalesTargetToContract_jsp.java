/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-14 11:34:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fbo_005fch_005fsales_005fb2b.default_.contract;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class AddSalesTargetToContract_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
      out.write("<style>\n\t.tooltip {\n\t\tdisplay:none;\n\t\tposition:absolute;\n\t\tborder:1px solid #333;\n\t\tbackground-color:#161616;\n\t\tborder-radius:5px;\n\t\tpadding:10px;\n\t\tcolor:#fff;\n\t\tfont-size:12px Arial;\n\t}\n</style>\n<script type=\"text/javascript\">\n\t$(document).ready(function() {\n\t\t// Tooltip only Text\n\t\t$('.masterTooltip').hover(function(){\n\t\t        // Hover over code\n\t\t        var title = $(this).attr('title');\n\t\t        $(this).data('tipText', title).removeAttr('title');\n\t\t        $('<p class=\"tooltip\"></p>')\n\t\t        .text(title)\n\t\t        .appendTo('body')\n\t\t        .fadeIn('slow');\n\t\t}, function() {\n\t\t        // Hover out code\n\t\t        $(this).attr('title', $(this).data('tipText'));\n\t\t        $('.tooltip').remove();\n\t\t}).mousemove(function(e) {\n\t\t        var mousex = e.pageX + 20; //Get X coordinates\n\t\t        var mousey = e.pageY + 10; //Get Y coordinates\n\t\t        $('.tooltip')\n\t\t        .css({ top: mousey, left: mousex })\n\t\t});\n\t});\n</script>\n\n\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"w e\">\n");
      out.write("\t");
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"contract/SalesTargetPriceListValidation", null, "40");} 
      out.write("\t\n\t\t\n\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("AddSalesTargetToContractForm:Submitted")).booleanValue() && ((Boolean) getObject("AddSalesTargetToContractForm:Invalid")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",42,e);}if (_boolean_result) { 
      out.write("\n\t\t<tr>\n\t\t\t<td colspan=\"9\">\n\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"4\" width=\"100%\" class=\"error_box s\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td class=\"error_icon e top\" width=\"1%\">\n\t\t\t\t\t\t\t\t<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/error.gif\" width=\"16\" height=\"15\" alt=\"\" border=\"0\"/>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class=\"error top\">\n\t\t\t\t\t\t\t\t");
 {out.write(localizeISText("contract.form.edit.message.general","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\n\t\t\t\t\t\t\t\t");
 while (loop("AddSalesTargetToContractForm:InvalidParameters","InvalidParameter",null)) { 
      out.write("\n\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t");
 while (loop("InvalidParameter:Errors","Error",null)) { 
      out.write("\n\t\t\t\t\t\t\t\t\t\t");
 {out.write(localizeISText(context.getFormattedValue(context.getFormattedValue("contract.configuration.addsalestarget.form.fields.",null) + context.getFormattedValue(getObject("InvalidParameter:ID"),null) + context.getFormattedValue(".",null) + context.getFormattedValue(getObject("Error"),null),null),"",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\n\t\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t");
 } 
      out.write("\n\t\n</table>\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"w e\">\n\t<tr>\n\t\t<td class=\"table_title_description s\" colspan=\"9\">\n\t\t\t");
 {out.write(localizeISText("contract.configuration.description",null,null,"star",null,null,null,null,null,null,null,null,null));} 
      out.write("<br /><br/>\n\t\t\t");
 {out.write(localizeISText("customer.FieldsWithARedAsteriskAreMandatory.table_title_description",null,null,"star",null,null,null,null,null,null,null,null,null));} 
      out.write("\n\t\t</td>\n\t</tr>\n</table>\n\n");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (hasLoopElements("PriceLists") ? Boolean.TRUE : Boolean.FALSE)).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",78,e);}if (_boolean_result) { 
      out.write("\n\t<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"w e\">\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"100%\">\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td class=\"table_detail s\" colspan=\"2\">\n\t\t\t\t\t\t\t\t");
 {out.write(localizeISText("contract.configuration.pricelists.notdefined.message","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n");
 } else { 
      out.write('\n');
      out.write('\n');
      out.write('	');
 URLPipelineAction action9 = new URLPipelineAction(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewContractConfiguration-Dispatch",null)))),null));String site9 = null;String serverGroup9 = null;String actionValue9 = context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewContractConfiguration-Dispatch",null)))),null);if (site9 == null){  site9 = action9.getDomain();  if (site9 == null)  {      site9 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getDomainName();  }}if (serverGroup9 == null){  serverGroup9 = action9.getServerGroup();  if (serverGroup9 == null)  {      serverGroup9 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getServerGroup();  }}out.print("<form");out.print(" method=\"");out.print("post");out.print("\"");out.print(" action=\"");out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewContractConfiguration-Dispatch",null)))),null));out.print("\"");out.print(" name=\"");out.print("AddSalesTargetToContract");out.print("\"");out.print(">");out.print(context.prepareWACSRFTag(actionValue9, site9, serverGroup9,true)); 
      out.write("\n\t\t<input type=\"hidden\" name=\"ContractID\" value=\"");
      out.print(context.getFormattedValue(getObject("Contract:ID"),null));
      out.write("\" />\n\t\t<input type=\"hidden\" name=\"LocaleId\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Locale:LocaleID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {96}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n\t\t\n\t\t<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"w e\">\n\t\t\t\n\t\t\t<input type=\"hidden\" name=\"AddSalesTargetToContract_Name\" \n\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("AddSalesTargetToContractForm:isSubmitted"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",101,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\tvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("AddSalesTargetToContractForm:Name:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {102}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\tvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Contract:Name(Locale)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {104}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("-SalesTarget\"\n\t\t\t\t");
 } 
      out.write("\t/>\n\t\t\t \n\t\t\t<input type=\"hidden\" name=\"AddSalesTargetToContract_Comment\" \n\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("AddSalesTargetToContractForm:isSubmitted"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",108,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\tvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("AddSalesTargetToContractForm:Comment:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {109}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\tvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Contract:Description(Locale)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {111}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("-SalesTarget\"\n\t\t\t\t");
 } 
      out.write("\t/>\n\t\t\t<tr><td colspan=\"2\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"1\" height=\"4\" alt=\"\" border=\"0\"/></td></tr>\n\t\t\t \n\t\t\t<tr>\n\t\t\t\t<td nowrap=\"nowrap\" class=\"label\"><label class=\"label");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("AddSalesTargetToContractForm:Revenue:Invalid"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",116,e);}if (_boolean_result) { 
      out.write(" label_error");
 } 
      out.write("\" for=\"AddSalesTargetToContract_Revenue\">\n\t\t\t\t\t");
 {out.write(localizeISText("contract.form.targetrevenue.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":<span class=\"star\">*</span></label>\n\t\t\t\t</td>\n\t\t\t\t<td nowrap=\"nowrap\" class=\"table_detail\">\n\t\t\t\t\t<input type=\"text\" name=\"AddSalesTargetToContract_Revenue\" id=\"AddSalesTargetToContract_Revenue\" class=\"inputfield_en\" size=\"30\"\n\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("AddSalesTargetToContractForm:isSubmitted"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",121,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\tvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("AddSalesTargetToContractForm:Revenue:Value"),"#,##0.00",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {122}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t\tvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Contract:SalesTarget:TargetAmount"),"#,##0.00",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {124}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t");
 } 
      out.write("\t/>\n\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("Contract:SalesTarget"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",126,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t");
 {Object temp_obj = (getObject("Contract:SalesTarget:Target:CurrencyMnemonic")); getPipelineDictionary().put("RevenueUnit", temp_obj);} 
      out.write("\n\t\t\t\t\t\t\n\t\t\t\t\t");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("Locale"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",129,e);}if (_boolean_result) { 
      out.write(" \n\t\t\t\t\t\t");
 {Object temp_obj = (getObject("Locale:CurrencyCode")); getPipelineDictionary().put("RevenueUnit", temp_obj);} 
      out.write(" \n\t\t\t\t\t");
 } else { 
      out.write(" \n\t\t\t\t\t\t\n\t\t\t\t\t\t");
 {Object temp_obj = (getObject("CurrentRequest:Locale:CurrencyCode")); getPipelineDictionary().put("RevenueUnit", temp_obj);} 
      out.write("\n\t\t\t\t\t");
 }} 
      out.write("\n\t\t\t\t\t<input type=\"hidden\" name=\"AddSalesTargetToContract_RevenueUnit\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("RevenueUnit"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {135}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n\t\t\t\t\t");
 {String value = null;try{value=context.getFormattedValue(getObject("RevenueUnit"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {136}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t  \n\t\t\t<tr>\n\t\t\t\t<td nowrap=\"nowrap\" class=\"label\"><label class=\"label\" for=\"AddSalesTargetToContract_PriceList\">\n\t\t\t\t\t");
 {out.write(localizeISText("contract.form.pricelist.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":<span class=\"star\">*</span></label>\n\t\t\t\t</td>\n\t\t\t\t<td class=\"table_detail\" nowrap=\"nowrap\">\n\t\t\t\t\t<select name=\"AddSalesTargetToContract_PriceListID\" id=\"AddSalesTargetToContract_PriceListID\" class=\"select inputfield_en\" size=\"1\">\n\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("Contract:SalesTarget")))).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("Contract:SalesTarget:PriceListBO")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",146,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t<option value=\"\">Please select</option>\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t");
 while (loop("PriceLists","PriceListsItem",null)) { 
      out.write("\n\t\t\t\t\t\t\t<option value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("PriceListsItem:UUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {150}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" class=\"masterTooltip\" title=\"");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((Boolean) (disableErrorMessages().isDefined(getObject("PriceListsItem:getDescription(CurrentSession:Locale)")))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("PriceListsItem:getDescription(CurrentSession:Locale)"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",150,e);}if (_boolean_result) { 
 {out.write(localizeISText("contract.configuration.tooltip.nodescriptionavailable","",null,null,null,null,null,null,null,null,null,null,null));} 
 } else { 
 {String value = null;try{value=context.getFormattedValue(getObject("PriceListsItem:getDescription(CurrentSession:Locale)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {150}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } 
      out.write("\"\n\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("AddSalesTargetToContractForm")))).booleanValue() && ((Boolean) getObject("AddSalesTargetToContractForm:isSubmitted")).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("PriceListsItem:UUID"),null).equals(context.getFormattedValue(getObject("AddSalesTargetToContractForm:PriceListID:Value"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((!((Boolean) (disableErrorMessages().isDefined(getObject("AddSalesTargetToContractForm")))).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("Contract:SalesTarget")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("PriceListsItem:UUID"),null).equals(context.getFormattedValue(getObject("Contract:SalesTarget:PriceListBO:Extension(\"PersistentObjectBOExtension\"):PersistentObject:UUID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",151,e);}if (_boolean_result) { 
      out.write(" selected=\"selected\"");
 } 
      out.write("\n\t\t\t\t\t\t\t>");
 {String value = null;try{value=context.getFormattedValue(getObject("PriceListsItem:getDisplayName(CurrentSession:Locale)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {154}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</option>\n\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t</select>\n\t\t\t\t</td>\n\t\t\t\t<td width=\"100%\" colspan=\"3\">&nbsp;</td>\n\t\t\t</tr>\n\t\t\t<tr><td colspan=\"2\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"1\" height=\"4\" alt=\"\" border=\"0\"/></td></tr>\n\t\t</table>\n\t\n\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"100%\" class=\"w e n\">\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"s\" colspan=\"2\" align=\"right\">\n\t\t\t\t\t\t<table border=\"0\" cellspacing=\"4\" cellpadding=\"0\">\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td class=\"button\">\n\t\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"apply\" value=\"");
 {out.write(localizeISText("contract.form.new.buttons.create","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" class=\"button\"/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t");
 out.print("</form>"); 
      out.write('\n');
 } 
      out.write('\n');
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
