/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-14 11:34:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fbo_005fch_005fsales_005fb2b.default_.quote;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class QuoteListSearch_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
      out.write("<tr>\n<td>\n<table border=\"0\" cellpadding=\"5\" cellspacing=\"0\" class=\"infobox w100 w e\">\n<tr>\n<td class=\"infobox_title\" nowrap=\"nowrap\" colspan=\"4\">");
 {out.write(localizeISText("quote.QuoteListSearch.infobox_title.find.quotes",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>\n</table>\n</td>\n</tr>");
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"quote/QuoteSimpleSearchMask", null, "12");} 
      out.write("<tr>\n<td>\n<table class=\"infobox searchbox w100 w e s\" border=\"0\" cellpadding=\"5\" cellspacing=\"0\" name=\"quote_status_values\" id=\"quote_status_values\">\n<tr>\n<td class=\"infobox_subtitle\" align=\"left\" nowrap=\"nowrap\">");
 {out.write(localizeISText("quote.QuoteListSearch.infobox_subtitle.quote.status",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>\n<tr>\n<td class=\"infobox_item infobox_item_first\" >\n<a href=\"");
      out.print(context.getFormattedValue("#",null));
      out.write("\" class=\"tableheader\" onclick=\"$('");
      out.print(context.getFormattedValue("#",null));
      out.write("quote_status_values input[type=checkbox]').attr('checked','checked').trigger('change'); return false;\">");
 {out.write(localizeISText("quote.QuoteListSearch.link.select.all",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a>\n&nbsp;|&nbsp;\n<a href=\"");
      out.print(context.getFormattedValue("#",null));
      out.write("\" class=\"tableheader\" onclick=\"$('");
      out.print(context.getFormattedValue("#",null));
      out.write("quote_status_values input[type=checkbox]').removeAttr('checked','unchecked').trigger('change'); return false;\">");
 {out.write(localizeISText("quote.QuoteListSearch.link.unselect.all",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a>\n</td>\n</tr>\n<tr>\n<td align=\"left\" width=\"100%\">\n<table>\n<tr>\n<td align=\"left\" class=\"input_checkbox label_indent\">\n<input type=\"checkbox\" name=\"QuoteState\"");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("QuoteStates") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",32,e);}if (_boolean_result) { 
 while (loop("QuoteStates","quoteState",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue("3",null).equals(context.getFormattedValue(getObject("quoteState"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",32,e);}if (_boolean_result) { 
      out.write(" checked=\"checked\"");
 if (getLoopStack().isEmpty()) {Logger.error(this,"ISBREAK occured outside ISLOOP. Line: {}",32);}else{getLoopStack().pop();break;} 
 } 
 } 
 } 
      out.write(" value=\"3\"> \n</td>\n<td class=\"label\">\n<label class=\"label label_light label_checkbox_text\"> ");
 {out.write(localizeISText("quote.QuoteListSearch.New","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(" </label>\n</td>\n<td>\n<input type=\"checkbox\" name=\"QuoteState\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("QuoteStates") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",38,e);}if (_boolean_result) { 
 while (loop("QuoteStates","quoteState",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue("4",null).equals(context.getFormattedValue(getObject("quoteState"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",38,e);}if (_boolean_result) { 
      out.write(" checked=\"checked\"");
 if (getLoopStack().isEmpty()) {Logger.error(this,"ISBREAK occured outside ISLOOP. Line: {}",38);}else{getLoopStack().pop();break;} 
 } 
 } 
 } 
      out.write(" value=\"4\"> \n</td>\n<td class=label>\n<label class=\"label label_light label_checkbox_text\"> ");
 {out.write(localizeISText("quote.QuoteListSearch.Submitted","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(" </label>\n</td>\n<td>\n<input type=\"checkbox\" name=\"QuoteState\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("QuoteStates") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",45,e);}if (_boolean_result) { 
 while (loop("QuoteStates","quoteState",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue("9",null).equals(context.getFormattedValue(getObject("quoteState"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",45,e);}if (_boolean_result) { 
      out.write(" checked=\"checked\"");
 if (getLoopStack().isEmpty()) {Logger.error(this,"ISBREAK occured outside ISLOOP. Line: {}",45);}else{getLoopStack().pop();break;} 
 } 
 } 
 } 
      out.write(" value=\"9\">\n</td>\n<td class=\"label\">\n<label class=\"label label_light label_checkbox_text\"> ");
 {out.write(localizeISText("quote.QuoteListSearch.Rejected","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(" </label>\n</td> \n</tr>\n</table>\n<input type=\"hidden\" value=\"false\" name=\"initialVisit\" />\n</td>\n<td align=\"right\" valign=\"bottom\" colspan=\"3\">\n<table border=\"0\" cellspacing=\"4\" cellpadding=\"0\">\n<tr>\n<td class=\"button\"> \n<input type=\"submit\" name=\"find\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("quote.QuoteListSearch.button.find",null)),null));
      out.write("\" class=\"button\"/>\n</td>\n</tr>\n</table>\n</td>\n</tr>\n</table>\n</td>\n</tr>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
