<%@  page buffer="none" import="java.util.*,java.io.*,com.intershop.beehive.core.internal.template.*,com.intershop.beehive.core.internal.template.isml.*,com.intershop.beehive.core.capi.log.*,com.intershop.beehive.core.capi.resource.*,com.intershop.beehive.core.capi.util.UUIDMgr,com.intershop.beehive.core.capi.util.XMLHelper,com.intershop.beehive.foundation.util.*,com.intershop.beehive.core.internal.url.*,com.intershop.beehive.core.internal.resource.*,com.intershop.beehive.core.internal.wsrp.*,com.intershop.beehive.core.capi.pipeline.PipelineDictionary,com.intershop.beehive.core.capi.naming.NamingMgr,com.intershop.beehive.core.capi.pagecache.PageCacheMgr,com.intershop.beehive.core.capi.request.SessionMgr,com.intershop.beehive.core.internal.request.SessionMgrImpl,com.intershop.beehive.core.pipelet.PipelineConstants" extends="com.intershop.beehive.core.internal.template.AbstractTemplate" %><% 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 %><% %><%@ page contentType="text/html;charset=utf-8" %><%setEncodingType("text/html"); %><% {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"inc/Modules", null, "3");} %><% _boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("EditMode"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",4,e);}if (_boolean_result) { %><% {Object temp_obj = ("false"); getPipelineDictionary().put("ChangeQuantity", temp_obj);} %><% {Object temp_obj = ("true"); getPipelineDictionary().put("ChangePrice", temp_obj);} %><% } else { %><% {Object temp_obj = ("false"); getPipelineDictionary().put("ChangeQuantity", temp_obj);} %><% {Object temp_obj = ("false"); getPipelineDictionary().put("ChangePrice", temp_obj);} %><% } %><% {Object temp_obj = ("true"); getPipelineDictionary().put("ShowOriginValues", temp_obj);} %><% {Object temp_obj = (new Double(6)); getPipelineDictionary().put("ColSpan", temp_obj);} %><table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td class="table_header w e s" nowrap="nowrap"><% {out.write(localizeISText("quote.QuoteItemList.table_header.quantity",null,null,null,null,null,null,null,null,null,null,null,null));} %></td>
<td class="table_header e s left" width="40%" nowrap="nowrap"><% {out.write(localizeISText("quote.QuoteItemList.table_header.name",null,null,null,null,null,null,null,null,null,null,null,null));} %></td>
<td class="table_header e s left" nowrap="nowrap"><% {out.write(localizeISText("quote.QuoteItemList.table_header.product.id",null,null,null,null,null,null,null,null,null,null,null,null));} %></td>
<td class="table_header e s left" nowrap="nowrap"><% {out.write(localizeISText("quote.QuoteItemList.table_header.cost.price",null,null,null,null,null,null,null,null,null,null,null,null));} %></td>
<td class="table_header e s center" nowrap="nowrap"><% {out.write(localizeISText("quote.QuoteItemList.table_header.list.price",null,null,null,null,null,null,null,null,null,null,null,null));} %></td>
<td class="table_header e s center" nowrap="nowrap"><% {out.write(localizeISText("quote.QuoteItemList.table_header.proposed.price",null,null,null,null,null,null,null,null,null,null,null,null));} %></td>
<td class="table_header e s center" nowrap="nowrap"><% {out.write(localizeISText("quote.QuoteItemList.table_header.margin",null,null,null,null,null,null,null,null,null,null,null,null));} %></td>
<td class="table_header e s right" nowrap="nowrap"><% {out.write(localizeISText("quote.QuoteItemList.table_header.item.total",null,null,null,null,null,null,null,null,null,null,null,null));} %></td>
</tr><% while (loop("Quote:IndependentItems","PLI",null)) { %><tr class="item" id="<% {String value = null;try{value=context.getFormattedValue(getObject("PLI:UUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {27}",e);}if (value==null) value="";value = encodeString(value,"javascript");out.write(value);} %>">
<td class="table_detail w e s pns" nowrap="nowrap" valign="top">
<input type="hidden" name="EditMode" value="<% {String value = null;try{value=context.getFormattedValue(getObject("EditMode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {30}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>"/>
<input type="hidden" name="Items" value="<% {String value = null;try{value=context.getFormattedValue(getObject("PLI:UUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {31}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>"/><% _boolean_result=false;try {_boolean_result=((Boolean)(((!((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("PLI:Product")))).booleanValue() && ((Boolean) getObject("PLI:Product:Online")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("EditMode"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",32,e);}if (_boolean_result) { %><% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("QuantityErrorMap")))).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("QuantityErrorMap:get(PLI:UUID)")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",33,e);}if (_boolean_result) { %><img src="<%=context.getFormattedValue(context.webRoot(),null)%>/images/error.gif" width="16" height="15" alt="" border="0"/>
<input type="number" min="0" name="<%=context.getFormattedValue(getObject("PLI:UUID"),null)%>_Quantity" value="<% {String value = null;try{value=context.getFormattedValue(getObject("QuantityErrorMap:get(PLI:UUID)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {35}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>" size="10" class="inputfield_en"/><% } else { %><input type="number" min="0" name="<%=context.getFormattedValue(getObject("PLI:UUID"),null)%>_Quantity" value="<% {String value = null;try{value=context.getFormattedValue(getObject("PLI:Quantity"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {37}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>" size="10" class="inputfield_en"/> 
<% } %><% {out.write(localizeISText("quote.QuoteItemList.item.product_offline_hint",null,null,null,null,null,null,null,null,null,null,null,null));} %><% } else {_boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("ChangeQuantity"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",40,e);}if (_boolean_result) { %><% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("QuantityErrorMap")))).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("QuantityErrorMap:get(PLI:UUID)")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",41,e);}if (_boolean_result) { %><img src="<%=context.getFormattedValue(context.webRoot(),null)%>/images/error.gif" width="16" height="15" alt="" border="0"/>
<input type="number" min="1" name="<%=context.getFormattedValue(getObject("PLI:UUID"),null)%>_Quantity" value="<% {String value = null;try{value=context.getFormattedValue(getObject("QuantityErrorMap:get(PLI:UUID)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {43}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>" size="10" class="inputfield_en"/><% } else { %><input type="number" min="1" name="<%=context.getFormattedValue(getObject("PLI:UUID"),null)%>_Quantity" value="<% {String value = null;try{value=context.getFormattedValue(getObject("PLI:Quantity"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {45}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>" size="10" class="inputfield_en"/> 
<% } %><% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("Quote:Modified")).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("EditMode"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",47,e);}if (_boolean_result) { %>
(<% {String value = null;try{value=context.getFormattedValue(getObject("PLI:OriginQuantity"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {48}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>)
<% } %><% } else { %><% {String value = null;try{value=context.getFormattedValue(getObject("PLI:Quantity"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {51}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %><% }} %></td> 
<td class="table_detail e s" >
<b><% {String value = null;try{value=context.getFormattedValue(getObject("PLI:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {57}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></b><% _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("PLI:DependentListItemsCount")).doubleValue() >((Number)(new Double(0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",58,e);}if (_boolean_result) { %><br /><br />
<table cellspacing="8"><% while (loop("PLI:DependentListItems","DPLI",null)) { %><tr>
<td><% {String value = null;try{value=context.getFormattedValue(getObject("DPLI:Quantity:Value"),new Integer(INTEGER),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {63}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></td> 
<td>
<b><% {String value = null;try{value=context.getFormattedValue(getObject("DPLI:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {65}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></b><br /><% {String value = null;try{value=context.getFormattedValue(getObject("DPLI:Product:SKU"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {66}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></td>
</tr><% } %></table><% } %>
&nbsp;
</td>
<td class="table_detail e s" nowrap="nowrap" valign="top"><% {String value = null;try{value=context.getFormattedValue(getObject("PLI:ProductRef:ProductSKU"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {75}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>&nbsp;</td>
<td class="table_detail e s right item-cost" valign="top" data-price="<% {String value = null;try{value=context.getFormattedValue(getObject("PLI:Product:CostPrice(PLI:SinglePricePC:CurrencyMnemonic):Amount:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {78}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>" nowrap="nowrap"><% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("PLI:Product")))).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("PLI:Product:CostPrice(PLI:SinglePricePC:CurrencyMnemonic)")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",79,e);}if (_boolean_result) { %><% {String value = null;try{value=context.getFormattedValue(getObject("PLI:Product:CostPrice(PLI:SinglePricePC:CurrencyMnemonic):Amount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {80}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>&nbsp;
<% } else { %>
&nbsp;
<% } %> 
</td>
<td class="table_detail s e right" valign="top" nowrap="nowrap"><% {String value = null;try{value=context.getFormattedValue(getObject("PLI:OriginSinglePricePC"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {86}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></td>
<td class="table_detail s e right item-price" valign="top" nowrap="nowrap" data-price="<% {String value = null;try{value=context.getFormattedValue(getObject("PLI:SinglePricePC:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {90}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>">
<input type="hidden" name="<%=context.getFormattedValue(getObject("PLI:UUID"),null)%>_CurrencyMnemonic" value="<% {String value = null;try{value=context.getFormattedValue(getObject("PLI:SinglePricePC:CurrencyMnemonic"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {91}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>" size="10" class="inputfield_en"/><% _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ChangePrice"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",92,e);}if (_boolean_result) { %><% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("PriceErrorMap")))).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("PriceErrorMap:get(PLI:UUID)")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",93,e);}if (_boolean_result) { %><img src="<%=context.getFormattedValue(context.webRoot(),null)%>/images/error.gif" width="16" height="15" alt="" border="0"/>
<input class="item-price-input" type="text" name="<%=context.getFormattedValue(getObject("PLI:UUID"),null)%>_SinglePricePC" value="<% {String value = null;try{value=context.getFormattedValue(getObject("PriceErrorMap:get(PLI:UUID)"),"#0.00#",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {95}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>" size="10" class="inputfield_en" <% _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ChangePrice"),null).equals(context.getFormattedValue("false",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",95,e);}if (_boolean_result) { %>disabled="disabled"<% } %>/><% } else { %><input class="item-price-input" type="text" name="<%=context.getFormattedValue(getObject("PLI:UUID"),null)%>_SinglePricePC" value="<% {String value = null;try{value=context.getFormattedValue(getObject("PLI:SinglePricePC:Value"),"#0.00#",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {97}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>" size="10" class="inputfield_en" <% _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ChangePrice"),null).equals(context.getFormattedValue("false",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",97,e);}if (_boolean_result) { %>disabled="disabled"<% } %>/><% } %> 
<% } else { %><% {String value = null;try{value=context.getFormattedValue(getObject("PLI:SinglePricePC"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {100}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %><% } %></td> 
<td class="table_detail s e right item-margin"></td>
<td class="table_detail e s right" nowrap="nowrap"><% {String value = null;try{value=context.getFormattedValue(getObject("PLI:NetPricePC"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {104}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>&nbsp;</td>
</tr><% } %><tr>
<td class="w e s">&nbsp;</td>
<td colspan="<% {String value = null;try{value=context.getFormattedValue(getObject("ColSpan"),"#",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {109}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>" class="table_detail e s right"><% {out.write(localizeISText("quote.QuoteItemList.table_detail.list.price.total",null,null,null,null,null,null,null,null,null,null,null,null));} %></td>
<td class="table_detail e s right" nowrap="nowrap"><% {String value = null;try{value=context.getFormattedValue(getObject("Quote:OriginTotal"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {110}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></td>
</tr>
<tr>
<td class="w e s">&nbsp;</td>
<td colspan="<% {String value = null;try{value=context.getFormattedValue(getObject("ColSpan"),"#",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {114}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>" class="table_detail e s right pns"><% {out.write(localizeISText("quote.QuoteItemList.table_detail.proposed.total.b",null,null,null,null,null,null,null,null,null,null,null,null));} %></td>
<td class="table_detail e s right total-price" data-price="<% {String value = null;try{value=context.getFormattedValue(getObject("Quote:Total:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {115}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>" nowrap="nowrap"><strong><% {String value = null;try{value=context.getFormattedValue(getObject("Quote:Total"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {115}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></strong></td>
</tr> 
<tr>
<td class="w e s">&nbsp;</td>
<td colspan="<% {String value = null;try{value=context.getFormattedValue(getObject("ColSpan"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {119}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>" class="table_detail e s right pns"><% {out.write(localizeISText("quote.QuoteItemList.table_detail.margin",null,null,null,null,null,null,null,null,null,null,null,null));} %></td>
<td class="table_detail e s right total-margin" nowrap="nowrap"></td>
</tr> 
</table>
<script>
$(document).ready(function() {
function calcMargin(costPrice, price) {
return 0;//Math.round((price/costPrice*100)-100)+ " %";
}
function calcPrice(useInputField) {
var totalPrice = 0;
var totalCostPrice = 0;
$(".item").each(function(index,item) {
var costPriceStr = $(item).find(".item-cost").data('price');
var priceStr = $(item).find(".item-price").data('price');
if (useInputField) {
priceStr = $(item).find(".item-price-input").val();
}
var costPrice = parseFloat(costPriceStr);
var price = parseFloat(priceStr);
totalPrice = totalPrice+price;
totalCostPrice = totalCostPrice+costPrice;
var margin = Math.round((price/costPrice*100)-100)+ " %"
if (!isNaN(costPrice)) {
$(item).find('.item-margin').text(margin);
} else {
$(item).find('.item-margin').text("-");
}
});
if (!isNaN(totalCostPrice)) {
var margin = Math.round((totalPrice/totalCostPrice*100)-100)+ " %";
$(".total-margin").text(margin);
} else {
$(".total-margin").text("-");
}
}
$(".item-price-input").keyup(function(e) {
calcPrice(true); 
});
calcPrice(false);
});
</script><% printFooter(out); %>