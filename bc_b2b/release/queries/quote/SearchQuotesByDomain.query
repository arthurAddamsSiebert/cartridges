<?xml version="1.0" encoding="UTF-8"?>
<query>
<parameters>
	<parameter name="Domain" type="com.intershop.beehive.core.capi.domain.Domain" optional="false"/>
	<parameter name="StateGroup" type="java.lang.String" optional="true"/>
	<parameter name="AccountManagerID" type="java.lang.String" optional="false"/>
	<parameter name="Mode" type="java.lang.String" optional="true"/>
	<parameter name="QuoteStates" type="java.util.Iterator" optional="true"/>
	<parameter name="LocaleInformation" type="com.intershop.beehive.core.capi.localization.LocaleInformation" optional="false"/>
	<parameter name="SortByQuoteAttribute" type="java.lang.String" optional="true"/>
	<parameter name="SortByQuote" type="java.lang.String" optional="true"/>
	<parameter name="SortByQuoteEvent" type="java.lang.String" optional="true"/>
	<parameter name="SortByQuoteOwner" type="java.lang.String" optional="true"/>
	<parameter name="SortDirection" type="java.lang.String" optional="true"/>
	<parameter name="SimpleSearchExpression" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
</parameters>
<return-mappings>
	<return-mapping name="count" type="rename">
		<return-attribute name="count"/>
	</return-mapping>
	<return-mapping name="ProductList" type="orm" class="com.intershop.component.mvc.internal.product.ProductListPO">
		<return-attribute name="UUID"/>
	</return-mapping>
</return-mappings>
<processor name="OracleSQL">
	<processor-preprocessing output="ContainsSearchExpression" input="SearchExpression" processing="SearchExpression2Contains"/>
</processor>
<template type="count">
        SELECT count(*) as count from productlist pl, customerprofileassignment cpa, customeraccountmgrassignment cama, basicprofile bpAccountManager
        WHERE pl.DomainID= <template-variable value="Domain:UUID" />
        AND pl.typecode = 4
        AND pl.scopeuuid=cpa.profileid
		and cpa.customerid=cama.customerid
		and cama.profileid=bpAccountManager.uuid
		and bpAccountManager.uuid=<template-variable value="AccountManagerID"/>
        <template-if condition="Mode EQ &apos;Seller&apos;">
        	AND pl.state != 0
        </template-if>
        <template-if condition="StateGroup EQ &apos;Inbox&apos;">
            AND pl.state in (1,2,4,6)
        <if-elseif condition="StateGroup EQ &apos;Outbox&apos;" />
            AND pl.state in (3,5,7,9,11)
        <if-elseif condition="StateGroup EQ &apos;Accepted&apos;" />
            AND pl.state in (7,8)
        <if-elseif condition="StateGroup EQ &apos;Archive&apos;" />
            AND pl.state in (9,10,11,12)
        </template-if>
        <template-if condition="isDefined(SimpleSearchExpression)">
            <template-call name="inc/SearchExpression2Like">
                <call-parameter name="SearchExpression" value="SimpleSearchExpression"/>
                <call-parameter name="ColumnNames" value="&quot;pl.DocumentNo&quot;"/>
                <call-parameter name="CaseInsensitive" value="true()"/>
                <call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/>
            </template-call>
        </template-if>

        <template-if condition="isDefined(QuoteStates)">
        	AND (
	        <template-loop alias="QuoteState" iterator="QuoteStates">
		        <loop-statement>pl.state=<template-variable value="QuoteState" /></loop-statement>
		        <loop-separator> OR </loop-separator>        	
	        </template-loop>
        	)
        </template-if>
    </template>
    <template type="objects">
        SELECT pl.uuid as uuid
        <template-if condition="(isDefined(SortByQuoteAttribute))">
            FROM productlist pl JOIN customerprofileassignment cpa JOIN customeraccountmgrassignment cama JOIN basicprofile bpAccountManager LEFT JOIN productlist_av av ON (pl.UUID = av.ownerID AND av.name = &apos;displayName&apos; AND av.localeid = <template-variable value="LocaleInformation:LocaleID" />)
        <if-elseif condition="(isDefined(SortByQuote))"/>
            FROM productlist pl, customerprofileassignment cpa, customeraccountmgrassignment cama, basicprofile bpAccountManager
        <if-elseif condition="(isDefined(SortByQuoteEvent))"/>  
            FROM productlist pl JOIN customerprofileassignment cpa JOIN customeraccountmgrassignment cama JOIN basicprofile bpAccountManager LEFT JOIN productlistevent ple ON 
            (
            	pl.uuid = ple.productlistUUID 
            	<template-if condition="(SortByQuoteEvent EQ 'ReceivedOn')">
                	AND (ple.TypeCode is null or (pl.state in (1,2) AND ple.TypeCode='SubmittedToApprover') OR (pl.state=4 AND ple.TypeCode='RespondedBySeller') OR (pl.state=6 AND ple.TypeCode='AcceptedBySeller'))
	            <if-elseif condition="(SortByQuoteEvent EQ 'SubmittedOn')"/>
	                AND (ple.TypeCode is null or (pl.state=3 AND ple.TypeCode='SubmittedToSeller') OR (pl.state=5 AND ple.TypeCode='RespondedByApprover') OR (pl.state=7 AND ple.TypeCode='AcceptedByApprover') OR (pl.state=9 AND ple.TypeCode='RefusedByApprover') OR (pl.state=11 AND ple.TypeCode='CancelledByApprover'))
	            <if-elseif condition="(SortByQuoteEvent EQ 'AcceptedOn')"/>
	                AND (ple.TypeCode is null or (pl.state=7 AND ple.TypeCode='AcceptedByApprover') OR (pl.state=8 AND ple.TypeCode='AutoAccepted'))
	            <if-elseif condition="(SortByQuoteEvent EQ 'ArchivedOn')"/>
	                AND (ple.TypeCode is null or (pl.state=9 AND ple.TypeCode='RefusedByApprover') OR (pl.state=10 AND ple.TypeCode='CancelledBySeller') OR (pl.state=11 AND ple.TypeCode='CancelledByApprover') OR (pl.state=12 AND ple.TypeCode='ClosedByBuyer'))
	            </template-if>
            )
        <if-elseif condition="(isDefined(SortByQuoteOwner))"/>  
            FROM productlist pl, basicprofile bp, customerprofileassignment cpa, customeraccountmgrassignment cama, basicprofile bpAccountManager
        <if-else/>
            from productlist pl, customerprofileassignment cpa, customeraccountmgrassignment cama, basicprofile bpAccountManager
        </template-if>
        WHERE 
        pl.scopeuuid=cpa.profileid
		and cpa.customerid=cama.customerid
		and cama.profileid=bpAccountManager.uuid
		and bpAccountManager.uuid=<template-variable value="AccountManagerID"/>		
        AND pl.DomainID = <template-variable value="Domain:UUID" />
        AND pl.typecode = 4
         <template-if condition="Mode EQ &apos;Seller&apos;">
        	AND pl.state != 0
        </template-if>
        <template-if condition="isDefined(SimpleSearchExpression)">
            <template-call name="inc/SearchExpression2Like">
                <call-parameter name="SearchExpression" value="SimpleSearchExpression"/>
                <call-parameter name="ColumnNames" value="&quot;pl.DocumentNo&quot;"/>
                <call-parameter name="CaseInsensitive" value="true()"/>
                <call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/>
            </template-call>
        </template-if>
        <template-if condition="StateGroup EQ &apos;Inbox&apos;">
            AND pl.state in (1,2,4,6)
            <if-elseif condition="StateGroup EQ &apos;Outbox&apos;" />
            AND pl.state in (3,5,7,9,11)
            <if-elseif condition="StateGroup EQ &apos;Accepted&apos;" />
            AND pl.state in (7,8)
            <if-elseif condition="StateGroup EQ &apos;Archive&apos;" />
            AND pl.state in (9,10,11,12)
        </template-if>
 		<template-if condition="isDefined(QuoteStates)">
        	AND (
	        <template-loop alias="QuoteState" iterator="QuoteStates">
		        <loop-statement>pl.state=<template-variable value="QuoteState" /></loop-statement>
		        <loop-separator> OR </loop-separator>        	
	        </template-loop>
        	)
        </template-if>        
        <template-if condition="(isDefined(SortByQuoteOwner))">  
            AND bp.UUID = pl.ScopeUUID  
        <if-elseif condition="(isDefined(SortByQuote))"/>   
        </template-if>        
        <template-if condition="isDefined(SortByQuoteAttribute)">
        	<template-variable value="orderBy('av.stringvalue', direction(SortDirection), if(isAscending(SortDirection), nullsLast(), nullsFirst()))" processing="text"/>
        <if-elseif condition="isDefined(SortByQuote)"/>
        	<template-variable value="orderBy(column(identifier(SortByQuote), names('pl.DocumentNo','pl.ValidFrom:ValidFrom', 'pl.ValidTo:ValidTo', 'pl.TotalValue:TotalValue', 'pl.NegotiationTotalValue:NegotiationTotalValue', 'pl.State:State')), direction(SortDirection), if(isAscending(SortDirection), nullsLast(), nullsFirst()))" processing="text"/>
        <if-elseif condition="isDefined(SortByQuoteEvent)"/>
        	<template-variable value="orderBy('ple.EventDate', direction(SortDirection), if(isAscending(SortDirection), nullsLast(), nullsFirst()))" processing="text"/>
        <if-elseif condition="isDefined(SortByQuoteOwner)"/>
        	<template-variable value="orderBy('bp.LastName', direction(SortDirection), if(isAscending(SortDirection), nullsLast(), nullsFirst()))" processing="text"/>
        <if-else/>	
        	<template-variable value="orderBy('pl.DocumentNo', direction(SortDirection), if(isAscending(SortDirection), nullsLast(), nullsFirst()))" processing="text"/>
        </template-if>	
    </template>
</query>
