<%@  page buffer="none" import="java.util.*,java.io.*,com.intershop.beehive.core.internal.template.*,com.intershop.beehive.core.internal.template.isml.*,com.intershop.beehive.core.capi.log.*,com.intershop.beehive.core.capi.resource.*,com.intershop.beehive.core.capi.util.UUIDMgr,com.intershop.beehive.core.capi.util.XMLHelper,com.intershop.beehive.foundation.util.*,com.intershop.beehive.core.internal.url.*,com.intershop.beehive.core.internal.resource.*,com.intershop.beehive.core.internal.wsrp.*,com.intershop.beehive.core.capi.pipeline.PipelineDictionary,com.intershop.beehive.core.capi.naming.NamingMgr,com.intershop.beehive.core.capi.pagecache.PageCacheMgr,com.intershop.beehive.core.capi.request.SessionMgr,com.intershop.beehive.core.internal.request.SessionMgrImpl,com.intershop.beehive.core.pipelet.PipelineConstants" extends="com.intershop.beehive.core.internal.template.AbstractTemplate" %><% 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 %><% %><%@ page contentType="text/html;charset=utf-8" %><%setEncodingType("text/html"); %><tr>
<td class="table_detail">
<input type="radio" name="CreatePriceMappingRule_MappingRule" value="UseListPriceAsCostPrice" <% _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("CostPrice_TargetDeclarationMap:get(SourceDeclaration:currency)"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",6,e);}if (_boolean_result) { %>disabled="disabled"<% } %> />
</td>
<td class="table_detail" colspan="2"><% {out.write(localizeISText("NewProductPriceMappingRuleEnterpriseInc.UseListPriceAsCostPrice.table_detail",null,null,null,null,null,null,null,null,null,null,null,null));} %></td>
</tr><% {Object temp_obj = ("false"); getPipelineDictionary().put("CostPrice_hasValidElements", temp_obj);} %><% while (loop("Currencies","Currency",null)) { %><% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((Boolean) (disableErrorMessages().isDefined(getObject("CostPrice_TargetDeclarationMap:get(Currency:Mnemonic)")))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("Currency:Mnemonic"),null).equals(context.getFormattedValue(getObject("SourceDeclaration:currency"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",14,e);}if (_boolean_result) { %><% {Object temp_obj = ("true"); getPipelineDictionary().put("CostPrice_hasValidElements", temp_obj);} %><% if (getLoopStack().isEmpty()) {Logger.error(this,"ISBREAK occured outside ISLOOP. Line: {}",15);}else{getLoopStack().pop();break;} %><% } %><% } %><tr>
<td class="table_detail">
<input type="radio" name="CreatePriceMappingRule_MappingRule" value="UseListPriceAsCostPriceAndConvert" <% _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("CostPrice_hasValidElements"),null).equals(context.getFormattedValue("false",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",20,e);}if (_boolean_result) { %>disabled="disabled"<% } %>/>
</td>
<td class="table_detail" colspan="2"><% {out.write(localizeISText("NewProductPriceMappingRuleEnterpriseInc.UseListPriceAsCostPriceAndConvertToDifferentCurren.table_detail",null,null,null,null,null,null,null,null,null,null,null,null));} %></td>
</tr>
<tr>
<td class="table_detail">&nbsp;</td>
<td class="table_detail" nowrap="nowrap">&nbsp;&nbsp;&nbsp;<% {out.write(localizeISText("NewProductPriceMappingRuleEnterpriseInc.TargetCurrency.table_detail",null,null,null,null,null,null,null,null,null,null,null,null));} %>: </td>
<td class="table_detail">
<select name="CreatePriceMappingRule_UseListPriceAsCostPriceAndConvertCurrency" class="select" <% _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("CostPrice_hasValidElements"),null).equals(context.getFormattedValue("false",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",28,e);}if (_boolean_result) { %>disabled="disabled"<% } %>><% _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("CostPrice_hasValidElements"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",28,e);}if (_boolean_result) { %><% while (loop("Currencies","Currency",null)) { %><% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((Boolean) (disableErrorMessages().isDefined(getObject("CostPrice_TargetDeclarationMap:get(Currency:Mnemonic)")))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("Currency:Mnemonic"),null).equals(context.getFormattedValue(getObject("SourceDeclaration:currency"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",28,e);}if (_boolean_result) { %><option value="<% {String value = null;try{value=context.getFormattedValue(getObject("Currency:Mnemonic"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {29}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>" <% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("CreatePriceMappingRule:ConvertPriceCurrency:Value")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("CreatePriceMappingRule:ConvertPriceCurrency:Value"),null).equals(context.getFormattedValue(getObject("Currency:Mnemonic"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",29,e);}if (_boolean_result) { %>selected="selected"<% } %>><% {String value = null;try{value=context.getFormattedValue(getObject("Currency:CurrencyName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {29}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></option><% } %><% } %><% } else { %><option value="" name=""><% {out.write(localizeISText("NewProductPriceMappingRuleEnterpriseInc.None.option",null,null,null,null,null,null,null,null,null,null,null,null));} %></option><% } %></select>
</td>
</tr><% printFooter(out); %>