<%@  page buffer="none" import="java.util.*,java.io.*,com.intershop.beehive.core.internal.template.*,com.intershop.beehive.core.internal.template.isml.*,com.intershop.beehive.core.capi.log.*,com.intershop.beehive.core.capi.resource.*,com.intershop.beehive.core.capi.util.UUIDMgr,com.intershop.beehive.core.capi.util.XMLHelper,com.intershop.beehive.foundation.util.*,com.intershop.beehive.core.internal.url.*,com.intershop.beehive.core.internal.resource.*,com.intershop.beehive.core.internal.wsrp.*,com.intershop.beehive.core.capi.pipeline.PipelineDictionary,com.intershop.beehive.core.capi.naming.NamingMgr,com.intershop.beehive.core.capi.pagecache.PageCacheMgr,com.intershop.beehive.core.capi.request.SessionMgr,com.intershop.beehive.core.internal.request.SessionMgrImpl,com.intershop.beehive.core.pipelet.PipelineConstants" extends="com.intershop.beehive.core.internal.template.AbstractTemplate" %><% 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 %><% %><%@ page contentType="text/html;charset=utf-8" %><%setEncodingType("text/html"); %><%@ page import = "java.util.*,com.intershop.component.foundation.capi.upload.*" %><%@ page import = "com.intershop.beehive.foundation.util.ResettableIterator" %><%@ page import = "com.intershop.beehive.foundation.util.Iterators" %><% _boolean_result=false;try {_boolean_result=((Boolean)(getObject("directory:isRoot"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",6,e);}if (_boolean_result) { %><% {Object temp_obj = (new Double(0)); getPipelineDictionary().put("level", temp_obj);} %><% } else { %><% {Object temp_obj = ((new Double( ((Number) getObject("level")).doubleValue() +((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("level", temp_obj);} %><% } %><% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("ExpandedDirectoriesMap")))).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("ExpandedDirectoriesMap:get(directory:Path)")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",12,e);}if (_boolean_result) { %><% {Object temp_obj = ("true"); getPipelineDictionary().put("ContentDirectoryISModuleLocalVariable_DirectoryIsExpanded", temp_obj);} %><% {Object temp_obj = ("Collapse"); getPipelineDictionary().put("ContentDirectoryISModuleLocalVariable_HandlerPipelineStartNode", temp_obj);} %><% {Object temp_obj = (context.getFormattedValue(context.webRoot(),null) + context.getFormattedValue("/images/minus.gif",null)); getPipelineDictionary().put("ContentDirectoryISModuleLocalVariable_ExpandCollapseImage", temp_obj);} %><% } else { %><% {Object temp_obj = ("false"); getPipelineDictionary().put("ContentDirectoryISModuleLocalVariable_DirectoryIsExpanded", temp_obj);} %><% {Object temp_obj = ("Expand"); getPipelineDictionary().put("ContentDirectoryISModuleLocalVariable_HandlerPipelineStartNode", temp_obj);} %><% {Object temp_obj = (context.getFormattedValue(context.webRoot(),null) + context.getFormattedValue("/images/plus.gif",null)); getPipelineDictionary().put("ContentDirectoryISModuleLocalVariable_ExpandCollapseImage", temp_obj);} %><% } %><% {Object temp_obj = (url(true,(new URLPipelineAction(context.getFormattedValue(context.getFormattedValue(getObject("handlerpipeline"),null) + context.getFormattedValue("-",null) + context.getFormattedValue(getObject("ContentDirectoryISModuleLocalVariable_HandlerPipelineStartNode"),null),null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("DirectoryPath",null),context.getFormattedValue(getObject("directory:Path"),null))).addURLParameter(context.getFormattedValue(getObject("parametername"),null),context.getFormattedValue(getObject("parametervalue"),null)).addURLParameter(context.getFormattedValue(getObject("parametername1"),null),context.getFormattedValue(getObject("parametervalue1"),null)).addURLParameter(context.getFormattedValue(getObject("parametername2"),null),context.getFormattedValue(getObject("parametervalue2"),null)).addURLParameter(context.getFormattedValue(getObject("parametername3"),null),context.getFormattedValue(getObject("parametervalue3"),null)).addURLParameter(context.getFormattedValue(getObject("parametername4"),null),context.getFormattedValue(getObject("parametervalue4"),null)).addURLParameter(context.getFormattedValue(getObject("parametername5"),null),context.getFormattedValue(getObject("parametervalue5"),null)).addURLParameter(context.getFormattedValue(getObject("parametername6"),null),context.getFormattedValue(getObject("parametervalue6"),null)).addURLParameter(context.getFormattedValue(getObject("parametername7"),null),context.getFormattedValue(getObject("parametervalue7"),null)).addURLParameter(context.getFormattedValue(getObject("parametername8"),null),context.getFormattedValue(getObject("parametervalue8"),null)).addURLParameter(context.getFormattedValue(getObject("parametername9"),null),context.getFormattedValue(getObject("parametervalue9"),null)).addURLParameter(context.getFormattedValue(getObject("parametername10"),null),context.getFormattedValue(getObject("parametervalue10"),null)).addURLParameter(context.getFormattedValue(getObject("parametername11"),null),context.getFormattedValue(getObject("parametervalue11"),null)).addURLParameter(context.getFormattedValue(getObject("parametername12"),null),context.getFormattedValue(getObject("parametervalue12"),null)).addURLParameter(context.getFormattedValue(getObject("parametername13"),null),context.getFormattedValue(getObject("parametervalue13"),null)).addURLParameter(context.getFormattedValue(getObject("parametername14"),null),context.getFormattedValue(getObject("parametervalue14"),null)).addURLParameter(context.getFormattedValue(getObject("parametername15"),null),context.getFormattedValue(getObject("parametervalue15"),null)).addURLParameter(context.getFormattedValue(getObject("parametername16"),null),context.getFormattedValue(getObject("parametervalue16"),null)).addURLParameter(context.getFormattedValue(getObject("parametername17"),null),context.getFormattedValue(getObject("parametervalue17"),null)).addURLParameter(context.getFormattedValue(getObject("parametername18"),null),context.getFormattedValue(getObject("parametervalue18"),null)).addURLParameter(context.getFormattedValue(getObject("parametername19"),null),context.getFormattedValue(getObject("parametervalue19"),null)))); getPipelineDictionary().put("ContentDirectoryISModuleLocalVariable_HandlerPipelineURL", temp_obj);} %><table border="0" cellspacing="0" cellpadding="0">
<tr>
<td nowrap="nowrap"><% _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (getObject("directory:isRoot"))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",46,e);}if (_boolean_result) { %><img src="<%=context.getFormattedValue(context.webRoot(),null)%>/images/space.gif" width="22" height="28" alt="" border="0"/><% } %><%
		int level = ((Double)getObject("level")).intValue();
		for (int i = 1; i < level; i++)
		{
			String lastLevel = (String)getObject("LastLevel" + i);
			if (lastLevel != null && lastLevel.equals("true"))
			{
				%><img src="<%=context.getFormattedValue(context.webRoot(),null)%>/images/space.gif" width="22" height="28" alt="" border="0"/><%
			}
			else
			{
				%><img src="<%=context.getFormattedValue(context.webRoot(),null)%>/images/I.gif" alt="" border="0"/><%
	 		}
		}
		%></td><%
			Directory dir = (Directory)getObject("directory");
			if (!dir.isRoot())
			{
				String last = (String)getObject("LastLevel" + level);
				if (last != null && last.equals("true"))
				{
					%><td><img src="<%=context.getFormattedValue(context.webRoot(),null)%>/images/L.gif" alt="" border="0"/></td><%
				}
				else
				{
					%><td><img src="<%=context.getFormattedValue(context.webRoot(),null)%>/images/T.gif" alt="" border="0"/></td><%
				}
			}
			else
			{
				%><td><img src="<%=context.getFormattedValue(context.webRoot(),null)%>/images/space.gif" width="22" height="1" alt="" border="0"/></td><%
			}
		%><td>
<table border="0" cellpadding="0" cellspacing="0" class="treeIconTable">
<tr>
<td>
<table border="0" cellspacing="0" cellpadding="0"><% _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("directory:hasSubdirectories"),null).equals(context.getFormattedValue("HasNoSubdirectories",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",84,e);}if (_boolean_result) { %><tr>
<td><% _boolean_result=false;try {_boolean_result=((Boolean)(getObject("directory:isRoot"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",87,e);}if (_boolean_result) { %><img src="<%=context.getFormattedValue(context.webRoot(),null)%>/images/space.gif" width="22" height="28" alt="" border="0"/><% } else { %><img src="<%=context.getFormattedValue(context.webRoot(),null)%>/images/T_extend.gif" alt="" border="0"/><% } %></td>
</tr><% } else { %><tr>
<td class="treeIcon"><a href="<% {String value = null;try{value=context.getFormattedValue(getObject("ContentDirectoryISModuleLocalVariable_HandlerPipelineURL"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {91}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>"><img src="<% {String value = null;try{value=context.getFormattedValue(getObject("ContentDirectoryISModuleLocalVariable_ExpandCollapseImage"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {91}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>" alt="" border="0" /></a></td>
</tr><% } %> 
</table>
</td>
<td>
<table border="0" cellspacing="0" cellpadding="0" style="_padding-left: 5px;">
<tr><% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("directoryselection"),null).equals(context.getFormattedValue("yes",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("editdirectoryselection"),null).equals(context.getFormattedValue("yes",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("SelectedDirectoryPath"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("SelectedDirectoryPath"),null).equals(context.getFormattedValue(getObject("directory:Path"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",99,e);}if (_boolean_result) { %><input type="hidden" name="OldFileName" value="<% {String value = null;try{value=context.getFormattedValue(getObject("directory:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {100}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>" />
<td class="dep_check"><input type="text" name="NewFileName" value="<% {String value = null;try{value=context.getFormattedValue(getObject("directory:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {101}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>" class="inputfield_en"/></td>
<td><input type="hidden" name="DefaultButton" value="RenameDirectory"/><input type="hidden" name="SelectedDirectoryPath" value="<% {String value = null;try{value=context.getFormattedValue(getObject("directory:Path"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {102}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>"/>
<table cellpadding="0" cellspacing="3" border="0">
<tbody><tr><td class="button"><input type="submit" name="RenameDirectory" value="<%=context.getFormattedValue(localizeText(context.getFormattedValue("SelectCategory.OK.button",null)),null)%>" class="button" /></td><td class="button"><input type="submit" name="CancelEditDirectory" value="<%=context.getFormattedValue(localizeText(context.getFormattedValue("PageletEntryPointSetParent.Cancel.button",null)),null)%>" class="button"/></td>
</tr></tbody>
</table>
</td><% } else { %><% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("directoryselection"),null).equals(context.getFormattedValue("yes",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) (getObject("directory:isRoot"))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("rootdirectoryselection"),null).equals(context.getFormattedValue("yes",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",109,e);}if (_boolean_result) { %><input type="hidden" name="SelectedDirectoryPath" value="ROOT" /><% } else {_boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("directoryselection"),null).equals(context.getFormattedValue("yes",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("directory:Path"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",111,e);}if (_boolean_result) { %><% _boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("directory:Path"),null).equals(context.getFormattedValue(getObject("DirectoryPath"),null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",112,e);}if (_boolean_result) { %><input type="hidden" name="SelectedDirectoryPath" value="<% {String value = null;try{value=context.getFormattedValue(getObject("directory:Path"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {112}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>" /><% } %><% }} %><%  int fileCount = 0;  
										ResettableIterator filesIter = (ResettableIterator)getObject("directory:Files");
										if(filesIter != null && filesIter.hasNext()) {
										    fileCount = Iterators.createCollection(filesIter).size();
										    filesIter.reset();
										}
										getPipelineDictionary().put("fileCount", fileCount);
									%><td <% _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("directory:Path"),null).equals(context.getFormattedValue(getObject("DirectoryPath"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",122,e);}if (_boolean_result) { %>class="other_dep"<% } else { %>class="main_dep"<% } %> nowrap="nowrap">
<a class="table_detail_link" href="<% {String value = null;try{value=context.getFormattedValue(getObject("ContentDirectoryISModuleLocalVariable_HandlerPipelineURL"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {123}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>" data-testing-id="bo-contentdirectory-<% {String value = null;try{value=context.getFormattedValue(getObject("directory:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {123}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>"><% _boolean_result=false;try {_boolean_result=((Boolean)(getObject("directory:isRoot"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",124,e);}if (_boolean_result) { %><% _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("rootdirectoryname"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",125,e);}if (_boolean_result) { %><% {String value = null;try{value=context.getFormattedValue(getObject("rootdirectoryname"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {126}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %><% } else { %><% {out.write(localizeISText("ContentDirectory.ContentDirectory.link",null,null,null,null,null,null,null,null,null,null,null,null));} %><% } %><% } else { %><% {String value = null;try{value=context.getFormattedValue(getObject("directory:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {131}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %><% } %></a>&nbsp;<span class="table_detail_link" title="<% {out.write(localizeISText("ContentDirectory.ContentDirectory.FileCount.Hint",null,null,null,null,null,null,null,null,null,null,null,null));} %>">(<% {String value = null;try{value=context.getFormattedValue(getObject("fileCount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {133}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>)</span>
</td><% } %></tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
</table><% _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ContentDirectoryISModuleLocalVariable_DirectoryIsExpanded"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",146,e);}if (_boolean_result) { %><%
		for (Iterator iter = (Iterator)getObject("directory:Directories"); iter.hasNext(); )
		{
			getPipelineDictionary().put("Dir", iter.next());
			getPipelineDictionary().put("LastLevel" + (level + 1), iter.hasNext() ? "false" : "true");
			%><% processOpenTag(response, pageContext, "contentdirectory", new TagParameter[] {
new TagParameter("directory",getObject("Dir"))}, 152); %><%
		}
	%><% } %><% {Object temp_obj = ((new Double( ((Number) getObject("level")).doubleValue() -((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("level", temp_obj);} %><% printFooter(out); %>