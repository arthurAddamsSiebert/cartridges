<%@  page buffer="none" import="java.util.*,java.io.*,com.intershop.beehive.core.internal.template.*,com.intershop.beehive.core.internal.template.isml.*,com.intershop.beehive.core.capi.log.*,com.intershop.beehive.core.capi.resource.*,com.intershop.beehive.core.capi.util.UUIDMgr,com.intershop.beehive.core.capi.util.XMLHelper,com.intershop.beehive.foundation.util.*,com.intershop.beehive.core.internal.url.*,com.intershop.beehive.core.internal.resource.*,com.intershop.beehive.core.internal.wsrp.*,com.intershop.beehive.core.capi.pipeline.PipelineDictionary,com.intershop.beehive.core.capi.naming.NamingMgr,com.intershop.beehive.core.capi.pagecache.PageCacheMgr,com.intershop.beehive.core.capi.request.SessionMgr,com.intershop.beehive.core.internal.request.SessionMgrImpl,com.intershop.beehive.core.pipelet.PipelineConstants" extends="com.intershop.beehive.core.internal.template.AbstractTemplate" %><% 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 %>
<% %><%@ page contentType="text/html;charset=utf-8" %><%setEncodingType("text/html"); %><% {Object temp_obj = (getObject("step")); getPipelineDictionary().put("Step", temp_obj);} %><% {Object temp_obj = (getObject("parentstep")); getPipelineDictionary().put("ParentStep", temp_obj);} %><% {Object temp_obj = (getObject("editcondition")); getPipelineDictionary().put("EditCondition", temp_obj);} %><% {Object temp_obj = (getObject("newstepform")); getPipelineDictionary().put("NewStepForm", temp_obj);} %><% {Object temp_obj = (getObject("conditionclipboard")); getPipelineDictionary().put("ConditionClipboard", temp_obj);} %><% {Object temp_obj = (getObject("processchainid")); getPipelineDictionary().put("ProcessChainID", temp_obj);} %><% _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("Step:Type:Value"),null).equals(context.getFormattedValue("CONTAINER",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",11,e);}if (_boolean_result) { %><table cellpadding="0" cellspacing="4" border="0" width="100%" class="aldi">
<tr><% {Object temp_obj = (getObject("step")); getPipelineDictionary().put("Step", temp_obj);} %><td class="top" width="120"><% _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) getObject("Step:Chain")).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",18,e);}if (_boolean_result) { %><img src="<%=context.getFormattedValue(context.webRoot(),null)%>/images/space.gif" width="120" height="1" alt="" border="0"/> 
<% {out.write(localizeISText("process.chain.print.step.timeout.container","",null,getObject("Step:Timeout"),null,null,null,null,null,null,null,null,null));} %><img src="<%=context.getFormattedValue(context.webRoot(),null)%>/images/space.gif" width="120" height="10" alt="" border="0"/>
<select name="<%=context.getFormattedValue(context.getFormattedValue("ExpectedType_",null) + context.getFormattedValue(getObject("Step:Id"),null),null)%>" id="ExecuteType" class="select inputfield_en">
<option value="Concurrent" <% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("Step:Error")))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("Step:ContainerType:Value"),null).equals(context.getFormattedValue("ERROR",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",25,e);}if (_boolean_result) { %>disabled="disabled"<% } %> <% _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("Step:ContainerType:Value"),null).equals(context.getFormattedValue("CONCURRENT",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",25,e);}if (_boolean_result) { %>selected="selected"<% } %>>PARALLEL</option>
<option value="Sequence" <% _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("Step:ContainerType:Value"),null).equals(context.getFormattedValue("SEQUENCE",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",26,e);}if (_boolean_result) { %>selected="selected"<% } %>>SERIAL</option>
<option value="Error" <% _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) getObject("Step:EnabledError")).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",27,e);}if (_boolean_result) { %>disabled="disabled"<% } %> <% _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("Step:ContainerType:Value"),null).equals(context.getFormattedValue("ERROR",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",27,e);}if (_boolean_result) { %>selected="selected"<% } %>>ERROR</option> 
</select> 
<% } %> 
</td>
<td width="100%">
<table cellpadding="0" cellspacing="6" class="" width="100%">
<tr>
<td class="" width="100%"><% while (loop("Step:StepBOs","SubStep",null)) { %> 
<% processOpenTag(response, pageContext, "printstep", new TagParameter[] {
new TagParameter("conditionclipboard",getObject("ConditionClipboard")),
new TagParameter("readonly",((((Boolean) (disableErrorMessages().isDefined(getObject("readonly")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("readonly"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE)),
new TagParameter("step",getObject("SubStep")),
new TagParameter("newstepform",getObject("NewStepForm")),
new TagParameter("editstep",getObject("EditCondition")),
new TagParameter("processchainid",getObject("ProcessChainID")),
new TagParameter("parentstep",getObject("Step"))}, 39); %><br/> 
<% } %></td>
<td class="right top <% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("Step:Type:Value"),null).equals(context.getFormattedValue("CONTAINER",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((( ((Number) getObject("Step:StepBOs:Size")).doubleValue() >((Number)(new Double(1))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",51,e);}if (_boolean_result) { %>ruleBar<% } %>">
<input type="checkbox" value="<% {String value = null;try{value=context.getFormattedValue(getObject("Step:Id"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {52}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>" name="SelectedStep"
<% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("Step:Chain")).booleanValue() || ((Boolean) getObject("Step:ProcessChainStepContainerBO:Chain")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",53,e);}if (_boolean_result) { %>disabled<% } %><% _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ConditionClipboard:ObjectUUID(condition:UUID)"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",54,e);}if (_boolean_result) { %>checked="checked"<% } %>
/> 
</td>
</tr>
</table>
</td>
</tr>
</table><% } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("Step:Type:Value"),null).equals(context.getFormattedValue("PIPELINE",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",77,e);}if (_boolean_result) { %><table cellpadding="0" cellspacing="4" border="0" class="aldi" width="100%" data-testing-id="page-bo-processchains-singlestep">
<tr>
<td class="" width="100%"><% {out.write(localizeISText("process.chain.steps.pipeline.display.1","",null,null,null,null,null,null,null,null,null,null,null));} %><a href="<%=context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewProcessChainParams-Start",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("ProcessChainID",null),context.getFormattedValue(getObject("ProcessChainID"),null))).addURLParameter(context.getFormattedValue("SelectedStep",null),context.getFormattedValue(getObject("Step:Id"),null))),null)%>" class="table_detail_link"><% {String value = null;try{value=context.getFormattedValue(getObject("Step:Pipeline"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {83}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>-<% {String value = null;try{value=context.getFormattedValue(getObject("Step:Startnode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {83}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></a>&nbsp;
<% {out.write(localizeISText("process.chain.steps.pipeline.display.2","",null,getObject("Step:Domain:DomainName"),getObject("Step:Timeout"),null,null,null,null,null,null,null,null));} %> 
</td>
<td class="right top">
<input type="checkbox" value="<% {String value = null;try{value=context.getFormattedValue(getObject("Step:Id"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {89}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>" name="SelectedStep"
<% _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ConditionClipboard:ObjectUUID(Step:Id)"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",90,e);}if (_boolean_result) { %>checked="checked"<% } %>
/>
</td>
</tr>
</table><% } else { %><table cellpadding="0" cellspacing="4" border="0" class="aldi" width="100%" data-testing-id="page-bo-processchains-singlestep">
<tr>
<td class="" width="100%"><% {out.write(localizeISText("process.chain.steps.job.display","",null,getObject("Step:Name"),getObject("Step:Domain:DomainName"),getObject("Step:Timeout"),null,null,null,null,null,null,null));} %></td>
<td class="right top">
<input type="checkbox" value="<% {String value = null;try{value=context.getFormattedValue(getObject("Step:Id"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {105}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>" name="SelectedStep"
<% _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ConditionClipboard:ObjectUUID(Step:Id)"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",106,e);}if (_boolean_result) { %>checked="checked"<% } %>
/>
</td>
</tr>
</table><% }} %><% printFooter(out); %>