<%@  page buffer="none" import="java.util.*,java.io.*,com.intershop.beehive.core.internal.template.*,com.intershop.beehive.core.internal.template.isml.*,com.intershop.beehive.core.capi.log.*,com.intershop.beehive.core.capi.resource.*,com.intershop.beehive.core.capi.util.UUIDMgr,com.intershop.beehive.core.capi.util.XMLHelper,com.intershop.beehive.foundation.util.*,com.intershop.beehive.core.internal.url.*,com.intershop.beehive.core.internal.resource.*,com.intershop.beehive.core.internal.wsrp.*,com.intershop.beehive.core.capi.pipeline.PipelineDictionary,com.intershop.beehive.core.capi.naming.NamingMgr,com.intershop.beehive.core.capi.pagecache.PageCacheMgr,com.intershop.beehive.core.capi.request.SessionMgr,com.intershop.beehive.core.internal.request.SessionMgrImpl,com.intershop.beehive.core.pipelet.PipelineConstants" extends="com.intershop.beehive.core.internal.template.AbstractTemplate" %><% 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 %>
<% %><%@ page contentType="text/html;charset=utf-8" %><%setEncodingType("text/html"); %><% processOpenTag(response, pageContext, "getcontentsharinghelper", new TagParameter[] {
new TagParameter("ContentSharingHelper","SharingHelper"),
new TagParameter("RepositoryDomain",getObject("ContentRepository:RepositoryDomain"))}, 3); %><% {Object temp_obj = ((( ((Number) getObject("SharingHelper:SharingTargetDomains:Size")).doubleValue() !=((Number)(new Double(0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE)); getPipelineDictionary().put("hasChildren", temp_obj);} %><% {Object temp_obj = (getObject("PageletEntryPoint:Dynamic")); getPipelineDictionary().put("isDynamic", temp_obj);} %><% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("hasChildren")).booleanValue() && !((Boolean) (getObject("isDynamic"))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",6,e);}if (_boolean_result) { %><% {Object temp_obj = (getObject("false")); getPipelineDictionary().put("eval", temp_obj);} %><%getPipelineDictionary().put("Result",false);%><% } else { %><% processOpenTag(response, pageContext, "createmap", new TagParameter[] {
new TagParameter("key1","PreferenceDomain"),
new TagParameter("key2","LockingDomain"),
new TagParameter("key0","PageletEntryPoint"),
new TagParameter("value2",getObject("ContentRepository:RepositoryDomain")),
new TagParameter("value1",getObject("ContentRepository:RepositoryDomain")),
new TagParameter("key3","User"),
new TagParameter("value3",getObject("User")),
new TagParameter("value0",getObject("PageletEntryPoint")),
new TagParameter("mapname","ProcessPageletLockParams")}, 7); %><% {try{executePipeline("ViewPageletEntryPoint-LookupPEPLock",((java.util.Map)(getObject("ProcessPageletLockParams"))),"PEPLockInfoDictionary");}catch(Exception e){Logger.error(this,"ISPIPELINE failed. Line: 12.",e);}} %><% {Object temp_obj = ((disableErrorMessages().isDefined(getObject("PEPLockInfoDictionary:PageletEntryPointLockedForOther")))); getPipelineDictionary().put("PageletEntryPointLockedForOther", temp_obj);} %><% {Object temp_obj = (((((Boolean) ((((context.getFormattedValue(getObject("PageletEntryPoint:Domain:UUID"),null).equals(context.getFormattedValue(getObject("ContentRepository:RepositoryDomain:UUID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((((Boolean) (getObject("PageletEntryPointLockedForOther"))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue()) ? Boolean.TRUE : Boolean.FALSE)); getPipelineDictionary().put("eval", temp_obj);} %><%getPipelineDictionary().put("Result", getObject("eval"));%><% } %><% printFooter(out); %>