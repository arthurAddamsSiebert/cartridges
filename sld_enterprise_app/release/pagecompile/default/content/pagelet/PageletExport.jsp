<%@  page buffer="none" import="java.util.*,java.io.*,com.intershop.beehive.core.internal.template.*,com.intershop.beehive.core.internal.template.isml.*,com.intershop.beehive.core.capi.log.*,com.intershop.beehive.core.capi.resource.*,com.intershop.beehive.core.capi.util.UUIDMgr,com.intershop.beehive.core.capi.util.XMLHelper,com.intershop.beehive.foundation.util.*,com.intershop.beehive.core.internal.url.*,com.intershop.beehive.core.internal.resource.*,com.intershop.beehive.core.internal.wsrp.*,com.intershop.beehive.core.capi.pipeline.PipelineDictionary,com.intershop.beehive.core.capi.naming.NamingMgr,com.intershop.beehive.core.capi.pagecache.PageCacheMgr,com.intershop.beehive.core.capi.request.SessionMgr,com.intershop.beehive.core.internal.request.SessionMgrImpl,com.intershop.beehive.core.pipelet.PipelineConstants" extends="com.intershop.beehive.core.internal.template.AbstractTemplate" %><% 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 %><% %><%@ page contentType="text/html;charset=utf-8" %><%setEncodingType("text/html"); %><% {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"content/Modules", null, "2");} %><% _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("PageletType"),null).equals(context.getFormattedValue("Page",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",4,e);}if (_boolean_result) { %><% {Object temp_obj = (localizeText(context.getFormattedValue("PageletExport.ExportPages.value",null))); getPipelineDictionary().put("HeaderText", temp_obj);} %><% {Object temp_obj = ("true"); getPipelineDictionary().put("PageFlag", temp_obj);} %><% } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("PageletType"),null).equals(context.getFormattedValue("Include",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",7,e);}if (_boolean_result) { %><% {Object temp_obj = (localizeText(context.getFormattedValue("PageletExport.ExportIncludes.value",null))); getPipelineDictionary().put("HeaderText", temp_obj);} %><% {Object temp_obj = ("false"); getPipelineDictionary().put("PageFlag", temp_obj);} %><% } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("PageletType"),null).equals(context.getFormattedValue("PageVariant",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",10,e);}if (_boolean_result) { %><% {Object temp_obj = (localizeText(context.getFormattedValue("PageletExport.ExportPageVariants.value",null))); getPipelineDictionary().put("HeaderText", temp_obj);} %><% {Object temp_obj = ("true"); getPipelineDictionary().put("PageFlag", temp_obj);} %><% {Object temp_obj = ("false"); getPipelineDictionary().put("TemplateFlag", temp_obj);} %><% } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("PageletType"),null).equals(context.getFormattedValue("Component",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",14,e);}if (_boolean_result) { %><% {Object temp_obj = (localizeText(context.getFormattedValue("PageletExport.ExportComponents.value",null))); getPipelineDictionary().put("HeaderText", temp_obj);} %><% {Object temp_obj = ("false"); getPipelineDictionary().put("PageFlag", temp_obj);} %><% {Object temp_obj = ("false"); getPipelineDictionary().put("TemplateFlag", temp_obj);} %><% } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("PageletType"),null).equals(context.getFormattedValue("PageVariantTemplate",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",18,e);}if (_boolean_result) { %><% {Object temp_obj = (localizeText(context.getFormattedValue("PageletExport.ExportPageTemplates.value",null))); getPipelineDictionary().put("HeaderText", temp_obj);} %><% {Object temp_obj = ("true"); getPipelineDictionary().put("PageFlag", temp_obj);} %><% {Object temp_obj = ("true"); getPipelineDictionary().put("TemplateFlag", temp_obj);} %><% } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("PageletType"),null).equals(context.getFormattedValue("ComponentTemplate",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",22,e);}if (_boolean_result) { %><% {Object temp_obj = (localizeText(context.getFormattedValue("PageletExport.ExportComponentTemplates.value",null))); getPipelineDictionary().put("HeaderText", temp_obj);} %><% {Object temp_obj = ("false"); getPipelineDictionary().put("PageFlag", temp_obj);} %><% {Object temp_obj = ("true"); getPipelineDictionary().put("TemplateFlag", temp_obj);} %><% }}}}}} %><% processOpenTag(response, pageContext, "breadcrumbtrail", new TagParameter[] {
new TagParameter("listview","true"),
new TagParameter("link",url(true,(new URLPipelineAction(context.getFormattedValue("ViewPageletExport-Start",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepositoryUUID"),null))).addURLParameter(context.getFormattedValue("PageletType",null),context.getFormattedValue(getObject("PageletType"),null)).addURLParameter(context.getFormattedValue("SearchType",null),context.getFormattedValue(getObject("SearchType"),null)))),
new TagParameter("id",context.getFormattedValue("Export",null) + context.getFormattedValue(getObject("PageletType"),null)),
new TagParameter("text",getObject("HeaderText"))}, 27); %><% processOpenTag(response, pageContext, "createmap", new TagParameter[] {
new TagParameter("key1","PageletType"),
new TagParameter("key0","ContentRepositoryUUID"),
new TagParameter("value1",getObject("PageletType")),
new TagParameter("value0",getObject("ContentRepositoryUUID")),
new TagParameter("mapname","TargetPipelineParameters")}, 29); %><% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("PageletType"),null).equals(context.getFormattedValue("Page",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("PageletType"),null).equals(context.getFormattedValue("Include",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",34,e);}if (_boolean_result) { %><% processOpenTag(response, pageContext, "pageletentrypointsearch", new TagParameter[] {
new TagParameter("submitbuttonstemplate","content/pagelet/PageletExportButtons"),
new TagParameter("targetpageletviewpipelineparams",getObject("TargetPipelineParameters")),
new TagParameter("hideselection","false"),
new TagParameter("start",getObject("PageletSearchStartFlag")),
new TagParameter("page",getObject("PageFlag")),
new TagParameter("extendedheadingtemplate","content/pagelet/PageletExportHeader"),
new TagParameter("pageletclipboard",getObject("PageletClipboard")),
new TagParameter("disableselection","false"),
new TagParameter("notfoundtemplate","content/pagelet/PageletExportEmptyList"),
new TagParameter("targetpageletviewpipeline","ViewPageletExport-Dispatch"),
new TagParameter("uniqueid",context.getFormattedValue(getObject("PageletType"),null) + context.getFormattedValue("Export",null))}, 35); %><% } else {_boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("PageletType"),null).equals(context.getFormattedValue("PageVariant",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("PageletType"),null).equals(context.getFormattedValue("Component",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("PageletType"),null).equals(context.getFormattedValue("PageVariantTemplate",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("PageletType"),null).equals(context.getFormattedValue("ComponentTemplate",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",48,e);}if (_boolean_result) { %><% processOpenTag(response, pageContext, "pageletsearch", new TagParameter[] {
new TagParameter("template",getObject("TemplateFlag")),
new TagParameter("confirmpreview",getObject("confirmPreview")),
new TagParameter("disablesharedpagelets","false"),
new TagParameter("targetpageletviewpipelineparams",getObject("TargetPipelineParameters")),
new TagParameter("start",getObject("PageletSearchStartFlag")),
new TagParameter("extendedheadingtemplate","content/pagelet/PageletExportHeader"),
new TagParameter("radiobuttons","false"),
new TagParameter("submitbuttonstemplate","content/pagelet/PageletExportButtons"),
new TagParameter("page",getObject("PageFlag")),
new TagParameter("pageletclipboard",getObject("PageletClipboard")),
new TagParameter("notfoundtemplate","content/pagelet/PageletExportEmptyList"),
new TagParameter("targetpageletviewpipeline","ViewPageletExport-Dispatch"),
new TagParameter("uniqueid",context.getFormattedValue(getObject("PageletType"),null) + context.getFormattedValue("Export",null))}, 49); %><% }} %><% printFooter(out); %>