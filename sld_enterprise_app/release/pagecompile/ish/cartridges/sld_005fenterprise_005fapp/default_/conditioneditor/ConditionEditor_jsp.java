/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.conditioneditor;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;
import org.apache.commons.lang.StringUtils;
import com.intershop.beehive.core.capi.webform.FormParameter;
import java.util.Comparator;
import java.util.Collections;
import java.util.Map;
import java.util.Set;
import java.util.HashMap;
import com.intershop.beehive.core.capi.webform.Form;
import com.intershop.component.foundation.capi.condition.ConditionDescriptor;
import java.util.Iterator;
import com.intershop.component.foundation.capi.condition.ConditionDescriptorRegistry;
import java.util.ArrayList;
import java.util.List;

public final class ConditionEditor_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
      out.write('\n');
 
setEncodingType("text/html"); 
 {Object temp_obj = (getObject("conditioneditortitle")); getPipelineDictionary().put("ConditionEditorTitle", temp_obj);} 
 {Object temp_obj = (getObject("conditiondescriptorreqistry")); getPipelineDictionary().put("ConditionDescriptorReqistry", temp_obj);} 
 {Object temp_obj = (getObject("newconditionform")); getPipelineDictionary().put("NewConditionForm", temp_obj);} 
 {Object temp_obj = (getObject("targetconditionid")); getPipelineDictionary().put("TargetConditionID", temp_obj);} 
 {Object temp_obj = (getObject("conditionform")); getPipelineDictionary().put("ConditionForm", temp_obj);} 
 {Object temp_obj = (getObject("editcondition")); getPipelineDictionary().put("EditCondition", temp_obj);} 
 {Object temp_obj = (getObject("editconditiontypegroup")); getPipelineDictionary().put("EditConditionTypeGroup", temp_obj);} 
 {Object temp_obj = (getObject("confirmDelete")); getPipelineDictionary().put("confirmDelete", temp_obj);} 
 {Object temp_obj = (getObject("conditionclipboard")); getPipelineDictionary().put("ConditionClipboard", temp_obj);} 
 {Object temp_obj = (getObject("contextobject")); getPipelineDictionary().put("ContextObject", temp_obj);} 
 {Object temp_obj = (getObject("contextobjectidname")); getPipelineDictionary().put("ContextObjectIDName", temp_obj);} 
 {Object temp_obj = (getObject("contextobjectid")); getPipelineDictionary().put("ContextObjectID", temp_obj);} 
 {Object temp_obj = (getObject("dispatchpipeline")); getPipelineDictionary().put("DispatchPipeline", temp_obj);} 
 {Object temp_obj = (getObject("targetcontextobjectid")); getPipelineDictionary().put("TargetContextObjectID", temp_obj);} 
 {Object temp_obj = (getObject("overrideapplicationexclusionsforms")); getPipelineDictionary().put("OverrideApplicationExclusionsForms", temp_obj);} 
 {Object temp_obj = (getObject("parametername1")); getPipelineDictionary().put("ParameterName1", temp_obj);} 
 {Object temp_obj = (getObject("parametervalue1")); getPipelineDictionary().put("ParameterValue1", temp_obj);} 
 {Object temp_obj = (getObject("parametername2")); getPipelineDictionary().put("ParameterName2", temp_obj);} 
 {Object temp_obj = (getObject("parametervalue2")); getPipelineDictionary().put("ParameterValue2", temp_obj);} 
 {Object temp_obj = (getObject("parametername3")); getPipelineDictionary().put("ParameterName3", temp_obj);} 
 {Object temp_obj = (getObject("parametervalue3")); getPipelineDictionary().put("ParameterValue3", temp_obj);} 
 {Object temp_obj = (getObject("parametername4")); getPipelineDictionary().put("ParameterName4", temp_obj);} 
 {Object temp_obj = (getObject("parametervalue4")); getPipelineDictionary().put("ParameterValue4", temp_obj);} 
 {Object temp_obj = (getObject("parametername5")); getPipelineDictionary().put("ParameterName5", temp_obj);} 
 {Object temp_obj = (getObject("parametervalue5")); getPipelineDictionary().put("ParameterValue5", temp_obj);} 

	 ArrayList<ConditionDescriptor> typeConditionDescriptors = new ArrayList<ConditionDescriptor>();
	 HashMap<String, String> typesMap = new HashMap<String, String>();
	 
	 String selectedType = null;
	 Form form = getObject("NewConditionForm")==null ? (Form) getObject("ConditionForm") : (Form) getObject("NewConditionForm");
	 if (form!=null) {
	 	FormParameter param = form.getParameter("ConditionType");
	 	if (param!=null) selectedType = (String) param.getValue();
	 }
	 
	 ConditionDescriptorRegistry reg = (ConditionDescriptorRegistry) getObject("ConditionDescriptorRegistry");
	 Iterator<ConditionDescriptor> descriptors = reg.sortDescriptorsByName(Iterators.createCollection(reg.createSelectableDescriptorsIterator())).iterator();
	 
	 // collect descriptor information
	 while (descriptors.hasNext()) {
	 	ConditionDescriptor desc = descriptors.next();
	 	
	 	if (!desc.isConfigurable(getObject("ContextObject"))) 
	 		continue;		// check if condition is configurable
	 		
	 	if (selectedType!=null && desc.getType().equals(selectedType)) 
	 		typeConditionDescriptors.add(desc);
	 		
	 	if (StringUtils.isNotBlank(desc.getType())) 
	 		typesMap.put(desc.getType(), desc.getTypeName());
	 }
	 
	 List<String> conditionTypes = new ArrayList<String>();
	 conditionTypes.addAll(typesMap.keySet());
	 
	 class MyComparator implements Comparator<String> 
	 {
	 	 private Map<String, String> typesMap;
	 	 
	     public MyComparator(Map<String, String> typesMap) {
	     	this.typesMap = typesMap;
	     }
	 	
	     public int compare(String s1, String s2) {
	         return typesMap.get(s1).compareTo(typesMap.get(s2));
	     }
	 }
	 
	 Collections.sort(conditionTypes, new MyComparator(typesMap));
	 
	 getPipelineDictionary().put("TypeConditionDescriptors", typeConditionDescriptors.iterator());
	 getPipelineDictionary().put("ConditionTypes", conditionTypes.iterator());
	 getPipelineDictionary().put("ConditionTypesMap", typesMap);
	 getPipelineDictionary().put("ConditionOperators", reg.createOperatorsIterator());

	 // delete all parametername1..5|parametervalue1..5, to avoid that ismessagebox uses the parameters for his parametername1..5|parametervalue1..5 too
	 for (int i=1; i < 6; i ++)
	 { 	 
	 	getPipelineDictionary().remove("parametername" + i);
	 	getPipelineDictionary().remove("parametervalue" + i);
	 }
	 


	List<String> errors = new ArrayList<String>();
	@SuppressWarnings("unchecked")
	Set<String> keys = getPipelineDictionary().keySet();
	for (String key : keys)
	{
		if (key.matches("ERROR.*Condition.*")) {
			errors.add((String)getPipelineDictionary().get(key));
		}
	}
	getPipelineDictionary().put("ThisError", errors);

      out.write("<!-- Begin of condition editor form -->");
 URLPipelineAction action495 = new URLPipelineAction(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue(getObject("DispatchPipeline"),null)))),null));String site495 = null;String serverGroup495 = null;String actionValue495 = context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue(getObject("DispatchPipeline"),null)))),null);if (site495 == null){  site495 = action495.getDomain();  if (site495 == null)  {      site495 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getDomainName();  }}if (serverGroup495 == null){  serverGroup495 = action495.getServerGroup();  if (serverGroup495 == null)  {      serverGroup495 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getServerGroup();  }}out.print("<form");out.print(" method=\"");out.print("post");out.print("\"");out.print(" action=\"");out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue(getObject("DispatchPipeline"),null)))),null));out.print("\"");out.print(" name=\"");out.print("form");out.print("\"");out.print(">");out.print(context.prepareWACSRFTag(actionValue495, site495, serverGroup495,true)); 
      out.write("<input type=\"hidden\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ContextObjectIDName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {148}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ContextObjectID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {148}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n<input type=\"hidden\" name=\"ChannelID\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CurrentChannel:UUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {149}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('/');
      out.write('>');
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ParameterName1"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",150,e);}if (_boolean_result) { 
      out.write("<input type=\"hidden\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ParameterName1"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {150}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ParameterValue1"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {150}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('/');
      out.write('>');
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ParameterName2"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",151,e);}if (_boolean_result) { 
      out.write("<input type=\"hidden\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ParameterName2"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {151}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ParameterValue2"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {151}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('/');
      out.write('>');
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ParameterName3"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",152,e);}if (_boolean_result) { 
      out.write("<input type=\"hidden\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ParameterName3"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {152}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ParameterValue3"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {152}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('/');
      out.write('>');
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ParameterName4"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",153,e);}if (_boolean_result) { 
      out.write("<input type=\"hidden\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ParameterName4"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {153}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ParameterValue4"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {153}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('/');
      out.write('>');
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ParameterName5"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",154,e);}if (_boolean_result) { 
      out.write("<input type=\"hidden\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ParameterName5"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {154}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ParameterValue5"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {154}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('/');
      out.write('>');
 } 
      out.write("<!-- Discount Conditions -->\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"n e w s\">\n<tr>\n<td class=\"table_title2 n w100\">");
 {out.write(localizeISText(context.getFormattedValue(getObject("conditioneditortitle"),null),"",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("OverrideApplicationExclusionsForms"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",160,e);}if (_boolean_result) { 
      out.write("<td class=\"table_detail n s right\">");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("OverrideApplicationExclusionsForms:get(ContextObjectID):Selection:Value"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",162,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("EditCondition")))).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("NewConditionForm")))).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("EditConditionTypeGroup")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",163,e);}if (_boolean_result) { 
      out.write("<input type=\"checkbox\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("OverrideApplicationExclusionsForms:get(ContextObjectID):Selection:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {164}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" checked=\"checked\" disabled=\"disabled\"/>");
 } else { 
      out.write("<input type=\"checkbox\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("OverrideApplicationExclusionsForms:get(ContextObjectID):Selection:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {166}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" checked=\"checked\"/> \n");
 } 
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("EditCondition")))).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("NewConditionForm")))).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("EditConditionTypeGroup")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",169,e);}if (_boolean_result) { 
      out.write("<input type=\"checkbox\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("OverrideApplicationExclusionsForms:get(ContextObjectID):Selection:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {170}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" disabled=\"disabled\"/>");
 } else { 
      out.write("<input type=\"checkbox\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("OverrideApplicationExclusionsForms:get(ContextObjectID):Selection:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {172}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('/');
      out.write('>');
 } 
 } 
      out.write("</td>\n<td nowrap=\"nowrap\" class=\"table_detail n s right\">");
 {out.write(localizeISText("ConditionEditor.OverrideApplicationLevelExclusions",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>");
 } 
      out.write("</tr>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("confirmDeleteCondition")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("TargetContextObjectID"),null).equals(context.getFormattedValue(getObject("ContextObjectID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",183,e);}if (_boolean_result) { 
      out.write("<tr>\n<td");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("OverrideApplicationExclusionsForms"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",185,e);}if (_boolean_result) { 
      out.write(" colspan=3");
 } 
      out.write(">\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"100%\" class=\"confirm_box\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("ConditionClipboard:ObjectUUIDs") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",187,e);}if (_boolean_result) { 
 processOpenTag(response, pageContext, "messagebox", new TagParameter[] {
new TagParameter("colspan","1"),
new TagParameter("subject","Conditions"),
new TagParameter("cancelbtnname","cancelCondition"),
new TagParameter("okbtnname","deleteCondition"),
new TagParameter("type","cmdc"),
new TagParameter("message",localizeText(context.getFormattedValue("ConditionEditor.DeleteAllSelectedConditions.subject",null))),
new TagParameter("class","s")}, 188); 
 } else { 
 processOpenTag(response, pageContext, "messagebox", new TagParameter[] {
new TagParameter("colspan","1"),
new TagParameter("subject","Conditions"),
new TagParameter("type","cmde"),
new TagParameter("message",localizeText(context.getFormattedValue("ConditionEditor.PleaseSelectAtLeastOneCondition.error",null))),
new TagParameter("class","s")}, 193); 
 } 
      out.write("</table>\n</td>\n</tr>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (hasLoopElements("ThisError:Iterator") ? Boolean.TRUE : Boolean.FALSE)).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("TargetContextObjectID"),null).equals(context.getFormattedValue(getObject("ContextObjectID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",201,e);}if (_boolean_result) { 
      out.write("<tr>\n<td");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("OverrideApplicationExclusionsForms"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",203,e);}if (_boolean_result) { 
      out.write(" colspan=3");
 } 
      out.write('>');
 while (loop("ThisError:Iterator","ThisError",null)) { 
      out.write("<table border=\"0\" cellspacing=\"0\" cellpadding=\"4\" width=\"100%\" class=\"error_box s\">\n<tr valign=\"top\">\n<td class=\"error_icon top e\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/error.gif\" width=\"16\" height=\"15\" alt=\"\" border=\"0\"/></td>\n<td class=\"error top\" width=\"100%\">\n<b><!-- ");
 {String value = null;try{value=context.getFormattedValue(getObject("ThisError"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {209}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(" -->");
 {out.write(localizeISText(context.getFormattedValue(getObject("ThisError"),null),"",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</b><br/>\n</td>\n</tr>\n</table>");
 } 
      out.write("</td>\n</tr>");
 } 
      out.write("</table>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n<tr>\n<td>");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (disableErrorMessages().isDefined(getObject("ContextObject:Condition")))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",222,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("NewConditionForm")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("TargetContextObjectID"),null).equals(context.getFormattedValue(getObject("ContextObjectID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",223,e);}if (_boolean_result) { 
      out.write("<table cellpadding=\"0\" cellspacing=\"4\" border=\"0\" width=\"100%\" class=\"e w\">\n<tr>\n<td class=\"table_detail\">");
 {out.write(localizeISText("ConditionEditor.CurrentlyThereIsNoConditionDefined.subject",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(' ');
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("EditCondition"),null).equals(context.getFormattedValue("false",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",227,e);}if (_boolean_result) { 
 {out.write(localizeISText("ConditionEditor.ClickNewToCreateACondition.subject",null,null,null,null,null,null,null,null,null,null,null,null));} 
 } 
      out.write("</td>\n</tr>\n</table>");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("EditCondition")))).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("NewConditionForm")))).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("EditConditionTypeGroup")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",230,e);}if (_boolean_result) { 
      out.write("<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\" class=\"n w e s\">\n<tr>\n<td width=\"100%\" align=\"right\">\n<table cellspacing=\"4\" cellpadding=\"0\" border=\"0\">\n<tr>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("EditCondition"),null).equals(context.getFormattedValue("false",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",236,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("OverrideApplicationExclusionsForms"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",237,e);}if (_boolean_result) { 
      out.write("<td class=\"button\"><input type=\"submit\" class=\"button\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("sld_enterprise_app.Apply.button",null)),null));
      out.write("\" name=\"applyCondition\"/></td>");
 } 
      out.write("<td class=\"button\"><input type=\"submit\" class=\"button\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("sld_enterprise_app.New.button",null)),null));
      out.write("\" name=\"newCondition\" /></td>");
 } 
      out.write("</tr>\n</table>\n</td>\n</tr>\n</table>");
 } 
 } 
 } else { 
      out.write("<table cellpadding=\"0\" cellspacing=\"4\" border=\"0\" width=\"100%\" class=\"e w s\">\n<tr>\n<td>");
 processOpenTag(response, pageContext, "printcondition", new TagParameter[] {
new TagParameter("parametervalue5",getObject("ParameterValue5")),
new TagParameter("parametervalue4",getObject("ParameterValue4")),
new TagParameter("parametervalue3",getObject("ParameterValue3")),
new TagParameter("editcondition",getObject("EditCondition")),
new TagParameter("parametervalue2",getObject("ParameterValue2")),
new TagParameter("parametervalue1",getObject("ParameterValue1")),
new TagParameter("conditionform",getObject("ConditionForm")),
new TagParameter("editconditiontypegroup",getObject("EditConditionTypeGroup")),
new TagParameter("newconditionform",getObject("NewConditionForm")),
new TagParameter("readonly",((((Boolean) (disableErrorMessages().isDefined(getObject("readonly")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("readonly"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE)),
new TagParameter("contextobjectid",getObject("ContextObjectID")),
new TagParameter("parametername4",getObject("ParameterName4")),
new TagParameter("parametername5",getObject("ParameterName5")),
new TagParameter("conditiontypes",getObject("ConditionTypes")),
new TagParameter("conditionclipboard",getObject("ConditionClipboard")),
new TagParameter("parametername1",getObject("ParameterName1")),
new TagParameter("parametername2",getObject("ParameterName2")),
new TagParameter("targetconditionid",getObject("TargetConditionID")),
new TagParameter("channeldomain",getObject("CurrentChannel:Domain")),
new TagParameter("parametername3",getObject("ParameterName3")),
new TagParameter("conditiondescriptorregistry",getObject("ConditionDescriptorRegistry")),
new TagParameter("conditionoperators",getObject("ConditionOperators")),
new TagParameter("typeconditiondescriptors",getObject("TypeConditionDescriptors")),
new TagParameter("contextobject",getObject("ContextObject")),
new TagParameter("contextobjectidname",getObject("ContextObjectIDName")),
new TagParameter("condition",getObject("ContextObject:Condition")),
new TagParameter("dispatchpipeline",getObject("DispatchPipeline")),
new TagParameter("conditiondescriptors",getObject("ConditionDescriptors")),
new TagParameter("conditiontypesmap",getObject("ConditionTypesMap"))}, 254); 
      out.write("</td>\n</tr>\n</table>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("NewConditionForm")))).booleanValue() && !((Boolean) (disableErrorMessages().isDefined(getObject("TargetConditionID")))).booleanValue() && ((Boolean) (((!((Boolean) (disableErrorMessages().isDefined(getObject("TargetContextObjectID")))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("TargetContextObjectID"),null).equals(context.getFormattedValue(getObject("ContextObjectID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",288,e);}if (_boolean_result) { 
      out.write("<table cellpadding=\"0\" cellspacing=\"4\" border=\"0\" width=\"100%\" class=\"e w s\">\n<tr>");
 {Object temp_obj = (getObject("CurrentChannel:Domain")); getPipelineDictionary().put("ChannelDomain", temp_obj);} 
      out.write("<td width=\"65\">&nbsp;\n</td>\n<td>");
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"conditioneditor/NewCondition", null, "299");} 
      out.write("</td>\n<td width=\"6\">&nbsp;\n</td>\n</tr>\n</table>");
 } 
      out.write("</td>\n</tr>\n</table>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("ContextObject:Condition")))).booleanValue() && !((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("readonly")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("readonly"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",314,e);}if (_boolean_result) { 
      out.write("<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\" class=\"w e s\">\n<tr>\n<td width=\"100%\" align=\"right\">\n<table cellspacing=\"4\" cellpadding=\"0\" border=\"0\">\n<tr>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("EditCondition")))).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("NewConditionForm")))).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("EditConditionTypeGroup")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",320,e);}if (_boolean_result) { 
      out.write("<td class=\"button\"><input type=\"submit\" class=\"button\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("sld_enterprise_app.Group.button",null)),null));
      out.write("\" name=\"groupConditions\" disabled=\"disabled\" /></td>\n<td class=\"button\"><input type=\"submit\" class=\"button\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("sld_enterprise_app.Ungroup.button",null)),null));
      out.write("\" name=\"ungroupConditions\" disabled=\"disabled\" /></td>\n<td class=\"button\"><input type=\"submit\" class=\"button\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("sld_enterprise_app.MoveUp.button",null)),null));
      out.write("\" name=\"moveUpCondition\" disabled=\"disabled\" /></td>\n<td class=\"button\"><input type=\"submit\" class=\"button\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("sld_enterprise_app.MoveDown.button",null)),null));
      out.write("\" name=\"moveDownCondition\" disabled=\"disabled\" /></td>\n<td ><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"20\" height=\"6\" alt=\"\" border=\"0\"/></td>\n<td class=\"button\"><input type=\"submit\" class=\"button\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("sld_enterprise_app.New.button",null)),null));
      out.write("\" name=\"newCondition\" disabled=\"disabled\" /></td>\n<td class=\"button\"><input type=\"submit\" class=\"button\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("sld_enterprise_app.Apply.button",null)),null));
      out.write("\" name=\"applyCondition\" disabled=\"disabled\" /></td>\n<td class=\"button\"><input type=\"submit\" class=\"button\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("sld_enterprise_app.Delete.button",null)),null));
      out.write("\" name=\"confirmDeleteCondition\" disabled=\"disabled\" /></td>");
 } else { 
      out.write("<td class=\"button\"><input type=\"submit\" class=\"button\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("sld_enterprise_app.Group.button",null)),null));
      out.write("\" name=\"groupConditions\" /></td>\n<td class=\"button\"><input type=\"submit\" class=\"button\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("sld_enterprise_app.Ungroup.button",null)),null));
      out.write("\" name=\"ungroupConditions\" /></td>\n<td class=\"button\"><input type=\"submit\" class=\"button\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("sld_enterprise_app.MoveUp.button",null)),null));
      out.write("\" name=\"moveUpCondition\" /></td>\n<td class=\"button\"><input type=\"submit\" class=\"button\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("sld_enterprise_app.MoveDown.button",null)),null));
      out.write("\" name=\"moveDownCondition\" /></td>\n<td ><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"20\" height=\"6\" alt=\"\" border=\"0\"/></td>\n<td class=\"button\"><input type=\"submit\" class=\"button\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("sld_enterprise_app.New.button",null)),null));
      out.write("\" name=\"newCondition\" /></td>\n<td class=\"button\"><input type=\"submit\" class=\"button\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("sld_enterprise_app.Apply.button",null)),null));
      out.write("\" name=\"applyCondition\" /></td>\n<td class=\"button\"><input type=\"submit\" class=\"button\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("sld_enterprise_app.Delete.button",null)),null));
      out.write("\" name=\"confirmDeleteCondition\" /></td>");
 } 
      out.write("</tr>\n</table>\n</td>\n</tr>\n</table>");
 } 
 out.print("</form>"); 
      out.write(' ');
      out.write('\n');
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
