/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.htmleditor;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;
import com.intershop.beehive.core.capi.domain.Domain;
import com.intershop.beehive.core.capi.domain.DomainMgr;
import com.intershop.beehive.core.capi.naming.NamingMgr;

public final class Categories_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

 protected Boolean printTemplateMarker() { return Boolean.FALSE; } 
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/xml;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 

setEncodingType("text/xml"); 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"htmleditor/Modules.isml", null, "2");} 

    final DomainMgr domainManager = NamingMgr.getManager(DomainMgr.class);
    final Domain unitDomain = domainManager.getDomainByUUID(String.valueOf(getObject("OrganizationDomainId")));
    getPipelineDictionary().put("UnitDomain", unitDomain);
    if (unitDomain != null) {
        final Domain siteDomain = unitDomain.isMereUnit() ? unitDomain.getSite() : unitDomain;
        getPipelineDictionary().put("SiteDomain", siteDomain);
    }
 
      out.write("<collection id=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Category:UUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {16}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" version=\"2\">\n<uri>category://");
 {String value = null;try{value=context.getFormattedValue(getObject("Category:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {17}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('@');
 {String value = null;try{value=context.getFormattedValue(getObject("Category:Domain:DomainName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {17}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</uri>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("Catalog:isProxy"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",18,e);}if (_boolean_result) { 
      out.write("<icon>");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/css/ServerBrowser/icon_shared_folder.gif</icon>");
 } else { 
      out.write("<icon>");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/css/ServerBrowser/ic_folder.gif</icon>");
 } 
      out.write("<title>");
      out.print(context.getFormattedValue(encodeString(context.getFormattedValue(getObject("Category:Domain:DomainName"),null)),null));
      out.write(' ');
      out.write('-');
      out.write(' ');
 {String value = null;try{value=context.getFormattedValue(getObject("Category:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {23}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</title>\n<src>");
 {String value = null;try{value=context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("HtmlEditor-GetCategories",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("OrganizationDomainId",null),context.getFormattedValue(getObject("OrganizationDomainId"),null))).addURLParameter(context.getFormattedValue("LocaleId",null),context.getFormattedValue(getObject("LocaleId"),null))),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {24}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</src>\n<readonly>true</readonly>\n<items>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("Category:isRootCategory"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",27,e);}if (_boolean_result) { 
      out.write("<collection id=\"back");
 {String value = null;try{value=context.getFormattedValue(getObject("Category:UUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {28}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<uri>");
 {String value = null;try{value=context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("HtmlEditor-GetCatalogs",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("OrganizationDomainId",null),context.getFormattedValue(getObject("OrganizationDomainId"),null))).addURLParameter(context.getFormattedValue("ShowCategoryLinks",null),context.getFormattedValue(getObject("ShowCategoryLinks"),null)).addURLParameter(context.getFormattedValue("CategoryLinkPipeline",null),context.getFormattedValue(getObject("CategoryLinkPipeline"),null)).addURLParameter(context.getFormattedValue("CategoryLinkSite",null),context.getFormattedValue(getObject("CategoryLinkSite"),null)).addURLParameter(context.getFormattedValue("ShowProductLinks",null),context.getFormattedValue(getObject("ShowProductLinks"),null)).addURLParameter(context.getFormattedValue("ProductLinkPipeline",null),context.getFormattedValue(getObject("ProductLinkPipeline"),null)).addURLParameter(context.getFormattedValue("ProductLinkSite",null),context.getFormattedValue(getObject("ProductLinkSite"),null)).addURLParameter(context.getFormattedValue("LocaleId",null),context.getFormattedValue(getObject("LocaleId"),null))),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {29}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</uri>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("Catalog:isProxy"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",30,e);}if (_boolean_result) { 
      out.write("<icon>");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/css/ServerBrowser/icon_shared_folder.gif</icon>");
 } else { 
      out.write("<icon>");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/css/ServerBrowser/ic_folder.gif</icon>");
 } 
      out.write("<title>[..]</title>\n<src>");
 {String value = null;try{value=context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("HtmlEditor-GetCatalogs",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("OrganizationDomainId",null),context.getFormattedValue(getObject("OrganizationDomainId"),null))).addURLParameter(context.getFormattedValue("ShowCategoryLinks",null),context.getFormattedValue(getObject("ShowCategoryLinks"),null)).addURLParameter(context.getFormattedValue("CategoryLinkPipeline",null),context.getFormattedValue(getObject("CategoryLinkPipeline"),null)).addURLParameter(context.getFormattedValue("CategoryLinkSite",null),context.getFormattedValue(getObject("CategoryLinkSite"),null)).addURLParameter(context.getFormattedValue("ShowProductLinks",null),context.getFormattedValue(getObject("ShowProductLinks"),null)).addURLParameter(context.getFormattedValue("ProductLinkPipeline",null),context.getFormattedValue(getObject("ProductLinkPipeline"),null)).addURLParameter(context.getFormattedValue("ProductLinkSite",null),context.getFormattedValue(getObject("ProductLinkSite"),null)).addURLParameter(context.getFormattedValue("LocaleId",null),context.getFormattedValue(getObject("LocaleId"),null))),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {36}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</src>\n<readonly>true</readonly>\n<items></items>\n</collection> \n");
 } else { 
      out.write("<collection id=\"back");
 {String value = null;try{value=context.getFormattedValue(getObject("Category:UUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {41}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<uri>");
 {String value = null;try{value=context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("HtmlEditor-GetCategories",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("OrganizationDomainId",null),context.getFormattedValue(getObject("OrganizationDomainId"),null))).addURLParameter(context.getFormattedValue("CatalogCategoryID",null),context.getFormattedValue(getObject("Category:ParentCategoryID"),null)).addURLParameter(context.getFormattedValue("ShowCategoryLinks",null),context.getFormattedValue(getObject("ShowCategoryLinks"),null)).addURLParameter(context.getFormattedValue("CategoryLinkPipeline",null),context.getFormattedValue(getObject("CategoryLinkPipeline"),null)).addURLParameter(context.getFormattedValue("CategoryLinkSite",null),context.getFormattedValue(getObject("CategoryLinkSite"),null)).addURLParameter(context.getFormattedValue("ShowProductLinks",null),context.getFormattedValue(getObject("ShowProductLinks"),null)).addURLParameter(context.getFormattedValue("ProductLinkPipeline",null),context.getFormattedValue(getObject("ProductLinkPipeline"),null)).addURLParameter(context.getFormattedValue("ProductLinkSite",null),context.getFormattedValue(getObject("ProductLinkSite"),null)).addURLParameter(context.getFormattedValue("LocaleId",null),context.getFormattedValue(getObject("LocaleId"),null))),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {42}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</uri>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("Catalog:isProxy"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",43,e);}if (_boolean_result) { 
      out.write("<icon>");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/css/ServerBrowser/icon_shared_folder.gif</icon>");
 } else { 
      out.write("<icon>");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/css/ServerBrowser/ic_folder.gif</icon>");
 } 
      out.write("<title>[..]</title>\n<src>");
 {String value = null;try{value=context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("HtmlEditor-GetCategories",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("OrganizationDomainId",null),context.getFormattedValue(getObject("OrganizationDomainId"),null))).addURLParameter(context.getFormattedValue("CatalogCategoryID",null),context.getFormattedValue(getObject("Category:ParentCategoryID"),null)).addURLParameter(context.getFormattedValue("ShowCategoryLinks",null),context.getFormattedValue(getObject("ShowCategoryLinks"),null)).addURLParameter(context.getFormattedValue("CategoryLinkPipeline",null),context.getFormattedValue(getObject("CategoryLinkPipeline"),null)).addURLParameter(context.getFormattedValue("CategoryLinkSite",null),context.getFormattedValue(getObject("CategoryLinkSite"),null)).addURLParameter(context.getFormattedValue("ShowProductLinks",null),context.getFormattedValue(getObject("ShowProductLinks"),null)).addURLParameter(context.getFormattedValue("ProductLinkPipeline",null),context.getFormattedValue(getObject("ProductLinkPipeline"),null)).addURLParameter(context.getFormattedValue("ProductLinkSite",null),context.getFormattedValue(getObject("ProductLinkSite"),null)).addURLParameter(context.getFormattedValue("LocaleId",null),context.getFormattedValue(getObject("LocaleId"),null))),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {49}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</src>\n<readonly>true</readonly>\n<items></items>\n</collection> \n");
 } 
 while (loop("SubCategories","SubCategory",null)) { 
      out.write("<collection id=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("SubCategory:UUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {56}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<uri>category://");
 {String value = null;try{value=context.getFormattedValue(getObject("SubCategory:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {57}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('@');
 {String value = null;try{value=context.getFormattedValue(getObject("SubCategory:Domain:DomainName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {57}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</uri>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("Catalog:isProxy"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",58,e);}if (_boolean_result) { 
      out.write("<icon>");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/css/ServerBrowser/icon_shared_folder.gif</icon>");
 } else { 
      out.write("<icon>");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/css/ServerBrowser/ic_folder.gif</icon>");
 } 
      out.write("<title>");
 {String value = null;try{value=context.getFormattedValue(getObject("SubCategory:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {63}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</title>\n<description>");
 {String value = null;try{value=context.getFormattedValue(getObject("SubCategory:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {64}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</description>\n<description2>");
 {out.write(localizeISText("CategoryLinkList.Category.description2",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</description2>\n<src>");
 {String value = null;try{value=context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("HtmlEditor-GetCategories",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("OrganizationDomainId",null),context.getFormattedValue(getObject("OrganizationDomainId"),null))).addURLParameter(context.getFormattedValue("CatalogCategoryID",null),context.getFormattedValue(getObject("SubCategory:UUID"),null)).addURLParameter(context.getFormattedValue("ShowCategoryLinks",null),context.getFormattedValue(getObject("ShowCategoryLinks"),null)).addURLParameter(context.getFormattedValue("CategoryLinkPipeline",null),context.getFormattedValue(getObject("CategoryLinkPipeline"),null)).addURLParameter(context.getFormattedValue("CategoryLinkSite",null),context.getFormattedValue(getObject("CategoryLinkSite"),null)).addURLParameter(context.getFormattedValue("ShowProductLinks",null),context.getFormattedValue(getObject("ShowProductLinks"),null)).addURLParameter(context.getFormattedValue("ProductLinkPipeline",null),context.getFormattedValue(getObject("ProductLinkPipeline"),null)).addURLParameter(context.getFormattedValue("ProductLinkSite",null),context.getFormattedValue(getObject("ProductLinkSite"),null)).addURLParameter(context.getFormattedValue("LocaleId",null),context.getFormattedValue(getObject("LocaleId"),null))),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {66}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</src>\n<readonly>true</readonly>\n<items> </items>\n</collection> \n");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) ((((context.getFormattedValue(getObject("ShowCategoryLinks"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",71,e);}if (_boolean_result) { 
      out.write("<resource id=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Category:UUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {72}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<uri>category://");
 {String value = null;try{value=context.getFormattedValue(getObject("Category:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {73}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('@');
 {String value = null;try{value=context.getFormattedValue(getObject("Category:Domain:DomainName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {73}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</uri>\n<title>");
 {String value = null;try{value=context.getFormattedValue(getObject("Category:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {74}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(".link</title>\n<description>");
 {String value = null;try{value=context.getFormattedValue(getObject("Category:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {75}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</description>\n<description2>");
 {out.write(localizeISText("Categories.Category.description2",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</description2>\n<size> </size>\n<height>0</height>\n<width>0</width>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("Catalog:isProxy"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",80,e);}if (_boolean_result) { 
      out.write("<icon>");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/shared_product.gif</icon>");
 } 
      out.write("<readonly>true</readonly>\n<preview></preview>\n</resource>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) ((((context.getFormattedValue(getObject("ShowProductLinks"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",87,e);}if (_boolean_result) { 
 while (loop("Products","Product",null)) { 
      out.write("<resource id=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Product:UUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {89}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<uri>product://");
 {String value = null;try{value=context.getFormattedValue(getObject("Product:SKU"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {90}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('@');
 {String value = null;try{value=context.getFormattedValue(getObject("Product:Domain:DomainName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {90}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</uri>\n<title>");
 {String value = null;try{value=context.getFormattedValue(getObject("Product:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {91}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(".link</title>\n<description>");
 {String value = null;try{value=context.getFormattedValue(getObject("Product:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {92}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</description>\n<description2>");
 {out.write(localizeISText("Categories.Product.description2",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</description2>\n<size> </size>\n<height>0</height>\n<width>0</width>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("Product:DerivedProduct"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",97,e);}if (_boolean_result) { 
      out.write("<icon>");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/shared_product.gif</icon>");
 } 
      out.write("<src>");
 {String value = null;try{value=context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue(getObject("ProductLinkPipeline"),null),context.getFormattedValue(getObject("ProductLinkServerGroup"),null),context.getFormattedValue(getObject("ProductLinkSite"),null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("ProductUUID",null),context.getFormattedValue(getObject("Product:UUID"),null))).addURLParameter(context.getFormattedValue("CatalogCategoryID",null),context.getFormattedValue(getObject("Category:UUID"),null)).addURLParameter(context.getFormattedValue("SKU",null),context.getFormattedValue(getObject("Product:SKU"),null))),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {100}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</src>\n<readonly>true</readonly>\n<preview>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("CurrentChannel"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",102,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue(context.getFormattedValue("ViewProductImage_",null) + context.getFormattedValue(getObject("CurrentChannel:TypeCode"),null) + context.getFormattedValue("-GenerateProductThumbnail",null),null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("ProductID",null),context.getFormattedValue(getObject("Product:UUID"),null)))),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {102}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
 {String value = null;try{value=context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewProductImage-GenerateProductThumbnail",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("ProductID",null),context.getFormattedValue(getObject("Product:UUID"),null)))),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {102}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } 
      out.write("</preview> \n</resource>");
 } 
 processOpenTag(response, pageContext, "kupuresourcepaging", new TagParameter[] {
new TagParameter("Pageable",getObject("Products")),
new TagParameter("ResourceIdPrefix",getObject("Category:UUID")),
new TagParameter("GetterParam2","ShowProductLinks"),
new TagParameter("GetterPipeline","HtmlEditor-GetCategories"),
new TagParameter("GetterValue0",getObject("Category:UUID")),
new TagParameter("GetterParam1","ShowCategoryLinks"),
new TagParameter("GetterParam0","CatalogCategoryID"),
new TagParameter("GetterValue1",getObject("ShowCategoryLinks")),
new TagParameter("GetterValue2",getObject("ShowProductLinks"))}, 105); 
 } 
      out.write("</items>\n</collection>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
