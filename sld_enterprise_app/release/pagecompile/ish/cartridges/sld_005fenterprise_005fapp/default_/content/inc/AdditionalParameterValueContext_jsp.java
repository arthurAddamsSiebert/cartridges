/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.content.inc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;
import com.intershop.component.pmc.capi.model.PageletModelRepository;
import com.intershop.component.pmc.capi.definition.pagelet.ConfigurationParameterType;
import com.intershop.sellside.pmc.capi.PageletModelUtils;
import com.intershop.component.pmc.capi.definition.pagelet.ConfigurationParameterDefinition;
import com.intershop.beehive.emf.core.Parameter;
import com.intershop.beehive.emf.core.ParameterValueBinding;

public final class AdditionalParameterValueContext_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

public static class ValueContext
    {
        private PageletModelRepository pageletModelRepository;
        private ConfigurationParameterDefinition cpd;

        private ValueContext(PageletModelRepository pageletModelRepository, ConfigurationParameterDefinition cpd)
        {
            this.pageletModelRepository = pageletModelRepository;
            this.cpd = cpd;
            if (cpd == null) throw new RuntimeException("Attribute \"ConfigurationParameterDefinition\" must not be null.");
            if (pageletModelRepository == null) throw new RuntimeException("Attribute \"PageletModelRepository\" must not be null.");
        }

        public Object getValueOf(ParameterValueBinding<Parameter> pvb)
        {
            ConfigurationParameterType type = PageletModelUtils.INSTANCE.getConfigurationParameterType(cpd, pageletModelRepository);
            Parameter p = type.getAdditionalParametersAsMap().get(pvb.getName());

            if (p != null)
            {
                String javaType = p.getType();
                if (javaType == null || javaType.equals("java.lang.String"))
                {
                    return pvb.getValue();
                }
                else
                {

                    Object ret = null;
                    try
                    {
                        ret =
                            StringUtil.convertStringValue(pvb.getValue(), getClass().getClassLoader().loadClass(javaType));
                        if (ret == null) Logger.warn(this, "", javaType);
                    }
                    catch(ClassNotFoundException cnfe)
                    {
                        String msg =
                            String.format("Invalid type '%s' configured in configuration parameter type '%s'.", javaType, type.getQualifiedName());
                        Logger.error(this, msg, cnfe);
                    }

                    return (ret != null) ? ret : pvb.getValue();
                }
            }
            return pvb.getValue();
        }
    }
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
      out.write("\n\n\n\n\n\n\n");
 
setEncodingType("text/html"); 

    getPipelineDictionary().put("ValueContext", new ValueContext((PageletModelRepository)getObject("PageletModelRepository"), (ConfigurationParameterDefinition)getObject("ConfigurationParameterDefinition")));

 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
