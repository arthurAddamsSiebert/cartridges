/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.content.refsiteparameters;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class LinkParameterInc_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"webcontrols/Modules", null, "2");} 
 out.print(context.prepareWAPlacement("JSWebLibraries")); 
      out.write("bridge/bridge.js");
 out.print("</waplacement>"); 
 out.print(context.prepareWAPlacement("JSWebLibraries")); 
      out.write("pageselection.js");
 out.print("</waplacement>"); 
 out.print(context.prepareWAPlacement("JSWebLibraries")); 
      out.write("jquery/popupmenu/jquery.popupmenu.js");
 out.print("</waplacement>"); 
 out.print(context.prepareWAPlacement("CSSWebLibraries")); 
      out.write("jquery/popupmenu/jquery.popupmenu.css");
 out.print("</waplacement>"); 
      out.write("<div id=\"");
      out.print(context.getFormattedValue(encodeString(context.getFormattedValue(context.getFormattedValue("categorySelectionDialog_",null) + context.getFormattedValue(getObject("ConfigurationParameterDefinition:Name"),null),null)),null));
      out.write("\" class=\"js-dialog\" data-title=\"");
 {out.write(localizeISText("content.pageselection.selectcategory.title","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" width=\"989\" data-draggable=\"true\" data-configparametername=\"");
      out.print(context.getFormattedValue(encodeString(context.getFormattedValue(getObject("ConfigurationParameterDefinition:Name"),null)),null));
      out.write("\">\n<iframe src=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewCategorySelection-Start",null)))),null));
      out.write("\" class=\"dialog-iframe\"></iframe>\n</div>\n<div id=\"");
      out.print(context.getFormattedValue(encodeString(context.getFormattedValue(context.getFormattedValue("productSelectionDialog_",null) + context.getFormattedValue(getObject("ConfigurationParameterDefinition:Name"),null),null)),null));
      out.write("\" class=\"js-dialog\" data-title=\"");
 {out.write(localizeISText("content.pageselection.selectproduct.title","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" width=\"989\" data-draggable=\"true\" data-configparametername=\"");
      out.print(context.getFormattedValue(encodeString(context.getFormattedValue(getObject("ConfigurationParameterDefinition:Name"),null)),null));
      out.write("\">\n<iframe src=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewProductSelection-Search",null)))),null));
      out.write("\" class=\"dialog-iframe\"></iframe>\n</div>\n<div id=\"");
      out.print(context.getFormattedValue(encodeString(context.getFormattedValue(context.getFormattedValue("pageSelectionDialog_",null) + context.getFormattedValue(getObject("ConfigurationParameterDefinition:Name"),null),null)),null));
      out.write("\" class=\"js-dialog\" data-title=\"");
 {out.write(localizeISText("content.pageselection.selectpage.title","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" width=\"989\" data-draggable=\"true\" data-configparametername=\"");
      out.print(context.getFormattedValue(encodeString(context.getFormattedValue(getObject("ConfigurationParameterDefinition:Name"),null)),null));
      out.write("\">\n<iframe src=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewPageSelection-Start",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepositoryUUID"),null)))),null));
      out.write("\" class=\"dialog-iframe\"></iframe>\n</div>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td>\n<input type=\"text\" size=\"48\" class=\"inputfield_en\"\nid=\"ConfigurationParameter_");
 {String value = null;try{value=context.getFormattedValue(getObject("ConfigurationParameterDefinition:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {27}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nname=\"ConfigurationParameter_");
 {String value = null;try{value=context.getFormattedValue(getObject("ConfigurationParameterDefinition:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {28}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" \nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ConfigurationParameterWebForm:getParameter(ConfigurationParameterDefinition:Name):Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {29}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write(' ');
      out.write('\n');
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (getObject("IsPageletEditable"))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",30,e);}if (_boolean_result) { 
      out.write("disabled=\"disabled\"");
 } 
      out.write("\n/>\n</td>\n<td class=\"button\">\n<button class=\"button button_popmenu button_with_margin\"\nid=\"button_popmenu_");
 {String value = null;try{value=context.getFormattedValue(getObject("ConfigurationParameterDefinition:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {35}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('\n');
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (getObject("IsPageletEditable"))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",36,e);}if (_boolean_result) { 
      out.write("disabled=\"disabled\"");
 } 
      out.write('>');
 {out.write(localizeISText("content.pageselection.selectpage.button.text","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</button>\n<style>\n.small\n{\nheight: 650px !important;\n}\n.medium\n{\nheight: 720px !important;\n}\n.big\n{\nheight: 820px !important;\n}\n</style>\n<script>\nfunction dialogResize()\n{\nvar expression = \"");
      out.print(context.getFormattedValue(context.getFormattedValue("_",null) + context.getFormattedValue(getObject("ConfigurationParameterDefinition:Name"),null),null));
      out.write("\";\nif($(window).height() > 950)\n{\n$(\"div[id*='\" + expression + \"']\").removeClass('small');\n$(\"div[id*='\" + expression + \"']\").removeClass('medium');\n$(\"div[id*='\" + expression + \"']\").addClass('big');\n}\nelse if($(window).height() <= 950 && $(window).height() > 880)\n{\n$(\"div[id*='\" + expression + \"']\").removeClass('big');\n$(\"div[id*='\" + expression + \"']\").removeClass('small');\n$(\"div[id*='\" + expression + \"']\").addClass('medium');\n}\nelse if($(window).height() <= 880)\n{\n$(\"div[id*='\" + expression + \"']\").removeClass('medium');\n$(\"div[id*='\" + expression + \"']\").removeClass('big');\n$(\"div[id*='\" + expression + \"']\").addClass('small');\n}\n}\ndialogResize();\n$(window).resize(function(){\ndialogResize();\n})\nvar items = [\n{\nrender: '<span data-action=\"dialog-open ");
      out.print(context.getFormattedValue(encodeString(context.getFormattedValue(context.getFormattedValue("#productSelectionDialog_",null) + context.getFormattedValue(getObject("ConfigurationParameterDefinition:Name"),null),null),(String)("javascript")),null));
      out.write('"');
      out.write('>');
 {out.write(localizeISText("content.pageselection.selectpage.productpage.text","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</span>',\ncssClass: 'dialog_open'\n},\n{\nrender: '<span data-action=\"dialog-open ");
      out.print(context.getFormattedValue(encodeString(context.getFormattedValue(context.getFormattedValue("#categorySelectionDialog_",null) + context.getFormattedValue(getObject("ConfigurationParameterDefinition:Name"),null),null),(String)("javascript")),null));
      out.write('"');
      out.write('>');
 {out.write(localizeISText("content.pageselection.selectpage.categorypage.text","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</span>',\ncssClass: 'dialog_open'\n},\n{\nrender: '<span data-action=\"dialog-open ");
      out.print(context.getFormattedValue(encodeString(context.getFormattedValue(context.getFormattedValue("#pageSelectionDialog_",null) + context.getFormattedValue(getObject("ConfigurationParameterDefinition:Name"),null),null),(String)("javascript")),null));
      out.write('"');
      out.write('>');
 {out.write(localizeISText("content.pageselection.selectpage.contentpage.text","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</span>',\ncssClass: 'dialog_open'\n}\n];\n$('");
      out.print(context.getFormattedValue(context.getFormattedValue("#button_popmenu_",null) + context.getFormattedValue(getObject("ConfigurationParameterDefinition:Name"),null),null));
      out.write("').popupmenu({\nitems: items\n});\n</script>\n</td>\n</tr>\n</table>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
