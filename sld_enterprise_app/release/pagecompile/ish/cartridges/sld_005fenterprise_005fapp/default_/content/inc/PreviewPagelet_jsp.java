/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.content.inc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class PreviewPagelet_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

 protected Boolean printTemplateMarker() { return Boolean.FALSE; } 
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 

setEncodingType("text/html"); 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("PageFlag"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("TemplateFlag"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",1,e);}if (_boolean_result) { 
 processOpenTag(response, pageContext, "previewicon", new TagParameter[] {
new TagParameter("contextParameter2",getObject("contextParameter2")),
new TagParameter("contextParameter3",getObject("contextParameter3")),
new TagParameter("contextParameter4",getObject("contextParameter4")),
new TagParameter("previewURL",url(true,(new URLPipelineAction(context.getFormattedValue("ViewPagelet-Preview",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepository:UUID"),null))).addURLParameter(context.getFormattedValue("PageletUUID",null),context.getFormattedValue(getObject("Pagelet:UUID"),null)))),
new TagParameter("contextParameter5",getObject("contextParameter5")),
new TagParameter("contextParameter6",getObject("contextParameter6")),
new TagParameter("contextParameter7",getObject("contextParameter7")),
new TagParameter("contextValue0",getObject("contextValue0")),
new TagParameter("contextParameter8",getObject("contextParameter8")),
new TagParameter("imageBorder","0"),
new TagParameter("contextValue1",getObject("contextValue1")),
new TagParameter("contextParameter9",getObject("contextParameter9")),
new TagParameter("imageAlt",localizeText(context.getFormattedValue("PreviewPagelet.OpenASitePreviewForThisPageTemplateWithTheCurrentD.imageAlt",null))),
new TagParameter("contextParameter0",getObject("contextParameter0")),
new TagParameter("contextParameter1",getObject("contextParameter1")),
new TagParameter("contextPipeline",getObject("contextPipeline")),
new TagParameter("contextValue2",getObject("contextValue2")),
new TagParameter("contextValue3",getObject("contextValue3")),
new TagParameter("contextValue4",getObject("contextValue4")),
new TagParameter("contextValue5",getObject("contextValue5")),
new TagParameter("imageTitle",localizeText(context.getFormattedValue("PreviewPagelet.OpenASitePreviewForThisPageTemplateWithTheCurrentD.imageTitle",null))),
new TagParameter("contextValue6",getObject("contextValue6")),
new TagParameter("contextValue7",getObject("contextValue7")),
new TagParameter("contextValue8",getObject("contextValue8")),
new TagParameter("contextValue9",getObject("contextValue9")),
new TagParameter("linkClass","sfe-hidden")}, 2); 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("PageFlag"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",19,e);}if (_boolean_result) { 
 processOpenTag(response, pageContext, "previewicon", new TagParameter[] {
new TagParameter("contextParameter2",getObject("contextParameter2")),
new TagParameter("contextParameter3",getObject("contextParameter3")),
new TagParameter("contextParameter4",getObject("contextParameter4")),
new TagParameter("previewURL",url(true,(new URLPipelineAction(context.getFormattedValue("ViewPagelet-Preview",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepository:UUID"),null))).addURLParameter(context.getFormattedValue("PageletUUID",null),context.getFormattedValue(getObject("Pagelet:UUID"),null)))),
new TagParameter("contextParameter5",getObject("contextParameter5")),
new TagParameter("contextParameter6",getObject("contextParameter6")),
new TagParameter("contextParameter7",getObject("contextParameter7")),
new TagParameter("contextValue0",getObject("contextValue0")),
new TagParameter("contextParameter8",getObject("contextParameter8")),
new TagParameter("imageBorder","0"),
new TagParameter("contextValue1",getObject("contextValue1")),
new TagParameter("contextParameter9",getObject("contextParameter9")),
new TagParameter("imageAlt",localizeText(context.getFormattedValue("PreviewPagelet.OpenASitePreviewForThisPageVariantWithTheSelectedS.imageAlt",null))),
new TagParameter("contextParameter0",getObject("contextParameter0")),
new TagParameter("contextParameter1",getObject("contextParameter1")),
new TagParameter("contextPipeline",getObject("contextPipeline")),
new TagParameter("contextValue2",getObject("contextValue2")),
new TagParameter("contextValue3",getObject("contextValue3")),
new TagParameter("contextValue4",getObject("contextValue4")),
new TagParameter("contextValue5",getObject("contextValue5")),
new TagParameter("imageTitle",localizeText(context.getFormattedValue("PreviewPagelet.OpenASitePreviewForThisPageVariantWithTheSelectedS.imageTitle",null))),
new TagParameter("contextValue6",getObject("contextValue6")),
new TagParameter("contextValue7",getObject("contextValue7")),
new TagParameter("contextValue8",getObject("contextValue8")),
new TagParameter("contextValue9",getObject("contextValue9")),
new TagParameter("linkClass","sfe-hidden")}, 20); 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("PageFlag"),null).equals(context.getFormattedValue("false",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("TemplateFlag"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",37,e);}if (_boolean_result) { 
 processOpenTag(response, pageContext, "previewicon", new TagParameter[] {
new TagParameter("contextParameter2",getObject("contextParameter2")),
new TagParameter("contextParameter3",getObject("contextParameter3")),
new TagParameter("contextParameter4",getObject("contextParameter4")),
new TagParameter("previewURL",url(true,(new URLPipelineAction(context.getFormattedValue("ViewPagelet-Preview",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepository:UUID"),null))).addURLParameter(context.getFormattedValue("PageletUUID",null),context.getFormattedValue(getObject("Pagelet:UUID"),null)))),
new TagParameter("contextParameter5",getObject("contextParameter5")),
new TagParameter("contextParameter6",getObject("contextParameter6")),
new TagParameter("contextParameter7",getObject("contextParameter7")),
new TagParameter("contextValue0",getObject("contextValue0")),
new TagParameter("contextParameter8",getObject("contextParameter8")),
new TagParameter("imageBorder","0"),
new TagParameter("contextValue1",getObject("contextValue1")),
new TagParameter("contextParameter9",getObject("contextParameter9")),
new TagParameter("imageAlt",localizeText(context.getFormattedValue("PreviewPagelet.OpenASitePreviewForThisComponentTemplateWithTheCur.imageAlt",null))),
new TagParameter("contextParameter0",getObject("contextParameter0")),
new TagParameter("contextParameter1",getObject("contextParameter1")),
new TagParameter("contextPipeline",getObject("contextPipeline")),
new TagParameter("contextValue2",getObject("contextValue2")),
new TagParameter("contextValue3",getObject("contextValue3")),
new TagParameter("contextValue4",getObject("contextValue4")),
new TagParameter("contextValue5",getObject("contextValue5")),
new TagParameter("imageTitle",localizeText(context.getFormattedValue("PreviewPagelet.OpenASitePreviewForThisComponentTemplateWithTheCur.imageTitle",null))),
new TagParameter("contextValue6",getObject("contextValue6")),
new TagParameter("contextValue7",getObject("contextValue7")),
new TagParameter("contextValue8",getObject("contextValue8")),
new TagParameter("contextValue9",getObject("contextValue9")),
new TagParameter("linkClass","sfe-hidden")}, 38); 
 } else { 
 processOpenTag(response, pageContext, "previewicon", new TagParameter[] {
new TagParameter("contextParameter2",getObject("contextParameter2")),
new TagParameter("contextParameter3",getObject("contextParameter3")),
new TagParameter("contextParameter4",getObject("contextParameter4")),
new TagParameter("previewURL",url(true,(new URLPipelineAction(context.getFormattedValue("ViewPagelet-Preview",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepository:UUID"),null))).addURLParameter(context.getFormattedValue("PageletUUID",null),context.getFormattedValue(getObject("Pagelet:UUID"),null)))),
new TagParameter("contextParameter5",getObject("contextParameter5")),
new TagParameter("contextParameter6",getObject("contextParameter6")),
new TagParameter("contextParameter7",getObject("contextParameter7")),
new TagParameter("contextValue0",getObject("contextValue0")),
new TagParameter("contextParameter8",getObject("contextParameter8")),
new TagParameter("imageBorder","0"),
new TagParameter("contextValue1",getObject("contextValue1")),
new TagParameter("contextParameter9",getObject("contextParameter9")),
new TagParameter("imageAlt",localizeText(context.getFormattedValue("PreviewPagelet.OpenASitePreviewForThisComponentWithTheSelectedSta.imageAlt",null))),
new TagParameter("contextParameter0",getObject("contextParameter0")),
new TagParameter("contextParameter1",getObject("contextParameter1")),
new TagParameter("contextPipeline",getObject("contextPipeline")),
new TagParameter("contextValue2",getObject("contextValue2")),
new TagParameter("contextValue3",getObject("contextValue3")),
new TagParameter("contextValue4",getObject("contextValue4")),
new TagParameter("contextValue5",getObject("contextValue5")),
new TagParameter("imageTitle",localizeText(context.getFormattedValue("PreviewPagelet.OpenASitePreviewForThisComponentWithTheSelectedSta.imageTitle",null))),
new TagParameter("contextValue6",getObject("contextValue6")),
new TagParameter("contextValue7",getObject("contextValue7")),
new TagParameter("contextValue8",getObject("contextValue8")),
new TagParameter("contextValue9",getObject("contextValue9")),
new TagParameter("linkClass","sfe-hidden")}, 55); 
 }}} 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
