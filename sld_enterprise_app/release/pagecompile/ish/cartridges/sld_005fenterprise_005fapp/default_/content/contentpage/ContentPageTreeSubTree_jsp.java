/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.content.contentpage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;
import com.intershop.beehive.core.capi.request.Request;
import java.util.Map;
import com.intershop.sellside.enterprise.internal.pagelet.PageletEntryPointTree;
import com.intershop.beehive.core.capi.domain.Domain;
import com.intershop.component.pmc.capi.pagelet.PageletEntryPoint;
import com.intershop.component.mvc.capi.catalog.Repository;

public final class ContentPageTreeSubTree_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
 getPipelineDictionary().put("CurrentUser", Request.getCurrent().getSession().getUser()); 
 processOpenTag(response, pageContext, "contentpermissionmap", new TagParameter[] {
new TagParameter("ContentRepository",getObject("ContentRepository")),
new TagParameter("PermissionMap","PermissionMap")}, 5); 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"inc/Modules", null, "6");} 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"content/Modules", null, "7");} 
 processOpenTag(response, pageContext, "pageletmodelutils", new TagParameter[] {
new TagParameter("PageletModelUtils","PageletModelUtils")}, 8); 
 context.setCustomTagTemplateName("contentpagetreesubtree","content/contentpage/ContentPageTreeSubTree.isml",true,new String[]{"PageletEntryPoint","ExcludedPageletEntryPoint","ContentRepository","SelectedElement","Locale","SelectionListing","DepthCounter","RowCounter","ExpandedEntries","HasMoreMap","Site","contextpipeline","parametername0","parametervalue0","parametername1","parametervalue1","parametername2","parametervalue2","parametername3","parametervalue3"},new String[]{"ReturnRowCounter"}); 
 context.setCustomTagTemplateName("contentpagetreehaselements","content/contentpage/ContentPageTreeHasElements.isml",true,new String[]{"PageletEntryPoint","ContentRepository"},new String[]{"ContentPageTreeHasElements"}); 
 
	PageletEntryPointTree tree = PageletEntryPointTree.newInstance(
		(PageletEntryPoint)getObject("PageletEntryPoint"), (PageletEntryPoint)getObject("ExcludedPageletEntryPoint"), (Repository)getObject("ContentRepository")); 
	getPipelineDictionary().put("Tree", tree);

	Map hasMoreMap = (Map)getObject("HasMoreMap");
	Double depthCounter = (Double)getObject("DepthCounter");

 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("Tree:getChildren(Locale)") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",54,e);}if (_boolean_result) { 
 while (loop("Tree:getChildren(Locale)","ContentPage",null)) { 
 processOpenTag(response, pageContext, "createmap", new TagParameter[] {
new TagParameter("key1","PreferenceDomain"),
new TagParameter("key2","User"),
new TagParameter("key0","PageletEntryPoint"),
new TagParameter("value2",getObject("CurrentUser")),
new TagParameter("value1",getObject("ContentRepository:RepositoryDomain")),
new TagParameter("value0",getObject("ContentPage")),
new TagParameter("mapname","ProcessPageletEntryPointLockParams")}, 56); 
 {try{executePipeline("ProcessPageletEntryPointLock-Lookup",((java.util.Map)(getObject("ProcessPageletEntryPointLockParams"))),"PageletEntryPointLockInfoDictionary");}catch(Exception e){Logger.error(this,"ISPIPELINE failed. Line: 60.",e);}} 
      out.write("<tr class=\"");
 if ((Double)getObject("RowCounter")%2 == 1.00) {
      out.write("odd ");
}
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SelectedElement:UUID"),null).equals(context.getFormattedValue(getObject("ContentPage:UUID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",61,e);}if (_boolean_result) { 
      out.write("active");
 } 
      out.write("\"> \n<td class=\"table_tree w e\">\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" height=\"100%\">\n<tr>");

						for ( int i = 0; i < depthCounter.intValue(); i ++ ) 
						{
							if ((hasMoreMap.get("level"+i) != null) && (hasMoreMap.get("level"+i).equals(true)))
							{
								
      out.write("<td style=\"width:22px;background: url(");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/cb_I.gif) repeat-y center;\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"22\" alt=\"\" border=\"0\" /></td>");

							}
							else
							{
								
      out.write("<td><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"22\" height=\"1\" alt=\"\" border=\"0\" /></td>");

							}
						}
					
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("Tree:isNode(ContentPage)"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",79,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((hasNext("ContentPage") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",80,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ExpandedEntries:Contains(ContentPage:UUID)"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",81,e);}if (_boolean_result) { 
      out.write("<td style=\"width:22px;background: url(");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/cb_minus.gif) no-repeat center;\">\n<a class=\"tree_icon_link\" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewContentPageTree-Collapse",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("PageletEntryPointUUID",null),context.getFormattedValue(getObject("ContentPage:UUID"),null))).addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepository:UUID"),null))),null));
      out.write("\">\n<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"22\" alt=\"\" border=\"0\" />\n</a>\n</td>");
 } else { 
      out.write("<td style=\"width:22px;background: url(");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/cb_plus.gif) no-repeat center;\">\n<a class=\"tree_icon_link\" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewContentPageTree-Expand",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("PageletEntryPointUUID",null),context.getFormattedValue(getObject("ContentPage:UUID"),null))).addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepository:UUID"),null))),null));
      out.write("\">\n<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"22\" alt=\"\" border=\"0\" />\n</a>\n</td>");
 } 
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ExpandedEntries:Contains(ContentPage:UUID)"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",95,e);}if (_boolean_result) { 
      out.write("<td style=\"width:22px;background: url(");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/cb_minus_bottom.gif) no-repeat center;\">\n<a class=\"tree_icon_link\" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewContentPageTree-Collapse",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("PageletEntryPointUUID",null),context.getFormattedValue(getObject("ContentPage:UUID"),null))).addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepository:UUID"),null))),null));
      out.write("\">\n<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"22\" alt=\"\" border=\"0\" />\n</a>\n</td>");
 } else { 
      out.write("<td style=\"width:22px;background: url(");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/cb_plus_bottom.gif) no-repeat center;\">\n<a class=\"tree_icon_link\" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewContentPageTree-Expand",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("PageletEntryPointUUID",null),context.getFormattedValue(getObject("ContentPage:UUID"),null))).addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepository:UUID"),null))),null));
      out.write("\">\n<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"22\" alt=\"\" border=\"0\" />\n</a>\n</td>");
 } 
 } 
      out.write(' ');
      out.write('\n');
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)((hasNext("ContentPage") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",111,e);}if (_boolean_result) { 
      out.write("<td style=\"width:22px;background: url(");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/cb_L_join.gif) no-repeat right;\"></td>");
 } else { 
      out.write("<td style=\"width:22px;background: url(");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/cb_L.gif) no-repeat right;\"></td>");
 } 
      out.write(' ');
      out.write('\n');
 } 
      out.write("<td>\n<table>\n<tr>\n<td>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("SelectionListing"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",123,e);}if (_boolean_result) { 
      out.write("<a class=\"table_detail_link\" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewContentPageTree-Select",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("SelectedPageUUID",null),context.getFormattedValue(getObject("ContentPage:UUID"),null))).addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepository:UUID"),null))),null));
      out.write('"');
      out.write('>');
 processOpenTag(response, pageContext, "pageletentrypointdisplayname", new TagParameter[] {
new TagParameter("Locale",getObject("Locale")),
new TagParameter("PageletEntryPoint",getObject("ContentPage"))}, 125); 
      out.write("</a>");
 } else { 
      out.write("<a class=\"table_detail_link\" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewPageletEntryPoint-View",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("PageletEntryPointUUID",null),context.getFormattedValue(getObject("ContentPage:UUID"),null))).addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepository:UUID"),null))),null));
      out.write('"');
      out.write('>');
 processOpenTag(response, pageContext, "pageletentrypointdisplayname", new TagParameter[] {
new TagParameter("Locale",getObject("Locale")),
new TagParameter("PageletEntryPoint",getObject("ContentPage"))}, 129); 
      out.write("</a>");
 } 
 processOpenTag(response, pageContext, "contentelementtooltip", new TagParameter[] {
new TagParameter("ContentElement",getObject("ContentPage"))}, 132); 
      out.write("</td>\n<td>");
 processOpenTag(response, pageContext, "pageletentrypointstatus", new TagParameter[] {
new TagParameter("PageletEntryPoint",getObject("ContentPage")),
new TagParameter("ContentRepository",getObject("ContentRepository"))}, 135); 
      out.write("</td>\n</tr>\n</table>\n</td>\n</tr>\n</table>\n</td>\n<td class=\"table_detail bold e\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) ((((context.getFormattedValue(getObject("SelectionListing"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",144,e);}if (_boolean_result) { 
      out.write("<a class=\"table_detail_link\" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewPageletEntryPoint-View",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("PageletEntryPointUUID",null),context.getFormattedValue(getObject("ContentPage:UUID"),null))).addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepository:UUID"),null))),null));
      out.write('"');
      out.write('>');
 processOpenTag(response, pageContext, "cropstring", new TagParameter[] {
new TagParameter("CropString","..."),
new TagParameter("String",getObject("ContentPage:Id")),
new TagParameter("MaxLength",new Double(23))}, 146); 
      out.write("</a>");
 } else { 
 processOpenTag(response, pageContext, "cropstring", new TagParameter[] {
new TagParameter("CropString","..."),
new TagParameter("String",getObject("ContentPage:Id")),
new TagParameter("MaxLength",new Double(23))}, 149); 
 } 
      out.write("</td>\n<td class=\"table_detail e\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PageletModelUtils:DisplayGroup(ContentPage:ContentEntryPointDefinition,Locale)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {153}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n<td class=\"table_detail e\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PageletModelUtils:DisplayName(ContentPage:ContentEntryPointDefinition,Locale)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {156}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n<td class=\"table_detail e\">");
 processOpenTag(response, pageContext, "pageletentrypointpublishedfrom", new TagParameter[] {
new TagParameter("PageletEntryPoint",getObject("ContentPage")),
new TagParameter("ContentRepository",getObject("ContentRepository")),
new TagParameter("MinPublishedFromDate","MinPublishedFromDate")}, 159); 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("MinPublishedFromDate"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",160,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(getObject("MinPublishedFromDate"),new Integer(DATE_INPUT),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {161}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;");
 {String value = null;try{value=context.getFormattedValue(getObject("MinPublishedFromDate"),new Integer(TIME_INPUT),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {161}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
 {out.write(localizeISText("ContentPageTreeSubTree.NoStartDate.table_detail",null,null,null,null,null,null,null,null,null,null,null,null));} 
 } 
      out.write("</td>\n<td class=\"table_detail e\">");
 processOpenTag(response, pageContext, "pageletentrypointpublishedto", new TagParameter[] {
new TagParameter("PageletEntryPoint",getObject("ContentPage")),
new TagParameter("ContentRepository",getObject("ContentRepository")),
new TagParameter("MaxPublishedToDate","MaxPublishedToDate")}, 167); 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("MaxPublishedToDate"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",168,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(getObject("MaxPublishedToDate"),new Integer(DATE_INPUT),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {169}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;");
 {String value = null;try{value=context.getFormattedValue(getObject("MaxPublishedToDate"),new Integer(TIME_INPUT),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {169}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
 {out.write(localizeISText("ContentPageTreeSubTree.NoEndDate.table_detail",null,null,null,null,null,null,null,null,null,null,null,null));} 
 } 
      out.write("</td>");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) ((((context.getFormattedValue(getObject("SelectionListing"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",174,e);}if (_boolean_result) { 
      out.write("<td nowrap=\"nowrap\" class=\"table_detail_actions e\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PermissionMap:SLD_MANAGE_CONTENT"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",176,e);}if (_boolean_result) { 
 processOpenTag(response, pageContext, "pageletlocking", new TagParameter[] {
new TagParameter("PageletEntryPoint",getObject("ContentPage")),
new TagParameter("User",getObject("CurrentUser")),
new TagParameter("LockInfoDictionary",getObject("PageletEntryPointLockInfoDictionary")),
new TagParameter("ContentRepository",getObject("ContentRepository"))}, 177); 
 _boolean_result=false;try {_boolean_result=((Boolean)(((!((Boolean) ((disableErrorMessages().isDefined(getObject("PageletEntryPointLockInfoDictionary:AllPageletEntryPointsLocked"))))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("PageletEntryPointLockInfoDictionary:AllPageletEntryPointsLocked"),null).equals(context.getFormattedValue("false",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",178,e);}if (_boolean_result) { 
 processOpenTag(response, pageContext, "copypageletentrypoint", new TagParameter[] {
new TagParameter("PageletEntryPoint",getObject("ContentPage")),
new TagParameter("ContentRepository",getObject("ContentRepository")),
new TagParameter("CopyOfPrefix","Copy of ")}, 179); 
 } 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PermissionMap:SLD_VIEW_STOREFRONT"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",182,e);}if (_boolean_result) { 
 processOpenTag(response, pageContext, "previewpage", new TagParameter[] {
new TagParameter("contextParameter2","SelectedPageUUID"),
new TagParameter("PageletEntryPoint",getObject("ContentPage")),
new TagParameter("PageFlag","true"),
new TagParameter("contextPipeline","ViewContentPageTree-List"),
new TagParameter("contextValue0",getObject("ContentRepository:UUID")),
new TagParameter("contextValue1","true"),
new TagParameter("ContentRepository",getObject("ContentRepository")),
new TagParameter("contextValue2",getObject("ContentPage:UUID")),
new TagParameter("contextParameter0","ContentRepositoryUUID"),
new TagParameter("contextParameter1","continuedSession")}, 183); 
 } 
      out.write("\n&nbsp;\n</td>");
 } 
      out.write("</tr>");
 {Object temp_obj = ((new Double( ((Number) getObject("RowCounter")).doubleValue() +((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("RowCounter", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("Tree:isNode(ContentPage)")).booleanValue() && ((Boolean) getObject("ExpandedEntries:Contains(ContentPage:UUID)")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",196,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((hasNext("ContentPage") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",198,e);}if (_boolean_result) { 

						hasMoreMap.put("level"+depthCounter.intValue(), true);
						getPipelineDictionary().put("HasMoreMap", hasMoreMap);
					
 } else { 

						hasMoreMap.put("level"+depthCounter.intValue(), false);
						getPipelineDictionary().put("HasMoreMap", hasMoreMap);
					
      out.write(' ');
      out.write('\n');
 } 
 processOpenTag(response, pageContext, "contentpagetreesubtree", new TagParameter[] {
new TagParameter("Locale",getObject("Locale")),
new TagParameter("Site",getObject("Site")),
new TagParameter("DepthCounter",(new Double( ((Number) getObject("DepthCounter")).doubleValue() +((Number) new Double(1)).doubleValue()))),
new TagParameter("HasMoreMap",getObject("HasMoreMap")),
new TagParameter("PageletEntryPoint",getObject("ContentPage")),
new TagParameter("ExpandedEntries",getObject("ExpandedEntries")),
new TagParameter("ExcludedPageletEntryPoint",getObject("ExcludedPageletEntryPoint")),
new TagParameter("ContentRepository",getObject("ContentRepository")),
new TagParameter("SelectionListing",getObject("SelectionListing")),
new TagParameter("SelectedElement",getObject("SelectedElement")),
new TagParameter("ReturnRowCounter","RowCounter"),
new TagParameter("RowCounter",getObject("RowCounter"))}, 210); 
 } 
 } 
 } 
 {Object temp_obj = (getObject("RowCounter")); getPipelineDictionary().put("ReturnRowCounter", temp_obj);} 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
