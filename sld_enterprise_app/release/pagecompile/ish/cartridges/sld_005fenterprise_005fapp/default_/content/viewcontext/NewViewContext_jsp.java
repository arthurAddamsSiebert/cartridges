/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.content.viewcontext;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class NewViewContext_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
      out.write('\n');
 
setEncodingType("text/html"); 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"content/Modules", null, "3");} 
 processOpenTag(response, pageContext, "pageletmodelutils", new TagParameter[] {
new TagParameter("PageletModelUtils","PageletModelUtils")}, 4); 
 processOpenTag(response, pageContext, "breadcrumbtrail", new TagParameter[] {
new TagParameter("link",url(true,(new URLPipelineAction(context.getFormattedValue("ViewViewContext-New",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepository:UUID"),null))))),
new TagParameter("id","NewViewContext"),
new TagParameter("text",localizeText(context.getFormattedValue("NewViewContext.NewViewContext.text",null)))}, 6); 
      out.write("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n<tr>\n<td width=\"100%\" class=\"table_title aldi\">");
 {out.write(localizeISText("NewViewContext.NewViewContext.table_title",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>\n<!-- Error Handling -->");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ViewContextForm:isInvalid"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",13,e);}if (_boolean_result) { 
      out.write("<tr>\n<td>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"4\" width=\"100%\" class=\"error_box w e s\">\n<tr>\n<td class=\"error_icon middle e\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/error.gif\" width=\"16\" height=\"15\" alt=\"\" border=\"0\"/></td>\n<td class=\"error top\" width=\"100%\">");
 {out.write(localizeISText("NewViewContext.TheViewContextCouldNotBeCreated.error",null,null,null,null,null,null,null,null,null,null,null,null));} 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ViewContextForm:DisplayName:isInvalid"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",21,e);}if (_boolean_result) { 
 while (loop("ViewContextForm:DisplayName:Errors","Error",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("Error"),null).equals(context.getFormattedValue("error.required",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",23,e);}if (_boolean_result) { 
      out.write("<br/>");
 {out.write(localizeISText("NewViewContext.PleaseProvideAName.error",null,null,null,null,null,null,null,null,null,null,null,null));} 
 } 
 } 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ViewContextForm:Id:isInvalid"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",28,e);}if (_boolean_result) { 
 while (loop("ViewContextForm:Id:Errors","Error",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("Error"),null).equals(context.getFormattedValue("error.required",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",30,e);}if (_boolean_result) { 
      out.write("<br/>");
 {out.write(localizeISText("NewViewContext.PleaseProvideAnID.error",null,null,null,null,null,null,null,null,null,null,null,null));} 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("Error"),null).equals(context.getFormattedValue("error.regexp",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",32,e);}if (_boolean_result) { 
      out.write("<br/>");
 {out.write(localizeISText("NewViewContext.TheIDMustNotContainSpecialCharactersValidCharacter.error",null,null,null,null,null,null,null,null,null,null,null,null));} 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("Error"),null).equals(context.getFormattedValue("error.ViewContextAlreadyExists",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",34,e);}if (_boolean_result) { 
      out.write("<br/>");
 {out.write(localizeISText("NewViewContext.TheIDIsAlreadyUsedByADifferentViewContextPleasePro.error",null,null,null,null,null,null,null,null,null,null,null,null));} 
 }}} 
 } 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ViewContextForm:DefinitionQualifiedName:isInvalid"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",39,e);}if (_boolean_result) { 
 while (loop("ViewContextForm:DefinitionQualifiedName:Errors","Error",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("Error"),null).equals(context.getFormattedValue("error.required",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",41,e);}if (_boolean_result) { 
      out.write("<br/>");
 {out.write(localizeISText("NewViewContext.PleaseSelectAType.error",null,null,null,null,null,null,null,null,null,null,null,null));} 
 } 
      out.write("<br/>");
 } 
 } 
      out.write("</td>\n</tr>\n</table>\n</td>\n</tr>");
 } 
      out.write("<!-- EO Error Handling -->\n<tr>\n<td class=\"table_title_description w e s\">");
 {out.write(localizeISText("NewViewContext.NameYourViewContextAndChooseAType.table_title_description",null,null,"star",null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>\n</table>\n<!-- Main Content -->");
 URLPipelineAction action390 = new URLPipelineAction(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewViewContext-Dispatch",null)))),null));String site390 = null;String serverGroup390 = null;String actionValue390 = context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewViewContext-Dispatch",null)))),null);if (site390 == null){  site390 = action390.getDomain();  if (site390 == null)  {      site390 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getDomainName();  }}if (serverGroup390 == null){  serverGroup390 = action390.getServerGroup();  if (serverGroup390 == null)  {      serverGroup390 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getServerGroup();  }}out.print("<form");out.print(" method=\"");out.print("post");out.print("\"");out.print(" action=\"");out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewViewContext-Dispatch",null)))),null));out.print("\"");out.print(" name=\"");out.print(context.getFormattedValue(getObject("ViewContextForm:ID"),null));out.print("\"");out.print(">");out.print(context.prepareWACSRFTag(actionValue390, site390, serverGroup390,true)); 
      out.write("<input type=\"hidden\" name=\"ContentRepositoryUUID\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ContentRepository:UUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {62}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n<table border=\"0\" cellpadding=\"4\" cellspacing=\"0\" width=\"100%\" class=\"infobox_locale w e s\">\n<tr>\n<td class=\"infobox_item\" nowrap=\"nowrap\">");
 {out.write(localizeISText("NewViewContext.SelectLanguage.infobox_item",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</td>\n<td class=\"infobox_item\">\n<select name=\"LocaleId\" class=\"select inputfield_en\">");
 while (loop("Locales","Locales",null)) { 
      out.write("<option value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Locales:LocaleID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {69}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write(' ');
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("Locales:LocaleID"),null).equals(context.getFormattedValue(getObject("Locale:LocaleID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",69,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write('>');
 {String value = null;try{value=context.getFormattedValue(getObject("Locales:getDisplayName(CurrentSession:Locale)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {69}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</option>");
 } 
      out.write("</select>\n</td>\n<td width=\"100%\">\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<td class=\"button\">\n<input type=\"submit\" name=\"setLocaleForNew\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("NewViewContext.Apply.button",null)),null));
      out.write("\" class=\"button\"/>\n</td>\n</tr>\n</table>\n</td>\n</tr>\n</table>\n<table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n<tr><td class=\"w e\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"1\" height=\"4\" alt=\"\" border=\"0\"/></td></tr>\n<tr>\n<td class=\"w e\">\n<table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n<tr>\n<td class=\"");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ViewContextForm:DisplayName:isInvalid"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",91,e);}if (_boolean_result) { 
      out.write("fielditem2_error");
 } else { 
      out.write("fielditem2");
 } 
      out.write("\" nowrap=\"nowrap\">");
 {out.write(localizeISText("NewViewContext.Name.isif",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":<span class=\"star\">*</span></td>\n<td class=\"table_detail\" width=\"100%\">\n<input type=\"text\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ViewContextForm:DisplayName:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {93}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" maxlength=\"256\" size=\"50\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ViewContextForm:DisplayName:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {93}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" class=\"inputfield_en\"/>\n</td>\n</tr>\n<tr>\n<td class=\"");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ViewContextForm:Id:isInvalid"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",97,e);}if (_boolean_result) { 
      out.write("fielditem2_error");
 } else { 
      out.write("fielditem2");
 } 
      out.write("\" nowrap=\"nowrap\">");
 {out.write(localizeISText("NewViewContext.ID.isif",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":<span class=\"star\">*</span></td>\n<td class=\"table_detail\">\n<input type=\"text\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ViewContextForm:Id:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {99}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" maxlength=\"256\" size=\"50\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ViewContextForm:Id:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {99}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" class=\"inputfield_en\"/>\n</td>\n</tr>\n<tr>\n<td class=\"fielditem2\" nowrap=\"nowrap\">");
 {out.write(localizeISText("NewViewContext.Description.fielditem2",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</td> \n<td class=\"table_detail\">\n<textarea rows=\"5\" cols=\"47\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ViewContextForm:Description:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {105}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" class=\"inputfield_en\">");
 {String value = null;try{value=context.getFormattedValue(getObject("ViewContextForm:Description:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {105}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</textarea>\n</td>\n</tr>\n<tr>\n<td class=\"");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ViewContextForm:DefinitionQualifiedName:isInvalid"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",109,e);}if (_boolean_result) { 
      out.write("fielditem2_error");
 } else { 
      out.write("fielditem2");
 } 
      out.write("\" nowrap=\"nowrap\">");
 {out.write(localizeISText("NewViewContext.Type.isif",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":<span class=\"star\">*</span></td> \n<td class=\"table_detail\">");
 {Object temp_obj = (getObject("null")); getPipelineDictionary().put("selectedContextObjectRelation", temp_obj);} 
      out.write("<select class=\"select inputfield_en\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ViewContextForm:DefinitionQualifiedName:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {112}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" onchange=\"var el=document.createElement('input');el.type='hidden';el.name='setLocaleForNew';el.value='typeChanged';this.form.appendChild(el);this.form.submit();\">\n<optgroup label=\"Category Page\">");
 processOpenTag(response, pageContext, "contextobjectrelationselectoptions", new TagParameter[] {
new TagParameter("Locale",getObject("Locale")),
new TagParameter("ObjectType","Category"),
new TagParameter("NewSelection","selectedContextObjectRelation"),
new TagParameter("PageletModelRepository",getObject("PageletModelRepository")),
new TagParameter("Page","true"),
new TagParameter("CurrentSelection",getObject("selectedContextObjectRelation")),
new TagParameter("SelectedContextObjectRelation",getObject("ViewContextForm:DefinitionQualifiedName:Value"))}, 114); 
      out.write("</optgroup>\n<optgroup label=\"Product Page\">");
 processOpenTag(response, pageContext, "contextobjectrelationselectoptions", new TagParameter[] {
new TagParameter("Locale",getObject("Locale")),
new TagParameter("ObjectType","Product"),
new TagParameter("NewSelection","selectedContextObjectRelation"),
new TagParameter("PageletModelRepository",getObject("PageletModelRepository")),
new TagParameter("Page","true"),
new TagParameter("CurrentSelection",getObject("selectedContextObjectRelation")),
new TagParameter("SelectedContextObjectRelation",getObject("ViewContextForm:DefinitionQualifiedName:Value"))}, 117); 
      out.write("</optgroup>\n<optgroup label=\"Category Include\">");
 processOpenTag(response, pageContext, "contextobjectrelationselectoptions", new TagParameter[] {
new TagParameter("Locale",getObject("Locale")),
new TagParameter("ObjectType","Category"),
new TagParameter("NewSelection","selectedContextObjectRelation"),
new TagParameter("PageletModelRepository",getObject("PageletModelRepository")),
new TagParameter("Page","false"),
new TagParameter("CurrentSelection",getObject("selectedContextObjectRelation")),
new TagParameter("SelectedContextObjectRelation",getObject("ViewContextForm:DefinitionQualifiedName:Value"))}, 120); 
      out.write("</optgroup>\n<optgroup label=\"Product Include\">");
 processOpenTag(response, pageContext, "contextobjectrelationselectoptions", new TagParameter[] {
new TagParameter("Locale",getObject("Locale")),
new TagParameter("ObjectType","Product"),
new TagParameter("NewSelection","selectedContextObjectRelation"),
new TagParameter("PageletModelRepository",getObject("PageletModelRepository")),
new TagParameter("Page","false"),
new TagParameter("CurrentSelection",getObject("selectedContextObjectRelation")),
new TagParameter("SelectedContextObjectRelation",getObject("ViewContextForm:DefinitionQualifiedName:Value"))}, 123); 
      out.write("</optgroup>\n</select>\n</td>\n</tr>\n<tr>\n<td nowrap=\"nowrap\" class=\"label\"><label class=\"label\" for=\"CreateViewContext_Group\">");
 {out.write(localizeISText("NewViewContext.Group.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</label></td>\n<td class=\"table_detail\">\n<input type=\"text\" name=\"CreateViewContext_Group\" id=\"CreateViewContext_Group\" readonly=\"readonly\" size=\"50\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("PageletModelUtils:DisplayGroup(selectedContextObjectRelation,CurrentRequest:Locale)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {131}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" class=\"inputfield_en disabled\"/>\n</td>\n</tr>\n<tr>\n<td nowrap=\"nowrap\" class=\"label_textarea\"><label class=\"label label_textarea\" for=\"CreateViewContext_ApplicationTypes\">");
 {out.write(localizeISText("NewViewContext.ApplicationTypes.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</label></td>\n<td class=\"table_detail\">\n<select size=\"5\" name=\"CreateViewContext_ApplicationTypes\" id=\"CreateViewContext_ApplicationTypes\" class=\"inputfield_en disabled\" readonly=\"readonly\" style=\"min-width:200px\">");
 while (loop("PageletModelUtils:ApplicationTypes(selectedContextObjectRelation:PageletModel)","type",null)) { 
      out.write("<option>");
 {String value = null;try{value=context.getFormattedValue(getObject("type:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {139}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</option>");
 } 
      out.write("</select>\n</td>\n</tr>\n</table>\n</td>\n</tr>\n<tr><td class=\"w e s\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"1\" height=\"4\" alt=\"\" border=\"0\"/></td></tr>\n<tr>\n<td align=\"right\" class=\"w e s\">\n<table border=\"0\" cellspacing=\"4\" cellpadding=\"0\">\n<tr>\n<td class=\"button\">\n<input type=\"submit\" name=\"create\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("NewViewContext.Apply.button",null)),null));
      out.write("\" class=\"button\"/>\n</td>\n<td class=\"button\">\n<input type=\"submit\" name=\"cancel\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("NewViewContext.Cancel.button",null)),null));
      out.write("\" class=\"button\"/>\n</td>\n</tr>\n</table>\n</td>\n</tr>\n</table>");
 out.print("</form>"); 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
