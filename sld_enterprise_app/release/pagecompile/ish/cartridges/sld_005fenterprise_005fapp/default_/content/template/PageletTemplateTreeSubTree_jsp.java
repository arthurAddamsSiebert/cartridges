/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.content.template;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;
import com.intershop.component.pmc.capi.pagelet.ContentEntryPoint;
import com.intershop.component.pmc.capi.pagelet.PlaceholderDefinition;
import com.intershop.beehive.core.capi.request.Request;
import java.util.Map;
import java.util.Iterator;
import java.util.Collection;
import com.intershop.sellside.enterprise.internal.pagelet.PageletTemplateTree;
import com.intershop.component.pmc.capi.definition.pagelet.PageletDefinition;
import com.intershop.component.pmc.capi.pagelet.Pagelet;
import com.intershop.beehive.core.capi.domain.Domain;
import com.intershop.component.mvc.capi.catalog.Repository;
import com.intershop.component.pmc.capi.model.PageletModelRepository;

public final class PageletTemplateTreeSubTree_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
 getPipelineDictionary().put("CurrentUser", Request.getCurrent().getSession().getUser()); 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"content/Modules", null, "8");} 
 context.setCustomTagTemplateName("pagelettemplatetreesubtree","content/template/PageletTemplateTreeSubTree.isml",true,new String[]{"PageFlag","PageletDefinition","PageletTemplate","ContentRepository","Site","Locale","SelectionListing","SelectionType","SelectionName","SelectionValue","SelectionValues","DepthCounter","RowCounter","ExpandedEntries","HasMoreMap","ContextPipeline","SelectChildren","ConstraintCtnr","SelectedPageletDefinitions","SelectedPagelets","ReadOnly","ExcludedPagelets","PermissionMap","RestrictByConstraintCtnr","PageletModelRepository"},new String[]{"ReturnRowCounter"}); 
 processOpenTag(response, pageContext, "pageletmodelutils", new TagParameter[] {
new TagParameter("PageletModelUtils","PageletModelUtils")}, 39); 
 
	PageletTemplateTree tree = null;
	Map hasMoreMap = (Map)getObject("HasMoreMap");
	Double depthCounter = (Double)getObject("DepthCounter");

 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("SelectionType")))).booleanValue() && ((Boolean) (((((Boolean) ((((context.getFormattedValue(getObject("SelectionType"),null).equals(context.getFormattedValue("radio_templates_pagelets",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("SelectionType"),null).equals(context.getFormattedValue("radio_pagelets",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",54,e);}if (_boolean_result) { 
 {Object temp_obj = ("all"); getPipelineDictionary().put("ChildPageletsMode", temp_obj);} 
 } else { 
 {Object temp_obj = ("templates"); getPipelineDictionary().put("ChildPageletsMode", temp_obj);} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("SelectedPageletDefinitions"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",61,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("PageletModelUtils:QualifiedNames(SelectedPageletDefinitions)")); getPipelineDictionary().put("PageletDefinitionNames", temp_obj);} 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ConstraintCtnr"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",63,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("PageletModelUtils:QualifiedNames(ConstraintCtnr:PageletDefinitions)")); getPipelineDictionary().put("PageletDefinitionNames", temp_obj);} 
 }} 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PageletTemplate"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",67,e);}if (_boolean_result) { 
 
		tree = PageletTemplateTree.newInstance((Repository)getObject("ContentRepository"), (PageletModelRepository)getObject("PageletModelRepository"), (Collection<String>)getObject("ExcludedPagelets"));
		getPipelineDictionary().put("Tree", tree);
	
 {Object temp_obj = (getObject("Tree:getChildren(Locale,PageletTemplate,ChildPageletsMode)")); getPipelineDictionary().put("Children", temp_obj);} 
 {Object temp_obj = (getObject("PageletTemplate:UUID")); getPipelineDictionary().put("ParentID", temp_obj);} 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PageletDefinition"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",74,e);}if (_boolean_result) { 
 
		tree = PageletTemplateTree.newInstance((PageletDefinition)getObject("PageletDefinition"), (Repository)getObject("ContentRepository"), (PageletModelRepository)getObject("PageletModelRepository"), (Collection<String>)getObject("ExcludedPagelets"));
		getPipelineDictionary().put("Tree", tree);
	
 {Object temp_obj = (getObject("Tree:getChildren(Locale,PageletDefinition,ChildPageletsMode)")); getPipelineDictionary().put("Children", temp_obj);} 
 {Object temp_obj = (getObject("PageletDefinition:QualifiedName")); getPipelineDictionary().put("ParentID", temp_obj);} 
 } else { 
 
		tree = PageletTemplateTree.newInstance(null, (Repository)getObject("ContentRepository"), (PageletModelRepository)getObject("PageletModelRepository"), (Collection<String>)getObject("ExcludedPagelets"));
		getPipelineDictionary().put("Tree", tree);
	
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ContextObject"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",86,e);}if (_boolean_result) { 
 if (getObject("ContextObject") instanceof ContentEntryPoint) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("RestrictByConstraintCtnr"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",88,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("Tree:getChildren(Locale,ContextObject,RestrictByConstraintCtnr)")); getPipelineDictionary().put("Children", temp_obj);} 
 } else { 
 {Object temp_obj = (getObject("Tree:getChildren(Locale,ContextObject)")); getPipelineDictionary().put("Children", temp_obj);} 
 } 
 } else if (getObject("ContextObject") instanceof PlaceholderDefinition) { 
      out.write(' ');
      out.write('\n');
 {Object temp_obj = (getObject("Tree:getChildren(Locale,ContextObject)")); getPipelineDictionary().put("Children", temp_obj);} 
 } else { 
 {Object temp_obj = (getObject("Tree:getChildren(Locale,PageFlag)")); getPipelineDictionary().put("Children", temp_obj);} 
 } 
 } else { 
 {Object temp_obj = (getObject("Tree:getChildren(Locale,PageFlag)")); getPipelineDictionary().put("Children", temp_obj);} 
 } 
 {Object temp_obj = ("root"); getPipelineDictionary().put("ParentID", temp_obj);} 
 }} 
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("Children") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",104,e);}if (_boolean_result) { 
 while (loop("Children","ChildElement",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("ChildElement:Class:SimpleName"),null).equals(context.getFormattedValue("PageletDefinitionImpl",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",107,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("ChildElement:QualifiedName")); getPipelineDictionary().put("ChildValue", temp_obj);} 
 {Object temp_obj = ("PageletDefinition"); getPipelineDictionary().put("ChildType", temp_obj);} 
 } else { 
 {Object temp_obj = (getObject("ChildElement:UUID")); getPipelineDictionary().put("ChildValue", temp_obj);} 
 {Object temp_obj = ("Pagelet"); getPipelineDictionary().put("ChildType", temp_obj);} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("SelectionType")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("SelectionType"),null).equals(context.getFormattedValue("wizard",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) (((((Boolean) ((((context.getFormattedValue(getObject("ChildType"),null).equals(context.getFormattedValue("PageletDefinition",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && !((Boolean) (getObject("Tree:isNode(ChildElement,ChildPageletsMode)"))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",115,e);}if (_boolean_result) { 
 } else { 
      out.write("<tr class=\"");
 if ((Double)getObject("RowCounter")%2 == 1.00) {
      out.write("odd ");
}
      out.write(' ');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("SelectionValue"),null).equals(context.getFormattedValue(getObject("ChildValue"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("SelectionListing")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",119,e);}if (_boolean_result) { 
      out.write("active");
 } 
      out.write("\"> \n");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("SelectionType"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",120,e);}if (_boolean_result) { 
      out.write("<td class=\"table_detail w top center\" nowrap=\"nowrap\">");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("SelectionType"),null).equals(context.getFormattedValue("wizard",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("ChildType"),null).equals(context.getFormattedValue("PageletDefinition",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",122,e);}if (_boolean_result) { 
      out.write("<input type=\"checkbox\" id=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ChildValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {123}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("SelectionName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {123}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ChildValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {123}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('\n');
 _boolean_result=false;try {_boolean_result=((Boolean)((getObject("SelectionValues:Contains(ChildValue)")))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",124,e);}if (_boolean_result) { 
      out.write("checked=\"checked\"");
 } 
      out.write('>');
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("SelectionType"),null).equals(context.getFormattedValue("radio",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((((Boolean) ((((context.getFormattedValue(getObject("SelectionType"),null).equals(context.getFormattedValue("radio_templates_pagelets",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("ChildType"),null).equals(context.getFormattedValue("PageletDefinition",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((((Boolean) ((((context.getFormattedValue(getObject("SelectionType"),null).equals(context.getFormattedValue("radio_pagelets",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((((Boolean) getObject("ChildElement:Template")).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",125,e);}if (_boolean_result) { 
      out.write("<input type=\"radio\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("SelectionName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {126}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ChildValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {126}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" onclick=\"switchActive(this)\"\n");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("SelectionValue"),null).equals(context.getFormattedValue(getObject("ChildValue"),null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",127,e);}if (_boolean_result) { 
      out.write("checked=\"checked\"");
 } 
      out.write('>');
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SelectionType"),null).equals(context.getFormattedValue("constraint",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",128,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("SelectChildren")))).booleanValue() && ((Boolean) getObject("SelectChildren")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("ConstraintCtnr")))).booleanValue() && ((Boolean) (((((Boolean) getObject("ConstraintCtnr:Pagelets:Contains(ChildElement)")).booleanValue() || ((Boolean) getObject("PageletDefinitionNames:Contains(ChildValue)")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("SelectedPageletDefinitions")))).booleanValue() && ((Boolean) (getObject("PageletDefinitionNames:Contains(ChildValue)"))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("SelectedPagelets")))).booleanValue() && ((Boolean) (getObject("SelectedPagelets:Contains(ChildElement)"))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((!((Boolean) ((disableErrorMessages().isDefined(getObject("ConstraintCtnr"))))).booleanValue() && !((Boolean) ((disableErrorMessages().isDefined(getObject("SelectedPageletDefinitions"))))).booleanValue() && !((Boolean) ((disableErrorMessages().isDefined(getObject("SelectedPagelets"))))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",129,e);}if (_boolean_result) { 
 {Object temp_obj = ((( ((Number) new Double(1)).doubleValue() ==((Number)(new Double(1))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE)); getPipelineDictionary().put("Selected", temp_obj);} 
 } else { 
 {Object temp_obj = ((( ((Number) new Double(1)).doubleValue() !=((Number)(new Double(1))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE)); getPipelineDictionary().put("Selected", temp_obj);} 
 } 
      out.write("<script type=\"text/javascript\">\nSelectionTree.addNode(\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ChildValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {139}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\", SelectionTree.Nodes[\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ParentID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {139}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"]);\n</script>\n<input type=\"checkbox\"\nid=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ChildValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {142}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nname=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue(getObject("SelectionName"),null) + context.getFormattedValue("_",null) + context.getFormattedValue(getObject("ChildType"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {143}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ChildValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {144}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" \nonclick=\"SelectionTree.updateConstraints(this)\"\n");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("Selected"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",146,e);}if (_boolean_result) { 
      out.write("checked=\"checked\"");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (((((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("ReadOnly")))).booleanValue() && ((Boolean) getObject("ReadOnly")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("SelectChildren")))).booleanValue() && ((Boolean) getObject("SelectChildren")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || !((Boolean) ((disableErrorMessages().isDefined(getObject("PermissionMap:SLD_MANAGE_TEMPLATES"))))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",147,e);}if (_boolean_result) { 
      out.write(" disabled=\"disabled\"");
 } 
      out.write('\n');
      out.write('>');
 } else { 
      out.write("\n&nbsp;\n");
 }}} 
      out.write("</td>");
 } 
      out.write("<td class=\"table_tree w e\">\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" height=\"100%\">\n<tr>");

							for ( int i = 0; i < depthCounter.intValue(); i ++ ) 
							{
								if ((hasMoreMap.get("level"+i) != null) && (hasMoreMap.get("level"+i).equals(true)))
								{
									
      out.write("<td style=\"width:22px;background: url(");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/cb_I.gif) repeat-y center;\">&nbsp;</td>");

								}
								else
								{
									
      out.write("<td><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"22\" height=\"1\" alt=\"\" border=\"0\" /></td>");

								}
							}
						
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("Tree:isNode(ChildElement,ChildPageletsMode)"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",170,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((hasNext("ChildElement") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",171,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("SelectionType"),null).equals(context.getFormattedValue("constraint",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("SelectionType"),null).equals(context.getFormattedValue("wizard",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",172,e);}if (_boolean_result) { 
      out.write("<td style=\"width:22px;background: url(");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/cb_L_join.gif) no-repeat right;\">\n<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"22\" alt=\"\" border=\"0\" />\n</td>");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(getObject("ExpandedEntries:Contains(ChildValue)"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",176,e);}if (_boolean_result) { 
      out.write("<td style=\"width:22px;background: url(");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/cb_minus.gif) no-repeat center;\">\n<a class=\"tree_icon_link\" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewPageletTemplatesTree-Collapse",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("Entry",null),context.getFormattedValue(getObject("ChildValue"),null))).addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepository:UUID"),null))),null));
      out.write('>');
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("#",null) + context.getFormattedValue(getObject("ChildValue"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {178}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"22\" alt=\"\" border=\"0\" />\n</a>\n</td>");
 } else { 
      out.write("<td style=\"width:22px;background: url(");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/cb_plus.gif) no-repeat center;\">\n<a class=\"tree_icon_link\" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewPageletTemplatesTree-Expand",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("Entry",null),context.getFormattedValue(getObject("ChildValue"),null))).addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepository:UUID"),null))),null));
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("#",null) + context.getFormattedValue(getObject("ChildValue"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {184}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"22\" alt=\"\" border=\"0\" />\n</a>\n</td>");
 }} 
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("SelectionType"),null).equals(context.getFormattedValue("constraint",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("SelectionType"),null).equals(context.getFormattedValue("wizard",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",190,e);}if (_boolean_result) { 
      out.write("<td style=\"width: 22px; background: url(");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/cb_L.gif) no-repeat right;\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"22\" alt=\"\" border=\"0\"/></td>");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(getObject("ExpandedEntries:Contains(ChildValue)"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",192,e);}if (_boolean_result) { 
      out.write("<td style=\"width:22px;background: url(");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/cb_minus_bottom.gif) no-repeat center;\">\n<a class=\"tree_icon_link\" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewPageletTemplatesTree-Collapse",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("Entry",null),context.getFormattedValue(getObject("ChildValue"),null))).addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepository:UUID"),null))),null));
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("#",null) + context.getFormattedValue(getObject("ChildValue"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {194}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"22\" alt=\"\" border=\"0\" />\n</a>\n</td>");
 } else { 
      out.write("<td style=\"width:22px;background: url(");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/cb_plus_bottom.gif) no-repeat center;\">\n<a class=\"tree_icon_link\" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewPageletTemplatesTree-Expand",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("Entry",null),context.getFormattedValue(getObject("ChildValue"),null))).addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepository:UUID"),null))),null));
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("#",null) + context.getFormattedValue(getObject("ChildValue"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {200}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"22\" alt=\"\" border=\"0\" />\n</a>\n</td>");
 }} 
 } 
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)((hasNext("ChildElement") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",207,e);}if (_boolean_result) { 
      out.write("<td style=\"width:22px;background: url(");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/cb_L_join.gif) no-repeat right;\"></td>");
 } else { 
      out.write("<td style=\"width:22px;background: url(");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/cb_L.gif) no-repeat right;\"></td>");
 } 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ChildType"),null).equals(context.getFormattedValue("Pagelet",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",214,e);}if (_boolean_result) { 
      out.write("<td>\n<table>\n<tr>\n<td>");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SelectionType"),null).equals(context.getFormattedValue("constraint",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",219,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PermissionMap:SLD_MANAGE_TEMPLATES"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",220,e);}if (_boolean_result) { 
      out.write("<a class=\"table_detail_link\" href=\"javascript:SelectionTree.updateConstraints(document.getElementById('");
 {String value = null;try{value=context.getFormattedValue(getObject("ChildValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {221}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("'), true);\">");
 processOpenTag(response, pageContext, "pageletdisplayname", new TagParameter[] {
new TagParameter("Locale",getObject("Locale")),
new TagParameter("Pagelet",getObject("ChildElement"))}, 221); 
      out.write("</a>");
 } else { 
 processOpenTag(response, pageContext, "pageletdisplayname", new TagParameter[] {
new TagParameter("Locale",getObject("Locale")),
new TagParameter("Pagelet",getObject("ChildElement"))}, 223); 
 } 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SelectionType"),null).equals(context.getFormattedValue("wizard",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",225,e);}if (_boolean_result) { 
      out.write("<a class=\"table_detail_link\" href=\"javascript:toggleSelected(document.getElementById('");
 {String value = null;try{value=context.getFormattedValue(getObject("ChildValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {226}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("'));\">");
 processOpenTag(response, pageContext, "pageletdisplayname", new TagParameter[] {
new TagParameter("Locale",getObject("Locale")),
new TagParameter("Pagelet",getObject("ChildElement"))}, 226); 
      out.write("</a>");
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("SelectionListing"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",229,e);}if (_boolean_result) { 
      out.write("<a class=\"table_detail_link\" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewPageletTemplatesTree-Select",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("SelectedPageletTemplateUUID",null),context.getFormattedValue(getObject("ChildValue"),null))).addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepository:UUID"),null))),null));
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("#",null) + context.getFormattedValue(getObject("ChildValue"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {230}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ChildValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {230}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 processOpenTag(response, pageContext, "pageletdisplayname", new TagParameter[] {
new TagParameter("Locale",getObject("Locale")),
new TagParameter("Pagelet",getObject("ChildElement"))}, 230); 
      out.write("</a>");
 } else { 
      out.write("<a class=\"table_detail_link\" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewPagelet-View",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("PageletUUID",null),context.getFormattedValue(getObject("ChildValue"),null))).addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepository:UUID"),null))),null));
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("#",null) + context.getFormattedValue(getObject("ChildValue"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {232}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ChildValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {232}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 processOpenTag(response, pageContext, "pageletdisplayname", new TagParameter[] {
new TagParameter("Locale",getObject("Locale")),
new TagParameter("Pagelet",getObject("ChildElement"))}, 232); 
      out.write("</a>");
 } 
 }} 
 processOpenTag(response, pageContext, "contentelementtooltip", new TagParameter[] {
new TagParameter("ContentElement",getObject("ChildElement"))}, 236); 
      out.write("</td>\n<td nowrap=\"nowrap\">");
 processOpenTag(response, pageContext, "pageletstatus", new TagParameter[] {
new TagParameter("ContentRepository",getObject("ContentRepository")),
new TagParameter("Pagelet",getObject("ChildElement"))}, 239); 
      out.write("</td>\n</tr>\n</table>\n</td>\n</tr>\n</table>\n</td>\n<td class=\"table_detail bold e\">");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!((Boolean) ((((context.getFormattedValue(getObject("SelectionListing"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("SelectionType")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("SelectionType"),null).equals(context.getFormattedValue("constraint",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",248,e);}if (_boolean_result) { 
      out.write("<a class=\"table_detail_link\" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewPagelet-View",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("PageletUUID",null),context.getFormattedValue(getObject("ChildValue"),null))).addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepository:UUID"),null))),null));
      out.write("\" title=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ChildElement:Id"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {249}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 processOpenTag(response, pageContext, "cropstring", new TagParameter[] {
new TagParameter("CropString","..."),
new TagParameter("String",getObject("ChildElement:Id")),
new TagParameter("MaxLength",new Double(50))}, 250); 
      out.write("</a>");
 } else { 
      out.write("<div title=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ChildElement:Id"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {253}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 processOpenTag(response, pageContext, "cropstring", new TagParameter[] {
new TagParameter("CropString","..."),
new TagParameter("String",getObject("ChildElement:Id")),
new TagParameter("MaxLength",new Double(50))}, 253); 
      out.write("</div>");
 } 
      out.write("</td>\n<td class=\"table_detail e\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PageletModelUtils:DisplayGroup(ChildElement:PageletDefinition,Locale)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {256}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n<td class=\"table_detail e\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PageletModelUtils:DisplayName(ChildElement:PageletDefinition,Locale)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {257}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n<td class=\"table_detail e\">");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("ChildElement:Description(Locale)"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",259,e);}if (_boolean_result) { 
 processOpenTag(response, pageContext, "cropstring", new TagParameter[] {
new TagParameter("CropString","..."),
new TagParameter("String",getObject("ChildElement:Description(Locale)")),
new TagParameter("MaxLength",new Double(50))}, 260); 
 } else { 
      out.write("\n&nbsp;\n");
 } 
      out.write("</td>");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) ((((context.getFormattedValue(getObject("SelectionListing"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",265,e);}if (_boolean_result) { 
      out.write("<td nowrap=\"nowrap\" class=\"table_detail_actions e\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PermissionMap:SLD_MANAGE_TEMPLATES"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",267,e);}if (_boolean_result) { 
 processOpenTag(response, pageContext, "createmap", new TagParameter[] {
new TagParameter("key1","PreferenceDomain"),
new TagParameter("key2","User"),
new TagParameter("key0","Pagelet"),
new TagParameter("value2",getObject("CurrentUser")),
new TagParameter("value1",getObject("ContentRepository:RepositoryDomain")),
new TagParameter("value0",getObject("ChildElement")),
new TagParameter("mapname","ProcessPageletLockParams")}, 268); 
 {try{executePipeline("ProcessPageletLock-Lookup",((java.util.Map)(getObject("ProcessPageletLockParams"))),"PageletLockInfoDictionary");}catch(Exception e){Logger.error(this,"ISPIPELINE failed. Line: 272.",e);}} 
 processOpenTag(response, pageContext, "pageletlocking", new TagParameter[] {
new TagParameter("User",getObject("CurrentUser")),
new TagParameter("LockInfoDictionary",getObject("PageletLockInfoDictionary")),
new TagParameter("ContentRepository",getObject("ContentRepository")),
new TagParameter("Pagelet",getObject("ChildElement"))}, 274); 
 _boolean_result=false;try {_boolean_result=((Boolean)(((!((Boolean) ((disableErrorMessages().isDefined(getObject("PageletLockInfoDictionary:AllPageletsLocked"))))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("PageletLockInfoDictionary:AllPageletsLocked"),null).equals(context.getFormattedValue("false",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",276,e);}if (_boolean_result) { 
 processOpenTag(response, pageContext, "copypagelet", new TagParameter[] {
new TagParameter("ContentRepository",getObject("ContentRepository")),
new TagParameter("CopyOfPrefix","Copy of "),
new TagParameter("Pagelet",getObject("ChildElement"))}, 277); 
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("SelectedPageletDefinition")))).booleanValue() || ((Boolean) (((!(context.getFormattedValue(getObject("ChildElement:DomainID"),null).equals(context.getFormattedValue(getObject("ContentRepository:RepositoryDomainID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (getObject("ChildElement:InUse"))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",280,e);}if (_boolean_result) { 
      out.write("<a href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewPageletTemplatesTree-Dispatch",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("confirmDelete",null),context.getFormattedValue("Delete",null))).addURLParameter(context.getFormattedValue("ChannelID",null),context.getFormattedValue(getObject("ChannelID"),null)).addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepository:UUID"),null)).addURLParameter(context.getFormattedValue("SelectedPageletTemplateUUID",null),context.getFormattedValue(getObject("ChildValue"),null)).addURLParameter(context.getFormattedValue("TemplateFlag",null),context.getFormattedValue("true",null)).addURLParameter(context.getFormattedValue("PageFlag",null),context.getFormattedValue(getObject("PageFlag"),null))),null));
      out.write("\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/delete.png\" alt=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("PageletTemplateTreeSubTree.Delete.alt",null)),null));
      out.write("\" title=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("PageletTemplateTreeSubTree.Delete.title",null)),null));
      out.write("\"/></a>&nbsp;");
 } 
 } 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PermissionMap:SLD_VIEW_STOREFRONT"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",291,e);}if (_boolean_result) { 
 processOpenTag(response, pageContext, "previewpagelet", new TagParameter[] {
new TagParameter("contextParameter2","SelectedPageletTemplateUUID"),
new TagParameter("contextParameter3","PageFlag"),
new TagParameter("contextValue0",getObject("ContentRepository:UUID")),
new TagParameter("contextValue1","true"),
new TagParameter("contextParameter0","ContentRepositoryUUID"),
new TagParameter("contextParameter1","continuedSession"),
new TagParameter("PageFlag",getObject("PageFlag")),
new TagParameter("contextPipeline","ViewPageletTemplatesTree-List"),
new TagParameter("ContentRepository",getObject("ContentRepository")),
new TagParameter("contextValue2",getObject("ChildValue")),
new TagParameter("contextValue3",getObject("PageFlag")),
new TagParameter("TemplateFlag","true"),
new TagParameter("Pagelet",getObject("ChildElement"))}, 292); 
 } 
      out.write("</td>");
 } 
 } else { 
      out.write("<td ");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("SelectionType"),null).equals(context.getFormattedValue("wizard",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",306,e);}if (_boolean_result) { 
      out.write("class=\"table_detail bold\"");
 } 
      out.write('>');
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SelectionType"),null).equals(context.getFormattedValue("constraint",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",307,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PermissionMap:SLD_MANAGE_TEMPLATES"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",308,e);}if (_boolean_result) { 
      out.write("<a class=\"table_detail_link\" href=\"javascript:SelectionTree.updateConstraints(document.getElementById('");
 {String value = null;try{value=context.getFormattedValue(getObject("ChildValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {309}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("'), true);\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PageletModelUtils:DisplayName(ChildElement,Locale)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {310}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</a>");
 } else { 
 {String value = null;try{value=context.getFormattedValue(getObject("PageletModelUtils:DisplayName(ChildElement,Locale)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {313}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } 
 processOpenTag(response, pageContext, "contentelementtooltip", new TagParameter[] {
new TagParameter("ContentElement",getObject("ChildElement:PageletModel"))}, 315); 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) ((((context.getFormattedValue(getObject("SelectionType"),null).equals(context.getFormattedValue("wizard",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",316,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("SelectionListing"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",318,e);}if (_boolean_result) { 
      out.write("<a class=\"table_detail_link\" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewPageletTemplatesTree-Select",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("SelectedPageletDefinitionQualifiedName",null),context.getFormattedValue(getObject("ChildElement:QualifiedName"),null))).addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepository:UUID"),null))),null));
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("#",null) + context.getFormattedValue(getObject("ChildValue"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {319}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ChildValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {319}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {String value = null;try{value=context.getFormattedValue(getObject("PageletModelUtils:DisplayName(ChildElement,Locale)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {320}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</a>");
 processOpenTag(response, pageContext, "contentelementtooltip", new TagParameter[] {
new TagParameter("ContentElement",getObject("ChildElement:PageletModel"))}, 322); 
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("Tree:isNode(ChildElement,ChildPageletsMode)"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",325,e);}if (_boolean_result) { 
      out.write("<a class=\"table_detail_link\" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewPageletTemplatesTree-Select",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("SelectedPageletDefinitionQualifiedName",null),context.getFormattedValue(getObject("ChildElement:QualifiedName"),null))).addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepository:UUID"),null))),null));
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("#",null) + context.getFormattedValue(getObject("ChildValue"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {326}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ChildValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {326}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {String value = null;try{value=context.getFormattedValue(getObject("PageletModelUtils:DisplayName(ChildElement,Locale)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {327}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</a>");
 processOpenTag(response, pageContext, "contentelementtooltip", new TagParameter[] {
new TagParameter("ContentElement",getObject("ChildElement:PageletModel"))}, 329); 
 } else { 
      out.write("\n&nbsp;<span>");
 {String value = null;try{value=context.getFormattedValue(getObject("PageletModelUtils:DisplayName(ChildElement,Locale)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {332}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</span>");
 processOpenTag(response, pageContext, "contentelementtooltip", new TagParameter[] {
new TagParameter("ContentElement",getObject("ChildElement:PageletModel"))}, 333); 
 } 
 } 
 } else { 
      out.write(' ');
      out.write('\n');
 {String value = null;try{value=context.getFormattedValue(getObject("PageletModelUtils:DisplayName(ChildElement,Locale)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {337}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 }} 
      out.write("</td>\n</tr>\n</table>\n</td>\n<td class=\"table_detail bold e\">&nbsp;<!-- ");
 {String value = null;try{value=context.getFormattedValue(getObject("ChildElement:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {343}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(" --></td>\n<td class=\"table_detail e\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PageletModelUtils:DisplayGroup(ChildElement,Locale)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {344}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n<td class=\"table_detail e\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PageletModelUtils:DisplayName(ChildElement,Locale)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {345}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n<td class=\"table_detail e\">");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("ChildElement:Description:get(Locale:LocaleID)"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",347,e);}if (_boolean_result) { 
 processOpenTag(response, pageContext, "cropstring", new TagParameter[] {
new TagParameter("CropString","..."),
new TagParameter("String",getObject("ChildElement:Description:get(Locale:LocaleID)")),
new TagParameter("MaxLength",new Double(50))}, 348); 
 } else { 
      out.write("\n&nbsp;\n");
 } 
      out.write("</td>");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) ((((context.getFormattedValue(getObject("SelectionListing"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",353,e);}if (_boolean_result) { 
      out.write("<td nowrap=\"nowrap\" class=\"table_detail_actions e\">&nbsp;</td>");
 } 
 } 
      out.write("</tr>");
 {Object temp_obj = ((new Double( ((Number) getObject("RowCounter")).doubleValue() +((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("RowCounter", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("Tree:isNode(ChildElement,ChildPageletsMode)")).booleanValue() && ((Boolean) (((((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("ExpandedEntries")))).booleanValue() && ((Boolean) getObject("ExpandedEntries:Contains(ChildValue)")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("SelectionType")))).booleanValue() && ((Boolean) (((((Boolean) ((((context.getFormattedValue(getObject("SelectionType"),null).equals(context.getFormattedValue("constraint",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("SelectionType"),null).equals(context.getFormattedValue("wizard",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",360,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((hasNext("ChildElement") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",362,e);}if (_boolean_result) { 

					hasMoreMap.put("level"+depthCounter.intValue(), true);
					getPipelineDictionary().put("HasMoreMap", hasMoreMap);
				
 } else { 

					hasMoreMap.put("level"+depthCounter.intValue(), false);
					getPipelineDictionary().put("HasMoreMap", hasMoreMap);
				
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ChildType"),null).equals(context.getFormattedValue("Pagelet",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",374,e);}if (_boolean_result) { 
 processOpenTag(response, pageContext, "pagelettemplatetreesubtree", new TagParameter[] {
new TagParameter("Site",getObject("Site")),
new TagParameter("Locale",getObject("Locale")),
new TagParameter("ReadOnly",getObject("ReadOnly")),
new TagParameter("ExcludedPagelets",getObject("ExcludedPagelets")),
new TagParameter("DepthCounter",(new Double( ((Number) getObject("DepthCounter")).doubleValue() +((Number) new Double(1)).doubleValue()))),
new TagParameter("SelectedPagelets",getObject("SelectedPagelets")),
new TagParameter("RestrictByConstraintCtnr",getObject("RestrictByConstraintCtnr")),
new TagParameter("SelectedPageletDefinitions",getObject("SelectedPageletDefinitions")),
new TagParameter("SelectionName",getObject("SelectionName")),
new TagParameter("SelectionListing",getObject("SelectionListing")),
new TagParameter("SelectionValues",getObject("SelectionValues")),
new TagParameter("ReturnRowCounter","RowCounter"),
new TagParameter("PermissionMap",getObject("PermissionMap")),
new TagParameter("RowCounter",getObject("RowCounter")),
new TagParameter("SelectChildren",getObject("Selected")),
new TagParameter("HasMoreMap",getObject("HasMoreMap")),
new TagParameter("PageletTemplate",getObject("ChildElement")),
new TagParameter("PageFlag",getObject("PageFlag")),
new TagParameter("SelectionType",getObject("SelectionType")),
new TagParameter("ExpandedEntries",getObject("ExpandedEntries")),
new TagParameter("ConstraintCtnr",getObject("ConstraintCtnr")),
new TagParameter("ContentRepository",getObject("ContentRepository")),
new TagParameter("SelectionValue",getObject("SelectionValue")),
new TagParameter("PageletModelRepository",getObject("PageletModelRepository"))}, 375); 
 } else { 
 processOpenTag(response, pageContext, "pagelettemplatetreesubtree", new TagParameter[] {
new TagParameter("Site",getObject("Site")),
new TagParameter("Locale",getObject("Locale")),
new TagParameter("ReadOnly",getObject("ReadOnly")),
new TagParameter("ExcludedPagelets",getObject("ExcludedPagelets")),
new TagParameter("DepthCounter",(new Double( ((Number) getObject("DepthCounter")).doubleValue() +((Number) new Double(1)).doubleValue()))),
new TagParameter("PageletDefinition",getObject("ChildElement")),
new TagParameter("SelectedPagelets",getObject("SelectedPagelets")),
new TagParameter("RestrictByConstraintCtnr",getObject("RestrictByConstraintCtnr")),
new TagParameter("SelectedPageletDefinitions",getObject("SelectedPageletDefinitions")),
new TagParameter("SelectionName",getObject("SelectionName")),
new TagParameter("SelectionListing",getObject("SelectionListing")),
new TagParameter("SelectionValues",getObject("SelectionValues")),
new TagParameter("ReturnRowCounter","RowCounter"),
new TagParameter("PermissionMap",getObject("PermissionMap")),
new TagParameter("RowCounter",getObject("RowCounter")),
new TagParameter("SelectChildren",getObject("Selected")),
new TagParameter("HasMoreMap",getObject("HasMoreMap")),
new TagParameter("PageFlag",getObject("PageFlag")),
new TagParameter("SelectionType",getObject("SelectionType")),
new TagParameter("ExpandedEntries",getObject("ExpandedEntries")),
new TagParameter("ConstraintCtnr",getObject("ConstraintCtnr")),
new TagParameter("ContentRepository",getObject("ContentRepository")),
new TagParameter("SelectionValue",getObject("SelectionValue")),
new TagParameter("PageletModelRepository",getObject("PageletModelRepository"))}, 402); 
 } 
 } 
 } 
 } 
 } 
 {Object temp_obj = (getObject("RowCounter")); getPipelineDictionary().put("ReturnRowCounter", temp_obj);} 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
