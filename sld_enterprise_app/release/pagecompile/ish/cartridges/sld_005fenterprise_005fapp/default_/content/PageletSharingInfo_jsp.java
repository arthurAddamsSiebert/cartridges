/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.content;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.sellside.pmc.capi.modelrepository.ApplicationBOPageletModelRepositoryHelper;

public final class PageletSharingInfo_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 

	getPipelineDictionary().put("ModelRepositoryHelper", com.intershop.sellside.pmc.capi.modelrepository.ApplicationBOPageletModelRepositoryHelper.INSTANCE);

 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"content/Modules", null, "7");} 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("SlotPageletAssignment"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",9,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("SlotPageletAssignment:SubPagelet")); getPipelineDictionary().put("Pagelet", temp_obj);} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (((!(context.getFormattedValue(getObject("Pagelet:Domain:UUID"),null).equals(context.getFormattedValue(getObject("ContentRepository:RepositoryDomain:UUID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((((Boolean) getObject("Pagelet:isView")).booleanValue() && ((Boolean) getObject("Pagelet:isShared")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",12,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("Pagelet:isView")).booleanValue() && ((Boolean) getObject("Pagelet:isShared")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",13,e);}if (_boolean_result) { 
 processOpenTag(response, pageContext, "getcontentrepositorydisplayname", new TagParameter[] {
new TagParameter("contentRepositoryDisplayName","contentRepositoryDisplayName"),
new TagParameter("contentDomain",getObject("Pagelet:Base:Domain"))}, 14); 
 } else { 
 processOpenTag(response, pageContext, "getcontentrepositorydisplayname", new TagParameter[] {
new TagParameter("contentRepositoryDisplayName","contentRepositoryDisplayName"),
new TagParameter("contentDomain",getObject("Pagelet:Domain"))}, 16); 
 } 
      out.write("<table border=\"0\" cellpadding=\"4\" cellspacing=\"0\" width=\"100%\" class=\"object_state w e s\">\n<tr>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ModelRepositoryHelper:isPageletDefinitionOverridden(Pagelet:PageletDefinition)"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",21,e);}if (_boolean_result) { 
      out.write("<td class=\"e\">\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"22\" height=\"19\">\n<tr>\n<td>\n<div align=\"center\"><img class=\"status_icon\" src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/status_shared_content_overridden.gif\" alt=\"");
      out.print(context.getFormattedValue(localizeTextEx(context.getFormattedValue("PageletSharingInfo.SharedFrom0.alt",null),new ParameterList().addParameter(encodeString(context.getFormattedValue(getObject("contentRepositoryDisplayName"),null)))),null));
      out.write("\" title=\"");
      out.print(context.getFormattedValue(localizeTextEx(context.getFormattedValue("PageletSharingInfo.SharedFrom0.title",null),new ParameterList().addParameter(encodeString(context.getFormattedValue(getObject("contentRepositoryDisplayName"),null)))),null));
      out.write("\" border=\"0\"/></div>\n</td>\n</tr>\n</table>\n</td>\n<td width=\"100%\">");
 {out.write(localizeISText("PageletSharingInfo.SharedFrom0AndOverwrittenInThisApplication.infobox_title",null,null,encodeString(context.getFormattedValue(getObject("contentRepositoryDisplayName"),null)),null,null,null,null,null,null,null,null,null));} 
      out.write("</td>");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("Pagelet:View")).booleanValue() && ((Boolean) getObject("Pagelet:isDerived")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",34,e);}if (_boolean_result) { 
      out.write("<td class=\"e\">\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"22\" height=\"19\">\n<tr>\n<td>\n<div align=\"center\"><img class=\"status_icon\" src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/status_shared_content_overridden.gif\" alt=\"");
      out.print(context.getFormattedValue(localizeTextEx(context.getFormattedValue("PageletStatus.SharedFrom1.alt",null),new ParameterList().addParameter(encodeString(context.getFormattedValue(getObject("contentRepositoryDisplayName"),null)))),null));
      out.write("\" title=\"");
      out.print(context.getFormattedValue(localizeTextEx(context.getFormattedValue("PageletStatus.SharedFrom1.title",null),new ParameterList().addParameter(encodeString(context.getFormattedValue(getObject("contentRepositoryDisplayName"),null)))),null));
      out.write("\" border=\"0\"/></div>\n</td>\n</tr>\n</table>\n</td>\n<td width=\"100%\">");
 {out.write(localizeISText("PageletSharingInfo.SharedFrom0AndOverwrittenInThisContext.infobox_title",null,null,encodeString(context.getFormattedValue(getObject("contentRepositoryDisplayName"),null)),null,null,null,null,null,null,null,null,null));} 
      out.write("</td>");
 } else { 
      out.write("<td class=\"e\">\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"22\" height=\"19\">\n<tr>\n<td>\n<div align=\"center\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/status_shared_content_from.gif\" alt=\"");
      out.print(context.getFormattedValue(localizeTextEx(context.getFormattedValue("PageletStatus.SharedFrom0.alt1",null),new ParameterList().addParameter(encodeString(context.getFormattedValue(getObject("contentRepositoryDisplayName"),null)))),null));
      out.write("\" title=\"");
      out.print(context.getFormattedValue(localizeTextEx(context.getFormattedValue("PageletStatus.SharedFrom0.title1",null),new ParameterList().addParameter(encodeString(context.getFormattedValue(getObject("contentRepositoryDisplayName"),null)))),null));
      out.write("\" border=\"0\"/></div>\n</td>\n</tr>\n</table>\n</td>\n<td width=\"100%\">");
 {out.write(localizeISText("PageletSharingInfo.SharedFrom0.infobox_title",null,null,encodeString(context.getFormattedValue(getObject("contentRepositoryDisplayName"),null)),null,null,null,null,null,null,null,null,null));} 
      out.write("</td>");
 }} 
      out.write("</tr>\n</table>");
 } 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
