/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.content.placeholder;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class PlaceholderInheritanceTree_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"content/Modules", null, "2");} 
 processOpenTag(response, pageContext, "pageletplaceholderutils", new TagParameter[] {
new TagParameter("PageletPlaceholderUtils","PlaceholderUtils")}, 3); 
 processOpenTag(response, pageContext, "pageletmodelutils", new TagParameter[] {
new TagParameter("PageletModelUtils","PageletModelUtils")}, 4); 
 {Object temp_obj = (getObject("PlaceholderUtils:PlaceholderTemplateInheritancePath(PageletPlaceholder)")); getPipelineDictionary().put("Templates", temp_obj);} 
      out.write("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"w s e\" width=\"100%\">\n<tr>\n<td class=\"table_title2\" nowrap=\"nowrap\">");
 {out.write(localizeISText("PlaceholderInheritanceTree.InheritanceTree.table_title2",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>\n<tr>\n<td class=\"table_title_description n s\">");
 {out.write(localizeISText("PlaceholderInheritanceTree.ThisTreeShowsTheInheritanceOfTheCurrentElement.table_title_description",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>\n<tr>\n<td>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"zebra_table\">\n<tr>\n<td class=\"table_detail s\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PageletModelUtils:DisplayName(PageletModelRepository:SlotDefinition(PageletPlaceholder:TargetPlaceholderDefinition:DefinitionQualifiedName),Locale)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {22}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n</tr>");
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("depthCounter", temp_obj);} 
 while (loop("Templates","Template",null)) { 
      out.write("<tr ");
 if ((Double)getObject("depthCounter")%2 == 0) {
      out.write("class=\"odd\" ");
}
      out.write(">\n<td>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n<tr>\n<td width=\"");
 {String value = null;try{value=context.getFormattedValue((new Double( ((Number) ((new Double( ((Number) (getObject("depthCounter"))).doubleValue() *((Number) new Double(22)).doubleValue())))).doubleValue() +((Number) new Double(1)).doubleValue())),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {30}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("px\">&nbsp;</td>\n<td style=\"width:22px;background: url(");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/cb_L.gif) repeat-y center;\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"22\" alt=\"\" border=\"0\" /></td>\n<td class=\"table_detail\">\n<a href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewPagelet-View",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("PageletUUID",null),context.getFormattedValue(getObject("Template:UUID"),null))).addURLParameter(context.getFormattedValue("ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepository:UUID"),null)).addURLParameter(context.getFormattedValue("ContextObjectUUID",null),context.getFormattedValue(getObject("PageletPlaceholder:UUID"),null)).addURLParameter(context.getFormattedValue("removeLastBreadCrumb",null),context.getFormattedValue("true",null))),null));
      out.write("\" class=\"table_detail_link2 sfe-action-disable\">");
 processOpenTag(response, pageContext, "pageletdisplayname", new TagParameter[] {
new TagParameter("Locale",getObject("Locale")),
new TagParameter("Pagelet",getObject("Template"))}, 34); 
      out.write("<br>\n</a>\n</td>\n</tr>\n</table>\n</td>\n</tr>");
 {Object temp_obj = ((new Double( ((Number) getObject("depthCounter")).doubleValue() +((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("depthCounter", temp_obj);} 
 } 
 processOpenTag(response, pageContext, "createmap", new TagParameter[] {
new TagParameter("key1","DisplayOptionKey"),
new TagParameter("key0","DisplayOptionContainerID"),
new TagParameter("value1","Tree_Open"),
new TagParameter("value0",context.getFormattedValue(getObject("PageletPlaceholder:UUID"),null) + context.getFormattedValue("_PlaceholderTreeDisplayOptions",null)),
new TagParameter("mapname","DisplayOptionParameters")}, 45); 
 {try{executePipeline("ViewDisplayOptions-GetDisplayOption",((java.util.Map)(getObject("DisplayOptionParameters"))),"DisplayOption");}catch(Exception e){Logger.error(this,"ISPIPELINE failed. Line: 48.",e);}} 
 _boolean_result=false;try {_boolean_result=((Boolean)(((!((Boolean) (disableErrorMessages().isDefined(getObject("DisplayOption:Value")))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("DisplayOption:Value"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",49,e);}if (_boolean_result) { 
 {Object temp_obj = ("true"); getPipelineDictionary().put("DisplayOption_Open", temp_obj);} 
 } else { 
 {Object temp_obj = ("false"); getPipelineDictionary().put("DisplayOption_Open", temp_obj);} 
 } 
      out.write("<tr ");
 if ((Double)getObject("depthCounter")%2 == 1.00) {
      out.write("class=\"odd\" ");
}
      out.write("><td>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n<tr>\n<td width=\"");
 {String value = null;try{value=context.getFormattedValue((new Double( ((Number) ((new Double( ((Number) (getObject("depthCounter"))).doubleValue() *((Number) new Double(22)).doubleValue())))).doubleValue() +((Number) new Double(1)).doubleValue())),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {57}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("px\">&nbsp;</td>");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("PageletPlaceholder:SourcePlaceholderDefinitionPO:SourcePlaceholderPOs(ContentRepository:RepositoryDomain)") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",58,e);}if (_boolean_result) { 
      out.write("<td style=\"width:22px;background: ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("DisplayOption_Open"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",59,e);}if (_boolean_result) { 
      out.write("url(");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/cb_minus_bottom.gif)");
 } else { 
      out.write("url(");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/cb_plus_bottom.gif)");
 } 
      out.write(" repeat-y center;\">\n<a class=\"tree_icon_link\" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewDisplayOptions-SetDisplayOption",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("DisplayOptionContainerID",null),context.getFormattedValue(context.getFormattedValue(getObject("PageletPlaceholder:UUID"),null) + context.getFormattedValue("_PlaceholderTreeDisplayOptions",null),null))).addURLParameter(context.getFormattedValue("DisplayOptionKey",null),context.getFormattedValue("Tree_Open",null)).addURLParameter(context.getFormattedValue("DisplayOptionValue",null),context.getFormattedValue((((Boolean) ((((context.getFormattedValue(getObject("DisplayOption_Open"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) ,null)).addURLParameter(context.getFormattedValue("ContextPipeline",null),context.getFormattedValue("ViewPagelet-View",null)).addURLParameter(context.getFormattedValue("ContextPipeline_SelectedTab",null),context.getFormattedValue("Content",null)).addURLParameter(context.getFormattedValue("ContextPipeline_PageletUUID",null),context.getFormattedValue(getObject("Pagelet:UUID"),null)).addURLParameter(context.getFormattedValue("ContextPipeline_ContentRepositoryUUID",null),context.getFormattedValue(getObject("ContentRepository:UUID"),null))),null));
      out.write("\">\n<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"22\" alt=\"\" border=\"0\" />\n</a>\n</td>");
 } else { 
      out.write("<td style=\"width:22px;background: url(");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/cb_L.gif) repeat-y center;\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"22\" alt=\"\" border=\"0\" /></td>");
 } 
      out.write("<td nowrap=\"nowrap\" class=\"table_detail bold\">");
 processOpenTag(response, pageContext, "pageletdisplayname", new TagParameter[] {
new TagParameter("Locale",getObject("Locale")),
new TagParameter("Pagelet",getObject("PageletPlaceholder:Template"))}, 68); 
      out.write("</td>\n</tr>\n</table>\n</tr>");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("DisplayOption_Open"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",75,e);}if (_boolean_result) { 
 processOpenTag(response, pageContext, "createmap", new TagParameter[] {
new TagParameter("mapname","hasMoreMap")}, 76); 
 {Object temp_obj = (getObject("depthCounter")); getPipelineDictionary().put("RowCounter", temp_obj);} 
 processOpenTag(response, pageContext, "placeholderinheritancechildtree", new TagParameter[] {
new TagParameter("Locale",getObject("Locale")),
new TagParameter("depthCounter",getObject("depthCounter")),
new TagParameter("hasMoreMap",getObject("hasMoreMap")),
new TagParameter("PageletUUID",getObject("Pagelet:UUID")),
new TagParameter("ContentRepository",getObject("ContentRepository")),
new TagParameter("RowCounter",getObject("depthCounter")),
new TagParameter("PageletPlaceholder",getObject("PageletPlaceholder"))}, 78); 
 } 
      out.write("</table>\n</td>\n</tr>\n</table>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
