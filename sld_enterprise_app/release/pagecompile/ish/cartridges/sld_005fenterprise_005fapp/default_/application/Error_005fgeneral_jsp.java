/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.application;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class Error_005fgeneral_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

 protected Boolean printTemplateMarker() { return Boolean.FALSE; } 
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 

setEncodingType("text/html"); 
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<!-- Working Area --><html>\n<head>");
 insertIntershopSignature(request,(com.intershop.beehive.core.capi.request.ServletResponse)response); 
      out.write("<title>");
 {out.write(localizeISText("Error.Title",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</title>\n<link rel=\"STYLESHEET\" type=\"text/css\" href=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/css/error.css\"/>\n<link rel=\"icon\" type=\"image/png\" href=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/logo_is7.ico\" />\n</head>\n<body>\n<div class=\"sysLabel\"></div>\n<div class=\"sysErrorImage sysErrorImage-general\"></div>\n<div class=\"sysMessage\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ErrorCode"),null).equals(context.getFormattedValue("TargetSessionOccupied",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",14,e);}if (_boolean_result) { 
      out.write("<p><span>");
 {out.write(localizeISText("Error_general.SessionOccupied.sysMessage",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</span></p><br />\n<p><span>");
 {out.write(localizeISText("Error_general.OpeningTheCMCIsImpossibleBecauseTheSessionIsAlread.sysMessage",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</span></p><br />\n<p><span>");
 {out.write(localizeISText("Error_general.PleaseCloseAllBrowserWindowsAndLoginAgain.sysMessage",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</span></p><br />\n<p><span>");
 {out.write(localizeISText("Error_general.ThankYouForYourPatience.sysMessage",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</span></p>");
 } else { 
      out.write("<p><span>");
 {out.write(localizeISText("Error_general.ASystemErrorHasOccurred.sysMessage",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</span></p><br />\n<p><span><strong>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ERROR_Organization"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",22,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ERROR_Organization"),null).equals(context.getFormattedValue("SiteIsNotLive",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",23,e);}if (_boolean_result) { 
 response.setHeader("X-IS-HTTPResponseStatus", "503"); 
 {out.write(localizeISText("Error_general.TheCurrentSiteIsNotLive.sysMessage",null,null,null,null,null,null,null,null,null,null,null,null));} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ERROR_Organization"),null).equals(context.getFormattedValue("NotFound",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",27,e);}if (_boolean_result) { 
 response.setHeader("X-IS-HTTPResponseStatus", "503"); 
 {out.write(localizeISText("Error_general.TheSpecifiedOrganizationCouldNotBeFound.sysMessage",null,null,null,null,null,null,null,null,null,null,null,null));} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ERROR_Organization"),null).equals(context.getFormattedValue("IsOffline",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",31,e);}if (_boolean_result) { 
 response.setHeader("X-IS-HTTPResponseStatus", "503"); 
 {out.write(localizeISText("Error_general.TheSpecifiedOrganizationIsCurrentlyOffline.sysMessage",null,null,null,null,null,null,null,null,null,null,null,null));} 
 } 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ERROR_User"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",35,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ERROR_User"),null).equals(context.getFormattedValue("NoProfileFound",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",36,e);}if (_boolean_result) { 
 response.setHeader("X-IS-HTTPResponseStatus", "401"); 
 {out.write(localizeISText("Error_general.CannotFindYourMembershipData.sysMessage",null,null,null,null,null,null,null,null,null,null,null,null));} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ERROR_User"),null).equals(context.getFormattedValue("UserHasNotPermission",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",40,e);}if (_boolean_result) { 
 response.setHeader("X-IS-HTTPResponseStatus", "403"); 
 {out.write(localizeISText("Error_general.TheUserDoesNotHaveThePermissionToPerformThisOperat.sysMessage",null,null,null,null,null,null,null,null,null,null,null,null));} 
 } 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ERROR_Custom"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",44,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ERROR_User"),null).equals(context.getFormattedValue("CouldNotGetRepository",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",45,e);}if (_boolean_result) { 
 response.setHeader("X-IS-HTTPResponseStatus", "503"); 
 {out.write(localizeISText("Error_general.CannotFindACustomMasterRepository.sysMessage",null,null,null,null,null,null,null,null,null,null,null,null));} 
 } 
 } else { 
 response.setHeader("X-IS-HTTPResponseStatus", "500"); 
 {out.write(localizeISText("Error_general.GeneralError.sysMessage",null,null,null,null,null,null,null,null,null,null,null,null));} 
 }}} 
      out.write("</strong></span></p><br/>\n<p><span>");
 {out.write(localizeISText("Error_general.PleaseInformYourSystemAdministratorOfThisError.sysMessage",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</span></p><br />\n<p><span>");
 {out.write(localizeISText("Error_general.Pipeline.sysMessage",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(':');
      out.write(' ');
 {String value = null;try{value=context.getFormattedValue(getObject("CurrentPipelineName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {55}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('-');
 {String value = null;try{value=context.getFormattedValue(getObject("CurrentStartNodeName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {55}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</span></p>\n<br/>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) ((((context.getFormattedValue(getObject("ErrorCode"),null).equals(context.getFormattedValue("TargetSessionOccupied",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",58,e);}if (_boolean_result) { 
      out.write("<span class=\"errorpage_text2\">");
 {out.write(localizeISText("Error_general.LogonAgain.sysMessage",null,null,url(true,(new URLPipelineAction(context.getFormattedValue("ViewApplication-Logout",null)))),"errorpage_link2",null,null,null,null,null,null,null,null));} 
      out.write("</span>");
 } 
      out.write("</div>\n</body>\n<!-- EO Working Area -->\n</html>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
