/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.product.link;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class ProductLinkCategoryListGridColumns_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

 protected Boolean printTemplateMarker() { return Boolean.FALSE; } 
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/javascript;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
      out.write('\n');
 

setEncodingType("text/javascript"); 
      out.write("\n[{\nid: 'uuid',\ntype: 'select',\ndataKey: 'linkID',\nselectedItemsName: 'SelectedObjectUUID',\navailableItemsName: 'ObjectUUID',\n}, {\nid: 'categoryName',\ntype: 'text',\ndataKey: 'displayName',\ntitle: '");
 {out.write(localizeISText("sld_enterprise_app.Name.table_header","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(" ',\nsortable: false,\nrender: function(args) {\nvar result = [];\n");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("params:PermissionMap:SLD_MANAGE_PRODUCTS"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",18,e);}if (_boolean_result) { 
      out.write("\nresult.push('<a href=\"");
 {String value = null;try{value=context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewProductCategoryLinks-CategoryDetails",null)))),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {19}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("'\n+ '?DetailCategoryUUID=' + args.row.uuid\n");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("params:ChannelID"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",21,e);}if (_boolean_result) { 
      out.write("\n+ '&ChannelID=");
 {String value = null;try{value=context.getFormattedValue(getObject("params:ChannelID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {22}",e);}if (value==null) value="";value = encodeString(value,"javascript");out.write(value);} 
      out.write('\'');
      out.write('\n');
 } 
      out.write("\n+ '&ProductID=");
 {String value = null;try{value=context.getFormattedValue(getObject("params:Product:UUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {24}",e);}if (value==null) value="";value = encodeString(value,"javascript");out.write(value);} 
      out.write("'\n+ '&SelectedLinkTypePC=");
 {String value = null;try{value=context.getFormattedValue(getObject("params:SelectedLinkTypePC"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {25}",e);}if (value==null) value="";value = encodeString(value,"javascript");out.write(value);} 
      out.write("'\n+ '&SelectedMenuItem=");
 {String value = null;try{value=context.getFormattedValue(getObject("params:SelectedMenuItem"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {26}",e);}if (value==null) value="";value = encodeString(value,"javascript");out.write(value);} 
      out.write("' \n+ '\" class=\"table_detail_link\">' + args.row.displayName + '</a>');\n");
 } else { 
      out.write("\nresult.push(args.row.displayName);\n");
 } 
      out.write("\nresult.push('&nbsp;');\nif (args.row.isOnline) {\nresult.push('<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/status_online.gif\" alt=\"Online\" border=\"0\"/>');\n}\nif (args.row.isImplicitProductBinding) {\nresult.push('<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/status_implicitly_bound.gif\" alt=\"Implicit Product Binding\" border=\"0\"/>');\n}\nreturn result.join('');\n}\n}, {\nid: 'categoryId',\ntype: 'text',\ndataKey: 'name',\ntitle: '");
 {out.write(localizeISText("sld_enterprise_app.ID.table_header","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("',\nwidth: 160,\nmaxWidth: 160,\nsortable: false,\nrender: function(args) {\nvar result = [];\nresult.push(args.row.name);\nresult.push('&nbsp');\nif (args.row.isOnline) {\nresult.push('<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/status_online.gif\" alt=\"Online\" border=\"0\"/>');\n}\nif (args.row.isImplicitProductBinding) {\nresult.push('<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/status_implicitly_bound.gif\" alt=\"Implicit Product Binding\" border=\"0\"/>');\n}\nreturn result.join('');\n}\n}, {\nid: 'categoryDescription',\ntype: 'text',\ndataKey: 'description',\ntitle: '");
 {out.write(localizeISText("sld_enterprise_app.Description.table_header","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("',\nsortable: false,\nwidth: 180,\nmaxWidth: 180,\n}, {\nid: 'type',\ntype: 'text',\ndataKey: 'type',\ntitle: '");
 {out.write(localizeISText("sld_enterprise_app.Type.table_header","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("',\nsortable: false,\nwidth: 80,\nmaxWidth: 150,\nrender: function (args) {\nvar result = [];\nif (args.row.isLinkLocal && args.row.isLinkShared) {\nresult.push('Local Link, Shared Link');\n}\nelse if (args.row.isLinkLocal) {\nresult.push('Local Link');\n}\nelse if (args.row.isLinkShared) {\nresult.push('Shared Link');\n}\nreturn result.join('');\n}\n");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("params:LinkDirection"),null).equals(context.getFormattedValue("Outgoing",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("params:PermissionMap:SLD_MANAGE_PRODUCTS")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",93,e);}if (_boolean_result) { 
      out.write("\n}, {\nid: 'sorting',\n// This column type shouldn't be used outside of the product/category links.\n// A standard column that can be used for sorting will be provided with the implementation of ENFINITY-34988. \ntype: 'sorting',\ndataKey: 'sorting',\ntitle: '");
 {out.write(localizeISText("sld_enterprise_app.Sorting.table_header","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("',\nmoveUpLinkButtonName: 'moveUpCategoryLink',\nmoveDownLinkButtonName: 'moveDownCategoryLink',\nwebRoot: '");
 {String value = null;try{value=context.getFormattedValue(context.webRoot(),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {103}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("',\nsortedElementsCount: ");
 {String value = null;try{value=context.getFormattedValue(getObject("pageable:ElementCount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {104}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(",\nallElementsCount: ");
 {String value = null;try{value=context.getFormattedValue(getObject("pageable:ElementCount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {105}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(",\npageSize: ");
 {String value = null;try{value=context.getFormattedValue(getObject("pageable:PageSize"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {106}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(",\npageNumber: ");
 {String value = null;try{value=context.getFormattedValue(getObject("pageable:Page"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {107}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(",\nwidth: 50,\nmaxWidth: 50\n");
 } 
      out.write("\n}]\n");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
