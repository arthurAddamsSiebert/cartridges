/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.inc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;
import com.intershop.beehive.core.capi.domain.Domain;
import com.intershop.beehive.core.capi.localization.LocaleInformation;
import com.intershop.beehive.core.capi.request.Session;
import com.intershop.beehive.core.capi.request.Request;
import com.intershop.component.foundation.capi.condition.Condition;
import java.util.Map;

public final class PrintCondition_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
      out.write('\n');
 
setEncodingType("text/html"); 
	
	// Restore default dictionary values
	Request currentRequest = Request.getCurrent();
	Session currentSession = currentRequest.getSession();
	LocaleInformation locale = currentRequest.getLocale();
	Domain domain = currentRequest.getRequestSite();
	
	getPipelineDictionary().put("CurrentSession", currentSession);
	getPipelineDictionary().put("CurrentRequest", currentRequest);
	getPipelineDictionary().put("CurrentDomain", domain);
	getPipelineDictionary().put("CurrentLocale", locale);

 {Object temp_obj = (getObject("conditiondescriptorregistry")); getPipelineDictionary().put("ConditionDescriptorRegistry", temp_obj);} 
 {Object temp_obj = (getObject("conditionoperators")); getPipelineDictionary().put("ConditionOperators", temp_obj);} 
 {Object temp_obj = (getObject("conditiondescriptors")); getPipelineDictionary().put("ConditionDescriptors", temp_obj);} 
 {Object temp_obj = (getObject("conditiontypesmap")); getPipelineDictionary().put("ConditionTypesMap", temp_obj);} 
 {Object temp_obj = (getObject("editcondition")); getPipelineDictionary().put("EditCondition", temp_obj);} 
 {Object temp_obj = (getObject("newconditionform")); getPipelineDictionary().put("NewConditionForm", temp_obj);} 
 {Object temp_obj = (getObject("conditionform")); getPipelineDictionary().put("ConditionForm", temp_obj);} 
 {Object temp_obj = (getObject("typeconditiondescriptors")); getPipelineDictionary().put("TypeConditionDescriptors", temp_obj);} 
 {Object temp_obj = (getObject("conditionclipboard")); getPipelineDictionary().put("ConditionClipboard", temp_obj);} 
 {Object temp_obj = (getObject("targetconditionid")); getPipelineDictionary().put("TargetConditionID", temp_obj);} 
 {Object temp_obj = (getObject("conditiontypes")); getPipelineDictionary().put("ConditionTypes", temp_obj);} 
 {Object temp_obj = (getObject("editconditiontypegroup")); getPipelineDictionary().put("EditConditionTypeGroup", temp_obj);} 
 {Object temp_obj = (getObject("contextobject")); getPipelineDictionary().put("ContextObject", temp_obj);} 
 {Object temp_obj = (getObject("dispatchpipeline")); getPipelineDictionary().put("DispatchPipeline", temp_obj);} 
 {Object temp_obj = (getObject("contextobjectidname")); getPipelineDictionary().put("ContextObjectIDName", temp_obj);} 
 {Object temp_obj = (getObject("contextobjectid")); getPipelineDictionary().put("ContextObjectID", temp_obj);} 
 {Object temp_obj = (getObject("channeldomain")); getPipelineDictionary().put("ChannelDomain", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("EditCondition")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("EditCondition:UUID"),null).equals(context.getFormattedValue(getObject("condition:UUID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",56,e);}if (_boolean_result) { 
 getPipelineDictionary().put("ThisEditMode", true); 
 } else { 
 getPipelineDictionary().put("ThisEditMode", false); 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("EditConditionTypeGroup")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("EditConditionTypeGroup:UUID"),null).equals(context.getFormattedValue(getObject("condition:UUID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && !((Boolean) getObject("condition:Operator")).booleanValue() && !((Boolean) getObject("ConditionDescriptorRegistry:TypeGroupingEnabled(condition)")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",63,e);}if (_boolean_result) { 
 getPipelineDictionary().remove("EditConditionTypeGroup"); 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (((((Boolean) getObject("ThisEditMode")).booleanValue() && ((Boolean) getObject("ConditionDescriptorRegistry:TypeGroupingEnabled(condition)")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("EditConditionTypeGroup")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("EditConditionTypeGroup:UUID"),null).equals(context.getFormattedValue(getObject("condition:UUID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",67,e);}if (_boolean_result) { 
 getPipelineDictionary().put("ThisEditGroupMode", true); 
 } else { 
 getPipelineDictionary().put("ThisEditGroupMode", false); 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("condition:GroupingOperator"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",73,e);}if (_boolean_result) { 
 getPipelineDictionary().put("DrawNewBox", true); 
 } else { 
 getPipelineDictionary().put("DrawNewBox", false); 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((Boolean) getObject("condition:isOperator")).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue() || ((Boolean) (((((Boolean) getObject("condition:isOperator")).booleanValue() && ((Boolean) getObject("DrawNewBox")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (getObject("condition:TypeGroupOperator"))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",79,e);}if (_boolean_result) { 
      out.write("<table cellpadding=\"0\" cellspacing=\"4\" border=\"0\" width=\"100%\">\n<tr>");
 {Object temp_obj = (getObject("ConditionDescriptorRegistry:Descriptor(condition:ConditionDescriptorID)")); getPipelineDictionary().put("ThisConditionDescriptor", temp_obj);} 
 {Object temp_obj = (getObject("condition")); getPipelineDictionary().put("Condition", temp_obj);} 
      out.write("<td class=\"right top\" width=\"75\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (disableErrorMessages().isDefined(getObject("condition:DisplayOperator")))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",89,e);}if (_boolean_result) { 
      out.write("<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"75\" height=\"15\" alt=\"\" border=\"0\"/>");
 } else { 
      out.write("<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"75\" height=\"1\" alt=\"\" border=\"0\"/>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("NewConditionForm")))).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("EditCondition")))).booleanValue() || ((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("readonly")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("readonly"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",94,e);}if (_boolean_result) { 
 {out.write("<");out.write("SELECT class=\"inputfield_en\" NAME=\""+context.getFormattedValue(context.getFormattedValue("Operator_",null) + context.getFormattedValue(getObject("condition:UUID"),null),null)+"\" disabled=\"disabled\">");String value, description;while (loop("ConditionOperators",null)){out.write("<");out.write("OPTION ");_boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("ConditionOperators:ID"),null).equals(context.getFormattedValue(getObject("condition:DisplayOperator:ConditionDescriptorID"),null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",95,e);}if (_boolean_result) {out.write("SELECTED ");}out.print("VALUE =\"");value = context.getFormattedValue(getObject("ConditionOperators:ID"),null);description = context.getFormattedValue(getObject("ConditionOperators:Name"),null);value = encodeString(value);description = encodeString(description);out.write(value + "\">");out.write(description + "</OPTION>");}out.write("</SELECT>");} 
 } else { 
 {out.write("<");out.write("SELECT class=\"inputfield_en\" NAME=\""+context.getFormattedValue(context.getFormattedValue("Operator_",null) + context.getFormattedValue(getObject("condition:UUID"),null),null)+"\">");String value, description;while (loop("ConditionOperators",null)){out.write("<");out.write("OPTION ");_boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("ConditionOperators:ID"),null).equals(context.getFormattedValue(getObject("condition:DisplayOperator:ConditionDescriptorID"),null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",104,e);}if (_boolean_result) {out.write("SELECTED ");}out.print("VALUE =\"");value = context.getFormattedValue(getObject("ConditionOperators:ID"),null);description = context.getFormattedValue(getObject("ConditionOperators:Name"),null);value = encodeString(value);description = encodeString(description);out.write(value + "\">");out.write(description + "</OPTION>");}out.write("</SELECT>");} 
 } 
 } 
      out.write("</td>\n<td class=\"aldi\" width=\"100%\">\n<table cellpadding=\"0\" cellspacing=\"6\" class=\"\" width=\"100%\">\n<tr>\n<td class=\"\" width=\"100%\">");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("condition:isOperator")).booleanValue() && ((Boolean) getObject("DrawNewBox")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",121,e);}if (_boolean_result) { 
 while (loop("condition:SortedSubConditions","SubCondition",null)) { 
 processOpenTag(response, pageContext, "printcondition", new TagParameter[] {
new TagParameter("parametervalue5",getObject("parametervalue5")),
new TagParameter("parametervalue4",getObject("parametervalue4")),
new TagParameter("parametervalue3",getObject("parametervalue3")),
new TagParameter("editcondition",getObject("EditCondition")),
new TagParameter("parametervalue2",getObject("parametervalue2")),
new TagParameter("parametervalue1",getObject("parametervalue1")),
new TagParameter("conditionform",getObject("ConditionForm")),
new TagParameter("editconditiontypegroup",getObject("EditConditionTypeGroup")),
new TagParameter("newconditionform",getObject("NewConditionForm")),
new TagParameter("readonly",((((Boolean) (disableErrorMessages().isDefined(getObject("readonly")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("readonly"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE)),
new TagParameter("contextobjectid",getObject("ContextObjectID")),
new TagParameter("parametername4",getObject("parametername4")),
new TagParameter("parametername5",getObject("parametername5")),
new TagParameter("conditiontypes",getObject("ConditionTypes")),
new TagParameter("conditionclipboard",getObject("ConditionClipboard")),
new TagParameter("parametername1",getObject("parametername1")),
new TagParameter("parametername2",getObject("parametername2")),
new TagParameter("targetconditionid",getObject("TargetConditionID")),
new TagParameter("channeldomain",getObject("ChannelDomain")),
new TagParameter("parametername3",getObject("parametername3")),
new TagParameter("conditiondescriptorregistry",getObject("ConditionDescriptorRegistry")),
new TagParameter("conditionoperators",getObject("ConditionOperators")),
new TagParameter("typeconditiondescriptors",getObject("TypeConditionDescriptors")),
new TagParameter("contextobject",getObject("ContextObject")),
new TagParameter("contextobjectidname",getObject("ContextObjectIDName")),
new TagParameter("condition",getObject("SubCondition")),
new TagParameter("dispatchpipeline",getObject("DispatchPipeline")),
new TagParameter("conditiondescriptors",getObject("ConditionDescriptors")),
new TagParameter("conditiontypesmap",getObject("ConditionTypesMap"))}, 125); 
 } 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(((!((Boolean) getObject("condition:isOperator")).booleanValue() || ((Boolean) getObject("condition:TypeGroupOperator")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",159,e);}if (_boolean_result) { 
      out.write(' ');
      out.write('\n');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("condition:TypeGroupOperator")).booleanValue() || ((Boolean) getObject("ThisEditGroupMode")).booleanValue() || ((Boolean) (((((Boolean) getObject("ThisEditMode")).booleanValue() && ((Boolean) getObject("ConditionDescriptorRegistry:TypeGroupingEnabled(condition)")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",168,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("condition")); getPipelineDictionary().put("ThisGroup", temp_obj);} 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"conditioneditor/ConditionTypeGroup", null, "170");} 
 } else { 
 {Object temp_obj = (getObject("condition")); getPipelineDictionary().put("ThisCondition", temp_obj);} 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"conditioneditor/Condition", null, "173");} 
 } 
 }} 
      out.write("</td>\n<td class=\"right top ");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("condition:Operator")).booleanValue() && !((Boolean) getObject("condition:TypeGroupOperator")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",178,e);}if (_boolean_result) { 
      out.write("ruleBar");
 } 
      out.write('"');
      out.write('>');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("readonly")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("readonly"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",179,e);}if (_boolean_result) { 
      out.write("\n&nbsp;\n");
 } else { 
      out.write("<input type=\"checkbox\" name=\"SelectedCondition_");
 {String value = null;try{value=context.getFormattedValue(getObject("condition:UUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {182}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('\n');
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ConditionClipboard:ObjectUUID(condition:UUID)"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",183,e);}if (_boolean_result) { 
      out.write("checked=\"checked\"");
 } 
      out.write('\n');
      out.write('/');
      out.write('>');
 } 
      out.write("</td>\n</tr>\n</table>\n</td>\n</tr>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("NewConditionForm")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("TargetConditionID"),null).equals(context.getFormattedValue(getObject("condition:UUID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && !((Boolean) (disableErrorMessages().isDefined(getObject("EditConditionTypeGroup")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",195,e);}if (_boolean_result) { 
      out.write("<tr>\n<td class=\"right top\" width=\"75\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"55\" height=\"15\" alt=\"\" border=\"0\"/></td>\n<td>\n<table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" class=\"aldi editbox\">\n<tr><td class=\"editbox\">");
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"conditioneditor/NewCondition", null, "200");} 
      out.write("</td></tr>\n</table>\n</td>\n<td class=\"right top\">&nbsp;</td>\n</tr>");
 } 
      out.write("</table>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("condition:isOperator")).booleanValue() && !((Boolean) getObject("DrawNewBox")).booleanValue() && !((Boolean) getObject("condition:TypeGroupOperator")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",212,e);}if (_boolean_result) { 
 while (loop("condition:SortedSubConditions","SubCondition",null)) { 
 processOpenTag(response, pageContext, "printcondition", new TagParameter[] {
new TagParameter("parametervalue5",getObject("parametervalue5")),
new TagParameter("parametervalue4",getObject("parametervalue4")),
new TagParameter("parametervalue3",getObject("parametervalue3")),
new TagParameter("editcondition",getObject("EditCondition")),
new TagParameter("parametervalue2",getObject("parametervalue2")),
new TagParameter("parametervalue1",getObject("parametervalue1")),
new TagParameter("conditionform",getObject("ConditionForm")),
new TagParameter("editconditiontypegroup",getObject("EditConditionTypeGroup")),
new TagParameter("newconditionform",getObject("NewConditionForm")),
new TagParameter("readonly",((((Boolean) (disableErrorMessages().isDefined(getObject("readonly")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("readonly"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE)),
new TagParameter("contextobjectid",getObject("ContextObjectID")),
new TagParameter("parametername4",getObject("parametername4")),
new TagParameter("parametername5",getObject("parametername5")),
new TagParameter("conditiontypes",getObject("ConditionTypes")),
new TagParameter("conditionclipboard",getObject("ConditionClipboard")),
new TagParameter("parametername1",getObject("parametername1")),
new TagParameter("parametername2",getObject("parametername2")),
new TagParameter("targetconditionid",getObject("TargetConditionID")),
new TagParameter("channeldomain",getObject("ChannelDomain")),
new TagParameter("parametername3",getObject("parametername3")),
new TagParameter("conditiondescriptorregistry",getObject("ConditionDescriptorRegistry")),
new TagParameter("conditionoperators",getObject("ConditionOperators")),
new TagParameter("typeconditiondescriptors",getObject("TypeConditionDescriptors")),
new TagParameter("contextobject",getObject("ContextObject")),
new TagParameter("contextobjectidname",getObject("ContextObjectIDName")),
new TagParameter("condition",getObject("SubCondition")),
new TagParameter("dispatchpipeline",getObject("DispatchPipeline")),
new TagParameter("conditiondescriptors",getObject("ConditionDescriptors")),
new TagParameter("conditiontypesmap",getObject("ConditionTypesMap"))}, 215); 
 } 
 } 
      out.write("<!-- EOF PrintCondition: ");
 {String value = null;try{value=context.getFormattedValue(getObject("condition:ConditionDescriptorID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {249}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(' ');
      out.write('(');
 {String value = null;try{value=context.getFormattedValue(getObject("condition:UUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {249}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(") -->");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
