/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.inc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;
import java.util.*;
import com.intershop.component.foundation.capi.upload.*;
import com.intershop.beehive.foundation.util.ResettableIterator;
import com.intershop.beehive.foundation.util.Iterators;

public final class ContentDirectory_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("directory:isRoot"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",6,e);}if (_boolean_result) { 
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("level", temp_obj);} 
 } else { 
 {Object temp_obj = ((new Double( ((Number) getObject("level")).doubleValue() +((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("level", temp_obj);} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("ExpandedDirectoriesMap")))).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("ExpandedDirectoriesMap:get(directory:Path)")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",12,e);}if (_boolean_result) { 
 {Object temp_obj = ("true"); getPipelineDictionary().put("ContentDirectoryISModuleLocalVariable_DirectoryIsExpanded", temp_obj);} 
 {Object temp_obj = ("Collapse"); getPipelineDictionary().put("ContentDirectoryISModuleLocalVariable_HandlerPipelineStartNode", temp_obj);} 
 {Object temp_obj = (context.getFormattedValue(context.webRoot(),null) + context.getFormattedValue("/images/minus.gif",null)); getPipelineDictionary().put("ContentDirectoryISModuleLocalVariable_ExpandCollapseImage", temp_obj);} 
 } else { 
 {Object temp_obj = ("false"); getPipelineDictionary().put("ContentDirectoryISModuleLocalVariable_DirectoryIsExpanded", temp_obj);} 
 {Object temp_obj = ("Expand"); getPipelineDictionary().put("ContentDirectoryISModuleLocalVariable_HandlerPipelineStartNode", temp_obj);} 
 {Object temp_obj = (context.getFormattedValue(context.webRoot(),null) + context.getFormattedValue("/images/plus.gif",null)); getPipelineDictionary().put("ContentDirectoryISModuleLocalVariable_ExpandCollapseImage", temp_obj);} 
 } 
 {Object temp_obj = (url(true,(new URLPipelineAction(context.getFormattedValue(context.getFormattedValue(getObject("handlerpipeline"),null) + context.getFormattedValue("-",null) + context.getFormattedValue(getObject("ContentDirectoryISModuleLocalVariable_HandlerPipelineStartNode"),null),null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("DirectoryPath",null),context.getFormattedValue(getObject("directory:Path"),null))).addURLParameter(context.getFormattedValue(getObject("parametername"),null),context.getFormattedValue(getObject("parametervalue"),null)).addURLParameter(context.getFormattedValue(getObject("parametername1"),null),context.getFormattedValue(getObject("parametervalue1"),null)).addURLParameter(context.getFormattedValue(getObject("parametername2"),null),context.getFormattedValue(getObject("parametervalue2"),null)).addURLParameter(context.getFormattedValue(getObject("parametername3"),null),context.getFormattedValue(getObject("parametervalue3"),null)).addURLParameter(context.getFormattedValue(getObject("parametername4"),null),context.getFormattedValue(getObject("parametervalue4"),null)).addURLParameter(context.getFormattedValue(getObject("parametername5"),null),context.getFormattedValue(getObject("parametervalue5"),null)).addURLParameter(context.getFormattedValue(getObject("parametername6"),null),context.getFormattedValue(getObject("parametervalue6"),null)).addURLParameter(context.getFormattedValue(getObject("parametername7"),null),context.getFormattedValue(getObject("parametervalue7"),null)).addURLParameter(context.getFormattedValue(getObject("parametername8"),null),context.getFormattedValue(getObject("parametervalue8"),null)).addURLParameter(context.getFormattedValue(getObject("parametername9"),null),context.getFormattedValue(getObject("parametervalue9"),null)).addURLParameter(context.getFormattedValue(getObject("parametername10"),null),context.getFormattedValue(getObject("parametervalue10"),null)).addURLParameter(context.getFormattedValue(getObject("parametername11"),null),context.getFormattedValue(getObject("parametervalue11"),null)).addURLParameter(context.getFormattedValue(getObject("parametername12"),null),context.getFormattedValue(getObject("parametervalue12"),null)).addURLParameter(context.getFormattedValue(getObject("parametername13"),null),context.getFormattedValue(getObject("parametervalue13"),null)).addURLParameter(context.getFormattedValue(getObject("parametername14"),null),context.getFormattedValue(getObject("parametervalue14"),null)).addURLParameter(context.getFormattedValue(getObject("parametername15"),null),context.getFormattedValue(getObject("parametervalue15"),null)).addURLParameter(context.getFormattedValue(getObject("parametername16"),null),context.getFormattedValue(getObject("parametervalue16"),null)).addURLParameter(context.getFormattedValue(getObject("parametername17"),null),context.getFormattedValue(getObject("parametervalue17"),null)).addURLParameter(context.getFormattedValue(getObject("parametername18"),null),context.getFormattedValue(getObject("parametervalue18"),null)).addURLParameter(context.getFormattedValue(getObject("parametername19"),null),context.getFormattedValue(getObject("parametervalue19"),null)))); getPipelineDictionary().put("ContentDirectoryISModuleLocalVariable_HandlerPipelineURL", temp_obj);} 
      out.write("<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<td nowrap=\"nowrap\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (getObject("directory:isRoot"))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",46,e);}if (_boolean_result) { 
      out.write("<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"22\" height=\"28\" alt=\"\" border=\"0\"/>");
 } 

		int level = ((Double)getObject("level")).intValue();
		for (int i = 1; i < level; i++)
		{
			String lastLevel = (String)getObject("LastLevel" + i);
			if (lastLevel != null && lastLevel.equals("true"))
			{
				
      out.write("<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"22\" height=\"28\" alt=\"\" border=\"0\"/>");

			}
			else
			{
				
      out.write("<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/I.gif\" alt=\"\" border=\"0\"/>");

	 		}
		}
		
      out.write("</td>");

			Directory dir = (Directory)getObject("directory");
			if (!dir.isRoot())
			{
				String last = (String)getObject("LastLevel" + level);
				if (last != null && last.equals("true"))
				{
					
      out.write("<td><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/L.gif\" alt=\"\" border=\"0\"/></td>");

				}
				else
				{
					
      out.write("<td><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/T.gif\" alt=\"\" border=\"0\"/></td>");

				}
			}
			else
			{
				
      out.write("<td><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"22\" height=\"1\" alt=\"\" border=\"0\"/></td>");

			}
		
      out.write("<td>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"treeIconTable\">\n<tr>\n<td>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("directory:hasSubdirectories"),null).equals(context.getFormattedValue("HasNoSubdirectories",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",84,e);}if (_boolean_result) { 
      out.write("<tr>\n<td>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("directory:isRoot"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",87,e);}if (_boolean_result) { 
      out.write("<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"22\" height=\"28\" alt=\"\" border=\"0\"/>");
 } else { 
      out.write("<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/T_extend.gif\" alt=\"\" border=\"0\"/>");
 } 
      out.write("</td>\n</tr>");
 } else { 
      out.write("<tr>\n<td class=\"treeIcon\"><a href=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ContentDirectoryISModuleLocalVariable_HandlerPipelineURL"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {91}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"><img src=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ContentDirectoryISModuleLocalVariable_ExpandCollapseImage"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {91}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" alt=\"\" border=\"0\" /></a></td>\n</tr>");
 } 
      out.write(" \n</table>\n</td>\n<td>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"_padding-left: 5px;\">\n<tr>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("directoryselection"),null).equals(context.getFormattedValue("yes",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("editdirectoryselection"),null).equals(context.getFormattedValue("yes",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("SelectedDirectoryPath"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("SelectedDirectoryPath"),null).equals(context.getFormattedValue(getObject("directory:Path"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",99,e);}if (_boolean_result) { 
      out.write("<input type=\"hidden\" name=\"OldFileName\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("directory:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {100}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" />\n<td class=\"dep_check\"><input type=\"text\" name=\"NewFileName\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("directory:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {101}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" class=\"inputfield_en\"/></td>\n<td><input type=\"hidden\" name=\"DefaultButton\" value=\"RenameDirectory\"/><input type=\"hidden\" name=\"SelectedDirectoryPath\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("directory:Path"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {102}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n<table cellpadding=\"0\" cellspacing=\"3\" border=\"0\">\n<tbody><tr><td class=\"button\"><input type=\"submit\" name=\"RenameDirectory\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("SelectCategory.OK.button",null)),null));
      out.write("\" class=\"button\" /></td><td class=\"button\"><input type=\"submit\" name=\"CancelEditDirectory\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("PageletEntryPointSetParent.Cancel.button",null)),null));
      out.write("\" class=\"button\"/></td>\n</tr></tbody>\n</table>\n</td>");
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("directoryselection"),null).equals(context.getFormattedValue("yes",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) (getObject("directory:isRoot"))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("rootdirectoryselection"),null).equals(context.getFormattedValue("yes",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",109,e);}if (_boolean_result) { 
      out.write("<input type=\"hidden\" name=\"SelectedDirectoryPath\" value=\"ROOT\" />");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("directoryselection"),null).equals(context.getFormattedValue("yes",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("directory:Path"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",111,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("directory:Path"),null).equals(context.getFormattedValue(getObject("DirectoryPath"),null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",112,e);}if (_boolean_result) { 
      out.write("<input type=\"hidden\" name=\"SelectedDirectoryPath\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("directory:Path"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {112}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" />");
 } 
 }} 
  int fileCount = 0;  
										ResettableIterator filesIter = (ResettableIterator)getObject("directory:Files");
										if(filesIter != null && filesIter.hasNext()) {
										    fileCount = Iterators.createCollection(filesIter).size();
										    filesIter.reset();
										}
										getPipelineDictionary().put("fileCount", fileCount);
									
      out.write("<td ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("directory:Path"),null).equals(context.getFormattedValue(getObject("DirectoryPath"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",122,e);}if (_boolean_result) { 
      out.write("class=\"other_dep\"");
 } else { 
      out.write("class=\"main_dep\"");
 } 
      out.write(" nowrap=\"nowrap\">\n<a class=\"table_detail_link\" href=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ContentDirectoryISModuleLocalVariable_HandlerPipelineURL"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {123}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" data-testing-id=\"bo-contentdirectory-");
 {String value = null;try{value=context.getFormattedValue(getObject("directory:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {123}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("directory:isRoot"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",124,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("rootdirectoryname"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",125,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(getObject("rootdirectoryname"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {126}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
 {out.write(localizeISText("ContentDirectory.ContentDirectory.link",null,null,null,null,null,null,null,null,null,null,null,null));} 
 } 
 } else { 
 {String value = null;try{value=context.getFormattedValue(getObject("directory:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {131}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } 
      out.write("</a>&nbsp;<span class=\"table_detail_link\" title=\"");
 {out.write(localizeISText("ContentDirectory.ContentDirectory.FileCount.Hint",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write('"');
      out.write('>');
      out.write('(');
 {String value = null;try{value=context.getFormattedValue(getObject("fileCount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {133}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(")</span>\n</td>");
 } 
      out.write("</tr>\n</table>\n</td>\n</tr>\n</table>\n</td>\n</tr>\n</table>");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ContentDirectoryISModuleLocalVariable_DirectoryIsExpanded"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",146,e);}if (_boolean_result) { 

		for (Iterator iter = (Iterator)getObject("directory:Directories"); iter.hasNext(); )
		{
			getPipelineDictionary().put("Dir", iter.next());
			getPipelineDictionary().put("LastLevel" + (level + 1), iter.hasNext() ? "false" : "true");
			
 processOpenTag(response, pageContext, "contentdirectory", new TagParameter[] {
new TagParameter("directory",getObject("Dir"))}, 152); 

		}
	
 } 
 {Object temp_obj = ((new Double( ((Number) getObject("level")).doubleValue() -((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("level", temp_obj);} 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
