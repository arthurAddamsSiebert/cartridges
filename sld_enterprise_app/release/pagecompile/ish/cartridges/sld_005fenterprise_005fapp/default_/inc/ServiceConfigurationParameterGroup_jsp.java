/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.inc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class ServiceConfigurationParameterGroup_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
      out.write('\n');
 
setEncodingType("text/html"); 
      out.write("\n<script type=\"text/javascript\">\nfunction writeInvalidFieldToErrorMessage(labeltext) {\n\t$('<div/>')\n\t\t.text(labeltext)\n\t\t.appendTo('#InvalidFields');\n}\n</script>\n<tbody id=\"tbody_");
 {String value = null;try{value=context.getFormattedValue(getObject("ParameterGroup:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {10}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('\n');
      out.write('	');
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ServiceParameterView:VisibleParameterGroupNames:Contains(ParameterGroup:Name)"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",11,e);}if (_boolean_result) { 
      out.write("\n\t\tstyle=\"display:table-row-group\"\n\t\t");
 {Object temp_obj = ("true"); getPipelineDictionary().put("groupEnabled", temp_obj);} 
      out.write('\n');
      out.write('	');
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(getObject("ServiceParameterView:InvisibleParameterGroupNames:Contains(ParameterGroup:Name)"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",14,e);}if (_boolean_result) { 
      out.write("\n\t\tstyle=\"display:none\"\n\t\t");
 {Object temp_obj = ("false"); getPipelineDictionary().put("groupEnabled", temp_obj);} 
      out.write('\n');
      out.write('	');
 } else { 
      out.write('\n');
      out.write('	');
      out.write('	');
 {Object temp_obj = ("true"); getPipelineDictionary().put("groupEnabled", temp_obj);} 
      out.write('\n');
      out.write('	');
 }} 
      out.write("\n>\n\t<tr>\n\t\t<td colspan=\"3\" width=\"100%\" class=\"table_title2 n s\">\n\t\t\t");
 {String value = null;try{value=context.getFormattedValue(getObject("ParameterGroup:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {23}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(" \n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td><img width=\"1\" height=\"4\" alt=\"\" src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" border=\"0\" complete=\"complete\"/></td>\n\t\t<td><img width=\"1\" height=\"4\" alt=\"\" src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" border=\"0\" complete=\"complete\"/></td>\n\t\t<td><img width=\"1\" height=\"4\" alt=\"\" src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" border=\"0\" complete=\"complete\"/></td>\n\t</tr>\n\t");
 while (loop("ParameterGroup:DefinitionsSortedByPosition","ParameterDef",null)) { 
      out.write('\n');
      out.write('	');
      out.write('	');
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ParameterDef:LabelKey"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",32,e);}if (_boolean_result) { 
      out.write("\n\t\t\t");
 {Object temp_obj = (localizeText(context.getFormattedValue(getObject("ParameterDef:LabelKey"),null))); getPipelineDictionary().put("labeltext", temp_obj);} 
      out.write('\n');
      out.write('	');
      out.write('	');
 } else { 
      out.write("\n\t\t\t");
 {Object temp_obj = (getObject("ParameterDef:Name")); getPipelineDictionary().put("labeltext", temp_obj);} 
      out.write('\n');
      out.write('	');
      out.write('	');
 } 
      out.write('\n');
      out.write('	');
      out.write('	');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("FormFieldsRequired")))).booleanValue() && ((Boolean) getObject("FormFieldsRequired:Contains(ParameterDef:Name)")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("FormFieldsInvalid")))).booleanValue() && ((Boolean) getObject("FormFieldsInvalid:Contains(ParameterDef:Name)")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",37,e);}if (_boolean_result) { 
      out.write("\n\t\t\t<script>\n\t\t\t\twriteInvalidFieldToErrorMessage(\"");
      out.print(context.getFormattedValue(encodeString(context.getFormattedValue(getObject("labeltext"),null),(String)("javascript")),null));
      out.write("\");\n\t\t\t</script>\n\t\t");
 } 
      out.write("\n\t\t<tr>\n\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("ParameterDef:PredefinedValuesCount")).doubleValue() >((Number)(new Double(0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",43,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t");
 {Object temp_obj = (getObject("ServiceParameterView:SelectableParameterGroupNamesAndPredefinedValueAssignments(ParameterDef:Name):Iterator")); getPipelineDictionary().put("selAbleParamGroupNamesAndPredValueAssIterator", temp_obj);} 
      out.write("\n\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("FormFieldsRequired")))).booleanValue() && ((Boolean) getObject("FormFieldsRequired:Contains(ParameterDef:Name)")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("FormFieldsInvalid")))).booleanValue() && ((Boolean) getObject("FormFieldsInvalid:Contains(ParameterDef:Name)")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",45,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t<td class=\"label_select\" width=\"3%\" nowrap=\"nowrap\"><label class=\"label label_select label_error\" for=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {46}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t<td class=\"label_select\" width=\"3%\" nowrap=\"nowrap\"><label class=\"label label_select\" for=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {48}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n\t\t\t\t");
 } 
      out.write("\n\t\t\t\t");
 {String value = null;try{value=context.getFormattedValue(getObject("labeltext"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {50}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(':');
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ParameterDef:Required"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",50,e);}if (_boolean_result) { 
      out.write("<span class=\"star\">*</span>");
 } 
      out.write("\n\t\t\t\t\t</label>\n\t\t\t\t</td>\n\t\t\t\t<td class=\"table_detail\" nowrap=\"nowrap\">\n\t\t\t\t\t<select name=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {54}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" id=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {54}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\tclass=\"select inputfield_en\" \n\t\t\t\t\t\tonChange=\"toggleTBodyVisibility(this, [");
 while (loop("selAbleParamGroupNamesAndPredValueAssIterator","selAbleParamGroupNamesAndPredValueAss",null)) { 
      out.write('[');
 {String value = null;try{value=context.getFormattedValue(getObject("selAbleParamGroupNamesAndPredValueAss"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {56}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(']');
 _boolean_result=false;try {_boolean_result=((Boolean)((hasNext("selAbleParamGroupNamesAndPredValueAss") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",56,e);}if (_boolean_result) { 
      out.write(',');
 } 
 } 
      out.write("])\"\n\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("groupEnabled")))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("groupEnabled"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",57,e);}if (_boolean_result) { 
      out.write("disabled=\"disabled\"");
 } 
      out.write("\n\t\t\t\t\t>\n\t\t\t\t\t\t");
 while (loop("ParameterDef:PredefinedValuesSortedByPosition","PredefValue",null)) { 
      out.write("\n\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("FormRecord")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("FormRecord:get(ParameterDef:Name)"),null).equals(context.getFormattedValue(getObject("PredefValue:Value"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",61,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t<option value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("PredefValue:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {62}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t\t\t\t\tselected=\"selected\">\n\t\t\t\t\t\t\t");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((Boolean) (disableErrorMessages().isDefined(getObject("FormRecord")))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("Configuration:String(ParameterDef:Name)")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",64,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("Configuration:String(ParameterDef:Name)"),null).equals(context.getFormattedValue(getObject("PredefValue:Value"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",65,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t\t<option value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("PredefValue:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {67}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t\t\t\t\tselected=\"selected\">");
 } else { 
      out.write("\n\t\t\t\t\t\t\t\t\t<option value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("PredefValue:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {69}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("PredefValue:isDefault")).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("Configuration:String(ParameterDef:Name)"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("FormRecord:get(ParameterDef:Name)"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",72,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t\t<option value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("PredefValue:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {73}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t\t\t\t\tselected=\"selected\">");
 } else { 
      out.write("\n\t\t\t\t\t\t\t\t\t<option value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("PredefValue:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {75}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t");
 }} 
      out.write("\n\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PredefValue:NameKey"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",78,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t");
 {out.write(localizeISText(context.getFormattedValue(getObject("PredefValue:NameKey"),null),"",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\n\t\t\t\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t\t\t");
 {String value = null;try{value=context.getFormattedValue(getObject("PredefValue:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {81}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\n\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t</select>\n\t\t\t\t</td>\n\t\t\t");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ParameterDef:Type:Name"),null).equals(context.getFormattedValue("Boolean",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",87,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("FormFieldsRequired")))).booleanValue() && ((Boolean) getObject("FormFieldsRequired:Contains(ParameterDef:Name)")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("FormFieldsInvalid")))).booleanValue() && ((Boolean) getObject("FormFieldsInvalid:Contains(ParameterDef:Name)")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",88,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t<td class=\"label_checkbox\" width=\"3%\" nowrap=\"nowrap\"><label class=\"label label_checkbox label_error\" for=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {89}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t<td class=\"label_checkbox\" width=\"3%\" nowrap=\"nowrap\"><label class=\"label label_checkbox\" for=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {91}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n\t\t\t\t");
 } 
      out.write("\n\t\t\t\t");
 {String value = null;try{value=context.getFormattedValue(getObject("labeltext"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {93}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(':');
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ParameterDef:Required"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",93,e);}if (_boolean_result) { 
      out.write("<span class=\"star\">*</span>");
 } 
      out.write("\n\t\t\t\t\t</label>\n\t\t\t\t</td>\n\t\t\t\t<td class=\"input_checkbox\" nowrap=\"nowrap\">\t\t\n\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("Configuration:String(ParameterDef:Name)"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",97,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("Configuration:String(ParameterDef:Name)"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",98,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t<input name=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {99}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" id=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {99}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t\t\ttype=\"checkbox\" value=\"true\" checked=\"checked\" class=\"inputfield_en\" \n\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("groupEnabled")))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("groupEnabled"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",101,e);}if (_boolean_result) { 
      out.write("disabled=\"disabled\"");
 } 
      out.write("\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t\t<input name=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {104}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" id=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {104}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t\t\ttype=\"checkbox\" value=\"true\" class=\"inputfield_en\"\n\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("groupEnabled")))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("groupEnabled"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",106,e);}if (_boolean_result) { 
      out.write("disabled=\"disabled\"");
 } 
      out.write("\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ParameterDef:DefaultValue"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",110,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t<input name=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {111}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" id=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {111}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t\t\ttype=\"checkbox\" value=\"true\" checked=\"checked\" class=\"inputfield_en\"  \n\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("groupEnabled")))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("groupEnabled"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",113,e);}if (_boolean_result) { 
      out.write("disabled=\"disabled\"");
 } 
      out.write("\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t\t<input name=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {116}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" id=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {116}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t\t\ttype=\"checkbox\" value=\"true\" class=\"inputfield_en\"\n\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("groupEnabled")))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("groupEnabled"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",118,e);}if (_boolean_result) { 
      out.write("disabled=\"disabled\"");
 } 
      out.write("\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t</td>\n\t\t\t");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ParameterDef:Type:Name"),null).equals(context.getFormattedValue("Password",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",123,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("FormFieldsRequired")))).booleanValue() && ((Boolean) getObject("FormFieldsRequired:Contains(ParameterDef:Name)")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("FormFieldsInvalid")))).booleanValue() && ((Boolean) getObject("FormFieldsInvalid:Contains(ParameterDef:Name)")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",124,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t<td class=\"label\" width=\"3%\" nowrap=\"nowrap\"><label class=\"label label_Password label_error\" for=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {125}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t<td class=\"label\" width=\"3%\" nowrap=\"nowrap\"><label class=\"label label_Password\" for=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {127}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t");
 {String value = null;try{value=context.getFormattedValue(getObject("labeltext"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {129}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(':');
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ParameterDef:Required"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",129,e);}if (_boolean_result) { 
      out.write("<span class=\"star\">*</span>");
 } 
      out.write("\n\t\t\t\t\t</label>\n\t\t\t\t</td>\n\t\t\t\t<td class=\"table_detail\" nowrap=\"nowrap\">\n\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("Configuration:String(ParameterDef:Name)"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",133,e);}if (_boolean_result) { 
      out.write("\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t<input autocomplete=\"off\" type=\"password\" name=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {134}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" id=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {134}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("FormRecord")))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("FormRecord:get(ParameterDef:Name)"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",135,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\tvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("FormRecord:get(ParameterDef:Name)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {136}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t\tvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Configuration:String(ParameterDef:Name)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {138}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\tsize=\"50\" class=\"inputfield_en\" \n\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("groupEnabled")))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("groupEnabled"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",141,e);}if (_boolean_result) { 
      out.write("disabled=\"disabled\"");
 } 
      out.write("\n\t\t\t\t\t\t/>\n\t\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t<input autocomplete=\"off\" type=\"password\" name=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {144}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" id=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {144}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("FormRecord")))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("FormRecord:get(ParameterDef:Name)"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",145,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\tvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("FormRecord:get(ParameterDef:Name)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {146}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t\tvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ParameterDef:DefaultValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {148}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t size=\"50\" class=\"inputfield_en\"  \n\t\t\t\t\t\t\t ");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("groupEnabled")))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("groupEnabled"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",151,e);}if (_boolean_result) { 
      out.write("disabled=\"disabled\"");
 } 
      out.write("\n\t\t\t\t\t\t/>\n\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t</td>\n\t\t\t");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ParameterDef:Type:Name"),null).equals(context.getFormattedValue("Integer",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",155,e);}if (_boolean_result) { 
      out.write("\t\t\t\n\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("FormFieldsRequired")))).booleanValue() && ((Boolean) getObject("FormFieldsRequired:Contains(ParameterDef:Name)")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("FormFieldsInvalid")))).booleanValue() && ((Boolean) getObject("FormFieldsInvalid:Contains(ParameterDef:Name)")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",156,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t<td class=\"label\" width=\"3%\" nowrap=\"nowrap\"><label class=\"label label_error\" for=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {157}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t<td class=\"label\" width=\"3%\" nowrap=\"nowrap\"><label class=\"label\" for=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {159}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t");
 {String value = null;try{value=context.getFormattedValue(getObject("labeltext"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {161}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(':');
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ParameterDef:Required"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",161,e);}if (_boolean_result) { 
      out.write("<span class=\"star\">*</span>");
 } 
      out.write("\n\t\t\t\t\t</label>\n\t\t\t\t</td>\n\t\t\t\t<td class=\"table_detail\" nowrap=\"nowrap\">\t\t\t\t\t\n\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\tname=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {166}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" id=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {166}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" \n\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("TypedFormRecord")))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("TypedFormRecord:get(ParameterDef:Name)"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",167,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\tvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("TypedFormRecord:get(ParameterDef:Name)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {168}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("FormRecord")))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("FormRecord:get(ParameterDef:Name)"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",169,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\tvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("FormRecord:get(ParameterDef:Name)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {170}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("Configuration:Integer(ParameterDef:Name)"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",171,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\tvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ParameterDef:DefaultValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {172}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\tvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Configuration:Integer(ParameterDef:Name)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {174}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t");
 }}} 
      out.write("\n\t\t\t\t\t\tsize=\"50\" class=\"inputfield_en\" \n\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("groupEnabled")))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("groupEnabled"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",177,e);}if (_boolean_result) { 
      out.write("disabled=\"disabled\"");
 } 
      out.write("\n\t\t\t\t\t/>\n\t\t\t\t</td> \n\t\t\t");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ParameterDef:Type:Name"),null).equals(context.getFormattedValue("Double",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",180,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("FormFieldsRequired")))).booleanValue() && ((Boolean) getObject("FormFieldsRequired:Contains(ParameterDef:Name)")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("FormFieldsInvalid")))).booleanValue() && ((Boolean) getObject("FormFieldsInvalid:Contains(ParameterDef:Name)")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",181,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t<td class=\"label\" width=\"3%\" nowrap=\"nowrap\"><label class=\"label label_error\" for=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {182}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t<td class=\"label\" width=\"3%\" nowrap=\"nowrap\"><label class=\"label\" for=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {184}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n\t\t\t\t");
 } 
      out.write("\n\t\t\t\t");
 {String value = null;try{value=context.getFormattedValue(getObject("labeltext"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {186}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(':');
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ParameterDef:Required"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",186,e);}if (_boolean_result) { 
      out.write("<span class=\"star\">*</span>");
 } 
      out.write("\n\t\t\t\t\t</label>\n\t\t\t\t</td>\n\t\t\t\t<td class=\"table_detail\" nowrap=\"nowrap\">\n\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\tname=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {191}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" \n\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("TypedFormRecord")))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("TypedFormRecord:get(ParameterDef:Name)"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",192,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\tvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("TypedFormRecord:get(ParameterDef:Name)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {193}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("FormRecord")))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("FormRecord:get(ParameterDef:Name)"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",194,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\tvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("FormRecord:get(ParameterDef:Name)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {195}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("Configuration:Double(ParameterDef:Name)"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",196,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\tvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ParameterDef:DefaultValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {197}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\tvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Configuration:Double(ParameterDef:Name)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {199}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t");
 }}} 
      out.write("\n\t\t\t\t\t\tsize=\"50\" class=\"inputfield_en\" \n\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("groupEnabled")))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("groupEnabled"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",202,e);}if (_boolean_result) { 
      out.write("disabled=\"disabled\"");
 } 
      out.write("\n\t\t\t\t\t/>\n\t\t\t\t</td>\t\n\t\t\t");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ParameterDef:Type:Name"),null).equals(context.getFormattedValue("Text",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",205,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("FormFieldsRequired")))).booleanValue() && ((Boolean) getObject("FormFieldsRequired:Contains(ParameterDef:Name)")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("FormFieldsInvalid")))).booleanValue() && ((Boolean) getObject("FormFieldsInvalid:Contains(ParameterDef:Name)")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",206,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t<td class=\"label_textarea\" width=\"3%\" nowrap=\"nowrap\"><label class=\"label label_textarea label_error\" for=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {207}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t<td class=\"label_textarea\" width=\"3%\" nowrap=\"nowrap\"><label class=\"label label_textarea\" for=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {209}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n\t\t\t\t");
 } 
      out.write("\n\t\t\t\t");
 {String value = null;try{value=context.getFormattedValue(getObject("labeltext"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {211}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(':');
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ParameterDef:Required"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",211,e);}if (_boolean_result) { 
      out.write("<span class=\"star\">*</span>");
 } 
      out.write("\n\t\t\t\t\t</label>\n\t\t\t\t</td>\n\t\t\t\t<td class=\"table_detail\" nowrap=\"nowrap\">\n\t\t\t\t\t<textarea rows=\"10\" cols=\"69\" class=\"inputfield_en\" name=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {215}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("groupEnabled")))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("groupEnabled"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",216,e);}if (_boolean_result) { 
      out.write("disabled=\"disabled\"");
 } 
      out.write("\n\t\t\t\t\t>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("FormRecord")))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("FormRecord:get(ParameterDef:Name)"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",217,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(getObject("FormRecord:get(ParameterDef:Name)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {217}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
 {String value = null;try{value=context.getFormattedValue(getObject("Configuration:String(ParameterDef:Name)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {217}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } 
      out.write("</textarea>\n\t\t\t\t</td>\n\t\t\t\n\t\t\t\n\t\t\t");
 } else { 
      out.write("\n\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("FormFieldsRequired")))).booleanValue() && ((Boolean) getObject("FormFieldsRequired:Contains(ParameterDef:Name)")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("FormFieldsInvalid")))).booleanValue() && ((Boolean) getObject("FormFieldsInvalid:Contains(ParameterDef:Name)")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",222,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t<td class=\"label\" width=\"3%\" nowrap=\"nowrap\"><label class=\"label label_error\" for=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {223}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t<td class=\"label\" width=\"3%\" nowrap=\"nowrap\"><label class=\"label\" for=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {225}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n\t\t\t\t");
 } 
      out.write("\n\t\t\t\t");
 {String value = null;try{value=context.getFormattedValue(getObject("labeltext"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {227}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(':');
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ParameterDef:Required"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",227,e);}if (_boolean_result) { 
      out.write("<span class=\"star\">*</span>");
 } 
      out.write("\n\t\t\t\t\t</label>\n\t\t\t\t</td>\n\t\t\t\t<td class=\"table_detail\" nowrap=\"nowrap\">\n\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("Configuration:String(ParameterDef:Name)"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",231,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t<input type=\"text\" name=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {232}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" id=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {232}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("FormRecord")))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("FormRecord:get(ParameterDef:Name)"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",233,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\tvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("FormRecord:get(ParameterDef:Name)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {234}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t\tvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Configuration:String(ParameterDef:Name)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {236}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\tsize=\"50\" class=\"inputfield_en\" \n\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("groupEnabled")))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("groupEnabled"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",239,e);}if (_boolean_result) { 
      out.write("disabled=\"disabled\"");
 } 
      out.write("\n\t\t\t\t\t\t/>\n\t\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t<input type=\"text\" name=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {242}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" id=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("ServiceParametersForm_",null) + context.getFormattedValue(getObject("ParameterDef:Name"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {242}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("FormRecord")))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("FormRecord:get(ParameterDef:Name)"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",243,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\tvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("FormRecord:get(ParameterDef:Name)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {244}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t\tvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ParameterDef:DefaultValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {246}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t size=\"50\" class=\"inputfield_en\"  \n\t\t\t\t\t\t\t ");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("groupEnabled")))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("groupEnabled"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",249,e);}if (_boolean_result) { 
      out.write("disabled=\"disabled\"");
 } 
      out.write("\n\t\t\t\t\t\t/>\n\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t</td>\n\t\t\t");
 }}}}}} 
      out.write("\n\t\t\t\n\t\t\t<td class=\"table_detail_comment\" width=\"80%\">\n\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ParameterDef:DescriptionKey"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",256,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t");
 {out.write(localizeISText(context.getFormattedValue(getObject("ParameterDef:DescriptionKey"),null),"",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\n\t\t\t\t");
 } 
      out.write("\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><img width=\"1\" height=\"4\" alt=\"\" src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" border=\"0\" complete=\"complete\"/></td>\n\t\t\t<td><img width=\"1\" height=\"4\" alt=\"\" src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" border=\"0\" complete=\"complete\"/></td>\n\t\t\t<td><img width=\"1\" height=\"4\" alt=\"\" src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" border=\"0\" complete=\"complete\"/></td>\n\t\t</tr>\n\t");
 } 
      out.write("\n</tbody>\n\n");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
