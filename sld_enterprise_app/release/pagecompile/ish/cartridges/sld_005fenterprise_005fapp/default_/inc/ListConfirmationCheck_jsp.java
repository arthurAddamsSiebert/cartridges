/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.inc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class ListConfirmationCheck_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
      out.write("<script language=\"JavaScript\" type=\"text/javascript\">\n<!--\n// check if at least one item is selected and submits the form, on the other hand it shows the passed error layer\n// formName - name of the formular\n// namePrefix - prefix of checkBox names\n// errorLayerName - name of the layer to show as error\n// formAction (optional) - action url for form, only assigned if set and not empty\nfunction checkCB(formName, namePrefix, errorLayerName) {\ncheckCB(formName, namePrefix, errorLayerName, '');\n}\nfunction checkCB(formName, namePrefix, errorLayerName, formAction) {\nself.scrollBy(0, -1000);\ncheckElements('checkbox', formName, namePrefix, errorLayerName, formAction);\n}\n// check if at least one radio item is selected and submits the form, on the other hand it shows the passed error layer\n// formName - name of the formular\n// namePrefix - prefix of radio groups items names\n// errorLayerName - name of the layer to show as error\n// formAction (optional) - action url for form, only assigned if set and not empty\nfunction checkRG(formName, namePrefix, errorLayerName) {\n");
      out.write("checkRG(formName, namePrefix, errorLayerName, '');\n}\nfunction checkRG(formName, namePrefix, errorLayerName, formAction) {\nself.scrollBy(0, -1000);\ncheckElements('radio', formName, namePrefix, errorLayerName, formAction);\n}\n// check if at least one item is selected and submits the form, on the other hand it shows the passed error layer\n// type - 'radio' to handle radio buttons, 'checkbox' to handle checkboxes\n// formName - name of the formular\n// namePrefix - prefix of checkBox names\n// errorLayerName - name of the layer to show as error\n// formAction (optional) - action url for form, only assigned if set and not empty\nfunction checkElements(type, formName, namePrefix, errorLayerName, formAction) {\nvar formRef = document.forms[formName];\nfor (var i = 0; i < formRef.elements.length; i++) {\nif ( ( formRef.elements[i].name.indexOf(namePrefix) == 0) &&\n( formRef.elements[i].type == type ) &&\n( formRef.elements[i].disabled == false ) &&\n( formRef.elements[i].checked == true) ) {\nif ( formAction &&\n(formAction != '' ) ) {\n");
      out.write("formRef.action=formAction;\n}\nformRef.submit();\nreturn;\n}\n}\ndocument.getElementById(errorLayerName).style.display='block';\n}\n// -->\n</script>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
