/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.inc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class AssignProductLinksSelectLinkType_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
      out.write(' ');
      out.write('\n');
 
setEncodingType("text/html"); 
      out.write("\n\n<script type=\"text/javascript\">\n\t$(document).ready(function() {\n\t\tvar _typesSelectionClassName = 'types-selection';\n\t\t\n\t\t$('.selection-switcher').click(function() {\n\t\t\tvar switcherTargetedSelection = $('");
      out.print(context.getFormattedValue("#",null));
      out.write("' + $(this).attr('id') + '-' + _typesSelectionClassName);\n\t\t\tif (switcherTargetedSelection.is(':hidden')) {\n\t\t\t\tvar selections = $('.' + _typesSelectionClassName);\n\t\t\t\tselections.hide();\n\t\t\t\tselections.find('select').attr('disabled', 'disabled');\n\t\t\t\t$(switcherTargetedSelection).show();\n\t\t\t\t$(switcherTargetedSelection).find('select').removeAttr('disabled');\n\t\t\t}\n\t\t});\n\n\t\t$('.' + _typesSelectionClassName + ' select').change(function() {\n\t\t\tvar selectedValue = $(this).val();\n\t\t\t$('.selection-switcher').each(function(index, switcher) {\n\t\t\t\tvar switcher = $(switcher);\n\t\t\t\tvar switcherTargetedSelection = $('");
      out.print(context.getFormattedValue("#",null));
      out.write("' + switcher.attr('id') + '-' + _typesSelectionClassName);\n\t\t\t\tif (switcherTargetedSelection.find('select option[value=\"' + selectedValue + '\"]').size() > 0) {\n\t\t\t\t\tswitcher.removeAttr('disabled');\n\t\t\t\t\tswitcherTargetedSelection.find('select').val(selectedValue);\n\t\t\t\t} else {\n\t\t\t\t\tswitcher.attr('disabled', 'disabled');\n\t\t\t\t}\n\t\t\t});\n\t\t}).filter(':visible').change();\n\t});\n</script>\n\n");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!((Boolean) (disableErrorMessages().isDefined(getObject("LinkTarget")))).booleanValue() || ((Boolean) (((!((Boolean) ((((context.getFormattedValue(getObject("LinkTarget"),null).equals(context.getFormattedValue("product",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("LinkTarget"),null).equals(context.getFormattedValue("category",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",35,e);}if (_boolean_result) { 
      out.write('\n');
      out.write('	');
 {Object temp_obj = ("product"); getPipelineDictionary().put("LinkTarget", temp_obj);} 
      out.write('\n');
 } 
      out.write("\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"100%\" class=\"w e s\">\n\t<colgroup>\n\t\t<col width=\"10%\" />\n\t\t<col width=\"1\" />\n\t</colgroup>\n\t<tfoot>\n\t\t<tr>\n\t\t\t<td colspan=\"3\" class=\"n\">\n\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"4\" cellpadding=\"0\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td class=\"button\" width=\"1\">\n\t\t\t\t\t\t\t");
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"inc/product/bulkwizard/WizardParams", null, "49");} 
      out.write("\n\t\t\t\t\t\t\t<input type=\"hidden\" name=\"ParsingLocaleID\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CurrentRequest:Locale:LocaleID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {50}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n\t\t\t\t\t\t\t<input type=\"hidden\" name=\"ProcessDescription\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("AssignProductLinksSelectLinkType.AssignProductCategoryLinks",null)),null));
      out.write("\"/>\n\t\t\t\t\t\t\t<input type=\"hidden\" name=\"ActionID\" value=\"AssignProductLinks\"/>\n\t\t\t\t\t\t\t<input type=\"hidden\" name=\"IsSearchFired\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("IsSearchFired"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {53}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" />\n\t\t\t\t\t\t\t<input type=\"submit\" name=\"actionList\" value=\"&lt;&lt;&nbsp;");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("PageletSelectComponentSlot.Previous.button",null)),null));
      out.write("\" class=\"button\"/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"right\">\n\t\t\t\t\t\t\t<table border=\"0\" cellspacing=\"4\" cellpadding=\"0\" width=\"100%\">\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td class=\"right\">\n\t\t\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"linkType\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("ComponentSelectPageletAssignmentButtons.Next.button",null)),null));
      out.write("&nbsp;&gt;&gt;\" class=\"button actions\"/>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td class=\"button\" width=\"1\">\n\t\t\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"cancel\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("PageletEntryPointSetParent.Cancel.button",null)),null));
      out.write("\" class=\"button\"/>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</tfoot>\n\t<thead>\n\t\t<tr>\n\t\t\t<td class=\"table_title n s\" colspan=\"3\">\n\t\t\t\t");
 {out.write(localizeISText("AssignProductLinksSelectLinkType.Step2AssignProductCategoryLinks.table_title",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\n\t\t\t</td>\n\t\t</tr>\n\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("LinkTypeMissing")))).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("LinkTargetMissing")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",79,e);}if (_boolean_result) { 
      out.write("\n\t\t\t<tr>\n\t\t\t\t<td colspan=\"3\">\n\t\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"4\" width=\"100%\" class=\"error_box s\">\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td class=\"error_icon e\" width=\"1\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/error.gif\" width=\"16\" height=\"15\" alt=\"\" border=\"0\"/></td>\n\t\t\t\t\t\t\t<td class=\"error top\">\n\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("LinkTypeMissing"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",86,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t\t<strong>");
 {out.write(localizeISText("AssignProductLinksSelectLinkType.YouHaveNotSelectedALinkType",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</strong>\n\t\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("LinkTargetMissing"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",88,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("LinkTargetMissing"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",92,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t\t<strong>");
 {out.write(localizeISText("AssignProductLinksSelectLinkType.YouHaveNotSelectedALinkTarget",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</strong>\n\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</table>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t");
 } 
      out.write("\n\t\t<tr>\n\t\t\t<td class=\"table_title_description s\" colspan=\"3\">\n\t\t\t\t");
 {out.write(localizeISText("AssignProductLinksSelectLinkType.Step2Of3NextStepSelectProductsOrSelectCa.table_title_description",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("  \n\t\t\t\t<br/>\n\t\t\t\t<br/>\n\t\t\t\t");
 {out.write(localizeISText("AssignProductLinksSelectLinkType.FieldsWithARedAsterisk.table_title_description",null,null,"star",null,null,null,null,null,null,null,null,null));} 
      out.write(" \n\t\t\t</td>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td colspan=\"3\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"1\" height=\"5\" alt=\"\" border=\"0\"/></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td nowrap=\"nowrap\" class=\"label_select\">\n\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("LinkTargetMissing"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",116,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t<label for=\"ProductLinkTarget\" class=\"label label_select label_error\">");
 {out.write(localizeISText("NewProductAttributeMappingRule.Target.table_header",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":<span class=\"star\">*</span></label>\n\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t<label for=\"ProductLinkTarget\" class=\"label label_select\">");
 {out.write(localizeISText("NewProductAttributeMappingRule.Target.table_header",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":<span class=\"star\">*</span></label>\n\t\t\t\t");
 } 
      out.write("\n\t\t\t</td>\n\t\t\t<td class=\"input_radio\">\n\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("LinkTarget"),null).equals(context.getFormattedValue("product",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",123,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t<input type=\"radio\" name=\"LinkTarget\" id=\"link-to-product\" class=\"selection-switcher\" value=\"product\" checked=\"checked\" />\n\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t<input type=\"radio\" name=\"LinkTarget\" id=\"link-to-product\" class=\"selection-switcher\" value=\"product\" />\n\t\t\t\t");
 } 
      out.write("\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<label for=\"link-to-product\" class=\"label label_radio_text label_light\">");
 {out.write(localizeISText("BrowseClassificationCatalog.Product.table_detail",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td></td>\n\t\t\t<td class=\"input_radio\">\n\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("LinkTarget"),null).equals(context.getFormattedValue("category",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",136,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t<input type=\"radio\" name=\"LinkTarget\" id=\"link-to-category\" class=\"selection-switcher\" value=\"category\" checked=\"checked\" />\n\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t<input type=\"radio\" name=\"LinkTarget\" id=\"link-to-category\" class=\"selection-switcher\" value=\"category\" />\n\t\t\t\t");
 } 
      out.write("\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<label for=\"link-to-category\" class=\"label label_radio_text label_light\">");
 {out.write(localizeISText("sld_enterprise_app.Category",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td nowrap=\"nowrap\" rowspan=\"2\" class=\"label_select\">\n\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("LinkTargetMissing"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",148,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t<label for=\"ProductLinkType\" class=\"label label_select label_error\">");
 {out.write(localizeISText("AssignProductLinksSelectLinkType.LinkTypeTheSelectedProducts.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("...:<span class=\"star\">*</span></label>\n\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t<label for=\"ProductLinkType\" class=\"label label_select\">");
 {out.write(localizeISText("AssignProductLinksSelectLinkType.LinkTypeTheSelectedProducts.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("...:<span class=\"star\">*</span></label>\n\t\t\t\t");
 } 
      out.write("\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr class=\"types-selection");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) ((((context.getFormattedValue(getObject("LinkTarget"),null).equals(context.getFormattedValue("product",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",155,e);}if (_boolean_result) { 
      out.write(" cpo-hidden");
 } 
      out.write("\" id=\"link-to-product-types-selection\">\n\t\t\t<td colspan=\"2\" class=\"table_detail\">\n\t\t\t\t<select name=\"ProductLinkType\" id=\"ProductLinkType\" class=\"select inputfield_en\">\n\t\t\t\t\t<option value=\"\">");
 {out.write(localizeISText("AssignProductLinksSelectLinkType.PleaseSelect.option",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</option>\n\t\t\t\t\t\n\t\t\t\t\t");
 while (loop("ProductLinkTypeSummaryIter","ProductLinkTypeSummary",null)) { 
      out.write("\t\n\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ProductLinkTypeSummary:ProductLinkAllowed"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",161,e);}if (_boolean_result) { 
      out.write("\t\n\t\t\t\t\t\t\t<option value=\"");
      out.print(context.getFormattedValue(encodeString(context.getFormattedValue(getObject("ProductLinkTypeSummary:TypeCodeDefinition:Name"),null)),null));
      out.write('"');
      out.write(' ');
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ProductLinkTypeSummary:TypeCodeDefinition:Name"),null).equals(context.getFormattedValue(getObject("SelectedProductLinkType"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",162,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write(' ');
      out.write('>');
      out.write(' ');
 {out.write(localizeISText("AssignProductLinksSelectLinkType.have.title","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(' ');
 {out.write(localizeISText(context.getFormattedValue(context.getFormattedValue("typeCodeDefinition.",null) + context.getFormattedValue(getObject("ProductLinkTypeSummary:TypeCodeDefinition:Group"),null) + context.getFormattedValue(".",null) + context.getFormattedValue(getObject("ProductLinkTypeSummary:TypeCodeDefinition:Name"),null) + context.getFormattedValue(".displayName",null),null),"",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n\t\t\t\t\t\t\t<option value=\"");
      out.print(context.getFormattedValue(encodeString(context.getFormattedValue(context.getFormattedValue(getObject("ProductLinkTypeSummary:TypeCodeDefinition:Name"),null) + context.getFormattedValue("_Incoming",null),null)),null));
      out.write('"');
      out.write(' ');
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue((context.getFormattedValue(getObject("ProductLinkTypeSummary:TypeCodeDefinition:Name"),null) + context.getFormattedValue("_Incoming",null)),null).equals(context.getFormattedValue(getObject("SelectedProductLinkType"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",163,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write(' ');
      out.write('>');
      out.write(' ');
 {out.write(localizeISText("AssignProductLinksSelectLinkType.are.title","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(' ');
 {out.write(localizeISText(context.getFormattedValue(context.getFormattedValue("typeCodeDefinition.",null) + context.getFormattedValue(getObject("ProductLinkTypeSummary:TypeCodeDefinition:Group"),null) + context.getFormattedValue(".",null) + context.getFormattedValue(getObject("ProductLinkTypeSummary:TypeCodeDefinition:Name"),null) + context.getFormattedValue(".displayName",null),null),"",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\n\t\t\t\t</select>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr class=\"types-selection");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) ((((context.getFormattedValue(getObject("LinkTarget"),null).equals(context.getFormattedValue("category",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",170,e);}if (_boolean_result) { 
      out.write(" cpo-hidden");
 } 
      out.write("\" id=\"link-to-category-types-selection\">\n\t\t\t<td colspan=\"2\" class=\"table_detail\">\n\t\t\t\t<select name=\"CategoryLinkType\" class=\"select inputfield_en\">\n\t\t\t\t\t<option value=\"\">");
 {out.write(localizeISText("AssignProductLinksSelectLinkType.PleaseSelect.option",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</option>\n\t\t\t\t\t\n\t\t\t\t\t");
 while (loop("ProductLinkTypeSummaryIter","ProductLinkTypeSummary",null)) { 
      out.write("\n\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ProductLinkTypeSummary:CategoryLinkAllowed"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",176,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t<option value=\"");
      out.print(context.getFormattedValue(encodeString(context.getFormattedValue(getObject("ProductLinkTypeSummary:TypeCodeDefinition:Name"),null)),null));
      out.write('"');
      out.write(' ');
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ProductLinkTypeSummary:TypeCodeDefinition:Name"),null).equals(context.getFormattedValue(getObject("LinkType"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",177,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write('>');
      out.write(' ');
 {out.write(localizeISText("AssignProductLinksSelectLinkType.have.title","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(' ');
 {out.write(localizeISText(context.getFormattedValue(context.getFormattedValue("typeCodeDefinition.",null) + context.getFormattedValue(getObject("ProductLinkTypeSummary:TypeCodeDefinition:Group"),null) + context.getFormattedValue(".",null) + context.getFormattedValue(getObject("ProductLinkTypeSummary:TypeCodeDefinition:Name"),null) + context.getFormattedValue(".displayName",null),null),"",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n\t\t\t\t\t\t\t<option value=\"");
      out.print(context.getFormattedValue(encodeString(context.getFormattedValue(context.getFormattedValue(getObject("ProductLinkTypeSummary:TypeCodeDefinition:Name"),null) + context.getFormattedValue("_C",null),null)),null));
      out.write('"');
      out.write(' ');
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue((context.getFormattedValue(getObject("ProductLinkTypeSummary:TypeCodeDefinition:Name"),null) + context.getFormattedValue("_C",null)),null).equals(context.getFormattedValue(getObject("LinkType"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",178,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write('>');
      out.write(' ');
 {out.write(localizeISText("AssignProductLinksSelectLinkType.are.title","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(' ');
 {out.write(localizeISText(context.getFormattedValue(context.getFormattedValue("typeCodeDefinition.",null) + context.getFormattedValue(getObject("ProductLinkTypeSummary:TypeCodeDefinition:Group"),null) + context.getFormattedValue(".",null) + context.getFormattedValue(getObject("ProductLinkTypeSummary:TypeCodeDefinition:Name"),null) + context.getFormattedValue(".displayName",null),null),"",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\n\t\t\t\t</select>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td colspan=\"3\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"1\" height=\"4\" border=\"0\"/></td>\n\t\t</tr>\n\t</tbody>\n</table>\n");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
