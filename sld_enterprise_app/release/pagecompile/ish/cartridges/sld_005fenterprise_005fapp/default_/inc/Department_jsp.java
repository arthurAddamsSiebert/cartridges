/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.inc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class Department_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
 {Object temp_obj = ((new Double( ((Number) getObject("level")).doubleValue() +((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("level", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("department:SubDepartmentsCount"),null).equals(context.getFormattedValue("0",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",5,e);}if (_boolean_result) { 
      out.write("<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<td nowrap=\"nowrap\">");

					//int subcount = ((Double)getObject("levelcount")).intValue();
					int level = ((Double)getObject("level")).intValue();
					//int currcount = new LCount[100];
					//currcount[level] = 10;

					for (int i=1; i<level; i++) {
						boolean hasmore = i>=2 && ((Boolean)getObject("hasmore"+(i-1))).booleanValue();
						if (i>=2 && hasmore)
						{
							
      out.write("<td><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/I.gif\" width=\"22\" height=\"28\" alt=\"\" border=\"0\"/></td>");

						}else
						{
							
      out.write("<td><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"22\" height=\"1\" alt=\"\" border=\"0\"/></td>");

						}
					}
				
      out.write("</td>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(context.getFormattedValue(getObject("level"),new Integer(INTEGER)),null).equals(context.getFormattedValue("1",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",29,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("currentidx")).doubleValue() <((Number)(getObject("elementcount"))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",30,e);}if (_boolean_result) { 
      out.write("<td><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/T.gif\" width=\"22\" height=\"28\" alt=\"\" border=\"0\"/></td>");
 } else { 
      out.write("<td><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/L.gif\" width=\"22\" height=\"28\" alt=\"\" border=\"0\"/></td>");
 } 
 } else { 
      out.write("<td><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"22\" height=\"1\" alt=\"\" border=\"0\"/></td>");
 } 
      out.write("<td>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" class=\"treeIconTable\">\n<tr>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(context.getFormattedValue(getObject("level"),new Integer(INTEGER)),null).equals(context.getFormattedValue("1",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",45,e);}if (_boolean_result) { 
      out.write("<td><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/T_extend.gif\" style=\"width: 24px; height:26px;\" alt=\"\" border=\"0\"/></td>");
 } else { 
      out.write("<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"23\" height=\"1\" alt=\"\" border=\"0\"/>");
 } 
      out.write("</tr>\n</table>\n</td>\n<td>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"_padding-left: 5px;\">\n<tr>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("selectiontype"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",57,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("selectiontype"),null).equals(context.getFormattedValue("single",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",58,e);}if (_boolean_result) { 
      out.write("<td class=\"input_radio\"><input type=\"radio\" name=\"SelectedDepartmentUUID\" id =\"");
      out.print(context.getFormattedValue(getObject("department:UUID"),null));
      out.write("\" value=\"");
      out.print(context.getFormattedValue(getObject("department:UUID"),null));
      out.write("\"/></td>");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("selectiontype"),null).equals(context.getFormattedValue("none",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",60,e);}if (_boolean_result) { 
      out.write("<td class=\"input_radio\"></td>");
 } else { 
      out.write("<td class=\"input_radio\"><input type=\"checkbox\" name=\"deleteDep\" id=\"");
      out.print(context.getFormattedValue(getObject("department:UUID"),null));
      out.write("\" value=\"");
      out.print(context.getFormattedValue(getObject("department:UUID"),null));
      out.write('"');
      out.write(' ');
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PrefixIterator"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",63,e);}if (_boolean_result) { 
 while (loop("PrefixIterator","Selected",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("Selected"),null).equals(context.getFormattedValue(getObject("department:UUID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",63,e);}if (_boolean_result) { 
      out.write("checked=\"checked\"");
 if (getLoopStack().isEmpty()) {Logger.error(this,"ISBREAK occured outside ISLOOP. Line: {}",63);}else{getLoopStack().pop();break;} 
 } 
 } 
 } 
      out.write("/></td>");
 }} 
 } else { 
      out.write("<td class=\"input_radio\"><input type=\"checkbox\" name=\"deleteDep\" id=\"");
      out.print(context.getFormattedValue(getObject("department:UUID"),null));
      out.write("\" value=\"");
      out.print(context.getFormattedValue(getObject("department:UUID"),null));
      out.write('"');
      out.write(' ');
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PrefixIterator"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",66,e);}if (_boolean_result) { 
 while (loop("PrefixIterator","Selected",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("Selected"),null).equals(context.getFormattedValue(getObject("department:UUID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",66,e);}if (_boolean_result) { 
      out.write("checked=\"checked\"");
 if (getLoopStack().isEmpty()) {Logger.error(this,"ISBREAK occured outside ISLOOP. Line: {}",66);}else{getLoopStack().pop();break;} 
 } 
 } 
 } 
      out.write("/></td>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("alloweditdepartment"),null).equals(context.getFormattedValue("false",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",69,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(context.getFormattedValue(getObject("level"),new Integer(INTEGER)),null).equals(context.getFormattedValue("1",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",70,e);}if (_boolean_result) { 
      out.write("<td class=\"label_radio_text\" nowrap=\"nowrap\"><label for=\"");
      out.print(context.getFormattedValue(getObject("department:UUID"),null));
      out.write("\" class=\"label label_radio_text\">");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("department:DisplayName"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",71,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(getObject("department:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {71}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
 {String value = null;try{value=context.getFormattedValue(getObject("department:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {71}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } 
      out.write("</label></td>");
 } else { 
      out.write("<td class=\"label_radio_text\" nowrap=\"nowrap\"><label for=\"");
      out.print(context.getFormattedValue(getObject("department:UUID"),null));
      out.write("\" class=\"label label_radio_text\">");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("department:DisplayName"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",73,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(getObject("department:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {73}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
 {String value = null;try{value=context.getFormattedValue(getObject("department:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {73}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } 
      out.write("</label></td>");
 } 
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(context.getFormattedValue(getObject("level"),new Integer(INTEGER)),null).equals(context.getFormattedValue("1",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",76,e);}if (_boolean_result) { 
      out.write("<td class=\"main_dep\" nowrap=\"nowrap\"><a href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewDepartment-Detail",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("DepartmentUUID",null),context.getFormattedValue(getObject("department:UUID"),null)))),null));
      out.write("\" class=\"table_detail_link\">");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("department:DisplayName"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",77,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(getObject("department:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {77}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
 {String value = null;try{value=context.getFormattedValue(getObject("department:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {77}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } 
      out.write("</a> </td>");
 } else { 
      out.write("<td class=\"main_dep\" nowrap=\"nowrap\"><a href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewDepartment-Detail",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("DepartmentUUID",null),context.getFormattedValue(getObject("department:UUID"),null)))),null));
      out.write("\" class=\"table_detail_link\">");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("department:DisplayName"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",79,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(getObject("department:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {79}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
 {String value = null;try{value=context.getFormattedValue(getObject("department:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {79}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } 
      out.write("</a> </td>");
 } 
 } 
      out.write("</tr>\n</table>\n</td>\n</tr>\n</table>\n</td>\n<td width=\"100%\">&nbsp;</td>\n</tr>\n</table>");
 } else { 
      out.write("<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<td nowrap=\"nowrap\">");

					//int subcount = ((Double)getObject("levelcount")).intValue();
					int level = ((Double)getObject("level")).intValue();

					for (int i=1; i<level; i++) {
						boolean hasmore = i>=2 && ((Boolean)getObject("hasmore"+(i-1))).booleanValue();
						if (i>=2 && hasmore)
						{
							
      out.write("<td><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/I.gif\" width=\"22\" height=\"28\" alt=\"\" border=\"0\"/></td>");

						}else
						{
							
      out.write("<td><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"22\" height=\"1\" alt=\"\" border=\"0\"/></td>");

						}
					}
				
      out.write("</td>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(context.getFormattedValue(getObject("level"),new Integer(INTEGER)),null).equals(context.getFormattedValue("1",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",113,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("currentidx")).doubleValue() <((Number)(getObject("elementcount"))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",114,e);}if (_boolean_result) { 
      out.write("<td><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/T.gif\" width=\"22\" height=\"28\" alt=\"\" border=\"0\"/></td>");
 } else { 
      out.write("<td><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/L.gif\" width=\"22\" height=\"28\" alt=\"\" border=\"0\"/></td>");
 } 
 } else { 
      out.write("<td><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"22\" height=\"1\" alt=\"\" border=\"0\"/></td>");
 } 
      out.write("<td>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ExpandedCategoriesMap:get(department:UUID)"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",130,e);}if (_boolean_result) { 
      out.write("<td class=\"treeIconSelect\"><a href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue(context.getFormattedValue(getObject("handlerpipeline"),null) + context.getFormattedValue("-Collapse",null),null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("TreeDepartmentUUID",null),context.getFormattedValue(getObject("department:UUID"),null))).addURLParameter(context.getFormattedValue(getObject("parametername1"),null),context.getFormattedValue(getObject("parametervalue1"),null)).addURLParameter(context.getFormattedValue(getObject("parametername2"),null),context.getFormattedValue(getObject("parametervalue2"),null)).addURLParameter(context.getFormattedValue(getObject("parametername3"),null),context.getFormattedValue(getObject("parametervalue3"),null)).addURLParameter(context.getFormattedValue(getObject("parametername4"),null),context.getFormattedValue(getObject("parametervalue4"),null)).addURLParameter(context.getFormattedValue(getObject("parametername5"),null),context.getFormattedValue(getObject("parametervalue5"),null))),null));
      out.write("\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/minus.gif\" alt=\"\" border=\"0\" /></a></td>");
 } else { 
      out.write("<td class=\"treeIconSelect\"><a href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue(context.getFormattedValue(getObject("handlerpipeline"),null) + context.getFormattedValue("-Expand",null),null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("TreeDepartmentUUID",null),context.getFormattedValue(getObject("department:UUID"),null))).addURLParameter(context.getFormattedValue(getObject("parametername1"),null),context.getFormattedValue(getObject("parametervalue1"),null)).addURLParameter(context.getFormattedValue(getObject("parametername2"),null),context.getFormattedValue(getObject("parametervalue2"),null)).addURLParameter(context.getFormattedValue(getObject("parametername3"),null),context.getFormattedValue(getObject("parametervalue3"),null)).addURLParameter(context.getFormattedValue(getObject("parametername4"),null),context.getFormattedValue(getObject("parametervalue4"),null)).addURLParameter(context.getFormattedValue(getObject("parametername5"),null),context.getFormattedValue(getObject("parametervalue5"),null))),null));
      out.write("\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/plus.gif\" alt=\"\" border=\"0\" /></a></td>");
 } 
      out.write("</tr>\n</table>\n</td>\n<td>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"_padding-left: 5px;\">\n<tr>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("selectiontype"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",160,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("selectiontype"),null).equals(context.getFormattedValue("single",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",161,e);}if (_boolean_result) { 
      out.write("<td class=\"input_radio\"><input type=\"radio\" name=\"SelectedDepartmentUUID\" id=\"");
      out.print(context.getFormattedValue(getObject("department:UUID"),null));
      out.write("\" value=\"");
      out.print(context.getFormattedValue(getObject("department:UUID"),null));
      out.write("\"/></td>");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("selectiontype"),null).equals(context.getFormattedValue("none",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",163,e);}if (_boolean_result) { 
      out.write("<td class=\"input_radio\"></td>");
 } else { 
      out.write("<td class=\"input_radio\"><input type=\"checkbox\" name=\"deleteDep\" id=\"");
      out.print(context.getFormattedValue(getObject("department:UUID"),null));
      out.write("\" value=\"");
      out.print(context.getFormattedValue(getObject("department:UUID"),null));
      out.write('"');
      out.write(' ');
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PrefixIterator"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",166,e);}if (_boolean_result) { 
 while (loop("PrefixIterator","Selected",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("Selected"),null).equals(context.getFormattedValue(getObject("department:UUID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",166,e);}if (_boolean_result) { 
      out.write("checked=\"checked\"");
 if (getLoopStack().isEmpty()) {Logger.error(this,"ISBREAK occured outside ISLOOP. Line: {}",166);}else{getLoopStack().pop();break;} 
 } 
 } 
 } 
      out.write("/></td>");
 }} 
 } else { 
      out.write("<td class=\"input_radio\"><input type=\"checkbox\" name=\"deleteDep\" id=\"");
      out.print(context.getFormattedValue(getObject("department:UUID"),null));
      out.write("\" value=\"");
      out.print(context.getFormattedValue(getObject("department:UUID"),null));
      out.write('"');
      out.write(' ');
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PrefixIterator"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",169,e);}if (_boolean_result) { 
 while (loop("PrefixIterator","Selected",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("Selected"),null).equals(context.getFormattedValue(getObject("department:UUID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",169,e);}if (_boolean_result) { 
      out.write("checked=\"checked\"");
 if (getLoopStack().isEmpty()) {Logger.error(this,"ISBREAK occured outside ISLOOP. Line: {}",169);}else{getLoopStack().pop();break;} 
 } 
 } 
 } 
      out.write("/></td>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("alloweditdepartment"),null).equals(context.getFormattedValue("false",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",172,e);}if (_boolean_result) { 
      out.write("<td class=\"label_radio_text\" nowrap=\"nowrap\"><label for=\"");
      out.print(context.getFormattedValue(getObject("department:UUID"),null));
      out.write("\" class=\"label label_radio_text\">");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("department:DisplayName"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",173,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(getObject("department:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {173}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
 {String value = null;try{value=context.getFormattedValue(getObject("department:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {173}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } 
      out.write("</label></td>");
 } else { 
      out.write("<td class=\"main_dep\" nowrap=\"nowrap\"><a href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewDepartment-Detail",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("DepartmentUUID",null),context.getFormattedValue(getObject("department:UUID"),null)))),null));
      out.write("\" class=\"table_detail_link\">");
 {String value = null;try{value=context.getFormattedValue(getObject("department:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {175}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</a> </td>");
 } 
      out.write("</tr>\n</table>\n</td>\n</tr>\n</table>\n</td>\n<td width=\"100%\">&nbsp;</td>\n</tr>\n</table>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("ExpandedCategoriesMap:get(department:UUID)")))).booleanValue() && ((Boolean) ((( ((Number) getObject("department:SubDepartmentsCount")).doubleValue() >((Number)(new Double(0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",187,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("level")).doubleValue() ==((Number)(new Double(0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",188,e);}if (_boolean_result) { 
 while (loop("department:SubDepartments","sub0",null)) { 
 {Object temp_obj = ((hasNext("sub0") ? Boolean.TRUE : Boolean.FALSE)); getPipelineDictionary().put("hasmore0", temp_obj);} 
 processOpenTag(response, pageContext, "department", new TagParameter[] {
new TagParameter("department",getObject("sub0"))}, 190); 
 } 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("level")).doubleValue() ==((Number)(new Double(1))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",191,e);}if (_boolean_result) { 
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("CurrentElementCount1", temp_obj);} 
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("ElementCount1", temp_obj);} 
 while (loop("department:SubDepartments","Folders",null)) { 
 {Object temp_obj = ((new Double( ((Number) getObject("ElementCount1")).doubleValue() +((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("ElementCount1", temp_obj);} 
 } 
 while (loop("department:SubDepartments","sub1",null)) { 
 {Object temp_obj = ((hasNext("sub1") ? Boolean.TRUE : Boolean.FALSE)); getPipelineDictionary().put("hasmore1", temp_obj);} 
 {Object temp_obj = ((new Double( ((Number) getObject("CurrentElementCount1")).doubleValue() +((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("CurrentElementCount1", temp_obj);} 
 processOpenTag(response, pageContext, "department", new TagParameter[] {
new TagParameter("currentidx",getObject("CurrentElementCount1")),
new TagParameter("department",getObject("sub1")),
new TagParameter("elementcount",getObject("ElementCount1"))}, 195); 
 } 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("level")).doubleValue() ==((Number)(new Double(2))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",196,e);}if (_boolean_result) { 
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("CurrentElementCount2", temp_obj);} 
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("ElementCount2", temp_obj);} 
 while (loop("department:SubDepartments","Folders",null)) { 
 {Object temp_obj = ((new Double( ((Number) getObject("ElementCount2")).doubleValue() +((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("ElementCount2", temp_obj);} 
 } 
 while (loop("department:SubDepartments","sub2",null)) { 
 {Object temp_obj = ((hasNext("sub2") ? Boolean.TRUE : Boolean.FALSE)); getPipelineDictionary().put("hasmore2", temp_obj);} 
 {Object temp_obj = ((new Double( ((Number) getObject("CurrentElementCount2")).doubleValue() +((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("CurrentElementCount2", temp_obj);} 
 processOpenTag(response, pageContext, "department", new TagParameter[] {
new TagParameter("currentidx",getObject("CurrentElementCount2")),
new TagParameter("department",getObject("sub2")),
new TagParameter("elementcount",getObject("ElementCount2"))}, 200); 
 } 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("level")).doubleValue() ==((Number)(new Double(3))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",201,e);}if (_boolean_result) { 
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("CurrentElementCount3", temp_obj);} 
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("ElementCount3", temp_obj);} 
 while (loop("department:SubDepartments","Folders",null)) { 
 {Object temp_obj = ((new Double( ((Number) getObject("ElementCount3")).doubleValue() +((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("ElementCount3", temp_obj);} 
 } 
 while (loop("department:SubDepartments","sub3",null)) { 
 {Object temp_obj = ((hasNext("sub3") ? Boolean.TRUE : Boolean.FALSE)); getPipelineDictionary().put("hasmore3", temp_obj);} 
 {Object temp_obj = ((new Double( ((Number) getObject("CurrentElementCount3")).doubleValue() +((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("CurrentElementCount3", temp_obj);} 
 processOpenTag(response, pageContext, "department", new TagParameter[] {
new TagParameter("currentidx",getObject("CurrentElementCount3")),
new TagParameter("department",getObject("sub3")),
new TagParameter("elementcount",getObject("ElementCount3"))}, 205); 
 } 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("level")).doubleValue() ==((Number)(new Double(4))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",206,e);}if (_boolean_result) { 
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("CurrentElementCount4", temp_obj);} 
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("ElementCount4", temp_obj);} 
 while (loop("department:SubDepartments","Folders",null)) { 
 {Object temp_obj = ((new Double( ((Number) getObject("ElementCount4")).doubleValue() +((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("ElementCount4", temp_obj);} 
 } 
 while (loop("department:SubDepartments","sub4",null)) { 
 {Object temp_obj = ((hasNext("sub4") ? Boolean.TRUE : Boolean.FALSE)); getPipelineDictionary().put("hasmore4", temp_obj);} 
 {Object temp_obj = ((new Double( ((Number) getObject("CurrentElementCount4")).doubleValue() +((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("CurrentElementCount4", temp_obj);} 
 processOpenTag(response, pageContext, "department", new TagParameter[] {
new TagParameter("currentidx",getObject("CurrentElementCount4")),
new TagParameter("department",getObject("sub4")),
new TagParameter("elementcount",getObject("ElementCount4"))}, 210); 
 } 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("level")).doubleValue() ==((Number)(new Double(5))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",211,e);}if (_boolean_result) { 
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("CurrentElementCount5", temp_obj);} 
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("ElementCount5", temp_obj);} 
 while (loop("department:SubDepartments","Folders",null)) { 
 {Object temp_obj = ((new Double( ((Number) getObject("ElementCount5")).doubleValue() +((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("ElementCount5", temp_obj);} 
 } 
 while (loop("department:SubDepartments","sub5",null)) { 
 {Object temp_obj = ((hasNext("sub5") ? Boolean.TRUE : Boolean.FALSE)); getPipelineDictionary().put("hasmore5", temp_obj);} 
 {Object temp_obj = ((new Double( ((Number) getObject("CurrentElementCount5")).doubleValue() +((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("CurrentElementCount5", temp_obj);} 
 processOpenTag(response, pageContext, "department", new TagParameter[] {
new TagParameter("currentidx",getObject("CurrentElementCount5")),
new TagParameter("department",getObject("sub5")),
new TagParameter("elementcount",getObject("ElementCount5"))}, 215); 
 } 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("level")).doubleValue() ==((Number)(new Double(6))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",216,e);}if (_boolean_result) { 
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("CurrentElementCount6", temp_obj);} 
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("ElementCount6", temp_obj);} 
 while (loop("department:SubDepartments","Folders",null)) { 
 {Object temp_obj = ((new Double( ((Number) getObject("ElementCount6")).doubleValue() +((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("ElementCount6", temp_obj);} 
 } 
 while (loop("department:SubDepartments","sub6",null)) { 
 {Object temp_obj = ((hasNext("sub6") ? Boolean.TRUE : Boolean.FALSE)); getPipelineDictionary().put("hasmore6", temp_obj);} 
 {Object temp_obj = ((new Double( ((Number) getObject("CurrentElementCount6")).doubleValue() +((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("CurrentElementCount6", temp_obj);} 
 processOpenTag(response, pageContext, "department", new TagParameter[] {
new TagParameter("currentidx",getObject("CurrentElementCount6")),
new TagParameter("department",getObject("sub6")),
new TagParameter("elementcount",getObject("ElementCount6"))}, 220); 
 } 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("level")).doubleValue() ==((Number)(new Double(7))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",221,e);}if (_boolean_result) { 
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("CurrentElementCount7", temp_obj);} 
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("ElementCount7", temp_obj);} 
 while (loop("department:SubDepartments","Folders",null)) { 
 {Object temp_obj = ((new Double( ((Number) getObject("ElementCount7")).doubleValue() +((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("ElementCount7", temp_obj);} 
 } 
 while (loop("department:SubDepartments","sub7",null)) { 
 {Object temp_obj = ((hasNext("sub7") ? Boolean.TRUE : Boolean.FALSE)); getPipelineDictionary().put("hasmore7", temp_obj);} 
 {Object temp_obj = ((new Double( ((Number) getObject("CurrentElementCount7")).doubleValue() +((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("CurrentElementCount7", temp_obj);} 
 processOpenTag(response, pageContext, "department", new TagParameter[] {
new TagParameter("currentidx",getObject("CurrentElementCount7")),
new TagParameter("department",getObject("sub7")),
new TagParameter("elementcount",getObject("ElementCount7"))}, 225); 
 } 
 } else { 
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("CurrentElementCount8", temp_obj);} 
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("ElementCount8", temp_obj);} 
 while (loop("department:SubDepartments","Folders",null)) { 
 {Object temp_obj = ((new Double( ((Number) getObject("ElementCount8")).doubleValue() +((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("ElementCount8", temp_obj);} 
 } 
 while (loop("department:SubDepartments","sub8",null)) { 
 {Object temp_obj = ((hasNext("sub8") ? Boolean.TRUE : Boolean.FALSE)); getPipelineDictionary().put("hasmore8", temp_obj);} 
 {Object temp_obj = ((new Double( ((Number) getObject("CurrentElementCount8")).doubleValue() +((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("CurrentElementCount8", temp_obj);} 
 processOpenTag(response, pageContext, "department", new TagParameter[] {
new TagParameter("currentidx",getObject("CurrentElementCount8")),
new TagParameter("department",getObject("sub8")),
new TagParameter("elementcount",getObject("ElementCount8"))}, 230); 
 } 
 }}}}}}}} 
 } 
 } 
 {Object temp_obj = ((new Double( ((Number) getObject("level")).doubleValue() -((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("level", temp_obj);} 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
