/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.auditing;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;
import com.intershop.beehive.core.capi.localization.LocaleMgr;
import com.intershop.beehive.core.capi.localization.LocaleInformation;
import com.intershop.beehive.core.capi.request.Request;

public final class AuditItemReportDetails_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {


void determineLocaleDisplayName()
{
	String localeID = (String)getObject("AttributeChange:LocaleID");
	LocaleInformation locale = NamingMgr.getManager(LocaleMgr.class).getLocaleBy(localeID);
	getPipelineDictionary().put("LocaleName", locale != null ? locale.getDisplayName(Request.getCurrent().getLocale()) : localeID);
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
      out.write('\n');
      out.write('\n');
      out.write('\n');
 
setEncodingType("text/html"); 
 processOpenTag(response, pageContext, "breadcrumbtrail", new TagParameter[] {
new TagParameter("link",url(true,(new URLPipelineAction(context.getFormattedValue("ViewAuditItemReportDetails-Start",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("ChannelID",null),context.getFormattedValue(getObject("CurrentChannel:UUID"),null))).addURLParameter(context.getFormattedValue("AuditItemID",null),context.getFormattedValue((getObject("AuditItemBO:ID")),null)))),
new TagParameter("id",getObject("AuditItemBO:ID")),
new TagParameter("text",localizeText(context.getFormattedValue("AuditItemReportDetails.EventDetails.text",null)))}, 15); 
      out.write("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n<tr>\n<td>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n<tr>\n<td class=\"table_title aldi\">");
 {out.write(localizeISText("AuditItemReportDetails.EventDetails.table_title",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>\n</table>\n</td>\n</tr>\n</table>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("AuditItemBO"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",28,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("AuditItemBO:Extension(\"(Class)com.intershop.sellside.enterprise.capi.auditing.AuditItemBODisplayExtension\")")); getPipelineDictionary().put("AuditItemBODisplayExtension", temp_obj);} 
      out.write("<table border=\"0\" cellpadding=\"4\" cellspacing=\"0\" width=\"100%\" class=\"infobox audititem_details w e s\">\n<tr>\n<td>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td class=\"label_text\" nowrap=\"nowrap\"><label class=\"label label_text\">");
 {out.write(localizeISText("AuditItemReportDetails.ObjectType.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</label></td>\n<td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("AuditItemBODisplayExtension:ObjectType"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {36}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n</tr>\n<tr>\n<td class=\"label_text\" nowrap=\"nowrap\"><label class=\"label label_text\">");
 {out.write(localizeISText("AuditItemReportDetails.ActionType.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</label></td>\n<td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("AuditItemBODisplayExtension:ActionType"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {40}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n</tr>\n<tr>\n<td class=\"label_text\" nowrap=\"nowrap\"><label class=\"label label_text\">");
 {out.write(localizeISText("AuditItemReportDetails.Context.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</label></td>\n<td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("AuditItemBODisplayExtension:ApplicationName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {44}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n</tr>\n<tr>\n<td class=\"label_text\" nowrap=\"nowrap\"><label class=\"label label_text\">");
 {out.write(localizeISText("AuditItemReportDetails.User.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</label></td>\n<td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("AuditItemBODisplayExtension:UserID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {48}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n</tr>\n<tr>\n<td class=\"label_text\" nowrap=\"nowrap\"><label class=\"label label_text\">");
 {out.write(localizeISText("AuditItemReportDetails.DateOfChange.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</label></td>\n<td class=\"table_detail\" nowrap=\"nowrap\">");
 {String value = null;try{value=context.getFormattedValue(getObject("AuditItemBODisplayExtension:CreationDate"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {52}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(' ');
 {String value = null;try{value=context.getFormattedValue(getObject("AuditItemBODisplayExtension:CreationDate"),new Integer(DATE_TIME),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {52}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n</tr>\n</table>\n</td>\n<td class=\"audititem_details_comment top\">\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td class=\"label_text fielditem2\" nowrap=\"nowrap\"><label class=\"label label_text\">");
 {out.write(localizeISText("AuditItemReportDetails.Domain.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</label></td>\n<td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("AuditItemBO:DomainRef:DomainName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {60}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n</tr>\n<tr>\n<td class=\"label_text fielditem2\" nowrap=\"nowrap\"><label class=\"label label_text\">");
 {out.write(localizeISText("AuditItemReportDetails.Comment.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</label></td>\n<td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("AuditItemBODisplayExtension:Comment"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {64}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n</tr>\n</table>\n</td>\n</tr>\n</table>");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("AuditItemBO:ActionType"),null).equals(context.getFormattedValue("UPDATE",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",70,e);}if (_boolean_result) { 
      out.write("<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<td class=\"table_header w e s\" nowrap=\"nowrap\" width=\"15%\">&nbsp;</td>\n<td class=\"table_header e s\" nowrap=\"nowrap\">");
 {out.write(localizeISText("AuditItemReportDetails.Before.table_header",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n<td class=\"table_header e s\" nowrap=\"nowrap\">");
 {out.write(localizeISText("AuditItemReportDetails.After.table_header",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>");
 {Object temp_obj = (""); getPipelineDictionary().put("lastLocaleID", temp_obj);} 
 while (loop("AuditItemBODisplayExtension:AuditAttributeChanges","AttributeChange",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("lastLocaleID"),null).equals(context.getFormattedValue(getObject("AttributeChange:LocaleID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",79,e);}if (_boolean_result) { 
 determineLocaleDisplayName(); 
      out.write("<tr>\n<td class=\"table_title2 w e s\" colspan=\"3\">");
 {out.write(localizeISText("AuditItemReportDetails.LocalizedAttributesFor.table_title2",null,null,encodeString(context.getFormattedValue(getObject("LocaleName"),null)),null,null,null,null,null,null,null,null,null));} 
      out.write("</td> \n</tr>");
 {Object temp_obj = (getObject("AttributeChange:LocaleID")); getPipelineDictionary().put("lastLocaleID", temp_obj);} 
 } 
      out.write("<tr>\n<td class=\"table_detail w e s\" nowrap=\"nowrap\">");
 {String value = null;try{value=context.getFormattedValue(getObject("AttributeChange:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {87}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n<td class=\"table_detail e s\">");
 processOpenTag(response, pageContext, "formatobjectdisplay", new TagParameter[] {
new TagParameter("displayObject",getObject("AttributeChange:OldValue"))}, 88); 
      out.write("</td>\n<td class=\"table_detail e s\">");
 processOpenTag(response, pageContext, "formatobjectdisplay", new TagParameter[] {
new TagParameter("displayObject",getObject("AttributeChange:NewValue"))}, 89); 
      out.write("</td>\n</tr>");
 } 
      out.write("</table>");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("AuditItemBO:ActionType"),null).equals(context.getFormattedValue("CREATE",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",93,e);}if (_boolean_result) { 
      out.write("<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<td class=\"table_header w e s\" nowrap=\"nowrap\" width=\"15%\">&nbsp;</td>\n<td class=\"table_header e s\" nowrap=\"nowrap\">");
 {out.write(localizeISText("AuditItemReportDetails.State.table_header",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>");
 {Object temp_obj = (""); getPipelineDictionary().put("lastLocaleID", temp_obj);} 
 while (loop("AuditItemBODisplayExtension:AuditAttributeChanges","AttributeChange",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("lastLocaleID"),null).equals(context.getFormattedValue(getObject("AttributeChange:LocaleID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",101,e);}if (_boolean_result) { 
 determineLocaleDisplayName(); 
      out.write("<tr>\n<td class=\"table_title2 w e s\" colspan=\"2\">");
 {out.write(localizeISText("AuditItemReportDetails.LocalizedAttributesFor.table_title21",null,null,encodeString(context.getFormattedValue(getObject("LocaleName"),null)),null,null,null,null,null,null,null,null,null));} 
      out.write("</td> \n</tr>");
 {Object temp_obj = (getObject("AttributeChange:LocaleID")); getPipelineDictionary().put("lastLocaleID", temp_obj);} 
 } 
      out.write("<tr>\n<td class=\"table_detail w e s\" nowrap=\"nowrap\">");
 {String value = null;try{value=context.getFormattedValue(getObject("AttributeChange:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {109}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n<td class=\"table_detail e s\">");
 processOpenTag(response, pageContext, "formatobjectdisplay", new TagParameter[] {
new TagParameter("displayObject",getObject("AttributeChange:NewValue"))}, 110); 
      out.write("</td>\n</tr>");
 } 
      out.write("</table>");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("AuditItemBO:ActionType"),null).equals(context.getFormattedValue("DELETE",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",114,e);}if (_boolean_result) { 
      out.write("<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<td class=\"table_header w e s\" nowrap=\"nowrap\" width=\"15%\">&nbsp;</td>\n<td class=\"table_header e s\" nowrap=\"nowrap\">");
 {out.write(localizeISText("AuditItemReportDetails.PreviousState.table_header",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>");
 {Object temp_obj = (""); getPipelineDictionary().put("lastLocaleID", temp_obj);} 
 while (loop("AuditItemBODisplayExtension:AuditAttributeChanges","AttributeChange",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("lastLocaleID"),null).equals(context.getFormattedValue(getObject("AttributeChange:LocaleID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",122,e);}if (_boolean_result) { 
 determineLocaleDisplayName(); 
      out.write("<tr>\n<td class=\"table_title2 w e s\" colspan=\"2\">");
 {out.write(localizeISText("AuditItemReportDetails.LocalizedAttributesFor.table_title22",null,null,encodeString(context.getFormattedValue(getObject("LocaleName"),null)),null,null,null,null,null,null,null,null,null));} 
      out.write("</td> \n</tr>");
 {Object temp_obj = (getObject("AttributeChange:LocaleID")); getPipelineDictionary().put("lastLocaleID", temp_obj);} 
 } 
      out.write("<tr>\n<td class=\"table_detail w e s\" nowrap=\"nowrap\">");
 {String value = null;try{value=context.getFormattedValue(getObject("AttributeChange:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {130}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n<td class=\"table_detail e s\">");
 processOpenTag(response, pageContext, "formatobjectdisplay", new TagParameter[] {
new TagParameter("displayObject",getObject("AttributeChange:OldValue"))}, 131); 
      out.write("</td>\n</tr>");
 } 
      out.write("</table>");
 }}} 
 } 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"inc/BackToList", null, "137");} 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
