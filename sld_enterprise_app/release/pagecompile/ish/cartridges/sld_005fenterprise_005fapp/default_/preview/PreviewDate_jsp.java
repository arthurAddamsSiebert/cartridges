/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.preview;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class PreviewDate_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"inc/Modules.isml", null, "3");} 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((disableErrorMessages().isDefined(getObject("formParameter"))))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("formParameter:ID"),null).equals(context.getFormattedValue("PreviewDate",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",4,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("formParameter:Value")); getPipelineDictionary().put("PreviewDateAttribute", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("PreviewDateAttribute")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("PreviewDateAttribute:Visible"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",6,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("formParameter:Field(\"Fixed\"):Value")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("formParameter:Field(\"Fixed\"):Value"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",7,e);}if (_boolean_result) { 
 {Object temp_obj = ("true"); getPipelineDictionary().put("Fixed", temp_obj);} 
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("PreviewDateAttribute:Selected"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",10,e);}if (_boolean_result) { 
 {Object temp_obj = ("true"); getPipelineDictionary().put("Fixed", temp_obj);} 
 } else { 
 {Object temp_obj = ("false"); getPipelineDictionary().put("Fixed", temp_obj);} 
 } 
 } 
      out.write("<div>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("formParameter:Invalid")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("formParameter:Invalid"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",17,e);}if (_boolean_result) { 
      out.write("<label class=\"fielditem2_error\" nowrap=\"nowrap\">");
 {out.write(localizeISText("PreviewDate.DateTime.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</label>");
 } else { 
      out.write("<label class=\"fielditem2\" nowrap=\"nowrap\">");
 {out.write(localizeISText("PreviewDate.DateTime.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</label>");
 } 
      out.write("<div id=\"sfe-preview-date-radio-container\" data-set-system-default-function=\"setRadiobuttonSystemDefault\" data-is-system-default-function=\"isRadiobuttonSystemDefault\" data-set-form-default-function=\"setRadiobuttonFormDefault\" data-is-form-default-function=\"isRadiobuttonFormDefault\">\n<input type=\"radio\" class=\"inputfield_en sfe-preview-pca-datetime-make-current\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("Fixed"),null).equals(context.getFormattedValue("false",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",23,e);}if (_boolean_result) { 
      out.write("checked=\"checked\"");
 } 
      out.write(" id=\"current_date_time_radio\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("formParameter:Field(\"Fixed\"):QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {23}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" value=\"false\" data-system-default-value=\"");
      out.print(context.getFormattedValue((((Boolean) ((disableErrorMessages().isDefined(getObject("PreviewDateAttribute:DefaultValue"))))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) ,null));
      out.write("\">\n<label for=\"current_date_time_radio\" class=\"fielditem\">");
 {out.write(localizeISText("PreviewDate.CurrentDefault.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label>\n<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"5\" height=\"1\" alt=\"\" border=\"0\"/>");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("Fixed"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",26,e);}if (_boolean_result) { 
      out.write("<input type=\"radio\" class=\"inputfield_en sfe-preview-pca-datetime-make-fixed\" checked=\"checked\" id=\"fixed_date_time_radio\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("formParameter:Field(\"Fixed\"):QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {27}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" value=\"true\" data-system-default-value=\"");
      out.print(context.getFormattedValue((disableErrorMessages().isDefined(getObject("PreviewDateAttribute:DefaultValue"))),null));
      out.write('"');
      out.write('>');
 } else { 
      out.write("<input type=\"radio\" class=\"inputfield_en last sfe-preview-pca-datetime-make-fixed\" id=\"fixed_date_time_radio\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("formParameter:Field(\"Fixed\"):QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {29}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" value=\"true\" data-system-default-value=\"");
      out.print(context.getFormattedValue((disableErrorMessages().isDefined(getObject("PreviewDateAttribute:DefaultValue"))),null));
      out.write('"');
      out.write('>');
 } 
      out.write("<label for=\"fixed_date_time_radio\" class=\"fielditem\">");
 {out.write(localizeISText("PreviewDate.Fixed.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label>\n</div>\n<div class=\"sfe-preview-pca-datetime");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("Fixed"),null).equals(context.getFormattedValue("false",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",33,e);}if (_boolean_result) { 
      out.write(" sfe-preview-pca-datetime-hide");
 } 
      out.write("\">\n<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\n<tr>");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("EnablePastDateCheck"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",36,e);}if (_boolean_result) { 
 processOpenTag(response, pageContext, "dateinput", new TagParameter[] {
new TagParameter("InputFieldName",getObject("formParameter:Field(\"Day\"):QualifiedName")),
new TagParameter("Required",(((Boolean) (getObject("formParameter:Field(\"Day\"):Optional"))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) ),
new TagParameter("InputFieldEditClass","fielditem2"),
new TagParameter("DateString",getObject("formParameter:Field(\"Day\"):Value")),
new TagParameter("DatePatternUserHint","true"),
new TagParameter("EnablePast","false"),
new TagParameter("DateObject",getObject("formParameter:Field(\"Day\"):FormattedValue")),
new TagParameter("Invalid",getObject("formParameter:Invalid"))}, 37); 
 } else { 
 processOpenTag(response, pageContext, "dateinput", new TagParameter[] {
new TagParameter("InputFieldName",getObject("formParameter:Field(\"Day\"):QualifiedName")),
new TagParameter("Required",(((Boolean) (getObject("formParameter:Field(\"Day\"):Optional"))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) ),
new TagParameter("InputFieldEditClass","fielditem2"),
new TagParameter("DateString",getObject("formParameter:Field(\"Day\"):Value")),
new TagParameter("DatePatternUserHint","true"),
new TagParameter("DateObject",getObject("formParameter:Field(\"Day\"):FormattedValue")),
new TagParameter("Invalid",getObject("formParameter:Invalid"))}, 47); 
 } 
 processOpenTag(response, pageContext, "timeinput", new TagParameter[] {
new TagParameter("InputFieldName",getObject("formParameter:Field(\"Time\"):QualifiedName")),
new TagParameter("TimeString",getObject("formParameter:Field(\"Time\"):Value")),
new TagParameter("Required",(((Boolean) (getObject("formParameter:Field(\"Time\"):Optional"))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) ),
new TagParameter("InputFieldEditClass","sfe-time-input"),
new TagParameter("DateObject",getObject("formParameter:Field(\"Time\"):FormattedValue")),
new TagParameter("Invalid",getObject("formParameter:Invalid"))}, 56); 
      out.write("</tr>\n</table>\n</div>\n</div>");
 } else { 
      out.write("<!-- visible flag not true for PreviewDate -->\n<input type=\"hidden\" \nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("formParameter:Field(\"Day\"):Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {69}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nname=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("formParameter:Field(\"Day\"):QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {70}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nid=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("formParameter:Field(\"Day\"):QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {71}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n/>\n<input type=\"hidden\"\nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("formParameter:Field(\"Time\"):Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {74}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nname=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("formParameter:Field(\"Time\"):QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {75}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nid=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("formParameter:Field(\"Time\"):QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {76}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n/>");
 } 
 } else { 
      out.write("<!-- no 'formParameter' found for PreviewDate -->");
 } 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
