/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.syndication;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;
import java.util.*;
import com.intershop.component.mvc.capi.mapping.*;

public final class NewProductPriceMappingRuleHeaderInc_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
      out.write("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n<tr>\n<td width=\"100%\" class=\"table_title aldi\">");
 {out.write(localizeISText("NewProductPriceMappingRuleHeaderInc.0NewMappingRule.table_title",null,null,encodeString(context.getFormattedValue(getObject("SourceDeclaration:currency"),null)),null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>\n</table>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ErrorInvalidSurcharge"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",12,e);}if (_boolean_result) { 
      out.write("<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"100%\">\n<tr>\n<td>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"4\" width=\"100%\" class=\"error_box w e s\">\n<tr valign=\"top\">\n<td class=\"error_icon top e\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/error.gif\" width=\"16\" height=\"15\" alt=\"\" border=\"0\"/></td>\n<td class=\"error top\" width=\"100%\">\n<b>");
 {out.write(localizeISText("NewProductPriceMappingRuleHeaderInc.MappingRuleCouldNotBeCreated.error",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</b><br/>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ErrorInvalidSurcharge"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",21,e);}if (_boolean_result) { 
 {out.write(localizeISText("NewProductPriceMappingRuleHeaderInc.PleaseProvideAValidSurchargeDiscount.error",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("<br/>");
 } 
      out.write("</td>\n</tr>\n</table>\n</td>\n</tr>\n</table>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("CreatePriceMappingRule:MappingRule:isMissing")).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("create")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",34,e);}if (_boolean_result) { 
      out.write("<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"100%\">\n<tr>\n<td>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"4\" width=\"100%\" class=\"error_box w e s\">\n<tr valign=\"top\">\n<td class=\"error_icon top e\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/error.gif\" width=\"16\" height=\"15\" alt=\"\" border=\"0\"/></td>\n<td class=\"error top\" width=\"100%\">\n<b>");
 {out.write(localizeISText("NewProductPriceMappingRuleHeaderInc.MappingRuleCouldNotBeCreatedBPleaseSelectARuleAndC.error",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</b><br/>\n</td>\n</tr>\n</table> \n</td>\n</tr>\n</table>");
 } 

		HashMap listPriceTargetDeclarationMap = new HashMap();
		HashMap costPriceTargetDeclarationMap = new HashMap();

		Iterator i = (Iterator)getObject("PriceMappingRules");
		List<ProductDataMappingRule> priceMappingRules = new ArrayList();
		while( i.hasNext() )
		{
			priceMappingRules.add((ProductDataMappingRule)i.next());
		}

		for( ProductDataMappingRule r : priceMappingRules )
		{
			String functionClassName = r.getFunctionClassName();

			if( functionClassName.equals( "com.intershop.component.mvc.capi.mapping.ProductPriceMappingRule" ) || functionClassName.equals( "com.intershop.component.mvc.capi.mapping.ProductCalculateListPriceFromCostPriceMappingRule") )
			{
				ProductDataDeclaration pdd = r.getTargetDeclaration();
				listPriceTargetDeclarationMap.put(pdd.getString("currency"),pdd);

			}
			else if( functionClassName.equals( "com.intershop.component.mvc.capi.mapping.ProductCostPriceMappingRule") || functionClassName.equals( "com.intershop.component.mvc.capi.mapping.ProductUseListPriceAsCostPriceMappingRule")  )
			{
				ProductDataDeclaration pdd = r.getTargetDeclaration();
				costPriceTargetDeclarationMap.put(pdd.getString("currency"),pdd);
			}
		}

		getPipelineDictionary().put("ListPrice_TargetDeclarationMap", listPriceTargetDeclarationMap);
		getPipelineDictionary().put("CostPrice_TargetDeclarationMap", costPriceTargetDeclarationMap);

	
      out.write("<!-- Main Content -->\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n<tr>\n<td class=\"table_title_description w e\" colspan=\"4\">");
 {out.write(localizeISText("NewProductPriceMappingRuleHeaderInc.UseTheRadioButtonsToSelectARuleYouCanDefineASurcha.table_title_description",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>\n</table>\n<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" class=\"aldi\">\n<tr>\n<td class=\"table_detail\">\n<input type=\"radio\" name=\"CreatePriceMappingRule_MappingRule\" value=\"CopyPrice\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ListPrice_TargetDeclarationMap:get(SourceDeclaration:currency)"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",97,e);}if (_boolean_result) { 
      out.write("disabled=\"disabled\"");
 } 
      out.write(" />\n</td>\n<td class=\"table_detail\" colspan=\"2\">");
 {out.write(localizeISText("NewProductPriceMappingRuleHeaderInc.CopyListPriceListPriceIsCopiedFixedOrSurchargeDisc.table_detail",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>\n<tr>\n<td class=\"table_detail\">&nbsp;</td>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("ErrorInvalidSurcharge")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("CreatePriceMappingRule:MappingRule:Value"),null).equals(context.getFormattedValue("CopyPrice",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",105,e);}if (_boolean_result) { 
      out.write("<td class=\"fielditem2_error\" nowrap=\"nowrap\">&nbsp;&nbsp;&nbsp;");
 {out.write(localizeISText("sld_enterprise_app.SurchargeDiscount.fielditem2_error",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(": </td>");
 } else { 
      out.write("<td class=\"table_detail\" nowrap=\"nowrap\">&nbsp;&nbsp;&nbsp;");
 {out.write(localizeISText("sld_enterprise_app.SurchargeDiscount.table_detail",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(": </td>");
 } 
      out.write("<td class=\"table_detail\" width=\"100%\">\n<input type=\"text\" class=\"inputfield_en\" maxlength=\"30\" size=\"30\" name=\"CreatePriceMappingRule_CopyPriceSurcharge\" value=\"");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("CreatePriceMappingRule:CopyPriceSurcharge:Value"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",111,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(getObject("CreatePriceMappingRule:CopyPriceSurcharge:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {111}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
      out.write('0');
      out.write('%');
 } 
      out.write('"');
      out.write(' ');
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ListPrice_TargetDeclarationMap:get(SourceDeclaration:currency)"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",111,e);}if (_boolean_result) { 
      out.write("disabled=\"disabled\"");
 } 
      out.write("/>\n</td>\n</tr>");
 {Object temp_obj = ("false"); getPipelineDictionary().put("ListPrice_hasValidElements", temp_obj);} 
 while (loop("Currencies","Currency",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((Boolean) (disableErrorMessages().isDefined(getObject("ListPrice_TargetDeclarationMap:get(Currency:Mnemonic)")))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("Currency:Mnemonic"),null).equals(context.getFormattedValue(getObject("SourceDeclaration:currency"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",118,e);}if (_boolean_result) { 
 {Object temp_obj = ("true"); getPipelineDictionary().put("ListPrice_hasValidElements", temp_obj);} 
 if (getLoopStack().isEmpty()) {Logger.error(this,"ISBREAK occured outside ISLOOP. Line: {}",119);}else{getLoopStack().pop();break;} 
 } 
 } 
      out.write("<tr>\n<td class=\"table_detail\">\n<input type=\"radio\" name=\"CreatePriceMappingRule_MappingRule\" value=\"ConvertPrice\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ListPrice_hasValidElements"),null).equals(context.getFormattedValue("false",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",124,e);}if (_boolean_result) { 
      out.write("disabled=\"disabled\"");
 } 
      out.write("/>\n</td>\n<td class=\"table_detail\" colspan=\"2\">");
 {out.write(localizeISText("NewProductPriceMappingRuleHeaderInc.ConvertPriceToDifferentCurrency.table_detail",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>\n<tr>\n<td class=\"table_detail\">&nbsp;</td>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("ErrorInvalidSurcharge")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("CreatePriceMappingRule:MappingRule:Value"),null).equals(context.getFormattedValue("ConvertPrice",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",130,e);}if (_boolean_result) { 
      out.write("<td class=\"fielditem2_error\" nowrap=\"nowrap\">&nbsp;&nbsp;&nbsp;");
 {out.write(localizeISText("sld_enterprise_app.SurchargeDiscount.fielditem2_error",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(": </td>");
 } else { 
      out.write("<td class=\"table_detail\" nowrap=\"nowrap\">&nbsp;&nbsp;&nbsp;");
 {out.write(localizeISText("sld_enterprise_app.SurchargeDiscount.table_detail",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(": </td>");
 } 
      out.write("<td class=\"table_detail\">\n<input type=\"text\" class=\"inputfield_en\" maxlength=\"30\" size=\"30\" name=\"CreatePriceMappingRule_ConvertPriceSurcharge\" value=\"");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("CreatePriceMappingRule:ConvertPriceSurcharge:Value"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",136,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(getObject("CreatePriceMappingRule:ConvertPriceSurcharge:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {136}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
      out.write('0');
      out.write('%');
 } 
      out.write('"');
      out.write(' ');
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ListPrice_hasValidElements"),null).equals(context.getFormattedValue("false",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",136,e);}if (_boolean_result) { 
      out.write("disabled=\"disabled\"");
 } 
      out.write("/>\n</td>\n</tr>\n<tr>\n<td class=\"table_detail\">&nbsp;</td>\n<td class=\"table_detail\" nowrap=\"nowrap\">&nbsp;&nbsp;&nbsp;");
 {out.write(localizeISText("NewProductPriceMappingRuleHeaderInc.TargetCurrency.table_detail",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(": </td>\n<td class=\"table_detail\">\n<select name=\"CreatePriceMappingRule_ConvertPriceCurrency\" class=\"select\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ListPrice_hasValidElements"),null).equals(context.getFormattedValue("false",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",143,e);}if (_boolean_result) { 
      out.write("disabled=\"disabled\"");
 } 
      out.write('>');
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ListPrice_hasValidElements"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",144,e);}if (_boolean_result) { 
 while (loop("Currencies","Currency",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((Boolean) (disableErrorMessages().isDefined(getObject("ListPrice_TargetDeclarationMap:get(Currency:Mnemonic)")))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("Currency:Mnemonic"),null).equals(context.getFormattedValue(getObject("SourceDeclaration:currency"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",146,e);}if (_boolean_result) { 
      out.write("<option value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Currency:Mnemonic"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {147}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write(' ');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("CreatePriceMappingRule:ConvertPriceCurrency:Value")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("CreatePriceMappingRule:ConvertPriceCurrency:Value"),null).equals(context.getFormattedValue(getObject("Currency:Mnemonic"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",147,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write('>');
 {String value = null;try{value=context.getFormattedValue(getObject("Currency:CurrencyName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {147}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</option>");
 } 
 } 
 } else { 
      out.write("<option value=\"\">");
 {out.write(localizeISText("NewProductPriceMappingRuleHeaderInc.None.option",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>");
 } 
      out.write("</select>\n</td>\n</tr>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
