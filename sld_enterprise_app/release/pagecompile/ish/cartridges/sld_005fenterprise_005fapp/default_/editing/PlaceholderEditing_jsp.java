/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.editing;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class PlaceholderEditing_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
      out.write('\n');
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"inc/Modules", null, "2");} 
      out.write('\n');
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"content/Modules", null, "3");} 
      out.write('\n');
      out.write('\n');
 context.setCustomTagTemplateName("sfe_placeholderpageletassignments","content/placeholder/PlaceholderPageletAssignmentsInc.isml",true,new String[]{"sfe_HideButtons","Placeholder","ContextPipeline","ContextType","Repository","Locale","StartFlag","PageLocatorName","parametername0","parametervalue0","parametername1","parametervalue1","parametername2","parametervalue2","parametername3","parametervalue3","parametername4","parametervalue4","parametername5","parametervalue5","parametername6","parametervalue6","parametername7","parametervalue7","parametername8","parametervalue8","parametername9","parametervalue9"},null); 
      out.write('\n');
      out.write('\n');
 processOpenTag(response, pageContext, "contentpermissionmap", new TagParameter[] {
new TagParameter("PermissionMap","PermissionMap")}, 38); 
      out.write("\n\n<div id=\"editPanelResponse\" style=\"display: none;\">\n\t");
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"editing/EditingPlaceholderDummy", null, "41");} 
      out.write("\n\t\n\t<div id=\"editTabs\">\n\t\t<ul>\n\t\t\t<li><a class=\"sfe-active\">");
 {out.write(localizeISText("sld_enterprise_app.Assignments.link",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a></li>\n\t\t</ul>\n\t</div>\n\t\n\t<div id=\"editContainer\">\n\t\t");
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"editing/EditingPlaceholder", null, "50");} 
      out.write('\n');
      out.write('	');
      out.write('	');
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("Placeholders") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",51,e);}if (_boolean_result) { 
      out.write("\n\t\t\t");
 while (loop("Placeholders","Placeholder",null)) { 
      out.write("\n\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("Placeholder:UUID"),null).equals(context.getFormattedValue(getObject("id"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",53,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t<div class=\"n\">\n\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((((!(context.getFormattedValue(getObject("Placeholder:Template:Domain:UUID"),null).equals(context.getFormattedValue(getObject("ContentRepository:RepositoryDomain:UUID"),null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",55,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t<div class=\"sharingInformation\">\n\t\t\t\t\t\t\t\t");
 processOpenTag(response, pageContext, "pageletsharinginfo", new TagParameter[] {
new TagParameter("Pagelet",getObject("Placeholder:Template"))}, 57); 
      out.write("\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\n\t\t\t\t\t\t");
 processOpenTag(response, pageContext, "templatinginfo", new TagParameter[] {
new TagParameter("Pagelet",getObject("Placeholder:Template"))}, 61); 
      out.write("\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div style=\"margin-top: -1px;\">\n\t\t\t\t\t\t");
 processOpenTag(response, pageContext, "sfe_placeholderpageletassignments", new TagParameter[] {
new TagParameter("Locale",getObject("Locale")),
new TagParameter("Placeholder",getObject("Placeholder")),
new TagParameter("ContextType",getObject("PlaceholderPlaceholder:UUID")),
new TagParameter("parametername0","parentPageletUUID"),
new TagParameter("parametervalue3",getObject("Placeholder:UUID")),
new TagParameter("parametername1","ContentRepositoryUUID"),
new TagParameter("parametervalue2",getObject("Locale:LocaleID")),
new TagParameter("parametervalue1",getObject("ContentRepository:UUID")),
new TagParameter("parametername2","LocaleId"),
new TagParameter("parametervalue0",getObject("Pagelet:UUID")),
new TagParameter("parametername3","id"),
new TagParameter("ContextPipeline","ViewPlaceholderEditing-Start"),
new TagParameter("StartFlag",getObject("StartFlag")),
new TagParameter("Repository",getObject("ContentRepository")),
new TagParameter("sfe_HideButtons","true")}, 65); 
      out.write("\n\t\t\t\t\t</div>\n\t\t\t\t\t");
 {Object temp_obj = (getObject("Placeholder")); getPipelineDictionary().put("Placeholder", temp_obj);} 
      out.write("\n\t\t\t\t\t");
 if (getLoopStack().isEmpty()) {Logger.error(this,"ISBREAK occured outside ISLOOP. Line: {}",84);}else{getLoopStack().pop();break;} 
      out.write("\n\t\t\t\t");
 } 
      out.write("\n\t\t\t");
 } 
      out.write('\n');
      out.write('	');
      out.write('	');
 } 
      out.write("\n\t</div>\n\t\n\t<div id=\"editControls\">\n\t\t");
 processOpenTag(response, pageContext, "hasassignmenteditpermission", new TagParameter[] {
new TagParameter("PermissionMap",getObject("PermissionMap")),
new TagParameter("ContextObject",getObject("Placeholder")),
new TagParameter("Result","HasEditPermission")}, 91); 
      out.write('\n');
      out.write('	');
      out.write('	');
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("HasEditPermission"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",92,e);}if (_boolean_result) { 
      out.write("\n\t\t\t");
 {try{executePipeline("ProcessSlotPlaceholderOverride-IsOverridden",((java.util.Map)(((new ParameterMap().addParameter(new ParameterEntry("Placeholder",getObject("Placeholder")))).addParameter(new ParameterEntry("Domain",getObject("ContentRepository:RepositoryDomain")))))),"IsOverridden");}catch(Exception e){Logger.error(this,"ISPIPELINE failed. Line: 93.",e);}} 
      out.write("\n\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("IsOverridden:OverridingPlaceholder"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",94,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t");
 {Object temp_obj = (getObject("IsOverridden:OverridingPlaceholder")); getPipelineDictionary().put("ContentEntryPoint", temp_obj);} 
      out.write("\n\t\t\t");
 } else { 
      out.write("\n\t\t\t\t");
 {Object temp_obj = (getObject("Placeholder")); getPipelineDictionary().put("ContentEntryPoint", temp_obj);} 
      out.write("\n\t\t\t");
 } 
      out.write("\n\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!((Boolean) (getObject("IsOverridden:Overridden"))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("Placeholder:Domain:UUID"),null).equals(context.getFormattedValue(getObject("ContentRepository:RepositoryDomain:UUID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",99,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t<li><a href=\"");
      out.print(context.getFormattedValue("#",null));
      out.write("\" data-sfe-actionButton=\"sfe-override-");
 {String value = null;try{value=context.getFormattedValue(replace(context.getFormattedValue(getObject("ContentEntryPoint:UUID"),null),(String)("\\."),(String)("-")),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {100}",e);}if (value==null) value="";out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("PageletAssignmentsInc.Overwrite.button",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a></li>\n\t\t\t");
 } else { 
      out.write("\n\t\t\t\t");
 processOpenTag(response, pageContext, "pageleteditable", new TagParameter[] {
new TagParameter("User",getObject("CurrentUser")),
new TagParameter("ContentRepository",getObject("ContentRepository")),
new TagParameter("PageletLockedForOther","PageletLockedForOther"),
new TagParameter("Result","TemplateEditable"),
new TagParameter("Pagelet",getObject("Placeholder:Template"))}, 102); 
      out.write("\n\t\t\t\t");
 {Object temp_obj = ((disableErrorMessages().isDefined(getObject("PageletLockedForOther")))); getPipelineDictionary().put("ContentEntryPointReadOnly", temp_obj);} 
      out.write("\n\t\t\t\t");
 processOpenTag(response, pageContext, "pageletmodelutils", new TagParameter[] {
new TagParameter("PageletModelUtils","PageletModelUtils")}, 104); 
      out.write("\n\t\t\t\t");
 {Object temp_obj = (getObject("ApplicationBO:Extension(\"(Class)com.intershop.sellside.pmc.capi.modelrepository.ApplicationBOPageletModelRepository\")")); getPipelineDictionary().put("PageletModelRepository", temp_obj);} 
      out.write("\n\t\t\t\t");
 {Object temp_obj = ((((Boolean) (((((Boolean) ((disableErrorMessages().isDefined(getObject("Placeholder:ContentEntryPointDefinition"))))).booleanValue() && ((Boolean) ((hasLoopElements("PageletModelUtils:PageletDefinitions(Placeholder,PageletModelRepository)") ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) ); getPipelineDictionary().put("NoPageVariantTypesVisible", temp_obj);} 
      out.write("\n\t\t\t\t");
 {Object temp_obj = (getObject("ContentEntryPoint:PageletAssignments(ContentRepository:RepositoryDomain,PageletModelRepository)")); getPipelineDictionary().put("Assignments", temp_obj);} 
      out.write("\n\t\t\t\t<ul>\n\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("IsOverridden:Overridden"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",109,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t<li><a href=\"");
      out.print(context.getFormattedValue("#",null));
      out.write("\" data-sfe-actionButton=\"sfe-revertPlaceholderAssignments-");
 {String value = null;try{value=context.getFormattedValue(replace(context.getFormattedValue(getObject("ContentEntryPoint:UUID"),null),(String)("\\."),(String)("-")),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {110}",e);}if (value==null) value="";out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("PageletAssignmentsInc.Revert.button",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a></li>\n\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (((((Boolean) getObject("NoPageVariantTypesVisible")).booleanValue() || ((Boolean) getObject("ContentEntryPointReadOnly")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",112,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t<li><a href=\"");
      out.print(context.getFormattedValue("#",null));
      out.write("\" data-sfe-actionButton=\"sfe-new-");
 {String value = null;try{value=context.getFormattedValue(replace(context.getFormattedValue(getObject("ContentEntryPoint:UUID"),null),(String)("\\."),(String)("-")),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {113}",e);}if (value==null) value="";out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("PageletAssignmentsInc.New.button",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a></li>\n\t\t\t\t\t\t<li><a href=\"");
      out.print(context.getFormattedValue("#",null));
      out.write("\" data-sfe-actionButton=\"sfe-assign-");
 {String value = null;try{value=context.getFormattedValue(replace(context.getFormattedValue(getObject("ContentEntryPoint:UUID"),null),(String)("\\."),(String)("-")),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {114}",e);}if (value==null) value="";out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("PageletAssignmentsInc.Assign.button",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a></li>\n\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (hasLoopElements("Assignments") ? Boolean.TRUE : Boolean.FALSE)).booleanValue() && !((Boolean) (getObject("ContentEntryPointReadOnly"))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",116,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t<li><a href=\"");
      out.print(context.getFormattedValue("#",null));
      out.write("\" data-sfe-actionButton=\"sfe-unassign-");
 {String value = null;try{value=context.getFormattedValue(replace(context.getFormattedValue(getObject("ContentEntryPoint:UUID"),null),(String)("\\."),(String)("-")),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {117}",e);}if (value==null) value="";out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("PageletAssignmentsInc.Unassign.button",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a></li>\n\t\t\t\t\t\t<li><a href=\"");
      out.print(context.getFormattedValue("#",null));
      out.write("\" data-sfe-actionButton=\"sfe-delete-");
 {String value = null;try{value=context.getFormattedValue(replace(context.getFormattedValue(getObject("ContentEntryPoint:UUID"),null),(String)("\\."),(String)("-")),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {118}",e);}if (value==null) value="";out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("PageletAssignmentsInc.Delete.button",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a></li>\n\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t</ul>\n\t\t\t");
 } 
      out.write('\n');
      out.write('	');
      out.write('	');
 } 
      out.write("\n\t</div>\n</div>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
