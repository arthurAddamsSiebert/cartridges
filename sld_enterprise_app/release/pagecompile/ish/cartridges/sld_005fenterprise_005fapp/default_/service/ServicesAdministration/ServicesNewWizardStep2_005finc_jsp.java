/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.service.ServicesAdministration;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class ServicesNewWizardStep2_005finc_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
      out.write("<input type=\"hidden\" name=\"ServiceDefinitionTitle\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ServiceDefinitionTitle"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {3}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" />");
 {Object temp_obj = (getObject("ApplicationBO:Extension(\"ApplicationBOServiceExtension\"):SharingEnabled")); getPipelineDictionary().put("IsServiceSharingEnabled", temp_obj);} 
      out.write("<table width=\"100%\" class=\"w e\" border=\"0\" cellSpacing=\"0\" cellPadding=\"0\">\n<tr><td colspan=\"3\"><img width=\"1\" height=\"4\" alt=\"\" src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" border=\"0\" complete=\"complete\"/></td></tr>\n<tr>\n<td nowrap=\"nowrap\" class=\"label\">");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("AddNewWizzardFormStep2:ServiceConfigurationDisplayName:isInvalid"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",11,e);}if (_boolean_result) { 
      out.write("<label class=\"label label_error\" for=\"ServiceNewWizzard_Name\">");
 {out.write(localizeISText("ServicesNewWizardStep2_inc.Name.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":<span class=\"star\">*</span></label>");
 } else { 
      out.write("<label class=\"label\" for=\"ServiceNewWizzard_Name\">");
 {out.write(localizeISText("ServicesNewWizardStep2_inc.Name.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":<span class=\"star\">*</span></label>");
 } 
      out.write("</td>\n<td class=\"table_detail\">\n<input maxlength=\"256\" size=\"50\" class=\"inputfield_en\" type=\"text\" id=\"ServiceNewWizzard_Name\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("AddNewWizzardFormStep2:ServiceConfigurationDisplayName:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {18}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("AddNewWizzardFormStep2:ServiceConfigurationDisplayName:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {18}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" />\n</td>\n<td width=\"60%\">\n<table border=\"0\" cellSpacing=\"0\" cellPadding=\"0\">\n<tr>\n<td class=\"input_checkbox\">\n<input type=\"checkbox\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("AddNewWizzardFormStep2:ServiceConfigurationActivationStatus:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {24}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" value=\"activated\" id=\"configuration_status_activated\"\n");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("AddNewWizzardFormStep2:ServiceConfigurationActivationStatus:Value"),null).equals(context.getFormattedValue("activated",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",25,e);}if (_boolean_result) { 
      out.write("checked=\"checked\"");
 } 
      out.write(" \n/>\n</td>\n<td class=\"label_checkbox_text\">\n<label for=\"configuration_status_activated\" class=\"label label_checkbox_text ");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("AddNewWizzardFormStep2:ServiceConfigurationActivationStatus:isInvalid"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",29,e);}if (_boolean_result) { 
      out.write("label_error");
 } 
      out.write('"');
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("ServicesNewWizardStep2_inc.ActiveUseThisServiceConfigurationInTheCurrentConte.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label>\n</td>\n</tr>\n</table>\n</td>\n</tr>\n<tr>\n<td nowrap=\"nowrap\" class=\"label\">\n<label for=\"ServiceNewWizzard_ID\" class=\"label ");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("AddNewWizzardFormStep2:ServiceConfigurationName:isInvalid"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",40,e);}if (_boolean_result) { 
      out.write("label_error");
 } 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("ServicesNewWizardStep2_inc.ID.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":<span class=\"star\">*</span></label>\n</td>\n<td class=\"table_detail\">\n<input maxlength=\"256\" size=\"50\" class=\"inputfield_en\" type=\"text\" id=\"ServiceNewWizzard_ID\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("AddNewWizzardFormStep2:ServiceConfigurationName:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {43}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("AddNewWizzardFormStep2:ServiceConfigurationName:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {43}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" />\n</td>\n<td>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("IsServiceSharingEnabled"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",46,e);}if (_boolean_result) { 
      out.write("<table border=\"0\" cellSpacing=\"0\" cellPadding=\"0\">\n<tr>\n<td class=\"input_checkbox\">\n<input type=\"checkbox\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("AddNewWizzardFormStep2:ServiceConfigurationStatus:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {50}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" value=\"enabled\" id=\"configuration_status_enabled\"\n");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("AddNewWizzardFormStep2:ServiceConfigurationStatus:Value"),null).equals(context.getFormattedValue("enabled",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",51,e);}if (_boolean_result) { 
      out.write("checked=\"checked\"");
 } 
      out.write("\n/>\n</td>\n<td class=\"label_checkbox_text\">\n<label class=\"label label_checkbox_text");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("AddNewWizzardFormStep2:ServiceConfigurationStatus:isInvalid"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",55,e);}if (_boolean_result) { 
      out.write("label_error");
 } 
      out.write("\" for=\"configuration_status_enabled\">");
 {out.write(localizeISText("ServicesNewWizardStep2_inc.AvailableSystemWideSetting.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label>\n</td>\n</tr>\n</table>");
 } else { 
      out.write("<input type=\"hidden\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("AddNewWizzardFormStep2:ServiceConfigurationStatus:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {62}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" value=\"enabled\" />&nbsp;\n");
 } 
      out.write("</td>\n</tr>\n<tr><td colspan=\"3\" class=\"\"><img width=\"1\" border=\"0\" height=\"4\" alt=\"\" src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" /></td></tr>\n<tr>\n<td nowrap=\"nowrap\" class=\"label_textarea\"><label class=\"label label_textarea\" for=\"ServiceNewWizzard_Description\">");
 {out.write(localizeISText("ServicesNewWizardStep2_inc.Description.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</label></td>\n<td class=\"table_detail\">\n<textarea name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("AddNewWizzardFormStep2:ServiceConfigurationDescription:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {72}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" id=\"ServiceNewWizzard_Description\" class=\"inputfield_en\" rows=\"5\" cols=\"48\">");
 {String value = null;try{value=context.getFormattedValue(getObject("AddNewWizzardFormStep2:ServiceConfigurationDescription:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {72}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</textarea>\n</td>\n<td>&nbsp;</td>\n</tr>\n<tr><td colspan=\"3\" class=\"\"><img width=\"1\" border=\"0\" height=\"4\" alt=\"\" src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" /></td></tr>\n</table>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
