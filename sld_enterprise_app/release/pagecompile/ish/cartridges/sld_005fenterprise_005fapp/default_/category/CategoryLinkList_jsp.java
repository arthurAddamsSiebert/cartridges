/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.category;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class CategoryLinkList_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
      out.write('\n');
 
setEncodingType("text/html"); 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"inc/ConfirmationScript", null, "3");} 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"inc/LinkPageScript", null, "4");} 
 processOpenTag(response, pageContext, "breadcrumbtrail", new TagParameter[] {
new TagParameter("text1",context.getFormattedValue(" - ",null) + context.getFormattedValue(localizeText(context.getFormattedValue("CategoryLinkList.Links.text1",null)),null)),
new TagParameter("listview","true"),
new TagParameter("link",url(true,(new URLPipelineAction(context.getFormattedValue("ViewCategoryLinks-Start",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("CatalogCategoryID",null),context.getFormattedValue(getObject("Category:UUID"),null))).addURLParameter(context.getFormattedValue("CatalogUUID",null),context.getFormattedValue(getObject("Catalog:UUID"),null)).addURLParameter(context.getFormattedValue("ChannelID",null),context.getFormattedValue(getObject("ChannelID"),null)))),
new TagParameter("id",getObject("Category:UUID")),
new TagParameter("text",getObject("Category:DisplayName"))}, 6); 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("ChannelID")))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("ChannelID"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",8,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("CurrentChannelPermissionMap")); getPipelineDictionary().put("PermissionMap", temp_obj);} 
 } else { 
 {Object temp_obj = (getObject("CurrentUserPermissionMap")); getPipelineDictionary().put("PermissionMap", temp_obj);} 
 } 
      out.write("<!-- Working Area -->\n<!-- tabs -->");
 {Object temp_obj = ("Links"); getPipelineDictionary().put("SelectedTab", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("CurrentChannel"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",18,e);}if (_boolean_result) { 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,context.getFormattedValue(context.getFormattedValue("inc/CatalogTabs_",null) + context.getFormattedValue(getObject("CurrentChannel:TypeCode"),null),null), null, "19");} 
 } else { 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"category/CategoryTabs", null, "21");} 
 } 
      out.write("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n<tr>\n<td width=\"100%\" class=\"w e s table_title\">");
 {String value = null;try{value=context.getFormattedValue(getObject("Category:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {27}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n</tr>\n<tr>\n<td valign=\"top\" class=\"table_title_description w e s\">");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("Catalog:isProxy"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",32,e);}if (_boolean_result) { 
      out.write("<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/status_shared_product_from.gif\" alt=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("CategoryLinkList.SharedFromAnother.alt",null)),null));
      out.write("\" title=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("CategoryLinkList.SharedFromAnother.title",null)),null));
      out.write("\" border=\"0\"/> \n");
 {out.write(localizeISText("CategoryLinkList.ThisCatalogIsSharedFrom",null,null,encodeString(context.getFormattedValue(getObject("Catalog:OriginalCatalog:OwningDomain:DomainInformation:DomainName"),null)),null,null,null,null,null,null,null,null,null));} 
      out.write("<br>");
 } 
 {out.write(localizeISText("CategoryLinkList.TheListBelowShowsAllLinkTypesAndTheirAssignedProdu",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>\n<tr>\n<td class=\"table_title2 w e s\">");
 {out.write(localizeISText("CategoryLinkList.LinkTypes.table_title2",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>\n</table>\n<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" class=\"w e s\" >\n<tr>\n<td colspan=\"2\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" alt=\"\" border=\"0\" width=\"1\" height=\"6\" /></td>\n</tr>\n<tr>\n<td>\n<table width=\"100%\" name=\"category_links_select\" id=\"category_links_select\">\n<tr>\n<td class=\"table_detail3\">");
 {out.write(localizeISText("CategoryLinkList.LinksFor.table_detail3",null,null,encodeString(context.getFormattedValue(getObject("Category:DisplayName"),null)),null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>");

					PipelineDictionary dict = getPipelineDictionary();
					String selectedOutgoingLinkType = null;
					String selectedIncomingLinkType = null;
					String selectedLinkType = dict.get("SelectedLinkType");
					String linkDirection = dict.get("LinkDirection");

					if (selectedLinkType == null)
					{
						dict.put("itemIsVisible", true);
					}

					if (linkDirection != null && "Incoming".equals(linkDirection))
					{
						selectedOutgoingLinkType = null;
						selectedIncomingLinkType = selectedLinkType;
					}
					else
					{
						selectedOutgoingLinkType = selectedLinkType;
						selectedIncomingLinkType = null;
					}
				
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("CategoryLinkTypeSummaryIter")))).booleanValue() && ((Boolean) (hasLoopElements("CategoryLinkTypeSummaryIter") ? Boolean.TRUE : Boolean.FALSE)).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",80,e);}if (_boolean_result) { 
      out.write("<tr>\n<script type=\"text/javascript\">\n$(document).ready(function() {\n$('<tr class=\"nowrap\"><td class=\"table_detail_actions\"><a class=\"tableheader mass-action\" data-action=\"select\" href=\"");
      out.print(context.getFormattedValue("#",null));
      out.write("\">show all</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a class=\"tableheader mass-action\" data-action=\"deselect\" href=\"");
      out.print(context.getFormattedValue("#",null));
      out.write("\">hide all</a></td></tr>').insertAfter($('table");
      out.print(context.getFormattedValue("#",null));
      out.write("category_links_select > tbody > tr:first-child'));\n$('<tr class=\"nowrap\"><td class=\"table_detail_actions\"><a class=\"tableheader mass-action\" data-action=\"select\" href=\"");
      out.print(context.getFormattedValue("#",null));
      out.write("\">show all</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a class=\"tableheader mass-action\" data-action=\"deselect\" href=\"");
      out.print(context.getFormattedValue("#",null));
      out.write("\">hide all</a></td></tr>').insertAfter($('table");
      out.print(context.getFormattedValue("#",null));
      out.write("category_incoming_links_select > tbody > tr:first-child'));\n$(document).delegate('.mass-action', 'click', function(ev) {\nev.preventDefault();\n$(this).parents('table:eq(0)').find(':checkbox').prop('checked', $(this).data('action') == 'select' || false).trigger('change');\n});\n});\n</script>\n<td>\n<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>");
 while (loop("CategoryLinkTypeSummaryIter","CategoryLinkTypeSummary","CategoryLinkCount")) { 
      out.write("<td class=\"input_checkbox\">");
 {Object temp_obj = (getObject("CategoryLinkTypeSummary:TypeCodeDefinition:Name")); getPipelineDictionary().put("SummaryName", temp_obj);} 
 {Object temp_obj = (getObject("CategoryLinkTypeSummary:ProductLinkCount")); getPipelineDictionary().put("OutgoingProductLinkCount", temp_obj);} 
 {Object temp_obj = (getObject("CategoryLinkTypeSummary:CategoryLinkCount")); getPipelineDictionary().put("OutgoingCategoryLinkCount", temp_obj);} 

												String summaryName = dict.get("SummaryName");
												String isSelected = dict.get("select_" + summaryName);

												if (selectedLinkType == null)
												{
													// Setup for initial loading of the page - display only link type sections which have at least 1 link to show, skip the rest
													Integer productLinkCount = dict.get("OutgoingProductLinkCount");
													Integer categoryLinkCount = dict.get("OutgoingCategoryLinkCount");
													boolean checkBoxSelected = productLinkCount > 0 || categoryLinkCount > 0;
													dict.put("checkboxIsSelected", checkBoxSelected);
												}
												else
												{
													dict.put("checkboxIsSelected", ( selectedOutgoingLinkType != null && selectedOutgoingLinkType.equalsIgnoreCase(summaryName) )
																	|| ( isSelected != null && ( isSelected.equalsIgnoreCase("on") || isSelected.equalsIgnoreCase("select_" + summaryName) ) ) );
												}
											
      out.write("<input class=\"product_check\" type=\"checkbox\"\nname=\"select_");
 {String value = null;try{value=context.getFormattedValue(getObject("SummaryName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {122}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" \nid=\"select_");
 {String value = null;try{value=context.getFormattedValue(getObject("SummaryName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {123}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("_outgoing_category_links\" \n");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("checkboxIsSelected"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",124,e);}if (_boolean_result) { 
      out.write("\nchecked=\"checked\"\n");
 } 
      out.write("\n/>\n</td>\n<td class=\"label_checkbox_text\" width=\"1\">\n<label class=\"label label_checkbox_text group-of-types\" for=\"select_");
 {String value = null;try{value=context.getFormattedValue(getObject("SummaryName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {130}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("_outgoing_category_links\">");
 {out.write(localizeISText(context.getFormattedValue(context.getFormattedValue("typeCodeDefinition.",null) + context.getFormattedValue(getObject("CategoryLinkTypeSummary:TypeCodeDefinition:Group"),null) + context.getFormattedValue(".",null) + context.getFormattedValue(getObject("SummaryName"),null) + context.getFormattedValue(".displayName",null),null),"",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label>\n</td>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("CategoryLinkTypeSummary:ProductLinkAllowed"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",134,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("CategoryLinkTypeSummary:CategoryLinkAllowed"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",135,e);}if (_boolean_result) { 
      out.write("<td class=\"label_checkbox_text\">\n<label class=\"label label_checkbox_text label_light last-in-type\" for=\"select_");
 {String value = null;try{value=context.getFormattedValue(getObject("SummaryName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {137}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("_outgoing_category_links\">");
 } else { 
      out.write("<td class=\"label_checkbox_text\" colspan=\"2\">\n<label class=\"label label_checkbox_text label_light\" for=\"select_");
 {String value = null;try{value=context.getFormattedValue(getObject("SummaryName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {140}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("_outgoing_category_links\">");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("OutgoingProductLinkCount")).doubleValue() >((Number)(new Double(0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",142,e);}if (_boolean_result) { 
      out.write("<strong>");
 {String value = null;try{value=context.getFormattedValue(getObject("OutgoingProductLinkCount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {144}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;\n</strong>");
 } else { 
      out.write('\n');
      out.write('0');
      out.write('\n');
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("OutgoingProductLinkCount")).doubleValue() !=((Number)(new Double(1))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",149,e);}if (_boolean_result) { 
 {out.write(localizeISText("CategoryLinkList.Products",null,null,null,null,null,null,null,null,null,null,null,null));} 
 } else { 
 {out.write(localizeISText("CategoryLinkList.Product",null,null,null,null,null,null,null,null,null,null,null,null));} 
 } 
      out.write("</label>\n</td>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("CategoryLinkTypeSummary:CategoryLinkAllowed"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",157,e);}if (_boolean_result) { 
      out.write("<td class=\"label_checkbox_text\"");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) getObject("CategoryLinkTypeSummary:ProductLinkAllowed")).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",158,e);}if (_boolean_result) { 
      out.write(" colspan=\"2\"");
 } 
      out.write(">\n<label class=\"label label_checkbox_text label_light\" for=\"select_");
 {String value = null;try{value=context.getFormattedValue(getObject("SummaryName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {159}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("_outgoing_category_links\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("OutgoingCategoryLinkCount")).doubleValue() >((Number)(new Double(0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",160,e);}if (_boolean_result) { 
      out.write("<strong>");
 {String value = null;try{value=context.getFormattedValue(getObject("OutgoingCategoryLinkCount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {162}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;\n</strong>");
 } else { 
      out.write('\n');
      out.write('0');
      out.write('\n');
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("OutgoingCategoryLinkCount")).doubleValue() !=((Number)(new Double(1))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",167,e);}if (_boolean_result) { 
 {out.write(localizeISText("CategoryLinkList.Categories",null,null,null,null,null,null,null,null,null,null,null,null));} 
 } else { 
 {out.write(localizeISText("CategoryLinkList.Category",null,null,null,null,null,null,null,null,null,null,null,null));} 
 } 
      out.write("</label>\n</td>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((hasNext("CategoryLinkTypeSummary") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",175,e);}if (_boolean_result) { 
      out.write("<td width=\"100%\">&nbsp;</td>\n</tr><tr>");
 } 
 } 
      out.write("</tr>\n</table>\n</td>\n</tr>");
 } 
      out.write("</table>\n</td>\n<td>\n<table width=\"100%\" name=\"category_incoming_links_select\" id=\"category_incoming_links_select\">\n<tr>\n<td class=\"table_detail3\">");
 {String value = null;try{value=context.getFormattedValue(getObject("Category:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {191}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n</tr>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("CategoryIncomingLinkTypeSummaryIter")))).booleanValue() && ((Boolean) (hasLoopElements("CategoryIncomingLinkTypeSummaryIter") ? Boolean.TRUE : Boolean.FALSE)).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",196,e);}if (_boolean_result) { 
      out.write("<tr>\n<td>\n<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>");
 while (loop("CategoryIncomingLinkTypeSummaryIter","CategoryIncomingLinkTypeSummary",null)) { 
      out.write("<td class=\"input_checkbox\">");
 {Object temp_obj = (getObject("CategoryIncomingLinkTypeSummary:TypeCodeDefinition:Name")); getPipelineDictionary().put("IncomingSummaryName", temp_obj);} 

												dict.put("IncomingProductLinkCount", 0);
											
 while (loop("CategoryIncomingProductLinkTypeSummaryIter","CategoryIncomingProductLinkTypeSummary",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("IncomingSummaryName"),null).equals(context.getFormattedValue((context.getFormattedValue(getObject("CategoryIncomingProductLinkTypeSummary:TypeCodeDefinition:Name"),null) + context.getFormattedValue("_C",null)),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",209,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("CategoryIncomingProductLinkTypeSummary:ProductLinkCount")); getPipelineDictionary().put("IncomingProductLinkCount", temp_obj);} 
 if (getLoopStack().isEmpty()) {Logger.error(this,"ISBREAK occured outside ISLOOP. Line: {}",211);}else{getLoopStack().pop();break;} 
 } 
 } 
 {Object temp_obj = (getObject("CategoryIncomingLinkTypeSummary:CategoryLinkCount")); getPipelineDictionary().put("IncomingCategoryLinkCount", temp_obj);} 

												String incomingSummaryName = dict.get("IncomingSummaryName");
												String isSelected = dict.get("select_" + incomingSummaryName + "_incoming_category_links");

												if (selectedLinkType == null)
												{
													// Setup for initial loading of the page - display only link type sections which have at least 1 link to show, skip the rest
													Integer productLinkCount = dict.get("IncomingProductLinkCount");
													Integer categoryLinkCount = dict.get("IncomingCategoryLinkCount");
													boolean checkBoxSelected = productLinkCount > 0 || categoryLinkCount > 0;
													dict.put("checkboxIsSelected", checkBoxSelected);
												}
												else
												{
													dict.put("checkboxIsSelected", ( selectedIncomingLinkType != null && selectedIncomingLinkType.equalsIgnoreCase(incomingSummaryName) ) 
																|| ( isSelected != null && (isSelected.equalsIgnoreCase("on") || isSelected.equalsIgnoreCase("select_" + incomingSummaryName + "_incoming_category_links") ) ) );
												}
											
      out.write("<input class=\"product_check\" type=\"checkbox\" \nname=\"select_");
 {String value = null;try{value=context.getFormattedValue(getObject("CategoryIncomingLinkTypeSummary:TypeCodeDefinition:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {236}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("_incoming_category_links\" \nid=\"select_");
 {String value = null;try{value=context.getFormattedValue(getObject("CategoryIncomingLinkTypeSummary:TypeCodeDefinition:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {237}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("_incoming_category_links\"\n");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("checkboxIsSelected"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",238,e);}if (_boolean_result) { 
      out.write("\nchecked=\"checked\"\n");
 } 
      out.write("\n/>\n</td>\n<td class=\"label_checkbox_text\" width=\"1\">\n<label class=\"label label_checkbox_text group-of-types\" for=\"select_");
 {String value = null;try{value=context.getFormattedValue(getObject("IncomingSummaryName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {244}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("_incoming_category_links\">");
 {out.write(localizeISText("CategoryLinkList.Is.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(' ');
 {out.write(localizeISText(context.getFormattedValue(context.getFormattedValue("typeCodeDefinition.",null) + context.getFormattedValue(getObject("CategoryIncomingLinkTypeSummary:TypeCodeDefinition:Group"),null) + context.getFormattedValue(".",null) + context.getFormattedValue(getObject("IncomingSummaryName"),null) + context.getFormattedValue(".displayName",null),null),"",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(' ');
 {out.write(localizeISText("CategoryLinkList.Of.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label>\n</td>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("CategoryIncomingLinkTypeSummary:ProductLinkAllowed"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",248,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("CategoryIncomingLinkTypeSummary:CategoryLinkAllowed"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",249,e);}if (_boolean_result) { 
      out.write("<td class=\"label_checkbox_text\">\n<label class=\"label label_checkbox_text label_light last-in-type\" for=\"select_");
 {String value = null;try{value=context.getFormattedValue(getObject("IncomingSummaryName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {251}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("_incoming_category_links\">");
 } else { 
      out.write("<td class=\"label_checkbox_text\" colspan=\"2\">\n<label class=\"label label_checkbox_text label_light\" for=\"select_");
 {String value = null;try{value=context.getFormattedValue(getObject("IncomingSummaryName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {254}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("_incoming_category_links\">");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("IncomingProductLinkCount")).doubleValue() >((Number)(new Double(0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",256,e);}if (_boolean_result) { 
      out.write("<strong>");
 {String value = null;try{value=context.getFormattedValue(getObject("IncomingProductLinkCount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {258}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;\n</strong>");
 } else { 
      out.write('\n');
      out.write('0');
      out.write('\n');
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("IncomingProductLinkCount")).doubleValue() !=((Number)(new Double(1))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",263,e);}if (_boolean_result) { 
 {out.write(localizeISText("CategoryLinkList.Products",null,null,null,null,null,null,null,null,null,null,null,null));} 
 } else { 
 {out.write(localizeISText("CategoryLinkList.Product",null,null,null,null,null,null,null,null,null,null,null,null));} 
 } 
      out.write("</label>\n</td>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("CategoryIncomingLinkTypeSummary:CategoryLinkAllowed"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",271,e);}if (_boolean_result) { 
      out.write("<td class=\"label_checkbox_text\"");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) getObject("CategoryIncomingLinkTypeSummary:ProductLinkAllowed")).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",272,e);}if (_boolean_result) { 
      out.write(" colspan=\"2\"");
 } 
      out.write(">\n<label class=\"label label_checkbox_text label_light\" for=\"select_");
 {String value = null;try{value=context.getFormattedValue(getObject("IncomingSummaryName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {273}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("_incoming_category_links\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("IncomingCategoryLinkCount")).doubleValue() >((Number)(new Double(0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",274,e);}if (_boolean_result) { 
      out.write("<strong>");
 {String value = null;try{value=context.getFormattedValue(getObject("IncomingCategoryLinkCount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {276}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;\n</strong>");
 } else { 
      out.write('\n');
      out.write('0');
      out.write('\n');
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("IncomingCategoryLinkCount")).doubleValue() !=((Number)(new Double(1))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",281,e);}if (_boolean_result) { 
 {out.write(localizeISText("CategoryLinkList.Categories",null,null,null,null,null,null,null,null,null,null,null,null));} 
 } else { 
 {out.write(localizeISText("CategoryLinkList.Category",null,null,null,null,null,null,null,null,null,null,null,null));} 
 } 
      out.write("</label>\n</td>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((hasNext("CategoryIncomingLinkTypeSummary") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",289,e);}if (_boolean_result) { 
      out.write("<td width=\"100%\">&nbsp;</td>\n</tr><tr>");
 } 
 } 
      out.write("</tr>\n</table>\n</td>\n</tr>");
 } 
      out.write("</table>\n</td>\n</tr>\n<tr>\n<td colspan=\"2\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" alt=\"\" border=\"0\" width=\"1\" height=\"6\" /></td>\n</tr>\n</table>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("CategoryLinkTypeSummaryIter")))).booleanValue() && ((Boolean) (hasLoopElements("CategoryLinkTypeSummaryIter") ? Boolean.TRUE : Boolean.FALSE)).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",308,e);}if (_boolean_result) { 
 while (loop("CategoryLinkTypeSummaryIter","CategoryLinkTypeSummary","CategoryLinkCount")) { 
 {Object temp_obj = (context.getFormattedValue("select_",null) + context.getFormattedValue(getObject("CategoryLinkTypeSummary:TypeCodeDefinition:Name"),null)); getPipelineDictionary().put("ProductLinkTable_ID", temp_obj);} 
 {Object temp_obj = (context.getFormattedValue("typeCodeDefinition.TypedProductCategoryAssignment.",null) + context.getFormattedValue(getObject("CategoryLinkTypeSummary:TypeCodeDefinition:Name"),null) + context.getFormattedValue(".displayName",null)); getPipelineDictionary().put("ProductLinkTable_Name", temp_obj);} 
 {Object temp_obj = (getObject("CategoryLinkTypeSummary:TypeCodeDefinition:Name")); getPipelineDictionary().put("ProductLinkTable_TypeCode", temp_obj);} 
 {Object temp_obj = (getObject("CategoryLinkTypeSummary:ProductLinks")); getPipelineDictionary().put("ProductLinksList", temp_obj);} 
 {Object temp_obj = (getObject("CategoryLinkTypeSummary:TypeCodeDefinition:Name")); getPipelineDictionary().put("LinkTypeName", temp_obj);} 
 while (loop("CategoryIncomingLinkTypeSummaryIter","CategoryIncomingLinkTypeSummary",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("CategoryLinkTypeSummary:TypeCodeDefinition:Name"),null).equals(context.getFormattedValue(getObject("CategoryIncomingLinkTypeSummary:TypeCodeDefinition:Name"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",319,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("CategoryIncomingLinkTypeSummary")); getPipelineDictionary().put("CategoryIncomingLinkTypeSummary", temp_obj);} 
 {Object temp_obj = (getObject("CategoryIncomingLinkTypeSummary:CategoryLinkCount")); getPipelineDictionary().put("CategoryIncomingLinksCount", temp_obj);} 
 {Object temp_obj = (getObject("CategoryIncomingLinkTypeSummary:CategoryLinks")); getPipelineDictionary().put("CategoryIncomingLinksList", temp_obj);} 
 if (getLoopStack().isEmpty()) {Logger.error(this,"ISBREAK occured outside ISLOOP. Line: {}",323);}else{getLoopStack().pop();break;} 
 } 
 } 
 while (loop("CategoryIncomingProductLinkTypeSummaryIter","CategoryIncomingProductLinkTypeSummary",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("CategoryLinkTypeSummary:TypeCodeDefinition:Name"),null).equals(context.getFormattedValue((context.getFormattedValue(getObject("CategoryIncomingProductLinkTypeSummary:TypeCodeDefinition:Name"),null) + context.getFormattedValue("_C",null)),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",327,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("CategoryIncomingProductLinkTypeSummary")); getPipelineDictionary().put("CategoryIncomingProductLinkTypeSummary", temp_obj);} 
 {Object temp_obj = (getObject("CategoryIncomingProductLinkTypeSummary:ProductLinkCount")); getPipelineDictionary().put("CategoryIncomingProductLinksCount", temp_obj);} 
 {Object temp_obj = (getObject("CategoryIncomingProductLinkTypeSummary:ProductLinks")); getPipelineDictionary().put("CategoryIncomingProductLinksList", temp_obj);} 
 if (getLoopStack().isEmpty()) {Logger.error(this,"ISBREAK occured outside ISLOOP. Line: {}",331);}else{getLoopStack().pop();break;} 
 } 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("CategoryLinkTypeSummary:CategoryLinkAllowed"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",335,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("CategoryLinkTypeSummary:CategoryLinks")); getPipelineDictionary().put("CategoryLinksList", temp_obj);} 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"category/CategoryLinkProductCategoryLinkTable", null, "338");} 
 } else { 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"category/CategoryLinkProductLinkTable", null, "340");} 
 } 
 } 
 } 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"inc/BackToList", null, "346");} 
      out.write("<!-- EO Main Content -->\n<!-- EO Working Area -->");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
