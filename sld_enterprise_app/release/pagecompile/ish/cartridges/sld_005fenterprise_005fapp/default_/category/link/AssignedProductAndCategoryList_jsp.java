/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.category.link;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class AssignedProductAndCategoryList_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
 context.setCustomTagTemplateName("categorylinkproductlist","category/link/CategoryLinkProductList.isml",false,new String[]{"links","linktype","linktypegroup","direction"},null); 
 context.setCustomTagTemplateName("categorylinkcategorylist","category/link/CategoryLinkCategoryList.isml",false,new String[]{"links","linktype","linktypegroup","direction"},null); 
 while (loop("linktypesall","LinkType",null)) { 
      out.write("<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" id=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("table_",null) + context.getFormattedValue(getObject("LinkType:ID"),null) + context.getFormattedValue("_OUTGOING",null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {21}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<tr>\n<td>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("LinkType:Applicable(LinkBOCtnr:LinkTypeGroup(\"CATEGORY_PRODUCT\"))"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",25,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("LinkBOCtnr:LinkBOs(LinkBOCtnr:LinkTypeGroup(\"CATEGORY_PRODUCT\"),LinkBOCtnr:LinkDirection(\"OUTGOING\"),LinkType)")); getPipelineDictionary().put("CatProdOutgoingLinks", temp_obj);} 
      out.write("<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<td class=\"table_title2 w e s\">");
 {out.write(localizeISText(context.getFormattedValue(context.getFormattedValue("typeCodeDefinition.CatalogCategoryLink.",null) + context.getFormattedValue(getObject("LinkType:ID"),null) + context.getFormattedValue(".displayName",null),null),"",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(' ');
 {out.write(localizeISText("CategoryLinkProductCategoryLinkTable.For.table_title2","",null,getObject("CatalogCategoryBO:DisplayName"),null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>\n<tr>\n<td class=\"table_title4 w e s\">");
 {String value = null;try{value=context.getFormattedValue(getObject("CatProdOutgoingLinks:Size"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {34}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp; \n");
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("CatProdOutgoingLinks:Size")).doubleValue() !=((Number)(new Double(1))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",35,e);}if (_boolean_result) { 
 {out.write(localizeISText("sld_enterprise_app.Products","",null,null,null,null,null,null,null,null,null,null,null));} 
 } else { 
 {out.write(localizeISText("sld_enterprise_app.Product","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
      out.write("</td>\n</tr>\n<tr>\n<td>");
 processOpenTag(response, pageContext, "categorylinkproductlist", new TagParameter[] {
new TagParameter("linktypegroup",getObject("LinkBOCtnr:LinkTypeGroup(\"CATEGORY_PRODUCT\")")),
new TagParameter("linktype",getObject("LinkType")),
new TagParameter("links",getObject("CatProdOutgoingLinks")),
new TagParameter("direction",getObject("LinkBOCtnr:LinkDirection(\"OUTGOING\")"))}, 44); 
      out.write("</td>\n</tr>\n</table>");
 } 
      out.write(" \n</td>\n</tr>\n<tr>\n<td>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("LinkType:Applicable(LinkBOCtnr:LinkTypeGroup(\"CATEGORY_CATEGORY\"))"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",58,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("LinkBOCtnr:LinkBOs(LinkBOCtnr:LinkTypeGroup(\"CATEGORY_CATEGORY\"),LinkBOCtnr:LinkDirection(\"OUTGOING\"),LinkType)")); getPipelineDictionary().put("CatCatOutgoingLinks", temp_obj);} 
      out.write("<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<td class=\"table_title4 w e s\">");
 {String value = null;try{value=context.getFormattedValue(getObject("CatCatOutgoingLinks:Size"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {66}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;\n");
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("CatCatOutgoingLinks:Size")).doubleValue() !=((Number)(new Double(1))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",67,e);}if (_boolean_result) { 
 {out.write(localizeISText("CategoryLinkList.Categories","",null,null,null,null,null,null,null,null,null,null,null));} 
 } else { 
 {out.write(localizeISText("CategoryLinkList.Category","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
      out.write("</td>\n</tr>\n<tr>\n<td>");
 processOpenTag(response, pageContext, "categorylinkcategorylist", new TagParameter[] {
new TagParameter("linktypegroup",getObject("LinkBOCtnr:LinkTypeGroup(\"CATEGORY_CATEGORY\")")),
new TagParameter("linktype",getObject("LinkType")),
new TagParameter("links",getObject("CatCatOutgoingLinks")),
new TagParameter("direction",getObject("LinkBOCtnr:LinkDirection(\"OUTGOING\")"))}, 76); 
      out.write("</td>\n</tr>\n</table>");
 } 
      out.write("</td>\n</tr>\n</table>\n<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" id=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue("table_",null) + context.getFormattedValue(getObject("LinkType:ID"),null) + context.getFormattedValue("_INCOMING",null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {89}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<tr>\n<td>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("LinkType:Applicable(LinkBOCtnr:LinkTypeGroup(\"PRODUCT_CATEGORY\"))"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",93,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("LinkBOCtnr:LinkBOs(LinkBOCtnr:LinkTypeGroup(\"PRODUCT_CATEGORY\"),LinkBOCtnr:LinkDirection(\"INCOMING\"),LinkType)")); getPipelineDictionary().put("ProdCatIncomingLinks", temp_obj);} 
      out.write("<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<td class=\"table_title2 w e s\">");
 {String value = null;try{value=context.getFormattedValue(getObject("CatalogCategoryBO:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {98}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(' ');
 {out.write(localizeISText("sld_enterprise_app.IsOf.label","",null,localizeText(context.getFormattedValue(context.getFormattedValue("typeCodeDefinition.CatalogCategoryLink.",null) + context.getFormattedValue(getObject("LinkType:ID"),null) + context.getFormattedValue(".displayName",null),null)),null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>\n<tr>\n<td class=\"table_title4 w e s\">");
 {String value = null;try{value=context.getFormattedValue(getObject("ProdCatIncomingLinks:Size"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {101}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp; \n");
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("ProdCatIncomingLinks:Size")).doubleValue() !=((Number)(new Double(1))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",102,e);}if (_boolean_result) { 
 {out.write(localizeISText("sld_enterprise_app.Products","",null,null,null,null,null,null,null,null,null,null,null));} 
 } else { 
 {out.write(localizeISText("sld_enterprise_app.Product","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
      out.write("</td>\n</tr>\n<tr>\n<td>");
 processOpenTag(response, pageContext, "categorylinkproductlist", new TagParameter[] {
new TagParameter("linktypegroup",getObject("LinkBOCtnr:LinkTypeGroup(\"PRODUCT_CATEGORY\")")),
new TagParameter("linktype",getObject("LinkType")),
new TagParameter("links",getObject("ProdCatIncomingLinks")),
new TagParameter("direction",getObject("LinkBOCtnr:LinkDirection(\"INCOMING\")"))}, 111); 
      out.write("</td>\n</tr>\n</table>");
 } 
      out.write("</td>\n</tr>\n<tr>\n<td>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("LinkType:Applicable(LinkBOCtnr:LinkTypeGroup(\"CATEGORY_CATEGORY\"))"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",125,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("LinkBOCtnr:LinkBOs(LinkBOCtnr:LinkTypeGroup(\"CATEGORY_CATEGORY\"),LinkBOCtnr:LinkDirection(\"INCOMING\"),LinkType)")); getPipelineDictionary().put("CatCatIncomingLinks", temp_obj);} 
      out.write("<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<td class=\"table_title4 w e s\">");
 {String value = null;try{value=context.getFormattedValue(getObject("CatCatIncomingLinks:Size"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {132}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;\n");
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("CatCatIncomingLinks:Size")).doubleValue() !=((Number)(new Double(1))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",133,e);}if (_boolean_result) { 
 {out.write(localizeISText("CategoryLinkList.Categories","",null,null,null,null,null,null,null,null,null,null,null));} 
 } else { 
 {out.write(localizeISText("CategoryLinkList.Category","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
      out.write("</td>\n</tr>\n<tr>\n<td>");
 processOpenTag(response, pageContext, "categorylinkcategorylist", new TagParameter[] {
new TagParameter("linktypegroup",getObject("LinkBOCtnr:LinkTypeGroup(\"CATEGORY_CATEGORY\")")),
new TagParameter("linktype",getObject("LinkType")),
new TagParameter("links",getObject("CatCatIncomingLinks")),
new TagParameter("direction",getObject("LinkBOCtnr:LinkDirection(\"INCOMING\")"))}, 142); 
      out.write("</td>\n</tr>\n</table>");
 } 
      out.write("</td>\n</tr>\n</table>");
 } 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
