/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fenterprise_005fapp.default_.processchain;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class ProcessChainParams_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
      out.write('\n');
 
setEncodingType("text/html"); 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"inc/ProcessChainModules", null, "4");} 
 processOpenTag(response, pageContext, "breadcrumbtrail", new TagParameter[] {
new TagParameter("hide","true"),
new TagParameter("link",url(true,(new URLPipelineAction(context.getFormattedValue("ViewOverview-MassData",null))))),
new TagParameter("start","true"),
new TagParameter("text",localizeText(context.getFormattedValue("process.chain.general.tab",null)))}, 6); 
 processOpenTag(response, pageContext, "breadcrumbtrail", new TagParameter[] {
new TagParameter("hide","true"),
new TagParameter("link",url(true,(new URLPipelineAction(context.getFormattedValue("ViewProcessChainList-List",null))))),
new TagParameter("text",localizeText(context.getFormattedValue("MassDataOverview.ProcessChains.link",null)))}, 7); 
 processOpenTag(response, pageContext, "breadcrumbtrail", new TagParameter[] {
new TagParameter("link",url(true,(new URLPipelineAction(context.getFormattedValue("ViewProcessChain-Detail",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("ProcessChainID",null),context.getFormattedValue(getObject("ProcessChainID"),null))))),
new TagParameter("text",localizeText(context.getFormattedValue("ProcessChain.processchain.text",null)))}, 8); 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("CurrentUserPermissionMap:SLD_VIEW_PROCESS_CHAINS")))).booleanValue() && !((Boolean) (disableErrorMessages().isDefined(getObject("CurrentUserPermissionMap:SLD_MANAGE_PROCESS_CHAINS")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",10,e);}if (_boolean_result) { 
 {Object temp_obj = ("true"); getPipelineDictionary().put("readonly", temp_obj);} 
 } 
      out.write("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n<tr><td class=\"w e\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/space.gif\" width=\"1\" height=\"2\" alt=\"\" border=\"0\"/></td></tr>\n</table>");
 URLPipelineAction action699 = new URLPipelineAction(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewProcessChainParams-Dispatch",null)))),null));String site699 = null;String serverGroup699 = null;String actionValue699 = context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewProcessChainParams-Dispatch",null)))),null);if (site699 == null){  site699 = action699.getDomain();  if (site699 == null)  {      site699 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getDomainName();  }}if (serverGroup699 == null){  serverGroup699 = action699.getServerGroup();  if (serverGroup699 == null)  {      serverGroup699 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getServerGroup();  }}out.print("<form");out.print(" method=\"");out.print("post");out.print("\"");out.print(" action=\"");out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewProcessChainParams-Dispatch",null)))),null));out.print("\"");out.print(" name=\"");out.print("ProcessChainParamsForm");out.print("\"");out.print(">");out.print(context.prepareWACSRFTag(actionValue699, site699, serverGroup699,true)); 
      out.write("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"w e\">\n<tr>\n<td class=\"table_title2 n s w100\">");
 {String value = null;try{value=context.getFormattedValue(getObject("ProcessChainStep:Pipeline"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {22}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('-');
 {String value = null;try{value=context.getFormattedValue(getObject("ProcessChainStep:Startnode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {22}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(' ');
      out.write('-');
      out.write(' ');
 {out.write(localizeISText("process.chain.params.title","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>\n<tr>\n<td class=\"table_title_description s\">");
 {out.write(localizeISText("process.chain.params.table_title_description",null,null,"star",null,null,null,null,null,null,null,null,null));} 
 {out.write(localizeISText("process.chain.params.description","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>\n<input name=\"ProcessChainID\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ProcessChainID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {30}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" type=\"hidden\">\n<input name=\"SelectedStep\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("SelectedStep"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {31}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" type=\"hidden\">\n<table class=\"w e\" width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\n<tbody>\n<tr>\n<td colspan=\"4\" class=\"s\">\n<table cellspacing=\"4\" cellpadding=\"0\" border=\"0\">\n<tr>\n<td class=\"button\"><input type=\"submit\" class=\"button\" value=\"");
 {out.write(localizeISText("process.chain.params.new",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" name=\"new\" /></td>");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("Params") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",40,e);}if (_boolean_result) { 
      out.write("<td class=\"button\"><input type=\"submit\" class=\"button\" value=\"");
 {out.write(localizeISText("process.chain.params.delete",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" name=\"delete\" /></td>");
 } 
      out.write("</tr>\n</table>\n</td>\n</tr>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ERROR_Params"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",48,e);}if (_boolean_result) { 
      out.write(" \n<tr>\n<td colspan=\"4\" class=\"s\">\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"4\" width=\"100%\" class=\"error_box\">\n<tr valign=\"top\">\n<td class=\"error_icon\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/error.gif\" width=\"16\" height=\"15\" alt=\"\" border=\"0\"/></td>\n<td class=\"error top\" width=\"100%\"> \n");
 {out.write(localizeISText("process.chain.params.invalid.error","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(" \n</td>\n</tr>\n</table> \n</td>\n</tr> \n");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (hasLoopElements("Params") ? Boolean.TRUE : Boolean.FALSE)).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("new")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",63,e);}if (_boolean_result) { 
      out.write(" \n<tr>\n<td class=\"table_header s e center\" width=\"80\" nowrap=\"nowrap\">\n<div id=\"A\">\n<table class=\"table_header center\" width=\"80\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\n<tbody>\n<tr>\n<td nowrap=\"nowrap\"><a href=\"javascript:selectAll('formMask','SelectedObjectUUID','A','B');\" class=\"tableheader\">Select All</a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"B\" style=\"display:none\">\n<table class=\"table_header center\" width=\"80\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\n<tbody>\n<tr>\n<td nowrap=\"nowrap\"><a href=\"javascript:selectAll('formMask','SelectedObjectUUID','A','B');\" class=\"tableheader\">Clear All</a></td>\n</tr>\n</tbody>\n</table>\n</div>\n</td>\n<td class=\"table_header e s left\" nowrap=\"nowrap\">");
 {out.write(localizeISText("process.chain.params.name","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n<td class=\"table_header s left\" nowrap=\"nowrap\">");
 {out.write(localizeISText("process.chain.params.value","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n<td class=\"table_header w s left center\" nowrap=\"nowrap\">");
 {out.write(localizeISText("process.chain.params.multi","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>");
 while (loop("Params","Param","counter")) { 
      out.write("<tr>\n<td class=\"table_detail2 e s center\" width=\"75\"><input name=\"DeletedParams\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Param:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {91}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" type=\"checkbox\"></td>\n<td class=\"table_detail2 e s left\" valign=\"middle\" nowrap=\"nowrap\"><input name=\"Name_");
      out.print(context.getFormattedValue(getObject("counter"),null));
      out.write("\" type=\"text\" class=\"inputfield_en\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Param:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {92}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/></td>\n<td class=\"table_detail2 s left\"><input name=\"Value_");
      out.print(context.getFormattedValue(getObject("counter"),null));
      out.write("\" maxlength=\"4000\" size=\"56\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Param:Content"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {93}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" class=\"inputfield_en\" type=\"text\"></td>\n<td class=\"table_detail2 w s center\" width=\"80\">\n<input name=\"Multi_");
      out.print(context.getFormattedValue(getObject("counter"),null));
      out.write("\" class=\"inputfield_en\" type=\"checkbox\" value=\"true\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("Param:Multi"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",95,e);}if (_boolean_result) { 
      out.write("checked=\"checked\"");
 } 
      out.write(">\n</td> \n</tr>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("new"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",99,e);}if (_boolean_result) { 
      out.write("<tr>\n<td class=\"table_detail2 e s center\" width=\"75\"><input name=\"SelectedObjectUUID\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("newParam"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {101}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" type=\"checkbox\" disabled=disabled></td>\n<td class=\"table_detail2 e s left\" valign=\"middle\" nowrap=\"nowrap\"><input name=\"Name_new\" type=\"text\" value=\"\" class=\"inputfield_en\"/></td>\n<td class=\"table_detail2 s left\"><input name=\"Value_new\" maxlength=\"4000\" size=\"56\" value=\"\" class=\"inputfield_en\" type=\"text\"></td>\n<td class=\"table_detail2 w s center\" width=\"80\">\n<input name=\"Multi_new\" class=\"inputfield_en\" type=\"checkbox\" value=\"true\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("Param:Multi"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",105,e);}if (_boolean_result) { 
      out.write("selected=selected");
 } 
      out.write(" />\n</td> \n</tr>");
 } 
 } else { 
      out.write("<tr>\n<td colspan=\"4\" class=\"table_detail\">");
 {out.write(localizeISText("process.chain.params.noelements",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>");
 } 
      out.write("</tbody>\n</table>\n<table cellspacing=\"4\" cellpadding=\"0\" border=\"0\" class=\"w100 w e s\">\n<tr>\n<td class=\"w100\"></td>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("new")))).booleanValue() || ((Boolean) (hasLoopElements("Params") ? Boolean.TRUE : Boolean.FALSE)).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",123,e);}if (_boolean_result) { 
      out.write(" \n<td class=\"button\"><input type=\"submit\" class=\"button\" value=\"");
 {out.write(localizeISText("process.chain.params.ok",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" name=\"apply\" /></td>");
 } 
      out.write("</tr>\n</table>\n<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<td class=\"backbar_left\">\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr> \n<td align=\"left\" class=\"w100\"><input type=\"submit\" class=\"button\" value=\"&lt;&lt;&nbsp;");
 {out.write(localizeISText("process.chain.params.backToList",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" name=\"back\" /></td>\n</tr>\n</table>\n</td>\n</tr>\n</table>");
 out.print("</form>"); 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
