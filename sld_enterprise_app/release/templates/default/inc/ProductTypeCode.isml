<iscontent type="text/html" charset="UTF-8" compact="true" templatemarker="false">
<%@page import="com.intershop.component.product.capi.ProductBORepository"%>
<%@page import="com.intershop.component.repository.capi.RepositoryBO"%>
<%@page import="com.intershop.component.repository.capi.RepositoryBORepository"%>
<%@page import="com.intershop.beehive.businessobject.capi.BusinessObjectRepositoryFactory"%>
<%@page import="com.intershop.beehive.businessobject.capi.BusinessObjectContext"%>
<%@page import="com.intershop.beehive.app.capi.AppContext"%>
<%@ page import = "java.util.*,com.intershop.beehive.xcs.capi.product.*" %>
<%@ page import = "com.intershop.component.mvc.capi.product.ServiceTypeBO" %>
<%@ page import = "com.intershop.beehive.core.capi.domain.Domain" %>
<%@ page import = "com.intershop.beehive.core.capi.naming.NamingMgr" %>
<%@ page import = "com.intershop.beehive.core.capi.app.AppContextUtil" %>
<%@ page import = "com.intershop.component.product.capi.ProductBO" %>

<%
	Product product = (Product)getObject("Product");
	
  	boolean typeFound = false;
  	if (product.isBundled()) {
		%><istext key="sld_enterprise_app.BundledProduct.table_detail" encoding="off"/><%typeFound = true;
  	}
  	if (product.isMastered()) {
		if(typeFound){ %><br/><%} %><istext key="sld_enterprise_app.VariationProduct.table_detail" encoding="off"/><% typeFound = true;
  	}
  	if (product.isProductBundle()) {
		if(typeFound){ %><br/><%}%><istext key="sld_enterprise_app.ProductBundle.table_detail" encoding="off"/><%     typeFound = true;
  	}
 	if (product.isProductMaster()) {
		if(typeFound){ %><br/><%}%><istext key="sld_enterprise_app.VariationMaster.table_detail" encoding="off"/><%   typeFound = true;
	}
	if ((product.getTypeCode() & 128) == 128) {
		if(typeFound){ %><br/><%}%><istext key="ProductTypeCode.RetailSet" encoding="off"/> <% typeFound = true;
	}
	if ((product.getTypeCode() & 256) == 256) {
		if(typeFound){ %><br/><%}%><istext key="ProductTypeCode.PartOfRetailSet" encoding="off"/> <% typeFound = true;
	}

    AppContext appContext = AppContextUtil.getCurrentAppContext();
    BusinessObjectContext boContext = (BusinessObjectContext)appContext.getVariable(BusinessObjectContext.NAME);
    BusinessObjectRepositoryFactory<RepositoryBORepository> repositoryFactory = boContext.getEngine().getRepositoryFactory(RepositoryBORepository.class);
    RepositoryBORepository repositoryBORepository = repositoryFactory.createRepository(boContext);
    RepositoryBO repository = repositoryBORepository.getRepositoryByID(product.getDomainID());
    ProductBORepository productBORepository = repository.getExtension(ProductBORepository.class);

	ProductBO productBO = productBORepository.getProductByID(product.getUUID());
	
	if ( productBO != null )
	{
		ServiceTypeBO serviceTypeBO = productBO.getServiceType();
		if (serviceTypeBO!=null)
		{
			if(typeFound) { out.print("<br/>"); } 
			else { typeFound = true; }
			out.print(serviceTypeBO.getDisplayName());		
		}
	}
	if (!typeFound && (product.isProductItem() || product.isOffer())) {
		%><istext key="BrowseClassificationCatalog.Product.table_detail" encoding="off"/><%
	}
%>