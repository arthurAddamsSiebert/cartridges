<iscontent type="text/html" charset="UTF-8" compact="true" templatemarker="false">
<isset scope="request" name="level" value="#0#">
<isset scope="request" name="formIndex" value="#0#">

<!--- include modules for Assignments that are used for StorefrontEditing too (sld_pmc) --->
<isinclude template="assignments/Modules">

<!---  
This module integrates Multi Label Assignment widget

Parameters:
		  - jscustomization (required):
		      JS widget customization file path
          - link (required):
			  url to label processing pipeline
          - AssignedLabels (optional):
              Currently assigned labels iterator
          - isLabelEnabled (optional):
              if 'false', then labelselect html element is disabled
--->
<ismodule template="inc/LabelMultiSelect.isml"
	name="LabelMultiSelect"
	attribute="jscustomization"
	attribute="link"
	attribute="AssignedLabels"
	attribute="isLabelEnabled"
>
<!---
    This module concatenate all values for the given attribute and put it in a dictionary under <returnattribute>
    
    Parameters:
        - attribute - an iterator of objects 
 --->
<ismodule template="inc/ConcatenateMultipleValueAttribute.isml"
    name="ConcatenateMultipleValueAttribute"
    strict="true"
    attribute="attribute"
    returnattribute="concatenatedAttributeValue"
    >

<!--- 
	This module creates navigation bar for pageable object 
	
	Parameters:
		- pipeline (required): 
			the paging pipeline
		- pageable (required):
			the key of the dictionary entry containing the pageable object
		- parametername [1-9] (optional):
			the name of the parameter which will be added to the paging url
		- parametervalue [1-9](optional):
			the value of the parameter which will be added to the paging url
		- formname(optional):
			the name of the html form which will be used for pafing
		
	Example:
		...
		<table class="pagecursor" width="100%">
			<tr>
				<ISPageNavigationBar pipeline="ViewOrderExport-Paging" pageable="Orders" item="orders" parametername="ChannelID" parametervalue="#CurrentChannel:UUID#" parametername1="SearchType" parametervalue1="#SearchType#" parametername2="status" parametervalue2="#status#">
			</tr>
		</table>
		...
		<table class="pagecursor" width="100%">
			<tr>
				<ISPageNavigationBar pipeline="ViewUserList-Paging" pageable="Users" formName="userList">
			</tr>
		</table>			
		...
 --->
<ismodule template = "inc/PageNavigationBar.isml"
	name="PageNavigationBar"
	attribute="pipeline"
	attribute="pageable"
	attribute="parametername"
	attribute="parametervalue"
	attribute="parametername1"
	attribute="parametervalue1"
	attribute="parametername2"
	attribute="parametervalue2"
	attribute="parametername3"
	attribute="parametervalue3"
	attribute="parametername4"
	attribute="parametervalue4"
	attribute="parametername5"
	attribute="parametervalue5"
	attribute="parametername6"
	attribute="parametervalue6"
	attribute="parametername7"
	attribute="parametervalue7"
	attribute="parametername8"
	attribute="parametervalue8"
	attribute="parametername9"
	attribute="parametervalue9"
	attribute="parametername10"
	attribute="parametervalue10"
	attribute="formname"
>
<!--- 
	This module creates simple paging bar for pageable object 
	
	Parameters:
		- pageable (required):
			the key of the dictionary entry containing the pageable object
		- pagenumberprefix (optional):
			the prefix for the input field which will be used as paging button 
			e.g. <input name="PageNumber_0" value="1" class="pagecursorbtn" type="submit">
			if no prefix specified it will be "PageNumber_"
		- cssclasses (optional):
            css classes that will be appended to all input elements of type 'submit' that
            control paging (e.g. used to apply storefront editing css classes). 
            Multiple css classes are separated by a space. 
				
	Example:
		...
		<tr>
			<td>
				<ISPagingBar pageable="Repositories">
			</td>
		</tr>
		...
		<tr>
			<td colspan="4">
				<ISPagingBar pageable="UnassignedChannels">
			</td>
		</tr>			
		...
 --->
<ismodule template = "inc/PagingBar.isml"
	name="PagingBar"
	attribute="pageable"
	attribute="pagenumberprefix"
	attribute="cssclasses"
>

<ismodule template = "inc/PriceListPagingBar.isml"
	name="PriceListPagingBar"
	attribute="pageable"
	attribute="pricetype"
	attribute="pagenumberprefix"
>

<!--- 
	This module visualizes a short status message
	about a batch process, e.g. "Completed with X errors".
	
	Example:
		...
		<tr>
			<td>
				<ISProcessStatus job="#Process#">
			</td>
		</tr>
		...
 --->
<ismodule template = "process/inc/ProcessStatusInc.isml"
	name="ProcessStatus"
	strict="true"
	attribute="job"
>

<!--- 
	This module creates navigation bar for pageable object 
	
	Parameters:
		- pageable (required):
			the key of the dictionary entry containing the pageable object
		- pagenumberprefix (required):
			the prefix for the input field which will be used as paging button
			by default 'PageNumber_'		 
			e.g. <input name="PageNumber_0" value="1" class="pagecursorbtn" type="submit">
		- pagesizeprefix (optional):
			the prefix for the input field which will be used as page size button,
			by default 'PageSize_' 
			e.g. <input name="PageSize_50" value="50" class="pagecursorbtn" type="submit">
		- variablepagesize (optional):
			should be allowed for user to select page size 
			can be true/false, by default false  
			e.g. <input name="PageNumber_0" value="1" class="pagecursorbtn" type="submit">		
		- parametername [1-9] (optional):
			the name of the parameter which will be added to the paging url
		- parametervalue [1-9](optional):
			the value of the parameter which will be added to the paging url
		- replaceshowall (optional):
			replaces paging text "Show All" with maximum page size number
			that limits the number of list items displayed in a web page
			IDs of list items are often included in a HTTP POST request
			in case of too many items the request gets truncated and important information (e.g. paging parameters) gets lost
		- rowsperpage (optional):
			replaces the default shown rows per page entries with the given ones, for example rowsperpage="15 30 50 100"
		- id (optional)
		    giving the rendered table a unique id (used for javascript referencing the element by #id)

	Example:	
		...
		<ISFlexPagingBar pageable="Products" variablepagesize="true" parametername="SearchType" parametervalue="#SearchType#">
		...
 --->
<ismodule template = "inc/FlexPagingBar153050"
	name="FlexPagingBar"
	attribute="pageable"
	attribute="pagenumberprefix"
	attribute="pagesizeprefix"
	attribute="variablepagesize"
	attribute="parametername"
	attribute="parametervalue"
	attribute="parametername1"
	attribute="parametervalue1"
	attribute="parametername2"
	attribute="parametervalue2"
	attribute="parametername3"
	attribute="parametervalue3"
	attribute="parametername4"
	attribute="parametervalue4"
	attribute="parametername5"
	attribute="parametervalue5"
	attribute="parametername6"
	attribute="parametervalue6"
	attribute="parametername7"
	attribute="parametervalue7"
	attribute="parametername8"
	attribute="parametervalue8"
	attribute="parametername9"
	attribute="parametervalue9"
	attribute="parametername10"
	attribute="parametervalue10"
	attribute="replaceshowall"
	attribute="rowsperpage"
	attribute="id"
>

<!--- 
	This module creates navigation bar for pageable object, 
	differs from ISFlexPagingBar with page sizing options 
	
	Parameters:
	- pageable (required):
		the key of the dictionary entry containing the pageable object
	- pagenumberprefix (required):
		the prefix for the input field which will be used as paging button
		by default 'PageNumber_'		 
		e.g. <input name="PageNumber_0" value="1" class="pagecursorbtn" type="submit">
	- pagesizeprefix (optional):
		the prefix for the input field which will be used as page size button,
		by default 'PageSize_' 
		e.g. <input name="PageSize_50" value="50" class="pagecursorbtn" type="submit">
	- variablepagesize (optional):
		should be allowed for user to select page size 
		can be true/false, by default false  
		e.g. <input name="PageNumber_0" value="1" class="pagecursorbtn" type="submit">		
	- parametername [1-9] (optional):
		the name of the parameter which will be added to the paging url
	- parametervalue [1-9](optional):
		the value of the parameter which will be added to the paging url
	- rowsperpage (optional):
		replaces the default shown rows per page entries with the given ones, for example rowsperpage="15 30 50 100"
		
	Example:
		...
		<ISFlexPagingbar2 variablepagesize = "true"	pageable="Files"
					parametername="ProductID" parametervalue="#Product:UUID#"
					parametername1="KeyPrefix" parametervalue1="#KeyPrefix#"
					parametername2="RegForm_ContentType" parametervalue2="#RegForm_ContentType#"
					parametername3="RegForm_DisplayName" parametervalue3="#RegForm_DisplayName#"
					parametername4="RegForm_Description" parametervalue4="#RegForm_Description#"
					parametername5="RegForm_Location" parametervalue5="#RegForm_Location#"
					parametername6="ProcessType" parametervalue6="#ProcessType#"
					parametername7="DirectoryPath" parametervalue7="#DirectoryPath#"
					parametername8="LocaleId" parametervalue8="#LocaleId#"
					parametername9="Secure" parametervalue9="#false#">
		...
 --->
<ismodule template = "inc/FlexPagingBar102050100"
	name="FlexPagingBar2"
	attribute="pageable"
	attribute="pagenumberprefix"
	attribute="pagesizeprefix"
	attribute="variablepagesize"
	attribute="parametername"
	attribute="parametervalue"
	attribute="parametername1"
	attribute="parametervalue1"
	attribute="parametername2"
	attribute="parametervalue2"
	attribute="parametername3"
	attribute="parametervalue3"
	attribute="parametername4"
	attribute="parametervalue4"
	attribute="parametername5"
	attribute="parametervalue5"
	attribute="parametername6"
	attribute="parametervalue6"
	attribute="parametername7"
	attribute="parametervalue7"
	attribute="parametername8"
	attribute="parametervalue8"
	attribute="parametername9"
	attribute="parametervalue9"
	attribute="parametername10"
	attribute="parametervalue10"
	attribute="rowsperpage"
>

<!--- 
	For hierarchical structuring of catalog categories
	
	Parameters:
	- category (required): 
		the key of the dictionary entry containing the category object
	- selectiontype (Optional):
		selection type can be one of : multiple,single
	- selectedcategoryuuid (Optional):
		the key of the dictionary entry containing selected category uuid
	- checkedcategoryuuidmap (Optional):
		the key of the dictionary entry containing map of selected category uuid's
	- disabledcategoryuuidmap (Optional):
		the key of the dictionary entry containing map of disabled for selection category uuid's
	- selectedcategoryuuid (Optional):
		the key of the dictionary entry containing
	- handlerpipeline (required):
		name of pipeline which will handle expanding and collapsing tree (and has Expand and Collapse start nodes)
	- enabledetailslink (Optional)
		can be one of : true false
		enables link which leads to handlerpipeline start node CategoryDetails
	- enabledetailslinkhighlight (Optional)
		can be one of : true false
		relevant only if enabledetailslink attribute value is true. if so, the category whose uuid equals 
		selectedcategoryuuid attribute value, will be highlighted in the tree as text (not as link).
	- autoselectdisablesubcategories (Optional)	
		can be one of : true false
		if set to true it enables the feature, that all subcategory checkboxes are selected and disabled automatically, 
		as soon as their parent category is selected/disabled
	- formname (optional)
		the name of the form in which the module is included (if there's one).
		It's needed to allow keeping the current selection on expand/collapse! 
		If not provided the old functionality will be used, but selection won't be kept on expand/collapse, 
		and such categories should be selected again (before 'Finish' is clicked)
	- autodisabledisabledsubcategories (Optional)	
		can be one of : true false
		if set to true it enables the feature, that all disabled subcategory checkboxes are not disabled automatically, 
		as soon as their parent category is disabled
	- dynamicproductbinding (Optional)	
		can be one of : true false
		if set to true it enables the feature, that disabled all subcategory for which dynamic product binding is set.	
	- parametername [1-9] (optional):
		the name of the parameter which will be added to the category url
	- parametervalue [1-9](optional):
		the value of the parameter which will be added to the category url
		
	Example:
		...
		<td width="100%">
			<ISCatalogCategory 	category="#Catalog:Root#"
				handlerpipeline="ViewProductCategoryAssignmentWizard"
				selectiontype="single"
				enabledetailslink="true"
				parametername="CatalogID"
				parametervalue="#CatalogID#"
				parametername1="ProductID"
				parametervalue1="#ProductID#">
		</td>
		...
	 
 --->
<ismodule template = "inc/CatalogCategoryInclude.isml"
	name="CatalogCategory"
	attribute="category"
	attribute="catalog"
	attribute="selectiontype"
	attribute="selectedcategoryuuid"
	attribute="checkedcategoryuuidmap"
	attribute="disabledcategoryuuidmap"
	attribute="handlerpipeline"
	attribute="enabledetailslink"
	attribute="enabledetailslinkhighlight"
	attribute="hide_empty_classifications"
	attribute="autoselectdisablesubcategories"
	attribute="formname"
	attribute="autodisabledisabledsubcategories"
	attribute="dynamicproductbinding"
	attribute="parametername"
	attribute="parametervalue"
	attribute="parametername1"
	attribute="parametervalue1"
	attribute="parametername2"
	attribute="parametervalue2"
	attribute="parametername3"
	attribute="parametervalue3"
	attribute="parameterame4"
	attribute="parametervalue4"
	attribute="parametername5"
	attribute="parametervalue5"
	attribute="parametername6"
	attribute="parametervalue6"
	attribute="parametername7"
	attribute="parametervalue7"
	attribute="parametername8"
	attribute="parametervalue8"
	attribute="parametername9"
	attribute="parametervalue9"
	attribute="parametername10"
	attribute="parametervalue10"
>

<!--- 
	Tries to print the display name of a category in the current locale if such exists.	If no, 
	prints the display name in lead locale if such exists. Otherwise prints	"(Name missing)".
	  
	Parameters:
	- Category (required): 
		the key of the dictionary entry containing the category object
	- UseIDFallback (optional):
		"true"/"false" (default "false") - whether to use the Name(ID) of the category instead of "(Name Missing)"
		as fallback if DisplayNames are absent.  
	- SkipPrint (optional):
		"true"/"false" (default "false") - whether to omit printing the display name (and only return it as 
		CatDisplayNameResult in such case).
 --->		
<ismodule strict="true" template = "inc/CatalogCategoryDisplayName.isml"
	name="CategoryDisplayName"
	attribute="Category"
	attribute="UseIDFallback"
	attribute="SkipPrint"
	attribute="DetailLink"
	returnattribute="CatDisplayNameResult"
>

<!--- 
	Tries to print the display name of a CatalogCategoryBO in the current locale if such exists.	If no, 
	prints the display name in lead locale if such exists. Otherwise prints	"(Name missing)".
	  
	Parameters:
	- CatalogCategoryBO (required): 
		the key of the dictionary entry containing the CatalogCategoryBO object
	- UseIDFallback (optional):
		"true"/"false" (default "false") - whether to use the Name(ID) of the category instead of "(Name Missing)"
		as fallback if DisplayNames are absent.  
	- SkipPrint (optional):
		"true"/"false" (default "false") - whether to omit printing the display name (and only return it as 
		CatDisplayNameResult in such case).
 --->		
<ismodule strict="true" template = "inc/CatalogCategoryBODisplayName.isml"
	name="CatalogCategoryBODisplayName"
	attribute="CatalogCategoryBO"
	attribute="UseIDFallback"
	attribute="SkipPrint"
	attribute="DetailLink"
	returnattribute="CatDisplayNameResult"
>

<!--- 
	Tries to print the display name of a CatalogCategoryBO in the current locale if such exists.	If no, 
	prints the display name in lead locale if such exists. Otherwise prints	"(Name missing)".
	  
	Parameters:
	- CatalogCategoryBO (required): 
		the key of the dictionary entry containing the CatalogCategoryBO object
	- UseIDFallback (optional):
		"true"/"false" (default "false") - whether to use the Name(ID) of the category instead of "(Name Missing)"
		as fallback if DisplayNames are absent.  
	- SkipPrint (optional):
		"true"/"false" (default "false") - whether to omit printing the display name (and only return it as 
		CatDisplayNameResult in such case).
 --->		
<ismodule strict="true" template = "inc/CatalogCategoryBODisplayName.isml"
	name="CatalogCategoryBODisplayName"
	attribute="CatalogCategoryBO"
	attribute="UseIDFallback"
	attribute="SkipPrint"
	attribute="DetailLink"
	returnattribute="CatDisplayNameResult"
>
	
<!--- 
	This module creates hierarchical structure of departments 
	
	Parameters:
		- department (required):
			the key of the dictionary entry containing the department object
		- selectiontype (optional):
			this allows multiply/single/none selection of departments
			Can be one of: single,multiply or none (undefined equals multiply)
			if value is none then no selection control will be added 
		- alloweditdepartment (optional):
			allows departments editing
			Can be one of: false,true (undefined equals true)
		- HandlerPipeline(required):
			name of pipeline which will handle expanding and collapsing tree (and has Expand and Collapse start nodes)
		- ParameterName1 (optional):
			the name of the parameter which will be added to the department link
		- ParameterValue1 (optional):
			the value of the parameter which will be added to the department link
				
	Example:
		...
		<td width="100%">
			<isloop iterator="Departments" alias="dep">
				<ISDepartment
					department="#dep#"
					HandlerPipeline="ViewDepartment"
					SelectionType="multiple"
					FormName="DepartmentForm"
					ParameterName1="param1"
					ParameterValue1="#dep:ID#">
			</isloop>
		</td>
		...
		<td width="100%">
			<isloop iterator="Departments" alias="dep">
				<ISDepartment
					department="#dep#"
					HandlerPipeline="ViewUserDepartmentRolesWizard"
					SelectionType="single"
					ParameterName1="UserUUID"
					ParameterValue1="#UserUUID#"
					alloweditdepartment="false">
			</isloop>
		</td>	
		...
		<td>
			<isloop iterator="Departments" alias="dep">
				<ISDepartment
					department="#dep#"
					alloweditdepartment="false"
					HandlerPipeline="ViewChannelPermissionWizard"
					SelectionType="single"
					ParameterName1="RepositoryUUID"
					ParameterValue1="#RepositoryUUID#">
			</isloop>
		</td>
		...		
 --->
 <ismodule template = "inc/Department.isml"
	name="Department"
	attribute="department"
	attribute="selectiontype"
	attribute="alloweditdepartment"
	attribute="HandlerPipeline"
	attribute="EnableDetailsLink"
	attribute="currentidx"
	attribute="elementcount"
	attribute="ParameterName1"
	attribute="ParameterValue1"
>

<!--- 
	This module is used for sorting table columns by an attribute 
	
	Parameters:
		- pipeline (required):
			pipeline name with start node which will handle sorting
			parameters 'SortingAttribute' and 'SortingOrder'(true/false) should be used for sorting		 
		- sortingattribute (required):
			parameter will be bypassed as 'SortingAttribute' to the sorting url 
		- tableheader (required):
			text for the url
		- style (required):
			css style which will be used in url
		- parametername [1-5] (optional):
			the name of the parameter which will be added to the sorting url
		- parametervalue [1-5] (optional):
			the value of the parameter which will be added to the sorting url
				
	Example:
		...
		<td class="table_header e s">
			<ISSorting pipeline="ViewCatalogChannel-Refresh" sortingattribute="DisplayName" tableheader="Name" style="tableheader" parametername="CatalogID" parametervalue="#Catalog:Id#" parametername1="UnitName" parametervalue1="#UnitName#" parametername2="CatalogTypeCode" parametervalue2="#CatalogTypeCode#">
		</td>
		...		
		<td class="table_header e s">
			<ISSorting pipeline="ViewCatalogChannel-Refresh" sortingattribute="Id" tableheader="ID" style="tableheader" parametername="CatalogID" parametervalue="#Catalog:Id#" parametername1="UnitName" parametervalue1="#UnitName#" parametername2="CatalogTypeCode" parametervalue2="#CatalogTypeCode#">
		</td>
		...		
		<td class="table_header e s">
			<ISSorting pipeline="ViewCatalogChannel-Refresh" sortingattribute="TypeCode" tableheader="Type" style="tableheader" parametername="CatalogID" parametervalue="#Catalog:Id#" parametername1="UnitName" parametervalue1="#UnitName#" parametername2="CatalogTypeCode" parametervalue2="#CatalogTypeCode#">
		</td>
		...		
 --->
<ismodule template = "inc/Sorting.isml"
	name="Sorting"
	attribute="pipeline"
	attribute="sortingattribute"
	attribute="tableheader"
	attribute="style"
	attribute="parametername"
	attribute="parametervalue"
	attribute="parametername1"
	attribute="parametervalue1"
	attribute="parametername2"
	attribute="parametervalue2"
	attribute="parametername3"
	attribute="parametervalue3"
	attribute="parametername4"
	attribute="parametervalue4"
	attribute="parametername5"
	attribute="parametervalue5"
>

<!--- 
	Replacement for isset, uses pipeline dictionary instead of session dictionary 
	
	Parameters:
		- name (required):
			the key for the dictionary value			 
		- value (required):
			the value to set  
				
	Example:
		...
		<isput name="columnCounter" value="#1#">
		...		
		<isput name="ActiveTab" value="additional specifications">
		...		
 --->
<ismodule template = "inc/isput.isml"
	name="Put"
	attribute="name"
	attribute="value"
>

<!--- 
	Displays an error/confirmation message box, used to confirm and/or cancel delete operations, and to display error messages related to delete operations. 
	
	Parameters:
		- subject (optional):
			Subject in confirm/error message
		- pretext (optional):
			 A text displayed before the subject in a confirm/error message, when a subject is present (optional).
		- type (required):
			One of: mdc - Confirmation for delete operation on multiple objects
					sdc - Confirmation for delete operation on single object
					mde - Error message (nothing selected) for delete operation on multiple objects
					mae - Multiple action error (nothing selected)
					nse - nothing selected error(without cancel button)
					nsebt - nothing selected error(click button)
					info - Information about actions
	 	- message (required):
			The message to be displayed in the message box.
		- okbtnname (Optional):
			Name of the OK button (if required by type). 
		- cancelbtnname (Optional):
			Name of the Cancel button (if required by type) (default is "cancel"). 
		- colspan (Optional):
			Colspan for table cell. 
		- class (Optional):
			class for table cell (default is "w e s"). 
		- prefixiterator (Optional):
			PrefixIterator for hidden-fields. 
		- prefix (Optional):
			Prefix used with hidden-fields created using PrefixIterator. 
		- iterator (Optional):
			Iterator for hidden-fields. 
		- hiddenname (Optional):
			Name for hidden field created using Iterator. 
		- parametername [1-5] (Optional):
			Single hidden-field-name. The lookup is terminated if one parametername[x] was not found.
		- parametervalue [1-5] (Optional):
			Single hidden-field-value used for hidden-field with corresponding postfix number.
		- disableparameters [true/false] (optional) 
			disables the creation of hidden input fields for present parametername/parametervalue pairs 
			(needed to prevent doubling of such values if they are written already by a surrounding form)
		- okbtnclass (optional) 
			additional CSS class of the OK button
		- cancelbtnclass (optional) 
			additional CSS class of the Cancel button
				
	Example:
		...
		<ISMessageBox
		   subject="pricelist"
		   type="sdc"
		   message="Are you sure you want to delete this item?"
		   okbtnname="delete"
		   cancelbtnname="cancelDelete">
		...		
 --->
<ismodule template = "inc/MessageBox.isml"
	name="MessageBox"
	attribute="subject"
	attribute="type"
	attribute="message"
	attribute="okbtnname"
	attribute="cancelbtnname"
	attribute="colspan"
	attribute="class"
	attribute="prefixiterator"
	attribute="prefix"
	attribute="iterator"
	attribute="hiddenname"
	attribute="disableparameters"
	attribute="pretext"
	attribute="parametername2"
	attribute="parametervalue2"
	attribute="parametername3"
	attribute="parametervalue3"
	attribute="parametername4"
	attribute="parametervalue4"
	attribute="parametername5"
	attribute="parametervalue5"
	attribute="parametername6"
	attribute="parametervalue6"
>

<!--- 
	For hierarchical structuring of static content directories
	
	Parameters:
		- directory (required): 
			root directory object
		- directorySelection (Optional):
			selection allowed, can be one of : yes,no
		- rootDirectorySelection (Optional):
			root directory selection allowed, can be one of : yes,no
		- editDirectorySelection (Optional):
			editing allowed, can be one of : yes,no
		- rootDirectoryName (Optional):
			root directory name display name
		- handlerpipeline (required):
			name of pipeline which will handle expanding and collapsing tree (and has Expand and Collapse start nodes)
		- parametername [1-9] (optional):
			the name of the parameter which will be added to the directory url
		- parametervalue [1-9](optional):
			the value of the parameter which will be added to the directory url
		
	Example:
		...
		<isif condition="#isDefined(EditDirectorySelection)#">
			<ISContentDirectory
				directory="#RootDirectory#"
				directorySelection="yes"
				editDirectorySelection="yes"
				rootdirectoryname="#RootDirectoryName#"
				handlerPipeline="ViewProductAttachments"
				parametername="LocaleId"
				parametervalue="#Locale:LocaleID#"
				parametername1="Secure"
				parametervalue1="#Secure#">
		<iselse>
			<ISContentDirectory
				directory="#RootDirectory#"
				directorySelection="yes"
				rootdirectoryname="#RootDirectoryName#"
				handlerPipeline="ViewProductAttachments"
				parametername="LocaleId"
				parametervalue="#Locale:LocaleID#"
				parametername1="Secure"
				parametervalue1="#Secure#">
		</isif>
		...
	 
 --->
<ismodule template="inc/ContentDirectory.isml"
	name="ContentDirectory"
	attribute="directory"
	attribute="directorySelection"
	attribute="rootDirectorySelection"
	attribute="editDirectorySelection"
	attribute="rootDirectoryName"
	attribute="handlerpipeline"
	attribute="parametername"
	attribute="parametervalue"
	attribute="parametername1"
	attribute="parametervalue1"
	attribute="parametername2"
	attribute="parametervalue2"
	attribute="parametername3"
	attribute="parametervalue3"
	attribute="parametername4"
	attribute="parametervalue4"
	attribute="parametername5"
	attribute="parametervalue5"
	attribute="parametername6"
	attribute="parametervalue6"
	attribute="parametername7"
	attribute="parametervalue7"
	attribute="parametername8"
	attribute="parametervalue8"
	attribute="parametername9"
	attribute="parametervalue9"
	attribute="parametername10"
	attribute="parametervalue10"
	attribute="parametername11"
	attribute="parametervalue11"
	attribute="parametername12"
	attribute="parametervalue12"
	attribute="parametername13"
	attribute="parametervalue13"
	attribute="parametername14"
	attribute="parametervalue14"
	attribute="parametername15"
	attribute="parametervalue15"
	attribute="parametername16"
	attribute="parametervalue16"
	attribute="parametername17"
	attribute="parametervalue17"
	attribute="parametername18"
	attribute="parametervalue18"
	attribute="parametername19"
	attribute="parametervalue19"
>

<!--- hierarchical browser of content site structure --->
<ismodule template="inc/ContentSite.isml"
	name="ContentSite"
	attribute="sitefolder"
	attribute="handlerpipeline"
	attribute="selectable"
	attribute="multipleselection"
	attribute="regexmatcher"
	attribute="editable"
	attribute="elementfilter"
	attribute="rootfolderuuid"
	attribute="currentidx"
	attribute="elementcount"
	attribute="parametername"
	attribute="parametervalue"
	attribute="parametername1"
	attribute="parametervalue1"
	attribute="parametername2"
	attribute="parametervalue2"
	attribute="parametername3"
	attribute="parametervalue3"
	attribute="parameterame4"
	attribute="parametervalue4"
	attribute="parametername5"
	attribute="parametervalue5"
	attribute="parametername6"
	attribute="parametervalue6"
	attribute="parametername7"
	attribute="parametervalue7"
	attribute="parametername8"
	attribute="parametervalue8"
	attribute="parametername9"
	attribute="parametervalue9"
>

<!--- 
	This module prints result of job execution  
	
	Parameters:
		- jobconfiguration (required):
			the key of the dictionary entry containing the job configuration object
		- type (required):
			type can be one of:
				CurrentActivity 
				LastExecutionTime
				LastExecutionEndTime
				BOType
				ImpexType
				GetImpexType
				ValidationPipeline
				Status				
	Example:
		...
		<ISImpexMessage jobconfiguration="#JobConfiguration#" type="CurrentActivity">		
		...
 --->
<ismodule template="impex/ImpexMessages"
	name="ImpexMessage"
	attribute="jobconfiguration"
	attribute="type"
    attribute="parametername1"
	attribute="parametervalue1"
>

<!--- 
	This module prints result of job execution  
	
	Parameters:
		- jobconfiguration (required):
			the key of the dictionary entry containing the job configuration object
		- pipeline (required):
			pipeline with 'Monitor' start node for refreshing the status and 'DownloadFile' start node to download an export file
	Example:
		...
		<ISImpexMonitor jobconfiguration="#JobConfiguration#" pipeline="ViewCatalogImpex">
		...
 --->
<ismodule template="impex/ImpexMonitor"
	name="ImpexMonitor"
	attribute="jobconfiguration"
	attribute="pipeline"
>

<!--- 
	This module prints result of job execution  
	
	Parameters:
		- impexjobs (required):
			the key of the dictionary entry containing the job configuration object
		- pipeline (required):
			Refresh status pipeline	with 'Monitor' start node	
		- readonly (optional):
			Set to 'true' to hide delete functionality and links to validate pages.
	Example:
		...
		<ISImpexJobList impexjobs="#ImpexJobs#" pipeline="ViewOrganizationImpex">
		<ISImpexJobList impexjobs="#ImpexJobs#" pipeline="ViewOrganizationImpex" readonly="true">		
		...
 --->
<ismodule template="impex/ImpexJobList"
	name="ImpexJobList"
	attribute="impexjobs"
	attribute="pipeline"
    attribute="pipelineparametername1"
	attribute="pipelineparametervalue1"
	attribute="readonly"
>

<!--- print replication groups - separated with comma --->
<ismodule template = "inc/ReplicationGroups.isml"
	name="ReplicationGroups"
	attribute="task"	
>
<!--- prints the state of given replication task --->
<ismodule template = "inc/ReplicationTaskState.isml"
	name="ReplicationTaskState"
	attribute="state"	
>

<!--- 
	Returns a preference for a domain given by name.

	Parameters: 
		- preferencekey (Required):
			The key name of the preference to be looked up. 
		- domainname (Required):
			The domain to which the preference belongs. 
		- return (Optional):
			The pipeline dictionary name to hold the resulting preference value. 
	Example: 
	 	...
		<ISGetPreference
		   preferencekey="BasketDisplayTaxes"
		   domainname="#CurrentUser:Profile:Domain:Site:DomainName#"
		   return="Preference">
		...
--->
<ismodule template = "inc/GetPreference.isml"
	name="GetPreference"
	attribute="preferencekey"
	attribute="domainname"
	attribute="return"
>

<!--- 
	Creates a date input control.

	Parameters:  
		- InputFieldName (Required):
			The name of the HTML text date input field. 
		- InputFieldLabel (Required):
			The label name to be used in the user interface for the HTML text date input field. 
		- InputFieldLabelClass (Optional):
			The HTML table definition (td) class name to format the label text. 
		- InputFieldEditClass (Optional):
			The HTML table definition (td) class name to format the date input field. 
		- InputFieldSize (Optional):
			The size of the HTML text date input field. The default is 12. 
		- DateObject (Optional):
			An object from the pipeline dictionary which holds the date that should be displayed initially. If present, the DateObject has a higher priority as the DateString for the display value. 
		- DateString (Optional):
			A string which defines the date to be displayed initially. 
		- DatePatternUserHint (Optional)
			If set to "false" the pattern user hint will be suppressed	
		- Invalid (Optional) (true|false): 
			If set to "true", an invalid value entered in the input field will be displayed in red color. 
		- Required (Optional) (true|false): 
			If set to "true", the input field is marked with a red asterisk (*) in the user interface, indicating that the data value is required. 
		- Readonly (Optional) (true|false): 
            If set to "true", the input field is read only.
        - Disabled (Optional) (true|false): 
            If set to "true", the input field is disabled.
            If set to "false" AND if the attribut Readonly is set to "true", the input field is read only.
        - InputDateWidth (Optional):
			A CSS style size information as alternative for input-size attribute
		- DateButtonStyle (Optional):
			A CSS style definition for the date-picker button
		- enablePast (Optional):
			If set to "false" dates before actual date are disabled
			
			 
	Example: 
		...
		<ISDateInput
		   InputFieldLabel="From"
		   InputFieldName="FixedTimeBudget_From"
		   InputFieldEditClass="infobox_item"
		   DateObject="#FromDate#"
		   DateString="#FixedTimeBudget_From#"
		   Invalid="#isDefined(InvalidFrom)#"
		   Required="true"
		   InputDateWidth="94px"
		   DateButtonStyle="padding: 0 13px 12px 3px; width: 41px; overflow: hidden"
		   enablePast="false"
		   >
		...

 --->
<ismodule template = "inc/DateInput.isml"
	name="DateInput"
	attribute="InputFieldName"
	attribute="InputFieldLabel"
	attribute="InputFieldLabelClass"
	attribute="InputFieldEditClass"
	attribute="InputFieldSize"
	attribute="DateObject"
	attribute="DateString"
	attribute="DatePatternUserHint"
	attribute="Invalid"
	attribute="Required"
	attribute="Readonly"
	attribute="Disabled"
	attribute="InputDateWidth"
	attribute="DateButtonStyle"
	attribute="EnablePast"
	attribute="TabIndex"
>

<!--- 
	Creates a time input control

	Parameters: 
		- InputFieldName (Required):
			The name of the HTML text date input field. 
		- InputFieldLabel (Required):
			The label name to be used in the user interface for the HTML text time input field. 
		- InputFieldLabelClass (Optional):
			The HTML table definition (td) class name to format the label text. 
		- DateObject (Optional):
			An object from the pipeline dictionary which holds the time that should be displayed initially. If present, the DateObject has a higher priority as the DateString for the display value. 
		- TimeString (Optional):
			A string which defines the time to be displayed initially. 
		- TimePatternUserHint (Optional)
			If set to "false" the pattern user hint will be suppressed	
		- Invalid (Optional) (true|false):
			If set to "true", an invalid value entered in the input field will be displayed in red color. 
		- Required (Optional) (true|false):
			If set to "true", the input field is marked with a red asterisk (*) in the user interface, indicating that the data value is required. 
		- Readonly (Optional) (true|false):
			If set to "true", the input field is read only.
        - Disabled (Optional) (true|false): 
            If set to "true", the input field is disabled.
            If set to "false" AND if the attribut Readonly is set to "true", the input field is read only.
		- InputTimeWidth (Optional):
			A CSS style size information as alternative for input-size attribute
			
			 
	Example:
		...
		<ISTimeInput
		   InputFieldLabel="Time"
		   InputFieldName="PriceTableForm_StartTime"
		   TimeString="#PriceTableForm_StartTime#"
		   Invalid="#(isdefined(ErrorCode) AND (ErrorCode EQ 'InvalidPeriod'))#"
		   InputTimeWidth="42px">
		...
	
 --->
<ismodule template = "inc/TimeInput.isml"
	name="TimeInput"
	attribute="InputFieldName"
	attribute="InputFieldLabel"
	attribute="InputFieldLabelClass"
	attribute="DateObject"
	attribute="TimeString"
	attribute="TimePatternUserHint"
	attribute="Invalid"
	attribute="Required"
	attribute="Readonly"
	attribute="Disabled"
	attribute="InputTimeWidth"
>


<!--- 
	Creates a datetime input control.

	Parameters: 
		- DateInputFieldName (Required):
			The name of the HTML text date input field. 
		- DateInputFieldLabel (Required):
			The label name to be used in the user interface for the HTML text date input field. 
		- DateInputFieldLabelClass (Optional):
			The HTML table definition (td) class name to format the label text. 
		- DateInputFieldEditClass (Optional):
			The HTML table definition (td) class name to format the date input field. 
		- DateInputFieldSize (Optional):
			The size of the HTML text date input field. The default is 12. 
		- DateObject (Optional):
			An object from the pipeline dictionary which holds the date that should be displayed initially. If present, the DateObject has a higher priority as the DateString for the display value. 
		- DateString (Optional):
			A string which defines the date to be displayed initially. 
		- DatePatternUserHint (Optional)
			If set to "false" the pattern user hint will be suppressed	
		- TimeInputFieldName (Required):
			The name of the HTML text date input field. 
		- TimeInputFieldLabel (Required):
			The label name to be used in the user interface for the HTML text time input field. 
		- TimeInputFieldLabelClass (Optional):
			The HTML table definition (td) class name to format the label text. 
		- TimeString (Optional):
			A string which defines the time to be displayed initially. 
		- TimePatternUserHint (Optional)
			If set to "false" the pattern user hint will be suppressed
		- Invalid (Optional) (true|false):
			If set to "true", an invalid value entered in the input field will be displayed in red color. 
		- Required (Optional) (true|false):
			If set to "true", the input field is marked with a red asterisk (*) in the user interface, indicating that the data value is required. 
		- Readonly (Optional) (true|false):
			If set to "true", the input field is read only. 
		- InputDateWidth (Optional):
			A CSS style size information as alternative for input-size attribute
		- DateButtonStyle (Optional):
			A CSS style definition for the date-picker button
		- InputTimeWidth (Optional):
			A CSS style size information as alternative for input-size attribute
			

	Example: 
	 	...
			<ISDateTimeInput
				DateInputFieldLabel="Start Date"
				DateInputFieldName="ABTestForm_StartDate_Day"
				DateObject="#CurrentDate#"
				DateString="#ABTestForm_StartDate_Day#"
				TimeInputFieldLabel="Time"
				TimeInputFieldName="ABTestForm_StartDate_Time"
				TimeString="#ABTestForm_StartDate_Time#"
				Invalid="#ABTestForm:StartDate_Day:isMissing OR isDefined(StartDateErrorCode) OR (isDefined(ErrorCode) AND (ErrorCode EQ 'EndBeforeStart'))#"
				Required="true"
				InputDateWidth="50px"
				InputTimeWidth="40px"
			>
		...
 --->
<ismodule template = "inc/DateTimeInput.isml"
	name="DateTimeInput"
	attribute="DateInputFieldName"
	attribute="DateInputFieldLabel"
	attribute="DateInputFieldLabelClass"
	attribute="DateInputFieldEditClass"
	attribute="DateObject"
	attribute="DateString"
	attribute="DatePatternUserHint"
	attribute="TimeInputFieldName"
	attribute="TimeInputFieldLabel"
	attribute="TimeInputFieldLabelClass"
	attribute="TimeInputFieldEditClass"
	attribute="TimeString"
	attribute="TimePatternUserHint"
	attribute="Invalid"
	attribute="Required"
	attribute="Readonly"
	attribute="InputDateWidth"
	attribute="InputTimeWidth"
	attribute="DateButtonStyle"
	attribute="EnablePast"
>

<!--- 
    Creates a number sequence with modulo which could be used for e.g. alternating row background-colors
    (creates the counter and stores the modulo)
    
	Parameters:
		- name (Required):
		    Name of the counter
		- modulo (Required):
		    Modulo to be used
						 
	Example:
		... 
		<ISSeq-Init name="count" modulo="2">
		count = 0
		...
		<ISSeq-Next name="count">
		count = 1
		<isif condition="#count == 0#">even<iselse>odd</isif>
		...
		<ISSeq-Next name="count">
		count = 0
		<isif condition="#count == 0#">even<iselse>odd</isif>
		...
--->
<ismodule template = "inc/isseq-init.isml"
	name="seq-init"
	attribute="name"
	attribute="modulo"
>
<!--- 
    Creates a number sequence with modulo which could be used for e.g. alternating row background-colors
    (increments the counter and returns the modulo)

	Parameters:
		- name (Required):
		    Name of the counter
--->
<ismodule template = "inc/isseq-next.isml"
	name="seq-next"
	attribute="name"
>

<!--- 
	Includes a Advanced Product Search mask

	Parameters:
		- pipeline (Required):
			Search pipeline and start node name 
		- pagingpipeline (Optional):
			Paging pipeline and start node name 
		- searchtype (Optional): 
			can be one of: simple,parametric
			defaul is simple
		- embeddedinform (Optional):
			if "true" this module won't create its own form tag but use the one it is embedded in
			by default it will create an own form tag
		- parametername [1-9] (optional):
			the name of the parameter which will be added to the product url
		- parametervalue [1-9](optional):
			the value of the parameter which will be added to the product url
						 
	Example:
		... 
		<ISProductSearchMask pipeline="ViewContentProductRelation-Dispatch" 
							 searchtype="#SearchType#" 
							 parametername1="SharedComponentUUID" 
							 parametervalue1="#SharedComponentUUID#" 
							 parametername2="ComponentUUID" 
							 parametervalue2="#ComponentUUID#" 
							 parametername3="ChannelID" 
							 parametervalue3="#ChannelID#">
		...
		<ISProductSearchMask pipeline="ViewPagelet-Dispatch" 
							 pagingpipeline="ViewPagelet-ProductPaging" 
							 searchtype="#SearchType#" parametername1="PageletUUID" 
							 parametervalue1="#Pagelet:UUID#" 
							 parametername2="SelectedConfigurationParameterName" 
							 parametervalue2="#SelectedConfigurationParameterName#" 
							 parametername3="SlotUUID" parametervalue3="#SlotUUID#">
		...
--->
<ismodule template = "inc/ProductSearchMask.isml"
	name="ProductSearchMask"
	attribute="pipeline"
	attribute="pagingpipeline"
	attribute="searchtype"
	attribute="embeddedinform"
    attribute="parametername1"
	attribute="parametervalue1"
	attribute="parametername2"
	attribute="parametervalue2"
	attribute="parametername3"
	attribute="parametervalue3"
	attribute="parametername4"
	attribute="parametervalue4"
	attribute="parametername5"
	attribute="parametervalue5"
	attribute="parametername6"
	attribute="parametervalue6"
	
>

<!--- 
	Includes a Advanced Product Search mask result

	Parameters:
		- EmptySearchResultDesc (Optional):
			Text for empty search result 
		- EmptyRepositoryDesc (Optional): 
			Text which would be displayed if no search was performed
						 
	Example:
		... 
		<ISProductSearchNoResult EmptyRepositoryDesc="The central product repository is empty.">
		...
		<ISProductSearchNoResult EmptySearchResultDesc="No products found for your search." EmptyRepositoryDesc="The repository is empty.">
		...
--->
<ismodule template = "inc/ProductSearchNoResult.isml"
	name="ProductSearchNoResult"
	attribute="EmptySearchResultDesc"
	attribute="EmptyRepositoryDesc"
>

<!--- 
	Includes a simple Category Search mask

	Parameters:
		- pipeline (Required):
			Search pipeline and start node name 
		- pagingpipeline (Optional):
			Paging pipeline and start node name 
		- embeddedinform (Optional):
			if "true" this module won't create its own form tag but use the one it is embedded in
			by default it will create an own form tag
		- parametername [1-5] (optional):
			the name of the parameter which will be added to the product url
		- parametervalue [1-5](optional):
			the value of the parameter which will be added to the product url
						 
	Example:
		... 
		<ISCategorySearchMask 
			pipeline="ViewCategorySearchWizard-Dispatch" 
			pagingpipeline="ViewCategorySearchWizard-Dispatch"
			parametername1="CategoryID" parametervalue1="#Category:UUID#" 
			parametername2="SelectedMenuItem" parametervalue2="#SelectedMenuItem#
			parametername3="TargetAssignPipeline" parametervalue3="#TargetAssignPipeline#"
			parametername4="TargetCancelPipeline" parametervalue4="#TargetCancelPipeline#"
	
--->
<ismodule template = "inc/CategorySearchMask.isml"
	name="CategorySearchMask"
	attribute="pipeline"
	attribute="pagingpipeline"
	attribute="searchtype"
	attribute="embeddedinform"
    attribute="parametername1"
	attribute="parametervalue1"
	attribute="parametername2"
	attribute="parametervalue2"
	attribute="parametername3"
	attribute="parametervalue3"
	attribute="parametername4"
	attribute="parametervalue4"
	attribute="parametername5"
	attribute="parametervalue5"
	attribute="parametername6"
	attribute="parametervalue6"
>

<!--- 
	Includes a category search mask result

	Parameters:
		- EmptySearchResultDesc (Optional):
			Text for empty search result 
		- EmptyRepositoryDesc (Optional): 
			Text which would be displayed if no search was performed
						 
	Example:
		... 
		<ISCategorySearchNoResult EmptyRepositoryDesc="The repository is empty.">
		...
		<ISCategorySearchNoResult EmptySearchResultDesc="No categories found for your search." EmptyRepositoryDesc="The repository is empty.">
		...
--->
<ismodule template = "inc/CategorySearchNoResult.isml"
	name="CategorySearchNoResult"
	attribute="EmptySearchResultDesc"
	attribute="EmptyRepositoryDesc"
>

<!--- 
	This module implements a custom attribute editor. See inc/CustomAttributes.isml for further details. 

	Parameters:
		- CustomAttributesIterator (Required):
			Holds the custom attributes to be managed. 
		- FormName (Required):
			Holds the name of the form in which this module is embedded. 
		- LocalizableFlag (Optional):
			Set to true to enable localization of attributes. 
		- HideLocaleSelection (Optional):
			Set to true to hide the locale selection box. This parameter is only evaluated if LocalizableFlag=true. 
		- Title (Optional):
			An alternative title to display in the header area of this editor. 
		- ReadOnly (Optional):
			Hide the create, update, and delete functionality and disables all input fields.
		- Disabled (Optional):
			Set to true to disabled create, update, and delete functionality.
			 
	Example:
		... 
		<ISCustomAttributes
		   CustomAttributesIterator="#AttributeValues#"
		   FormName="formMask"
		   LocalizableFlag="true">
		...
--->
<ismodule template = "inc/CustomAttributesEditor.isml"
	name="CustomAttributes"
	attribute="CustomAttributesIterator"
	attribute="FormName"	
	attribute="LocalizableFlag" 
	attribute="HideLocaleSelection"
	attribute="Title"
	attribute="ReadOnly"
	attribute="Disabled"
>

<!--- 
	Country select box 
	
	Parameters: 
		- formparameter (Required):
			The name of the form parameter which holds the selected country name. 
		- countrycode (Optional):
			The name of the preselected country name entry. 
			
	Example: 
		... 
		<ISCountrySelectBox
		   formparameter="ContactForm_Country"
		   countrycode="#ContactForm:Country:Value#">
		...
--->
<ismodule template = "inc/CountrySelectBox.isml"
	name="CountrySelectBox"
	attribute="formparameter"
	attribute="selectedcountrycode"
	attribute="cssclass"
	attribute="readonly"
	attribute="reloadonchange"
	attribute="reloadonchangename"
	attribute="tabindex"
><!--- 
	State select box
	
	Parameters: 
		- FormParameter (Required):
			The name of the form parameter which holds the selected country name. 
		- StatesProvinces (Required):
			Iterator of all states that should be displayed as options
		- SelectedStateID (Optional):
			The ID of the preselected entry. 
		- Readonly (Optional) (true|false): 
			If set to "true", the input field is read only (disabled). The default value is 'false'.
		- cssclass (Optional):
			CSS class to apply to the select box.
			
	Example: 
		... 
		<ISStateSelectBox
		   FormParameter="ContactForm_State"
		   StatesProvinces="#StateProvinces#"
		   SelectedStateID="ContactForm:State:Value">
--->
<ismodule template = "inc/StateSelectBox.isml"
	name="StateSelectBox"
	strict="true"
	attribute="FormParameter"
	attribute="StatesProvinces"
	attribute="SelectedStateID"
	attribute="ReadOnly"
	attribute="cssclass"
	attribute="tabindex"
>
<!--- 
	Create a file from a content descriptor 

	Parameters: 
		- contentdescriptor (Required):
			The key the dictionary value which contains content descriptor
		- locale (Optional):
			Locale information which will be used to search for a file 			
		- file (Required):
			The target dictionary key for the found file 
			
	Example: 
		... 
		<ISContentDescriptorFile contentdescriptor="Attachment:Value" file="File">
		...
		
--->
<ismodule template="inc/ContentDescriptorFile.isml"
	name="ContentDescriptorFile"
	attribute="contentdescriptor"
	attribute="locale"
	attribute="file"
>

<!--- 
    This module renders a html-editor replacing all text areas of class mce_editor.
    
    Parameters:
    required LocaleId:
        Id of the locale-context the editor is openend in. Will be passed on to all
        pipelines called from the editor.
    required RepositoryId:
        Id of a repository. will be used to determine the images/links displayed
        in the library drawer.
    optional CategoryLinkPipeline:
        Name of a pipeline used to composed links to categories. if omitted the Link-
        Libray will not be shown.
    optional CategoryLinkSite:
        site of the link to categories.
    optional ProductLinkPipeline
        Name of a pipeline used to composed links to products. if omitted the Link-
        Libray will not be shown.
    optional ProductLinkSite
        site of the link to products.
--->
<ismodule template = "inc/HtmlEditor.isml"
	name="HtmlEditor"
    attribute="RepositoryId"
    attribute="LocaleId"
    attribute="CategoryLinkPipeline"
    attribute="CategoryLinkSite"
    attribute="ProductLinkPipeline"
    attribute="ProductLinkSite"
    attribute="Name"
    attribute="Configuration"
    attribute="Enabled"
    attribute="NoRepositoryLinks"
>

<!--- 
    This module is used for output of html created with the html-editor.
    The html-editor stores links with a special syntax to be parsed to
    create a URL . This is needed since such URL might need to contain a 
    pgid and or sid. Since the html might allso be rendered in a back office, 
    the module supports two modes ("storefront" and back office"). The mode 
    "back office" does replace the URL with "javascript:void(0);" to avoid, 
    that a user clicking on a link is led away from the back office.
       
    Parameters:
    required value: 
        The text that has been edited with the hml-editor.
    required mode: 
    	one of "storefront" or "back office".
 --->   
<ismodule template = "inc/HtmlPrint.isml"
	name="HtmlPrint"
	attribute="value"
	attribute="mode"
>
 
 
<!--- 
	module for the mapping of product templates 
	(e.g. product.isml) and their display names 
	(e.g. General Product Details Page)
--->
<ismodule template = "inc/ProductTemplates.isml"
	name="ProductTemplates"
	attribute="FormParameterName"
	attribute="ShowSelectBox"
	attribute="SelectBoxStyle"
	attribute="ProductAlias"
>

<!--- 
	module for the mapping of category templates 
	(e.g. category.isml) and their display names 
	(e.g. General Category Details Page)
--->
<ismodule template = "inc/CategoryTemplates.isml"
	name="CategoryTemplates"
	attribute="FormParameterName"
	attribute="ShowSelectBox"
	attribute="SelectBoxStyle"
	attribute="CategoryAlias"
>

<!--- 
	Module for imagegalleries
	
	Parameters: 
		- FilesIterator (Required):
			Iterator over files
		- InputType (Optional):
			Can be one of: radio,checkbox  		  
		- InputNameImage (Optional):
			The name for the image 
		- InputNameThumbNail (Optional):
			The name for the thumbnail 
			
	Example: 
		... 
		<ISImageGallery
			FilesIterator="#Files#"
			InputType="radio"
		>
		...
		
--->
<ismodule template = "inc/ImageGallery.isml"
	name="ImageGallery"
	attribute="FilesIterator"
	attribute="InputType"
	attribute="ThumbnailTemplate"
>

<!---
	Retrieves image file information (size, width, height, last modified) for a given image file.

	Parameters:
		- ImageFile (required)
			The image file.
		- Locale (required)
			The current Locale.
		- LastModified (return attribute)
			The dictionary key that will hold the "Last Modified" information.
		- Size (return attribute)
			The dictionary key that will hold the "Size" information.
		- Width (return attribute)
			The dictionary key that will hold the "Width" information.
		- Height (return attribute)
			The dictionary key that will hold the "Height" information.
		- ERROR (return attribute)
			The dictionary key that will hold "ERROR" information if the given file was not an image.

	Example:
		<isImageProperties 
			ImageFile="#File#"
			Locale="#Locale#"
			LastModified ="LastModified"
			Size="Size"
			Height="Height"
			Width="Width"
			ERROR="ERROR">
--->
<ismodule template="inc/ImageProperties.isml"
	name="ImageProperties"
	strict="true"
	attribute="ImageFile"
	attribute="Locale"
	returnattribute="LastModified"
	returnattribute="Size"
	returnattribute="Width"
	returnattribute="Height"
	returnattribute="ERROR"
>

<!---
    This module renders an edit include to edit a content component.
    
    Parameters:
    required ACITemplateName: 
        Name of the edit include used to display the content component in edit mode.
	required LocaleId
		The locale to create the content relation for.	
	required RepositoryId
		The domainID of the domain where the content component is stored in.	
    required RefreshPipeline: 
        Name of the pipeline which is triggered to update the back office after the edit include has been closed. 
		Used by HTML editor to update a free style content component.
    optional RefreshParam[0..3]
    optional RefreshValue[0..3]:
        Parameters that will be passed through to the RefreshPipeline.
	optional CategoryLinkPipeline
		In HTML editor it is possible to create HTML links which points to a catalog category.
		name of a pipeline which is included in this link
	optional CategoryLinkSite
		In HTML editor it is possible to create HTML links which points to a catalog category.
		name of the site is included in this link	
	optional ProductLinkPipeline
		In HTML editor it is possible to create HTML links which points to a product detail page.
		name of a pipeline which is included in this link
	optional ProductLinkSite
		In HTML editor it is possible to create HTML links which points to a product detail page.
		name of the site is included in this link			
--->
<ismodule template="inc/ComponentEdit.isml"
	name="ComponentEdit"
	attribute="ACITemplateName"
	attribute="LocaleId"
	attribute="RepositoryId"
	attribute="RefreshPipeline"
	attribute="RefreshParam0"
	attribute="RefreshValue0"
	attribute="RefreshParam1"
	attribute="RefreshValue1"
	attribute="RefreshParam2"
	attribute="RefreshValue2"
	attribute="RefreshParam3"
	attribute="RefreshValue3"
	attribute="CategoryLinkPipeline"
	attribute="CategoryLinkSite"
	attribute="ProductLinkPipeline"
	attribute="ProductLinkSite"
>	

<!--- This module adds a new entry to the breadcrumb trail and prints the whole breadcrumb trail.
The breadcrumb trail is stored at the application state object

	Parameters:
		- required link:
			The URL behind the new breadcrumb.
		- optional text:
			The text that is shown at the breadcrumbs link.
		- optional text1:
			Is concated to "text"; use it if the text contains ISML expressions; necessary because of localization tools
			in this case print the ISML expression into one attribut and the static content into the other
		- optional id:
			The unique ID of the breadcrumb. If ID is null the given link is used as ID.
		- optional start:
			Must be specified if the breadcrumb is the first in the breadcrumb trail; value="true"
		- optional wizard:
			Must be specified if the breadcrumb points to a wizard page; value="true"	
		- optional listview:
			Must be specified if the breadcrumb points to a list view; value="true"	
		- optional hide:
			Hide the the breadcrumb trail. The breadcrumb is stored, but the breadcrumb trail not displayed; value="true"			
		- optional removeid:
			Only used is rare cases when it is necessary to truncate the breadcrumb trail at a certain point		
		- optional removewizard:
			Only used is rare cases when it is necessary to truncate the breadcrumb trail before the first wizard page
			
	Example:
		Start breadcrumb:
		<ISBreadcrumbTrail link="#URL(Action('ViewOverview-Catalog'))#" text="Master Catalogs" start="true">
		
		New element:
		<ISBreadcrumbTrail text="New Product">
		
		Element detail (with Tabs):
		<ISBreadcrumbTrail id="#Product:UUID#" link="#URL(Action('ViewProduct_52-Edit'), Parameter('ChannelID', CurrentChannel:UUID), Parameter('ProductID', Product:UUID))#"       text="#Product:Name#" text1=" - General">
		<ISBreadcrumbTrail id="#Product:UUID#" link="#URL(Action('ViewProductLinks_52-Start'), Parameter('ChannelID', CurrentChannel:UUID), Parameter('ProductID', Product:UUID))#" text="#Product:Name#" text1=" - Links">
		
		
		Catalog Browsing:
		<ISBreadcrumbTrail link="#URL(Action('ViewProductList_52-Search'), Parameter('ChannelID', CurrentChannel:UUID))#" text="Products">
		<ISBreadcrumbTrail link="#URL(Action('ViewChannelCatalogList_52-ListAll'), Parameter('ChannelID', CurrentChannel:UUID))#" text="Catalogs">
		<ISBreadcrumbTrail link="#URL(Action('ViewChannelCatalog_52-Browse'), Parameter('ChannelID', CurrentChannel:UUID), Parameter('CatalogID', Catalog:Id), Parameter('CatalogCategoryID',Category:UUID))#" text="#Category:DisplayName#">						
--->		
<ismodule template = "inc/BreadcrumbTrail.isml"
	name="BreadcrumbTrail"
	attribute="link"
	attribute="text"
	attribute="text1"
	attribute="id"
	attribute="start"
	attribute="wizard"
	attribute="listview"
	attribute="hide"
	attribute="removeid"
	attribute="removewizard"
>	

<!--- 
	This module a back button functionality. The use of this module requires the existence of a breadcrumb on the page
	
	Parameters:
		- label (optional):
			the label the back button has
			
	Example:
		Displaying a simple back button
		...
		<ISBack>
		...
		
		Displaying a back button with the label "Previous"
		...
		<ISBack label="Previous">
		...
--->
<ismodule template ="inc/BackButton.isml"
	name="Back"
	attribute="label"
>

<!--- 
	Displays file information (size, lastmodified).
	
	Parameters: 
		- file (Required):
			A file object or string describing a file. 
		- infotype (Required) (size | lastmodified):
			Determiens the file information to be displayed.  
	Example: 
		...
		<ISFileInfo file="FileObject" infotype="size">
		...
		
--->
<ismodule template = "inc/FileInfo" 
	name="FileInfo" 
	attribute="file" 
	attribute="infotype"
>


<!--- 
	creates a map or add values to a map
	mapname required; name to store or retrieve the map in dictionary
	mode optional; add | new add values or create a new map
	key0-9 
	value0-9 
--->
<ismodule template = "inc/CreateMap" 
	name="CreateMap" 
	attribute="mapname" 
	attribute="mode"
	attribute="key0"
	attribute="value0"
	attribute="key1"
	attribute="value1"
	attribute="key2"
	attribute="value2"
	attribute="key3"
	attribute="value3"
	attribute="key4"
	attribute="value4"
	attribute="key5"
	attribute="value5"
	attribute="key6"
	attribute="value6"
	attribute="key7"
	attribute="value7"
	attribute="key8"
	attribute="value8"
	attribute="key9"
	attribute="value9"
>

<!--- 
	Provides the singleton instance of the class URLUtils.
	@Deprecated since f_business 13.0.0, ICM 7.9; Use <ISPipelineCallUtils /> instead
--->
<ismodule template = "inc/PipelineCallUtils" 
	strict="true"
	name="URLUtils"
	returnattribute="URLUtils" 
>

<!--- 
	Provides a helper to produce pipeline urls based on parameter expansion. 
--->
<ismodule template = "inc/PipelineCallUtils" 
	strict="true"
	name="PipelineCallUtils"
	returnattribute="Utils" 
>

<!--- 
	This module prints the category path of the given category.
	If a shared catalog is browsed, the owning domain of the shared catalog has to be provided too
	to get the right category path. If this domain is omitted, the display name of the original catalog
	will always be printed out.
	
	Parameters:
		- category (Required): the key of the dictionary entry containing the CatalogCategory object
		- catalogowningdomain (optional): the owning domain of the catalog the category belongs to 
		
	Example:
		...
		<ISCatalogCategoryPath category="#CatalogCategory#">
		...
 --->
<ismodule template="category/CatalogCategoryPath"
	name="CatalogCategoryPath"
	attribute="category"
	attribute="catalogowningdomain"
>

<!--- 
	This module gets the Catalog object for a given CatalogCategory object.
	Additionally, the owning domain of the catalog may be provided. This
	way it is possible to divide between shared and non-shared catalogs.
	
	Parameters:
		- category (Required): 
			The key of the dictionary entry containing the CatalogCategory object.
		- catalogalias (Required): 
			The target key for the dictionary entry which will contain the Catalog object.
		- owningdomain (optional):
			The owning domain of the catalog object.
		
	Example:
		...
		<ISGetCatalogByCatalogCategory category="#CatalogCategory#" catalogalias="Catalog">
		...
 --->
<ismodule template="catalog/GetCatalogByCatalogCategory"
	name="GetCatalogByCatalogCategory"
	attribute="category"
	attribute="catalogalias"
	attribute="owningdomain"
>

<!--- 
	This module creates links for headers of tables
	showing sorted lists of business objects.
	
	Parameters:
		- pipeline (Required): 
			the sorting pipeline
		- sortbyalias (Required):
			the key of the dictionary entry containing the sorting attribute
		- sortbyvalue (Required):
			the value of the dictionary entry containing the sorting attribute
		- sortdirectionalias (Required):
			the key of the dictionary entry specifying the sorting direction
		- sortdirectionvalues (Optional):
			a string pair containing the sort direction values the pipeline uses.
			The value of the ascending direction has to come first.
			The two values must be delimited by a comma ','. If this attribute is omitted
			'ascending,descending' are assumed as sort direction values.
		- columnname (Required):
			The table header value.
		- style (Optional):
			CSS identifier wich will be added to the class attribute of the link.
		
	Example:
		...
		<td class="table_header e s"><ISSortingURL sortbyalias="SortBy" sortbyvalue="DisplayName" sortdirectionalias="SortDirection" pipeline="ViewContentSharingList-Start" style="tableheader" columnname="Name"></td>
		<td class="table_header e s"><ISSortingURL sortbyalias="SortBy" sortbyvalue="ID" sortdirectionalias="SortDirection" pipeline="ViewContentSharingList-Start" style="tableheader" columnname="ID"></td>										
		<td class="table_header e s"><ISSortingURL sortbyalias="SortBy" sortbyvalue="Type" sortdirectionalias="SortDirection" pipeline="ViewContentSharingList-Start" style="tableheader" columnname="Type"></td>				
		...
 --->
<ismodule template="inc/SortingURL"
	name="SortingURL"
	attribute="pipeline"
	attribute="sortbyalias"
	attribute="sortbyvalue"
	attribute="sortdirectionalias"
	attribute="sortdirectionvalues"
	attribute="columnname"
	attribute="style"
	attribute="parametername"
	attribute="parametervalue"
	attribute="parametername1"
	attribute="parametervalue1"
	attribute="parametername2"
	attribute="parametervalue2"
	attribute="parametername3"
	attribute="parametervalue3"
	attribute="parametername4"
	attribute="parametervalue4"
	attribute="parametername5"
	attribute="parametervalue5"
	attribute="dictionary"
>

<!--- 

	This module returns the OrganizationName from the OrganizationDomain.

	
	Parameters:
		- domain (required): 
			the key of the dictionary entry containing the organization domain
		
	Example:	
		...
		<ISOrgNameByOrgDomain domain="#CouponInstance:Consumer:Profile:Domain#">			
		...
 --->
<ismodule template="inc/OrgNameByOrgDomain.isml"
	name="OrgNameByOrgDomain"
	strict="true"
	attribute="domain"
>

<!--- 
	This module	returns the OrganizationDescription from the OrganizationDomain. 
	
	Parameters:
		- domain (required): 
			the key of the dictionary entry containing the organization domain
		
	Example:	
		...
		<ISOrgDescriptionByOrgDomain domain="#CouponInstance:Consumer:Profile:Domain#">			
		...
--->
<ismodule template="inc/OrgDescriptionByOrgDomain.isml"
	name="OrgDescriptionByOrgDomain"
	strict="true"
	attribute="domain"
>

<!--- Garble strings --->
<ismodule template = "inc/GarbleStringInc.isml"
	name="GarbleString"
	attribute="text"
	attribute="direction"
	attribute="length"
	attribute="character"
	attribute="output"
>

<!--- 
	This module creates navigation bar for pageable object 
	
	Parameters:
		- pipeline (required): 
			the object edit pipeline
		- currentObject (required):
			the object to search in pageable on current page
		- nameForObjectUUID (required):
			the name for the uuid of object which will be added to next and previous links
		- pageable (required):
			the key of the dictionary entry containing the pageable object
		- parametername [1-9] (optional):
			the name of the parameter which will be added to the paging url
		- parametervalue [1-9](optional):
			the value of the parameter which will be added to the paging url
		- formname(optional):
			the name of the html form which will be used for submitting request
		
	Example:
		...
		<ISObjectDetailsPagingBar pipeline="ViewProduct_52-Edit" pageable="Products" currentObject="Product" nameForObjectUUID="ProductID" parametername1="ChannelID"  parametervalue1="#ChannelID#">
		...
 --->
<ismodule template = "inc/ObjectDetailsPagingBar.isml"
	name="ObjectDetailsPagingBar"
	strict="true"
	attribute="currentobject"
	attribute="nameforobjectuuid"
	attribute="pipeline"
	attribute="pagelocatorname"
	attribute="pagenumber"
	attribute="pageable"
	attribute="parametername"
	attribute="parametervalue"
	attribute="parametername1"
	attribute="parametervalue1"
	attribute="parametername2"
	attribute="parametervalue2"
	attribute="parametername3"
	attribute="parametervalue3"
	attribute="parametername4"
	attribute="parametervalue4"
	attribute="parametername5"
	attribute="parametervalue5"
	attribute="parametername6"
	attribute="parametervalue6"
	attribute="parametername7"
	attribute="parametervalue7"
	attribute="parametername8"
	attribute="parametervalue8"
	attribute="parametername9"
	attribute="parametervalue9"
	attribute="parametername10"
	attribute="parametervalue10"
	attribute="formname"
>

<!--- 
	This module creates navigation bar for pageable object 
	
	Parameters:
		- pipeline (required): 
			the object edit pipeline
		- currentObject (required):
			the object to search in pageable on current page
		- nameForObjectID (required):
			the name for the uuid of object which will be added to next and previous links
		- pageable (required):
			the key of the dictionary entry containing the pageable object
		- parametername [1-9] (optional):
			the name of the parameter which will be added to the paging url
		- parametervalue [1-9](optional):
			the value of the parameter which will be added to the paging url
		- formname(optional):
			the name of the html form which will be used for submitting request
		
	Example:
		...
		<ISObjectDetailsByIdPagingBar pipeline="ViewProduct_52-Edit" pageable="Products" currentObject="Product" nameForObjectUUID="ProductID" parametername1="ChannelID"  parametervalue1="#ChannelID#">
		...
 --->
<ismodule template = "inc/ObjectDetailsByIdPagingBar.isml"
	name="ObjectDetailsByIdPagingBar"
	strict="true"
	attribute="currentobject"
	attribute="nameforobjectid"
	attribute="pipeline"
	attribute="pagelocatorname"
	attribute="pagenumber"
	attribute="pageable"
	attribute="parametername"
	attribute="parametervalue"
	attribute="parametername1"
	attribute="parametervalue1"
	attribute="parametername2"
	attribute="parametervalue2"
	attribute="parametername3"
	attribute="parametervalue3"
	attribute="parametername4"
	attribute="parametervalue4"
	attribute="parametername5"
	attribute="parametervalue5"
	attribute="parametername6"
	attribute="parametervalue6"
	attribute="parametername7"
	attribute="parametervalue7"
	attribute="parametername8"
	attribute="parametervalue8"
	attribute="parametername9"
	attribute="parametervalue9"
	attribute="parametername10"
	attribute="parametervalue10"
	attribute="formname"
>

<!--- 
	This module	returns the value of attribute with fallback to lead locale.
	If attribute localized and was not found with current request locale then 
	'Language missing' will be printed.  
	
	Parameters:
		- extensibleobject (required): 
			the extensible object to search attribute of
		- locale (optional):
			LocaleInformation object which will be used to search attribute
			before lead locale
		- attributename (required):
		    name of attribute to search		
	Example:	
		...
		<ISPrintAttribute extensibleobject="Organization" attributename="DisplayName" locale="Locale">			
		...
--->
<ismodule template="inc/PrintAttribute.isml"
	name="PrintAttribute"
	attribute="extensibleobject"
	attribute="locale"
	attribute="attributename"
>

<!--- 
	A common module to integrate an assignment filter into the search mask of a search.
	     
	Parameters:
		- FilterConfiguration (Required): 
			the com.intershop.component.foundation.capi.assignment.filter.AssignmentFilterConfiguration object which
			defines the assignment filter
		- IdentifierKey (Required): 
			the name of the hidden form parameter which is used for passing the UUID of the FilterConfiguration object.
			All ISAssignmentFilter invocations in one ISML template must have IdentifierKey arguments having the same
			prefix. This prefix will also be used as value of configuration property IdentifierPrefix of pipelet 
			GetAssignmentFilterConfigurations (thus this pipelet can identify the UUIDs of all AssignmentFilterConfiguration 
			objects relevant to the current interaction, i.e. the filters included in the current search).  
 --->
<ismodule strict="true" template="assignment/filter/AssignmentFilter"
	name="AssignmentFilter"
	attribute="FilterConfiguration"
	attribute="IdentifierKey"
>


<!--- 
	This module prints an attribute value, considering the type of the attribute.
	
	Parameters:
		- av (required):
			the attribute value object
	Example:
		...
		<ISCustomAttribute av="#a:foobar#">		
		...
 --->
<ismodule template="inc/CustomAttribute"
	name="CustomAttribute"
	attribute="av"
>


<!--- 
	Includes a Advanced Shipping Method Search mask

	Parameters:
		- pipeline (Required):
			Search pipeline and start node name 
		- pagingpipeline (Optional):
			Paging pipeline and start node name 
		- searchtype (Optional): 
			can be one of: simple,parametric
			defaul is simple
		- embeddedinform (Optional):
			if "true" this module won't create its own form tag but use the one it is embedded in
			by default it will create an own form tag
		- parametername [1-5] (optional):
			the name of the parameter which will be added to the product url
		- parametervalue [1-5](optional):
			the value of the parameter which will be added to the product url
						 
	Example:
		... 
		<ISShippingMethodSearchMask pipeline="ViewContentProductRelation-Dispatch" 
							 searchtype="#SearchType#" 
							 parametername1="SharedComponentUUID" 
							 parametervalue1="#SharedComponentUUID#" 
							 parametername2="ComponentUUID" 
							 parametervalue2="#ComponentUUID#" 
							 parametername3="ChannelID" 
							 parametervalue3="#ChannelID#">
		...
		<ISShippingMethodSearchMask pipeline="ViewPagelet-Dispatch" 
							 pagingpipeline="ViewPagelet-ProductPaging" 
							 searchtype="#SearchType#" parametername1="PageletUUID" 
							 parametervalue1="#Pagelet:UUID#" 
							 parametername2="SelectedConfigurationParameterName" 
							 parametervalue2="#SelectedConfigurationParameterName#" 
							 parametername3="SlotUUID" parametervalue3="#SlotUUID#">
		...
--->
<ismodule template = "inc/ShippingMethodSearchMask.isml"
	name="ShippingMethodSearchMask"
	attribute="pipeline"
	attribute="pagingpipeline"
	attribute="searchtype"
	attribute="embeddedinform"
    attribute="parametername1"
	attribute="parametervalue1"
	attribute="parametername2"
	attribute="parametervalue2"
	attribute="parametername3"
	attribute="parametervalue3"
	attribute="parametername4"
	attribute="parametervalue4"
	attribute="parametername5"
	attribute="parametervalue5"
>

<!--- 
	Includes a Advanced Freight Classes Search mask

	Parameters:
		- pipeline (Required):
			Search pipeline and start node name 
		- pagingpipeline (Optional):
			Paging pipeline and start node name 
		- searchtype (Optional): 
			can be one of: simple,parametric
			defaul is simple
		- embeddedinform (Optional):
			if "true" this module won't create its own form tag but use the one it is embedded in
			by default it will create an own form tag
		- parametername [1-5] (optional):
			the name of the parameter which will be added to the product url
		- parametervalue [1-5](optional):
			the value of the parameter which will be added to the product url
						 
	Example:
		... 
		<ISFreightClassSearchMask pipeline="ViewContentProductRelation-Dispatch" 
							 searchtype="#SearchType#" 
							 parametername1="SharedComponentUUID" 
							 parametervalue1="#SharedComponentUUID#" 
							 parametername2="ComponentUUID" 
							 parametervalue2="#ComponentUUID#" 
							 parametername3="ChannelID" 
							 parametervalue3="#ChannelID#">
		...
		<ISFreightClassSearchMask pipeline="ViewPagelet-Dispatch" 
							 pagingpipeline="ViewPagelet-ProductPaging" 
							 searchtype="#SearchType#" parametername1="PageletUUID" 
							 parametervalue1="#Pagelet:UUID#" 
							 parametername2="SelectedConfigurationParameterName" 
							 parametervalue2="#SelectedConfigurationParameterName#" 
							 parametername3="SlotUUID" parametervalue3="#SlotUUID#">
		...
--->
<ismodule template = "inc/FreightClassSearchMask.isml"
	name="FreightClassSearchMask"
	attribute="pipeline"
	attribute="pagingpipeline"
	attribute="searchtype"
	attribute="embeddedinform"
    attribute="parametername1"
	attribute="parametervalue1"
	attribute="parametername2"
	attribute="parametervalue2"
	attribute="parametername3"
	attribute="parametervalue3"
	attribute="parametername4"
	attribute="parametervalue4"
	attribute="parametername5"
	attribute="parametervalue5"
>

<!---
	Provides function to edit conditions.
	
	Parameters:
		- ConditionEditorTitle
		- ConditionDescriptorReqistry
		- NewConditionForm
		- TargetCodnitionID
		- ConditionForm
		- EditCondition
		- EditConditionTypeGroup
		- confirmDelete
		- ConditionClipboard
		- ContextObject 
		- ContextObjectIDName
		- ContextObjectID
		- DispatchPipeline
		- TargetContextObjectID
		- OverrideApplicationExclusionsForms - optional, show an checkbox with "override application level exclusions"
		- parametername [1-5] (optional):
			the name of the parameter which will be added as hidden parameter
		- parametervalue [1-5](optional):
			the value of the parameter which will be added as hidden parameter
		- Readonly (Optional) (true|false): 
			If set to "true", the input field is read only.
		
	Example:
		...
		<ISConditionEditor 
			conditioneditortitle="Promotion Condition"
			conditiondescriptorreqistry="#ConditionDescriptorRegistry#"
			newconditionform="#NewConditionForm#"
			targetconditionid="#targetconditionid#"
			conditionform="#ConditionForm#"
			editcondition="#EditCondition#"
			editconditiontypegroup="#EditConditionTypeGroup#"
			confirmdelete="#confirmDelete#"
			conditionclipboard="#ConditionClipboard#"
			contextobject="#Promotion:Rebate#"
			contextobjectidname="RebateID"
			contextobjectid="#Promotion:Rebate:UUID#"
			dispatchpipeline="ViewPromotionDiscountRules-Dispatch"
			targetcontextobjectid="#Rebate:UUID#"	
			overrideapplicationexclusionsforms="#ConditionOverrideApplicationExclusionsForms#"
			parametername1="LocaleID"
			parametervalue1="#SelectedLocale:LocaleID#"	
		>	
		...
--->
<ismodule template="conditioneditor/ConditionEditor"
	name="ConditionEditor"
	attribute="conditioneditortitle"
	attribute="conditiondescriptorreqistry"
	attribute="newconditionform"
	attribute="targetconditionid"
	attribute="conditionform"
	attribute="editcondition"
	attribute="editconditiontypegroup"
	attribute="confirmdelete"
	attribute="conditionclipboard"
	attribute="contextobject"
	attribute="contextobjectidname"
	attribute="contextobjectid"
	attribute="dispatchpipeline"
	attribute="targetcontextobjectid"
	attribute="overrideapplicationexclusionsforms"
	attribute="parametername1"
	attribute="parametervalue1"
	attribute="parametername2"
	attribute="parametervalue2"
	attribute="parametername3"
	attribute="parametervalue3"
	attribute="parametername4"
	attribute="parametervalue4"
	attribute="parametername5"
	attribute="parametervalue5"
	attribute="ReadOnly"
/>



<!---
	Prints a configured condition.
	The will be used as part of ConditionEditor
	
	Parameters: 
		condition (required) - the condition to display
		conditiondescriptorregistry (required) - handels access to condition descriptors
		conditionoperators (required) - operator condition descriptors
		conditiondescriptors (required) - selectable condition descriptors
		conditiontypesmap (required) - contains condition types and their display names
		editcondition (optional) - a condition which was selected for editing
		newconditionform (optional) - a webform with data to create a new condition
		conditionform (optional) - a webform with data of a condition in edit mode
		typeconditiondescriptors (required) - only condition descriptors related to selected condition type
		conditionclipboard (required) - contains selected condition ids
		targetconditionid (optional) - target condition for some operations (like 'new')
		conditiontypes (required) - available condition types
		editconditiontypegroup (optional) - a condition type group which was selected for editing
		contextobject (required) - a persistence object the condition belongs to
		dispatchpipeline (required) - pipeline to handle operation requests
		contextobjectidname (required) - id name of the context object
		contextobjectid (required) - id of the context object
		channeldomain (required) - a channel domain 
		parametername [1-5] (optional):
			the name of the parameter which will be passed into condition and conditionTypeGroup
		parametervalue [1-5](optional):
			the value of the parameter which will be passed into condition and conditionTypeGroup
		Readonly (Optional) (true|false): 
			If set to "true", the input field is read only.			
			
	Example:
		...
		<ISPrintCondition condition="#aCondition"
			conditiondescriptorregistry="#ConditionDescriptorRegistry#"
			conditionoperators="#ConditionOperators#"
			conditiondescriptors="#ConditionDescriptors#"
			conditiontypesmap="#ConditionTypesMap#"
			editcondition="#EditCondition#"
			newconditionform="#NewConditionForm#"
			conditionform="#ConditionForm#"
			typeconditiondescriptors="#TypeConditionDescriptors#"
			conditionclipboard="#ConditionClipboard#"
			targetconditionid="#TargetConditionID#"
			conditiontypes="#ConditionTypes#"
			editconditiontypegroup="#EditConditionTypeGroup#"
			contextobject="#ContextObject#"
			dispatchpipeline="#DispatchPipeline#"
			contextobjectidname="#ContextObjectIDName#"
			contextobjectid="#ContextObjectID#"
			channeldomain="#ChannelDomain#"
			parametername1="#parametername1#"
			parametervalue1="#parametervalue1#"			
		>
		...
--->
<ismodule template="inc/PrintCondition.isml"
	name="PrintCondition"
	strict="true"
	attribute="condition"
	attribute="conditiondescriptorregistry"
	attribute="conditionoperators"
	attribute="conditiondescriptors"
	attribute="conditiontypesmap"
	attribute="editcondition"
	attribute="newconditionform"
	attribute="conditionform"
	attribute="typeconditiondescriptors"
	attribute="conditionclipboard"
	attribute="targetconditionid"
	attribute="conditiontypes"
	attribute="editconditiontypegroup"
	attribute="contextobject"
	attribute="dispatchpipeline"
	attribute="contextobjectidname"
	attribute="contextobjectid"
	attribute="channeldomain"
	attribute="parametername1"
	attribute="parametervalue1"
	attribute="parametername2"
	attribute="parametervalue2"
	attribute="parametername3"
	attribute="parametervalue3"
	attribute="parametername4"
	attribute="parametervalue4"
	attribute="parametername5"
	attribute="parametervalue5"
	attribute="readonly"
/>

<!---
	Provides a safe include for a template.
	Template will be included only if existence check was successfully.
--->
<ismodule template="inc/SafeTemplateInclude.isml"
	name="SafeTemplateInclude"
	attribute="includename"
/>

<!--- 
	Includes a Advanced Regions Search mask

	Parameters:
		- pipeline (Required):
			Search pipeline and start node name 
		- pagingpipeline (Optional):
			Paging pipeline and start node name 
		- searchtype (Optional): 
			can be one of: simple,parametric
			defaul is simple
		- embeddedinform (Optional):
			if "true" this module won't create its own form tag but use the one it is embedded in
			by default it will create an own form tag
		- parametername [1-5] (optional):
			the name of the parameter which will be added to the product url
		- parametervalue [1-5](optional):
			the value of the parameter which will be added to the product url
						 
	Example:
		... 
		<ISRegionSearchMask pipeline="ViewContentProductRelation-Dispatch" 
							 searchtype="#SearchType#" 
							 parametername1="SharedComponentUUID" 
							 parametervalue1="#SharedComponentUUID#" 
							 parametername2="ComponentUUID" 
							 parametervalue2="#ComponentUUID#" 
							 parametername3="ChannelID" 
							 parametervalue3="#ChannelID#">
		...
		<ISRegionSearchMask pipeline="ViewPagelet-Dispatch" 
							 pagingpipeline="ViewPagelet-ProductPaging" 
							 searchtype="#SearchType#" parametername1="PageletUUID" 
							 parametervalue1="#Pagelet:UUID#" 
							 parametername2="SelectedConfigurationParameterName" 
							 parametervalue2="#SelectedConfigurationParameterName#" 
							 parametername3="SlotUUID" parametervalue3="#SlotUUID#">
		...
--->
<ismodule template = "inc/RegionSearchMask.isml"
	name="RegionSearchMask"
	attribute="pipeline"
	attribute="pagingpipeline"
	attribute="searchtype"
	attribute="embeddedinform"
	attribute="parametername1"
	attribute="parametervalue1"
	attribute="parametername2"
	attribute="parametervalue2"
	attribute="parametername3"
	attribute="parametervalue3"
	attribute="parametername4"
	attribute="parametervalue4"
	attribute="parametername5"
	attribute="parametervalue5"
>

<!---
	Editor for Product Filters (SearchQueryDefinition)
	
	Parameters: 
		- form (required): the SearchQueryDefinition form
		- callbackpipeline (required): pipeline callback after category selection
		- ReadOnly (Optional): Set to true to disable the Editor functionality.
		- islocalized ( Optional): If set to true, then a Localized checkbox is shown
		- showhelptext (Optional): Set to true to show a hint about what to do after changing the master search index.
--->
<ismodule template="searchquerydefinition/SearchQueryEditor.isml"
	name="SearchQueryEditor"
	attribute="form"
	attribute="callbackpipeline"
	attribute="readonly"
	attribute="islocalized"
	attribute="showhelptext"
/> 

<!---
	crops a given String at the given MaxLenght and adds the CropString at the end if cropped
	in addition a <span> is put around the String including a title attribute with the complete String 
	
	Parameters: 
		- String (required): the String that should be cropped
		- MaxLenght (required): the max length of the String after cropping (including the CropString)
		- CropString (optional): a string that will be added at the end of a cropped String
	Example:
		<ISCropString String="#ContentPage:Id#" MaxLength="#23#" CropString="...">
--->
<ismodule strict="true" template="inc/CropString.isml"
	name="CropString"
	attribute="String"
	attribute="MaxLength"
	attribute="CropString"
>



<!--- 
	Includes a Advanced Shipping Rule Search mask

	Parameters:
		- pipeline (Required):
			Search pipeline and start node name 
		- pagingpipeline (Optional):
			Paging pipeline and start node name 
		- searchtype (Optional): 
			can be one of: simple,parametric
			defaul is simple
		- embeddedinform (Optional):
			if "true" this module won't create its own form tag but use the one it is embedded in
			by default it will create an own form tag
		- parametername [1-5] (optional):
			the name of the parameter which will be added to the product url
		- parametervalue [1-5](optional):
			the value of the parameter which will be added to the product url
						 
	Example:
		... 
		<ISShippingRuleSearchMask pipeline="ViewContentProductRelation-Dispatch" 
							 searchtype="#SearchType#" 
							 parametername1="SharedComponentUUID" 
							 parametervalue1="#SharedComponentUUID#" 
							 parametername2="ComponentUUID" 
							 parametervalue2="#ComponentUUID#" 
							 parametername3="ChannelID" 
							 parametervalue3="#ChannelID#">
		...
		<ISShippingRuleSearchMask pipeline="ViewPagelet-Dispatch" 
							 pagingpipeline="ViewPagelet-ProductPaging" 
							 searchtype="#SearchType#" parametername1="PageletUUID" 
							 parametervalue1="#Pagelet:UUID#" 
							 parametername2="SelectedConfigurationParameterName" 
							 parametervalue2="#SelectedConfigurationParameterName#" 
							 parametername3="SlotUUID" parametervalue3="#SlotUUID#">
		...
--->

<ismodule template = "inc/ShippingRuleSearchMask.isml"
	name="ShippingRuleSearchMask"
	attribute="pipeline"
	attribute="pagingpipeline"
	attribute="searchtype"
	attribute="embeddedinform"
	attribute="parametername1"
	attribute="parametervalue1"
	attribute="parametername2"
	attribute="parametervalue2"
	attribute="parametername3"
	attribute="parametervalue3"
	attribute="parametername4"
	attribute="parametervalue4"
	attribute="parametername5"
	attribute="parametervalue5"
>

<!---
	Prints the given file size with fitting unit (B, KB, MB, GB).

	Parameters:
		- value (required)
			The size value that needs to be printed with the fitting unit.

	Example:
		<isDisplayFileSize value="#File:Size#">
--->
<ismodule template="inc/fileSize.isml"
	name="DisplayFileSize"
	attribute="value"
>

<!---
	Prints the given file size with fitting unit (B, KB, MB, GB).
	This module can optionally only put the file size string including the unit in the dictionary for further usage.

	Parameters:
		- value (required)
			The size value that needs to be printed with the fitting unit.
		- ReturnOnly (optional) [true|false]
			If ReturnOnly is set to "true" then the module will only set the string to the dictionary.
			In any other case the string is set to the dictionary and it is printed as well.
		- FileSizeString (optional)
			The dictionary key that will hold the file size string.

	Example:
		<isFileSizeString 
			value="#File:Size#"
			ReturnOnly="true"
			FileSizeString="FileSizeString">
--->
<ismodule template="inc/fileSize.isml"
	name="FileSizeString"
	strict="true"
	attribute="value"
	attribute="ReturnOnly"
	returnattribute="FileSizeString"
>

<!---

	Show the name of the country in the correct language

	Parameters:
		- countrycode (required)

--->
<ismodule template = "inc/CountryName.isml"
	name="CountryName"
	attribute="countrycode"
	attribute="locale"
	strict="true"
>


<!---

	Show a list of link types in order to select one of them

	Parameters:
		- linkTypes .. iterator of typeCode-Names
		- selectedLinkType .. if a link type was previously selected
		- selectedLinkTypeFieldName .. fieldname, if it is not "selectedLinkType"
		- typeCodeGroup .. of these link Types
	Return Value:
		- Button "filterLinkTypes"
		- selectedLinkType in selectedLinkTypeFieldName		

	Example:
		<ISFilterLinkList
		 	linkTypes="#productLinkTypeDict:TypeCodesToShow#"
			selectedLinkType="#SelectedLinkTypePP#"
			selectedLinkTypeFieldName="SelectedLinkTypePP"
			typeCodeGroup="#productLinkTypeDict:TypeCodeGroup#"
		>

---><ismodule template = "inc/FilterLinkList.isml"
	name="FilterLinkList"
	attribute="linkTypes"
	attribute="selectedLinkType"
	attribute="selectedLinkTypeFieldName"
	attribute="typeCodeGroup"
	strict="true"
>


<!---

	Determines the url which can be used to locate a product in the storefront.

	The values for Pipeline, DomainID, ProductID, SKU, ProductRefID are usually
	read from the respective domain preferences.

	See pipeline ViewProduct_52-GetproductPreviewPreferences for an example.

	Parameters:
		- Product (required)
		- Category (optional)
		- SiteDomainName (required)
			domain name of the front end site
		- Pipeline (required):
			the pipeline to be called to show the product, e.g. "ViewProduct-Start"
		- ProductDomainIDParamName (optional):
			the key part of the ID defining the repository domain
		- ProductDomainID (optional):
			the value part of the ID defining the repository domain
		- ProductIDParamName (optional):
			the key part of the ID defining the product to be shown, the value part
			will be read directly from the Product parameter
		- SKUParamName (optional):
			the key part of the SKU defining the product to be shown, the value part
			will be read directly from the Product parameter
		- ProductRefIDParamName (optional):
			the key part of the RefID defining the product to be shown, the value part
			will be read directly from the Product parameter
		- CatalogCategoryIDParamName (optional):
			the key part of the ID defining the category of the product, the value part
			will be read directly from the Category parameter

	Returns:
		- PreviewURL (guaranteed):
			the determined full product URL string, in case of invalid input or an
			unknown error an empty string will be returned

	Example:

		<isGetProductPreviewURL
				Product="#Product#" 
				Category="#Category#"
				SiteDomainName="#CurrentChannel:RepositoryDomain:Site:DomainName#"
				Pipeline="#ProductPreviewPipeline#"
				ProductDomainIDParamName="#ProductPreviewDomainID#"
				ProductDomainID="#CurrentChannel:RepositoryDomain:DomainID#"
				ProductIDParamName="#ProductPreviewProductID#"
				SKUParamName="#ProductPreviewSKU#"
				ProductRefIDParamName="#ProductPreviewProductRefID#"
				CatalogCategoryIDParamName="#ProductPreviewCatalogCategoryID#"
				PreviewURL="PreviewURL">

--->
<ismodule template="inc/GetProductPreviewURL.isml"
	name="GetProductPreviewUrl"
	strict="true"
	attribute="Product"
	attribute="Category"
	attribute="SiteDomainName"
	attribute="Pipeline"
	attribute="ProductDomainIDParamName"
	attribute="ProductDomainID"
	attribute="ProductIDParamName"
	attribute="SKUParamName"
	attribute="ProductRefIDParamName"
	attribute="CatalogCategoryIDParamName"
	returnattribute="PreviewURL"
>

<!---
	Displays the product price. Special handling for warranty prices will be done. 
	Currency is optional.If set then prints the price for the given currency code.
	
	Example: <isProductPrice Product="#CurrentProduct#> 
 --->
<ismodule template="inc/ProductPrice.isml"
	name="ProductPrice"
	strict="true"
	attribute="Product"
	attribute="Currency"
>

<!---
	Displays the product price. Special handling for warranty prices will be done. 
	Currency is optional.If set then prints the price for the given currency code.
	
	Example: <isProductPrice ProductBO="#CurrentProductBO#> 
 --->
<ismodule template="inc/ProductBOPrice.isml"
	name="ProductBOPrice"
	strict="true"
	attribute="ProductBO"
	attribute="Currency"
>

<!--- 
	Determines the product type and the service type of a product and prints out these types
	
	Attention module template is also used as normal include. Therefore the parameter "Product" has to start with an uppercase "P"

	Parameters: 
		- Product (Required):
			The Product to determine the product- and service-type for

	Example: 
		... 
		<ISProductTypeCode Product="Products">
		...
--->
<ismodule template="inc/ProductTypeCode.isml"
	name="ProductTypeCode"  
	attribute="Product" 
	strict="true"
>

<!--- 
	Determines the product type and the service type of a productBO and prints out these types
	
	Attention: module template is also used as normal include. Therefore the parameter "ProductBO" has to start with an uppercase "P"

	Parameters: 
		- ProductBO (Required):
			The ProductBO to determine the product- and service-type for

	Example: 
		... 
		<ISProductBOTypeCode ProductBO="ProductBO">
		...
--->
<ismodule template="inc/ProductBOTypeCode.isml"
	name="ProductBOTypeCode"  
	attribute="ProductBO" 
	strict="true"
>

<!---
	Displays the taxation part of the product pricing page, excluding the taxation part header.
	
	Parameters:
		- showpricetype (Optional):
			show the price type group
	Example:  
		<ISProductPricesTaxationMain showpricetype="true">
 --->
<ismodule template="product/ProductPricesTaxationMain"
	name="ProductPricesTaxationMain"
	attribute="showpricetype"
	strict="false"
>

<!--- 
	Implements an expandable section, using javaScript for the expand/collapse actions.
	The contents of the section are added by local <isinclude template="#contenttemplate#"> .
	No request to the server are made for expand/collapse, but the contents are loaded in advance 
	even if the component is collapsed.   
	NOTE: This module is not strict in order to allow other non-strict modules in the content.

	Parameters:
		- contenttemplate (required)
			the name of the template to be included as content of the section.
			NOTE:	If the attribute is not provided the module won't break, 
					but normally won't show anything beside the header (the titlebar of the section).
					However in case that there are expandableSections nested in one another, 
					and any of the nested sections is NOT given its 'contenttemplate' it'll use the last defined contenttemplate, which is usually pointless 
					and might lead to infinite (limited by 'intershop.template.MaxIncludeDepth' in 'appserver.properties') recursive includes!

		- headertext (optional)
			The text to be shown in the header (titlebar) of the section.
			
		- headerclassname (optional):
			The style of the header (titlebar) of the section. 
			If not specified the 'table_title n e w s' will be used.
			(HINT: for sub sections 'table_title2 n e w s' can be used).

		- sectionexpanded (optional):
			flag "true"/"false" setting the initial state of the section.
			
	Example:

		<isExpandableSection contenttemplate="category/ProductSortingForm" 
				headertext="Product Sorting" sectionexpanded="true" 
				headerclassname="table_title2">
 --->
<ismodule name="ExpandableSection" template="inc/ExpandableSection.isml"
	attribute="contenttemplate"
	attribute="headertext"
	attribute="sectionexpanded"
	attribute="headerclassname"
>

<!--- 
	This module implements a search engine attribute editor.

	Parameters:
		- ConTitle (Optional):
		- MetaTitleGenerate (Optional):
		- MetaTitlePrefix (Optional):
		- MetaTitleSuffix (Optional):
		- ConDescription (Optional):
		- MetaDescriptionGenerate (Optional):
		- MetaDescriptionPrefix (Optional):
		- MetaDescriptionSuffix (Optional):
		- ReadOnly (Optional):
			Hide the apply and resset button and disables all input fields.
			 
	Example:
		... 
		<ISSearchEngineAttributes
		   ReadOnly="true">
		...
--->
<ismodule template = "inc/SearchEngineAttributes.isml"
	name="SearchEngineAttributes"
	attribute="ConTitle"
	attribute="MetaTitleGenerate"
	attribute="MetaTitlePrefix"
	attribute="MetaTitleSuffix"
	
	attribute="ConDescription"
	attribute="MetaDescriptionGenerate"
	attribute="MetaDescriptionPrefix"
	attribute="MetaDescriptionSuffix"
	
	attribute="ReadOnly"
>

<!---
	module used for recursive category tree with selectboxes 
	Parameters:
		- category: The type group
		- selectionmap: 
	Example:  
		<ISCatalogCategoryTree category="mycategory" selectionmap="myselectionmap">
 --->
<ismodule template = "inc/CatalogCategoryTree.isml"
	name="CatalogCategoryTree"
	attribute="category"
	attribute="selectionmap"
	attribute="disabledcategoryuuidmap"
	strict="true"
>

<ismodule template = "inc/FormatObjectDisplay.isml"
	name="FormatObjectDisplay"
	attribute="displayObject"
	strict="true"
>

<ismodule template = "inc/FormatItemDisplay.isml"
	name="FormatItemDisplay"
	attribute="displayItem"
	strict="true"
>

<!--- 
  Get display name for the Locale. If no Locale, then get default. If no default, then return FallbackValue
  
  Example: <ISCalculateDisplayName ProductTypeAttribute="#ProductTypeAttribute#" Locale="#Locale#" FallbackValue="#ProductTypeAttribute:AttributeID#" CalculatedDisplayNameResult="CalculatedDisplayNameValue"> 
 --->
<ismodule template="inc/CalculateDisplayName.isml"
    name="CalculateDisplayName"
    attribute="FallbackValue"
	attribute="NamedObject"
	attribute="Locale"
	returnattribute="CalculatedDisplayNameResult"
	strict="true"
>

<!--- 
	Module used for recursive category tree.
	  
	Parameters:
	- treeid (required): 
		the id of tree container
	- selectmode (required):
		"single"/"multiple"/"multiplehier" (default "multiple") - whether to show radio buttons ("single"), checkboxes ("multiple"), checkboxes that the root selects children ("multiplehier")  
	- minexpandlevel (optional):
		Number of levels that are not expandable, default 1.
	- autoselectsubcategories:
		selects all sub categories if root is selected - "true/false". 
	- autoselectdisablesubcategories:
		disable all selected sub categories.
	- autodisabledisabledsubcategories
		disable sub categories of disabled root category.
	- root (optional):
		title of the tree, e.g. 'Standard Catalog'.
	- categories
		An iterator with Catalog Categories to be displayed.
	- selectedcategories (optional):
		An iterator with UUIDs of categories that should be displayed as selected.
	- lazycategories (optional):
		An iterator with UUIDs of categories that will be marked as lazy. 
		The hierarch of category marked as lazy is loaded when the user expands the category not by initializing the whole tree.
	- disabledcategories (optional):
		An iterator with UUIDs of categories that will be marked disabled (not selectable / deselectable). 
	- detailspagepipeline (optional):
		The pipeline which views the category details page.
	- detailspageparameter (otpional):
		The name of parameter that holds the category id.
	- parametername [1-5] (optional):
		the name of the parameter which will be added to the category url
	- parametervalue [1-5](optional):
		the value of the parameter which will be added to the category url
	Example:
			<ISCategoryTree	
				treeid="tree1"
			   	root="Standard Catalog"
			   	selectmode="multiplehier"
			   	minexpandlevel="2"
			   	categories="#StandardCatalogCategories#"			   	
			   	selectedcategories="#selectedCategories#"			   	
			   	lazycategories="#lazycats#"
			   	disabledcategories="disabledcategories"
			   	detailspagepipeline="ViewCategoryDetails-Start"
			   	detailspageparameter="CategoryID"
			   	parametername="ChannelID"
			   	parametervalue="#ChannelID#"
			   	parametername1="PipelineComponentID"
			   	parametervalue1="#PipelineComponentID#"
			   	>
 --->		
<ismodule strict="true" template = "inc/CategoryTree.isml"
	name="CategoryTree"	
	attribute="treeid"
	attribute="selectmode"
	attribute="minexpandlevel"
	attribute="autoselectdisablesubcategories"
	attribute="autoselectsubcategories"
	attribute="autodisabledisabledsubcategories"
	attribute="root"
	attribute="categories"
	attribute="selectedcategories"
	attribute="lazycategories"	
	attribute="disabledcategories"
	attribute="detailspagepipeline"
	attribute="detailspageparameter"
	attribute="parametername"
	attribute="parametervalue"
	attribute="parametername1"
	attribute="parametervalue1"
	attribute="parametername2"
	attribute="parametervalue2"
	attribute="parametername3"
	attribute="parametervalue3"
	attribute="parameterame4"
	attribute="parametervalue4"
	attribute="parametername5"
	attribute="parametervalue5"
>

<!--- 
  Get sorted categories by specified sort attribute and sort direction [asc, desc]. 
  If SortAttribute is not defined or has empty value then "Name" is used as sort attribute.
  If SortDirection is not defined or has value different from [asc, desc] then asc is used.
  
  Example: <ISGetSortedCategories CategoriesCollection="#Category:SubCategories#" SortAttribute="DisplayName" SortDirection="asc" SortedCategories="SortedSubCategories"> 
 --->
<ismodule strict="true" template="inc/GetSortedCategories.isml"
    name="GetSortedCategories"
    attribute="CategoriesCollection"
	attribute="SortAttribute"
	attribute="SortDirection"
	returnattribute="SortedCategories"
>

<!--- 
  This is a module which prints application specific localized text based on current browsing context (organization/channel/application) and <istext> keys.
  The keys in the property files need to end with the corresponding suffix - .organization, .channel or .application. If such key does not exist then a fallback to the 
  original key that has been passed is attempted. The module localizes the texts similarly to the istext module.
  
  Examples: If you browse an organization back office <ISAppText key="overview.headline.title">  will generate and search for a key overview.headline.title.organization. If such a key does not exist then
  				overview.headline.title will be attempted.
  		    If you browse a channel back office <ISAppText key="overview.headline.title"> will generate and search for the key overview.headline.title.channel. If such a key does not exist then
  		        overview.headline.title will be attempted.
  		    If you browse an application back office <ISAppText key="overview.headline.title">  will generate and search for the key overview.headline.title.application. If such a key does not exist then
  		        overview.headline.title will be attempted.
  		   
  Parameters:
	- key: 
		the original key that will be suffixed. E.g. overview.headline.title. If no key is provided the module does nothing.
	- parameter [0-9](optional):
		if the text is parametrized these are the parameters passed within the module
	- locale (optional):
		the locale for which the localized text is needed. If not provided the current locale is used
	- encoding (optional):
		accepts the same values as the encoding parameter in istext
	- skipprint (optional):
		if provided and equal to 'true' then the module will not print anything
	- localizedtext (optional)
		the key under which the localized text will be saved in the pipeline dictionary	 
 --->
<ismodule strict="true" template="inc/AppText.isml"
    name="AppText"
    attribute="key"
	attribute="locale"
	attribute="encoding"
	attribute="parameter0"
	attribute="parameter1"
	attribute="parameter2"
	attribute="parameter3"
	attribute="parameter4"
	attribute="parameter5"
	attribute="parameter6"
	attribute="parameter7"
	attribute="parameter8"
	attribute="parameter9"
	attribute="skipprint"
	returnattribute="localizedtext"
>

<!--- 
	This module creates a tooltip to display detailed info if objects are locked
	by other processes and users. The tooltip is displayed during mouseover 
	for the previous HTML element.
	
	Parameters:
		- Resource (required):
			The resource to determine the tooltip for.
		- CurrentUser (required):
			The current user.
	Example:
		...
		<tr>
			<td>
				This product is currently locked by <span style="text-decoration: underline">another user</span>.
				<ISLockOwnerToolTip Resource="#ProductResource#" CurrentUser="#CurrentUser#">
			</td>
		</tr>
		...
 --->
<ismodule strict="true" template="inc/LockOwnerToolTip"
	name="LockOwnerToolTip"
	attribute="Resource"
	attribute="CurrentUser"
>

<ismodule strict="true" template="replication/ReplicationButtonInc.isml"
	name="PublishToLiveButton"
	attribute="addSeparatorBefore"
	attribute="buttonNameTextKey"
	attribute="disableButtonAttribute"
>

<!--- 
	This module creates a progressbar to display a feedback while a process is running.
	
	Parameters:
		- id (optional):
			The element attribut "id" for using per javascript.
		- type (required):
			The typeof the progress bar.
			Available types are: indeterminate | ...
		- label (optional):
			Set a label within the progressbar
		- state (optional):
			Set the state of the the progressbar to set the color for the progress bar.
			Available types are: primary | success | info | warning | danger
		- value (optional):
			Set the value "in percent" for the progress bar
		
	Example:
		<ISProgressBar id="myID" type="indeterminate" label="myLabel" state="info" value="65">
 --->
<ismodule strict="true" template="inc/ProgressBar"
	name="ProgressBar"
	attribute="id"
	attribute="type"
	attribute="label"
	attribute="state"
	attribute="value"
>

<!---
	Displays the name of a payment service by including the associated display name template.	
	Parameters:
		- PaymentService (required)
			Payment service to show name for
--->
<ismodule template = "inc/PaymentServiceDisplayName.isml"
	name="PaymentServiceDisplayName"
	strict="true"
	attribute="paymentservice"
>

<!---
	Displays a list of payment history entries and tries to localize them. 
	If this attempt fails the value is displayed unchanged.	
	
	Parameters:
		- PaymentService (required)
			Payment service to retrieve the labels from
		- PaymentHistoryEntry (required)
			Payment history entry for which all logged data have to be shown.
--->
<ismodule template = "inc/PaymentHistoryLog.isml"
	name="PaymentHistoryLog"
	strict="true"
	attribute="paymentservice"
	attribute="paymenthistoryentry"
>

<!---
	Displays a menu entry 
	
	Parameters:
		- displayname
		- linkurl
		- description
		- apptext
		- parameter0
		- datatestingclass
			can be used to identify navigation links by automated tests
		
--->
<ismodule template="modules/navigation/NavigationOverviewItem" 
	name="NavigationOverviewItem" 
	strict="true" 
	attribute="displayname"
	attribute="linkurl"
	attribute="description"
	attribute="apptext"
	attribute="parameter0"
	attribute="datatestingclass"	
>