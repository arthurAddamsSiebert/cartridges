<?xml version="1.0" encoding="UTF-8"?>

<components xmlns="http://www.intershop.de/component/2010">

    <implementation name="SearchQueryDefinitionRepository"
        class="com.intershop.component.search.internal.querydefinition.SearchQueryDefinitionRepositoryImpl">
        <requires name="site" contract="Domain" />        
     </implementation>
    
	<!-- Listeners reacting on ProductPriceChangeEvent -->
	<implementation name="SearchIndexProductPriceChangeListener" class="com.intershop.component.search.internal.changehandling.SearchIndexProductPriceChangeListener">
		<implements contract="ProductChangeListener" />
		
		<!-- featureID of indexes that require updates -->
		<requires name="featureID" contract="String" cardinality="0..n"/>		
		
		<!-- position with execution sequence of the ProductChangeListener objects -->
		<requires name="priority" contract="Integer" />
	</implementation>
	
	<!-- Implementation for the cache which is able to reload search indexes -->
	<implementation name="SearchIndexReloadableCache" implements="ClearableCache"
		class="com.intershop.component.search.internal.cache.SearchIndexReloadableCache">
		<requires name="cacheID" contract="String" cardinality="1..1"/>
	</implementation>	
	
	<implementation name="SearchSuggestIndexRebuildableCache" implements="ClearableCache"
		class="com.intershop.component.search.internal.cache.SearchSuggestIndexRebuildableCache" 
		start="start" 
		stop="stop">
		<requires name="cacheID" contract="String" cardinality="1..1"/>
		<requires name="mBeanRegistrationProvider" contract="MBeanRegistrationProvider" cardinality="1..1"/>
		<requires name="messenger" contract="Messenger" cardinality="1..1"/>
		<requires name="desiredFeatureID" contract="String" cardinality="0..n"/>
	</implementation>
	
	<implementation name="ProductSearchIndexRebuildableCache" implements="ClearableCache"
		class="com.intershop.component.search.internal.cache.ProductSearchIndexRebuildableCache" 
		start="start" 
		stop="stop">
		<requires name="cacheID" contract="String" cardinality="1..1"/>
		<requires name="mBeanRegistrationProvider" contract="MBeanRegistrationProvider" cardinality="1..1"/>
		<requires name="messenger" contract="Messenger" cardinality="1..1"/>
		<requires name="desiredFeatureID" contract="String" cardinality="0..n"/>
	</implementation>
	
	<implementation name="ContentSearchIndexRebuildableCache" implements="ClearableCache"
		class="com.intershop.component.search.internal.cache.ContentSearchIndexRebuildableCache" 
		start="start" 
		stop="stop">
		<requires name="cacheID" contract="String" cardinality="1..1"/>
		<requires name="mBeanRegistrationProvider" contract="MBeanRegistrationProvider" cardinality="1..1"/>
		<requires name="messenger" contract="Messenger" cardinality="1..1"/>
		<requires name="desiredFeatureID" contract="String" cardinality="0..n"/>
	</implementation>
	
	
	<implementation name="ProductSearchIndexCacheClearKeyProvider" class="com.intershop.component.search.internal.cache.ProductSearchIndexCacheClearKeyProvider">
		<implements contract="CacheClearKeyProvider" />
	</implementation>
	
	<implementation name="ContentSearchIndexCacheClearKeyProvider" class="com.intershop.component.search.internal.cache.ContentSearchIndexCacheClearKeyProvider">
		<implements contract="CacheClearKeyProvider" />
	</implementation>

	<!-- Implementation for the provider which is able to provide cache clear keys for search indexes -->	
	<implementation name="SearchIndexCacheClearKeyProvider"
		implements="CacheClearKeyProvider"
		class="com.intershop.component.search.internal.cache.SearchIndexCacheClearKeyProvider" />	
	
	<!-- SearchQueryDefinitionBO Extension factory -->
	<implementation name="RepositoryBOSearchQueryDefinitionExtensionFactory" 
					implements="BusinessObjectExtensionFactory" 
					class="com.intershop.component.search.internal.querydefinition.RepositoryBOSearchQueryDefinitionExtensionFactory">
	</implementation>
</components>
