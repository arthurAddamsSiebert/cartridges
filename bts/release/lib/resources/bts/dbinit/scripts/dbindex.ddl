/*

*******************************************************************************
File:    dbindex.ddl

Generated by JGen Code Generator from INTERSHOP Communications AG.
Generator version: Code Generator for Intershop 7.2 and later
*******************************************************************************
The JGen Code Generator software is the property of INTERSHOP Communications AG. 
Any rights to use are granted under the license agreement. 
Copyright (c) 1999-2012, all rights reserved.
*******************************************************************************

Please edit within the custom section only.

Oracle additional DDL statements to create/drop indices on
foreign, alternate, inversion entries, interMediaText(context)
and bitmap keys.
*******************************************************************************

*/

SET ECHO ON

SET SERVEROUTPUT ON SIZE 1000000

VARIABLE table_space      VARCHAR2(50)
VARIABLE recreate_indexes NUMBER;

EXEC :table_space := '&index_tablespace';
EXEC :recreate_indexes := '&recreate_indexes';

/*------------------------------------------------------------------------
                           custom index section
------------------------------------------------------------------------*/

-- //{{ index
EXEC staging_ddl.create_index('ISORDER_CI004', 'ISORDER', '(DOCUMENTNO, DOMAINID)', :table_space, 'UNIQUE', :recreate_indexes);

PROMPT /* Class com.intershop.beehive.bts.internal.payment.PaymentInstrumentInfoPO */
PROMPT -- Custom Inversion Entry key indices
EXEC staging_ddl.create_index('PaymentInstrumentInfo_CI002', 'PaymentInstrumentInfo', '(userid)', :table_space, 'NONUNIQUE', :recreate_indexes)

PROMPT /* Class com.intershop.beehive.bts.internal.orderprocess.fulfillment.OrderPO */
PROMPT -- Custom alternate key indices
PROMPT -- ISOrder unique index on documentno / ordertype / domainid
EXEC staging_ddl.create_index('isorder_CI001', 'isorder', '(documentno,ordertype,domainid)', :table_space, 'UNIQUE', :recreate_indexes)

PROMPT -- Custom Inversion Entry key indices
EXEC staging_ddl.create_index('isorder_CI002', 'isorder', '(lastmodified)', :table_space, 'NONUNIQUE', :recreate_indexes)
EXEC staging_ddl.create_index('isorder_CI003', 'isorder', '(userid)', :table_space, 'NONUNIQUE', :recreate_indexes)

PROMPT /* Class com.intershop.beehive.bts.internal.orderprocess.basket.BasketPO */
PROMPT -- Custom Inversion Entry key indices
PROMPT -- Basket index on userid (custom as model attribute is user not userid)
EXEC staging_ddl.create_index('Basket_CI001', 'basket', '(userid)', :table_space, 'NONUNIQUE', :recreate_indexes)
EXEC staging_ddl.create_index('Basket_CI003', 'basket', '(sessionid)', :table_space, 'NONUNIQUE', :recreate_indexes)

PROMPT -- Basket index on lastmodified (custom as model attribute belongs to superclass PersistentObject)
EXEC staging_ddl.create_index('Basket_CI002', 'basket', '(lastmodified)', :table_space, 'NONUNIQUE', :recreate_indexes)

PROMPT -- Basket function based index on oca for oca-1 deletion performance within sp_basket_observer
EXEC staging_ddl.create_index('Basket_FB001', 'basket', '(case oca when (-1) then (-1) else null end)', :table_space, 'NONUNIQUE', :recreate_indexes)

EXEC staging_ddl.create_index('PAYMENTCONFIGURATION_CI001',     'PAYMENTCONFIGURATION',           '(ID,DOMAINID)', :table_space, 'UNIQUE', :recreate_indexes)
EXEC staging_ddl.create_index('PAYMENTSERVICEDOMAINASSI_CI001', 'PAYMENTSERVICEDOMAINASSIGNMENT', '(PAYMENTSERVICEID,ASSIGNEDDOMAINID)', :table_space, 'UNIQUE', :recreate_indexes)

-- //}} index

