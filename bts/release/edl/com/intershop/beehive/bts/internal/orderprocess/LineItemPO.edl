import "enfinity:/bts/edl/com/intershop/beehive/bts/capi/orderprocess/LineItem.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObjectPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.beehive.bts.internal.orderprocess
{
    /*
     * LineItem superclass, providing attributes required by all LineItem subclasses.
     */
    abstract orm class LineItemPO extends ExtensibleObjectPO implements LineItem table "LineItem"
    {
		index(parentLineItemID);

        index(shipToAddressURN);
		
        /*
         * Price net of tax in purchase currency.
         * 
         * <P>Note: this attribute and all LineItem price attributes have a subclass-dependent contents  (for instance in subclass ProductLineItem this is the price net of tax paid for the given quantity of a product, in subclass Subtotal this is the price net of tax summed for all products held in the LineItemCtnr).
         */
        attribute netPricePC : Money;

        /*
         * Tax in purchase currency.
         * 
         * <P>Note: this attribute and all LineItem price attributes have a subclass-dependent contents  (for instance in subclass ProductLineItem this is the tax paid for the product, in subclass Subtotal this is the tax summed for all products held in the LineItemCtnr).
         */
        attribute taxPC : Money;

        /*
         * Price gross of tax in purchase currency.
         * 
         * <P>Note: this attribute and all LineItem price attributes have a subclass-dependent contents  (for instance in subclass ProductLineItem this is the price including tax paid for the product, in subclass Subtotal this is the total price including tax for all products held in the LineItemCtnr).
         */
        attribute grossPricePC : Money;
        
        attribute shippingMethodID : string;    
        
         /*
         * URN of line item's ship-to address.
         */
        attribute shipToAddressURN : string<256>;  
        
        /*
         * UUID of ServiceLineItem or ProductLineItem stored as gift wrap or message.
         */
        attribute parentLineItemID : uuid; 
        
        relation parentLineItemPO : LineItemPO[0..1] inverse dependentLineItemPOs implements parentLineItem
		{
    			foreign key(parentLineItemID) -> (UUID);
		}

		relation dependentLineItemPOs : LineItemPO[0..n] inverse parentLineItemPO implements dependentLineItems delete propagate;
             
    }
}
