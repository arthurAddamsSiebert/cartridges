import "enfinity:/core/edl/com/intershop/beehive/core/capi/localization/LocaleInformation.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.beehive.bts.capi.state
{
    cartridge interface StateDefinition
    {
        attribute stateGroup : string readonly required;

        attribute stateId : int readonly required;

        attribute stateName : string required;

        attribute permissionID : string required;

        attribute ^oca : int required;

        /*
         * Returns the value of the localized extensible object attribute
         * "description" for the current locale.<p>
         * The method is forwarded directly to the StateDefinitions StateInformation
         * instance. Null is returned if none exists.
         * 
         * @return the value of the attribute for the current locale,
         * or null if it wasn't found
         * @isattribute Description
         */
        operation getDescription() : string;

        /*
         * Returns the value of the localized extensible object attribute
         * "description" for the given locale.<p>
         * The method is forwarded directly to the StateDefinitions StateInformation
         * instance. Null is returned if none exists.
         * 
         * @param locale The locale
         * @return the value of the attribute for the current locale,
         * or null if it wasn't found
         * @isattribute Description
         */
        operation getDescription(locale : LocaleInformation) : string;

        /*
         * Sets the value of the localized extensible object attribute
         * "description" for the given locale.<p>
         * 
         * @param value The value
         * @param locale The locale
         */
        operation setDescription(value : string, locale : LocaleInformation) : void;

        /*
         * Returns the value of the localized extensible object attribute
         * "displayName" for the current locale.<p>
         * The method is forwarded directly to the StateDefinitions StateInformation
         * instance. Null is returned if none exists.
         * 
         * @return the value of the attribute for the current locale,
         * or null if it wasn't found
         * @isattribute DisplayName
         */
        operation getDisplayName() : string;

        /*
         * Returns the value of the localized extensible object attribute
         * "displayName" for the given locale.<p>
         * The method is forwarded directly to the StateDefinitions StateInformation
         * instance. Null is returned if none exists.
         * 
         * @param locale The locale
         * @return the value of the attribute for the current locale,
         * or null if it wasn't found
         * @isattribute DisplayName
         */
        operation getDisplayName(locale : LocaleInformation) : string;

        /*
         * Sets the value of the localized extensible object attribute
         * "displayName" for the given locale.<p>
         * The method is forwarded directly to the StateDefinitions StateInformation
         * instance.
         * 
         * @param value The value
         * @param locale The locale
         */
        operation setDisplayName(value : string, locale : LocaleInformation) : void;

        /*
         * Checks whether the value of the attribute 'stateName' is null.<p>
         */
        operation getStateNameNull() : boolean;

        /*
         * Sets the value of the attribute 'stateName' to null.<p>
         * 
         * @param       aFlag       true or false
         */
        operation setStateNameNull(aFlag : boolean) : void;

        /*
         * Checks whether the value of the attribute 'permissionID' is null.<p>
         */
        operation getPermissionIDNull() : boolean;

        /*
         * Sets the value of the attribute 'permissionID' to null.<p>
         * 
         * @param       aFlag       true or false
         */
        operation setPermissionIDNull(aFlag : boolean) : void;

        /*
         * Checks whether the value of the attribute 'oca' is null.<p>
         */
        operation getOcaNull() : boolean;

        /*
         * Sets the value of the attribute 'oca' to null.<p>
         * 
         * @param       aFlag       true or false
         */
        operation setOcaNull(aFlag : boolean) : void;
    }
}
