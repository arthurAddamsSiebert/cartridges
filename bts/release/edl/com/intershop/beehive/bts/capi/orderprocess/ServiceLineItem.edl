import "enfinity:/bts/edl/com/intershop/beehive/bts/capi/orderprocess/LineItem.edl";
import "enfinity:/bts/edl/com/intershop/beehive/bts/capi/orderprocess/LineItemCtnr.edl";
import "enfinity:/bts/edl/com/intershop/beehive/bts/capi/orderprocess/LineItemGroup.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/Domain.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";
import "enfinity:/bts/edl/com/intershop/beehive/bts/capi/orderprocess/ProductLineItem.edl";

namespace com.intershop.beehive.bts.capi.orderprocess
{
    /*
     * ServiceLineItem is a LineItem to representing service costs with a LineItemCtnr, such as  such as shipping or handling. They are taxable and discountable.
     * 
     * <P>Generally a LineItemCtnr has just one ServiceLineItem (representing shipping costs), but the addition of ServiceLineItems representing another service or a credit voucher is conveivable and will be automatically included within the calculation process.
     * 
     * <P>A LineItemCtnr may have multiple ServiceLineItems, each one needs to be identified by a unique constant name, such as ServiceLineItemConstants.SHIPPING. A 'Shipping' ServiceLineItem is automatically added to the LineItemCtnr upon its creation. LineItemCtnr provides the following methods for accessing ServiceLineItems:
     * <br>createServiceLineItemsIterator - returns all ServiceLineItems
     * <br>findInServiceLineItemsByName(String) - returns ServiceLineItem with given name.
     * 
     * <P>Price summary (generally PC is Purchase Currency, LC Lead Currency, Base means before discount)
     * <BR>BasePricePC - cost calculated for shipping before applying a discount (note this price may be net or gross of tax, see price notes)
     * <BR>NetPricePC - price net of tax (= BasePricePC after applying discount when isBasedOnNetPrice is true, see price notes)
     * <BR>TaxPC - tax (calculated from PricePC or GrossPricePC depending upon  isBasedOnNetPrice flag, see price notes)
     * <BR>GrossPricePC - price gross of tax (= BasePricePC after applying discount when isBasedOnNetPrice is false, see price notes)
     * <BR>NetPriceLC - NetPricePC converted to LC
     * <BR>TaxLC - TaxPC converted to LC
     * <BR>GrossPriceLC - GrossPricePC converted to LC
     * 
     * <P>Price notes:
     * <BR>A service line-item is taxable and references a TaxClass which is used to calculate its decimal TaxRate (e.g. 17.5% = 0.175).
     * <BR>The BasePricePC may be gross or net of tax (method isBasedOnNetPrice), this flag is used in the tax calculation process.
     * <BR>The BasePricePC may be fixed (method isBasePriceFixed), meaning the designated price should not be overwritten by another pricing system.
     * 
     * @see com.intershop.beehive.orderprocess.LineItemCtnr
     * @see com.intershop.beehive.orderprocess.ServiceLineItemConstants
     */
    cartridge interface ServiceLineItem extends LineItem
    {
        /*
         * Name identifies this ServiceLineItem within a LineItemCtnr. See also class description.
         */
        attribute name : string;

        /*
         * Decimal tax rate to be applied to the product represented by this ProductLineItem. A value  of 0.175 represents a percentage of 17.5%.
         */
        attribute taxRate : decimal;

        /*
         * Price for this ServiceLineItem before discount application in purchase currency. May be net or gross of tax depending upon the BasedOnNetPrice flag.
         * 
         * <P>Note: This attribute is not directly used in the calculation process but is made available for use in reports.
         */
        attribute basePricePC : Money;

        /*
         * Is the ServiceLineItem selected? Selection is used for instance in a LineItemCtnr copying process where a ServiceLineItem may or may not be included in the copy.
         */
        attribute selected : boolean;

        /*
         * In situations where multiple pricing systems are used to provide prices, this flag is used to indicate whether the BasePricePC may be overwritten or not (a value 'true' indicates the price may not be overwritten).
         */
        attribute basePriceFixed : boolean;

        /*
         * Whether the BasePricePC is gross or net of tax. The calculation process uses the value of this flag to control how tax and tax-dependent prices are calculated from the BasePricePC.
         */
        attribute basedOnNetPrice : boolean;

        attribute lineItemCtnrID : string readonly;

        attribute taxClassCode : string;

        attribute lineItemGroupID : string readonly;

        attribute supplierDomainID : string;

        relation lineItemCtnr : LineItemCtnr[0..1];

        relation supplyingDomain : Domain[0..1];

        relation lineItemGroup : LineItemGroup[0..1];
        
        relation dependentProductLineItems: ProductLineItem[0..n];
        
        relation parentProductLineItem: ProductLineItem[0..1];
        

    }
}
