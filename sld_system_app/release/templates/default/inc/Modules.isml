<iscontent type="text/html" charset="UTF-8">
<isset scope="request" name="formIndex" value="#0#">

<!--- 
	This module creates navigation bar for pageable object 
	
	Parameters:
		- pipeline (required): 
			the paging pipeline
		- pageable (required):
			the key of the dictionary entry containing the pageable object
		- parametername [1-9] (optional):
			the name of the parameter which will be added to the paging url
		- parametervalue [1-9](optional):
			the value of the parameter which will be added to the paging url
		- formname(optional):
			the name of the html form which will be used for pafing
		
	Example:
		...
		<table class="pagecursor" width="100%">
			<tr>
				<ISPageNavigationBar pipeline="ViewOrderExport-Paging" pageable="Orders" item="orders" parametername="ChannelID" parametervalue="#CurrentChannel:UUID#" parametername1="SearchType" parametervalue1="#SearchType#" parametername2="status" parametervalue2="#status#">
			</tr>
		</table>
		...
		<table class="pagecursor" width="100%">
			<tr>
				<ISPageNavigationBar pipeline="ViewUserList-Paging" pageable="Users" formName="userList">
			</tr>
		</table>			
		...
 --->
<ismodule template = "inc/PageNavigationBar.isml"
	name="PageNavigationBar"
	attribute="pipeline"
	attribute="pageable"
	attribute="parametername"
	attribute="parametervalue"
	attribute="parametername1"
	attribute="parametervalue1"
	attribute="parametername2"
	attribute="parametervalue2"
	attribute="parametername3"
	attribute="parametervalue3"
	attribute="parametername4"
	attribute="parametervalue4"
	attribute="parametername5"
	attribute="parametervalue5"
	attribute="parametername6"
	attribute="parametervalue6"
	attribute="parametername7"
	attribute="parametervalue7"
	attribute="parametername8"
	attribute="parametervalue8"
	attribute="parametername9"
	attribute="parametervalue9"
	attribute="parametername10"
	attribute="parametervalue10"
	attribute="formname"
>

<!--- 
	This module creates simple paging bar for pageable object 
	
	Parameters:
		- pageable (required):
			the key of the dictionary entry containing the pageable object
		- pagenumberprefix (optional):
			the prefix for the input field which will be used as paging button 
			e.g. <input name="PageNumber_0" value="1" class="pagecursorbtn" type="submit">
			if no prefix specified it will be "PageNumber_"
				
	Example:
		...
		<tr>
			<td>
				<ISPagingBar pageable="Repositories">
			</td>
		</tr>
		...
		<tr>
			<td colspan="4">
				<ISPagingBar pageable="UnassignedChannels">
			</td>
		</tr>			
		...
 --->
<ismodule template = "inc/PagingBar.isml"
	name="PagingBar"
	attribute="pageable"
>

<!--- 
	Displays an error/confirmation message box, used to confirm and/or cancel delete operations, and to display error messages related to delete operations. 
	
	Parameters:
		- subject (optional):
			Subject in confirm/error message		 
		- type (required):
			One of: mdc - Confirmation for delete operation on multiple objects
					sdc - Confirmation for delete operation on single object
					mde - Error message (nothing selected) for delete operation on multiple objects
					mde2- Error with custom message for delete operation on multiple objects
					mae - Multiple action error (nothing selected)
					nse - Nothing selected error without Cancel button
	 	- message (required):
			The message to be displayed in the message box.
		- okbtnname (Optional):
			Name of the OK button (if required by type). 
		- cancelbtnname (Optional):
			Name of the Cancel button (if required by type) (default is "cancel"). 
		- colspan (Optional):
			Colspan for table cell. 
		- class (Optional):
			class for table cell (default is "w e s"). 
		- prefixiterator (Optional):
			PrefixIterator for hidden-fields. 
		- prefix (Optional):
			Prefix used with hidden-fields created using PrefixIterator. 
		- iterator (Optional):
			Iterator for hidden-fields. 
		- hiddenname (Optional):
			Name for hidden field created using Iterator. 
		- parametername [1-5] (Optional):
			Single hidden-field-name. The lookup is terminated if one parametername[x] was not found.
		- parametervalue [1-5] (Optional):
			Single hidden-field-value used for hidden-field with corresponding postfix number.
				
	Example:
		...
		<ISMessageBox
		   subject="pricelist"
		   type="sdc"
		   message="Are you sure you want to delete this item?"
		   okbtnname="delete"
		   cancelbtnname="cancelDelete">
		...		
 --->
<ismodule template = "inc/MessageBox.isml"
	name="MessageBox"
	attribute="subject"
	attribute="type"
	attribute="message"
	attribute="okbtnname"
	attribute="cancelbtnname"
	attribute="colspan"
	attribute="class"
	attribute="prefixiterator"
	attribute="prefix"
	attribute="iterator"
	attribute="hiddenname"
	attribute="parametername1"
	attribute="parametervalue1"
	attribute="parametername2"
	attribute="parametervalue2"
	attribute="parametername3"
	attribute="parametervalue3"
	attribute="parametername4"
	attribute="parametervalue4"
	attribute="parametername5"
	attribute="parametervalue5"
	attribute="parametername6"
	attribute="parametervalue6"
>

<!--- 
	Replacement for isset, uses pipeline dictionary instead of session dictionary 
	
	Parameters:
		- name (required):
			the key for the dictionary value			 
		- value (required):
			the value to set  
				
	Example:
		...
		<isput name="columnCounter" value="#1#">
		...		
		<isput name="ActiveTab" value="additional specifications">
		...		
 --->
<ismodule template = "inc/isput.isml"
	name="Put"
	attribute="name"
	attribute="value"
>

<!--- print replication groups - separated with comma --->
<ismodule template = "inc/ReplicationGroups.isml"
	name="ReplicationGroups"
	attribute="task"
    attribute="show_entities"
>
<!--- prints the state of given replication task --->
<ismodule template = "inc/ReplicationTaskState.isml"
	name="ReplicationTaskState"
	attribute="state"
>

<!--- 
	Returns a preference for a domain given by name.

	Parameters: 
		- preferencekey (Required):
			The key name of the preference to be looked up. 
		- domainname (Required):
			The domain to which the preference belongs. 
		- return (Optional):
			The pipeline dictionary name to hold the resulting preference value. 
	Example: 
	 	...
		<ISGetPreference
		   preferencekey="BasketDisplayTaxes"
		   domainname="#CurrentUser:Profile:Domain:Site:DomainName#"
		   return="Preference">
		...
--->
<ismodule template = "inc/GetPreference.isml"
	name="GetPreference"
	attribute="preferencekey"
	attribute="domainname"
	attribute="return"
>

<!--- 
	Creates a date input control.

	Parameters:  
		- InputFieldName (Required):
			The name of the HTML text date input field. 
		- InputFieldLabel (Required):
			The label name to be used in the user interface for the HTML text date input field. 
		- InputFieldLabelClass (Optional):
			The HTML table definition (td) class name to format the label text. 
		- InputFieldEditClass (Optional):
			The HTML table definition (td) class name to format the date input field. 
		- InputFieldSize (Optional):
			The size of the HTML text date input field. The default is 12. 
		- DateObject (Optional):
			An object from the pipeline dictionary which holds the date that should be displayed initially. If present, the DateObject has a higher priority as the DateString for the display value. 
		- DateString (Optional):
			A string which defines the date to be displayed initially. 
		- Invalid (Optional) (true|false): 
			If set to "true", an invalid value entered in the input field will be displayed in red color. 
		- Required (Optional) (true|false): 
			If set to "true", the input field is marked with a red asterisk (*) in the user interface, indicating that the data value is required. 
		- Readonly (Optional) (true|false): 
			If set to "true", the input field is read only. 
	Example: 
		...
		<ISDateInput
		   InputFieldLabel="From"
		   InputFieldName="FixedTimeBudget_From"
		   InputFieldEditClass="infobox_item"
		   DateObject="#FromDate#"
		   DateString="#FixedTimeBudget_From#"
		   Invalid="#isDefined(InvalidFrom)#"
		   Required="true">
		...

 --->
<ismodule template = "inc/DateInput.isml"
	name="DateInput"
	attribute="InputFieldName"
	attribute="InputFieldLabel"
	attribute="InputFieldLabelClass"
	attribute="InputFieldEditClass"
	attribute="InputFieldSize"
	attribute="DateObject"
	attribute="DateString"
	attribute="Invalid"
	attribute="Required"
	attribute="Readonly"
>

<!--- 
	Creates a time input control

	Parameters: 
		- InputFieldName (Required):
			The name of the HTML text date input field. 
		- InputFieldLabel (Required):
			The label name to be used in the user interface for the HTML text time input field. 
		- InputFieldLabelClass (Optional):
			The HTML table definition (td) class name to format the label text. 
		- DateObject (Optional):
			An object from the pipeline dictionary which holds the time that should be displayed initially. If present, the DateObject has a higher priority as the DateString for the display value. 
		- TimeString (Optional):
			A string which defines the time to be displayed initially. 
		- Invalid (Optional) (true|false):
			If set to "true", an invalid value entered in the input field will be displayed in red color. 
		- Required (Optional) (true|false):
			If set to "true", the input field is marked with a red asterisk (*) in the user interface, indicating that the data value is required. 
		- Readonly (Optional) (true|false):
			If set to "true", the input field is read only. 
	Example:
		...
		<ISTimeInput
		   InputFieldLabel="Time"
		   InputFieldName="PriceTableForm_StartTime"
		   TimeString="#PriceTableForm_StartTime#"
		   Invalid="#(isdefined(ErrorCode) AND (ErrorCode EQ 'InvalidPeriod'))#">
		...
	
 --->
<ismodule template = "inc/TimeInput.isml"
	name="TimeInput"
	attribute="InputFieldName"
	attribute="InputFieldLabel"
	attribute="InputFieldLabelClass"
	attribute="DateObject"
	attribute="TimeString"
	attribute="Invalid"
	attribute="Required"
	attribute="Readonly"
>

<!--- helper modules for handling number sequences with modulo --->
<ismodule template = "inc/isseq-init.isml"
	name="seq-init"
	attribute="name"
	attribute="modulo"
>
<ismodule template = "inc/isseq-next.isml"
	name="seq-next"
	attribute="name"
>

<!--- 
	This module implements a custom attribute editor. See inc/CustomAttributes.isml for further details. 

	Parameters:
		- CustomAttributesIterator (Required):
			Holds the custom attributes to be managed. 
		- FormName (Required):
			Holds the name of the form in which this module is embedded. 
		- LocalizableFlag (Optional):
			Set to true to enable localization of attributes. 
		- HideLocaleSelection (Optional):
			Set to true to hide the locale selection box. This parameter is only evaluated if LocalizableFlag=true. 
		- Title (Optional):
			An alternative title to display in the header area of this editor. 
		- ReadOnly (Optional):
			Hides the disable create, update, and delete functionality.
		- Disabled (Optional):
			Set to true to disable create, update, and delete functionality.
	Example:
		... 
		<ISCustomAttributes
		   CustomAttributesIterator="#AttributeValues#"
		   FormName="formMask"
		   LocalizableFlag="true">
		...
--->

<ismodule template = "inc/CustomAttributesEditor.isml"
	name="CustomAttributes"
	attribute="CustomAttributesIterator"
	attribute="FormName"
	attribute="LocalizableFlag"
	attribute="HideLocaleSelection"
	attribute="Title"
	attribute="ReadOnly"
	attribute="Disabled"
>

<!--- 
	Country select box 
	
	Parameters: 
		- formparameter (Required):
			The name of the form parameter which holds the selected country name. 
		- country (Optional):
			The name of the preselected country name entry. 
		- Readonly (Optional):
			Disables the country select box.
	Example: 
		... 
		<ISCountrySelectBox
		   formparameter="ContactForm_Country"
		   country="#ContactForm:Country:Value#">
		...
--->
<ismodule template = "inc/CountrySelectBox.isml"
	name="CountrySelectBox"
	attribute="formparameter"
	attribute="selectedcountrycode"
	attribute="readonly"
	attribute="cssclass"
>

<!--- This module adds a new entry to the breadcrumb trail and prints the whole breadcrumb trail.
The breadcrumb trail is stored at the application state object

	Parameters:
	required link:
		The URL behind the new breadcrumb.
	optional text:
		The text that is shown at the breadcrumbs link.
	optional text1:
		Is concated to "text"; use it if the text contains ISML expressions; necessary because of localization tools
		in this case print the ISML expression into one attribut and the static content into the other
	optional id:
		The unique ID of the breadcrumb. If ID is null the given link is used as ID.
	optional start:
		Must be specified if the breadcrumb is the first in the breadcrumb trail; value="true"
	optional wizard:
		Must be specified if the breadcrumb points to a wizard page; value="true"
	optional listview:
		Must be specified if the breadcrumb points to a list view; value="true"
	optional hide:
		Hide the the breadcrumb trail. The breadcrumb is stored, but the breadcrumb trail not displayed; value="true"
	optional removeid:
		Only used is rare cases when it is necessary to truncate the breadcrumb trail at a certain point
	optional removewizard:
		Only used is rare cases when it is necessary to truncate the breadcrumb trail before the first wizard page

Example:
Start breadcrumb:
<ISBreadcrumbTrail link="#URL(Action('ViewOverview-Channel'), Parameter('ChannelID', CurrentChannel:UUID))#" text="#CurrentChannel:DisplayName#" start="true">

New element:
<ISBreadcrumbTrail text="New Product">

Element detail (with Tabs):
<ISBreadcrumbTrail id="#Product:UUID#" link="#URL(Action('ViewProduct_52-Edit'), Parameter('ChannelID', CurrentChannel:UUID), Parameter('ProductID', Product:UUID))#"       text="#Product:Name#" text1=" - General">
<ISBreadcrumbTrail id="#Product:UUID#" link="#URL(Action('ViewProductLinks_52-Start'), Parameter('ChannelID', CurrentChannel:UUID), Parameter('ProductID', Product:UUID))#" text="#Product:Name#" text1=" - Links">


Catalog Browsing:
<ISBreadcrumbTrail link="#URL(Action('ViewProductList_52-Search'), Parameter('ChannelID', CurrentChannel:UUID))#" text="Products">
<ISBreadcrumbTrail link="#URL(Action('ViewChannelCatalogList_52-ListAll'), Parameter('ChannelID', CurrentChannel:UUID))#" text="Catalogs">
<ISBreadcrumbTrail link="#URL(Action('ViewChannelCatalog_52-Browse'), Parameter('ChannelID', CurrentChannel:UUID), Parameter('CatalogID', Catalog:Id), Parameter('CatalogCategoryID',Category:UUID))#" text="#Category:DisplayName#">
--->
<ismodule template = "inc/BreadcrumbTrail.isml"
	name="BreadcrumbTrail"
	attribute="link"
	attribute="text"
	attribute="text1"
	attribute="id"
	attribute="start"
	attribute="wizard"
	attribute="listview"
	attribute="hide"
	attribute="removeid"
	attribute="removewizard"
>

<!--- 
	This module prints result of job execution  
	
	Parameters:
		- jobconfiguration (required):
			the key of the dictionary entry containing the job configuration object
		- type (required):
			type can be one of:
				CurrentActivity 
				LastExecutionTime
				LastExecutionEndTime
				BOType
				ImpexType
				GetImpexType
				ValidationPipeline
				Status
	Example:
		...
		<ISImpexMessage jobconfiguration="#JobConfiguration#" type="CurrentActivity">		
		...
 --->
<ismodule template="impex/ImpexMessages"
	name="ImpexMessage"
	attribute="jobconfiguration"
	attribute="type"
>
<ismodule template="inc/fileSize.isml"
	name="DisplayFileSize"
	attribute="value"
>

<!---
	Displays the name of a payment service by including the associated display name template.	
	Parameters:
		- PaymentService (required)
			Payment service to show name for
--->
<ismodule template = "inc/PaymentServiceDisplayName.isml"
	name="PaymentServiceDisplayName"
	strict="true"
	attribute="paymentservice"
>
