import "enfinity:/bc_organization/edl/com/intershop/component/organization/capi/account/AccountTransaction.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObject.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.component.organization.capi.account
{
    /*
     * This interface represents an account very similar to a standard bank account. An account can be used to record monetary transactions. Accounts can be attached to any business object in order to track transactions in the context of the business object.
     * <p>
     * An account references any number of individual accounts transactions - each instance representing a single monetary transaction. Individual account transactions can be bound to multiple accounts. This is useful in cases where a single transaction is relevant in multiple context.
     * 
     * @see com.intershop.component.organization.capi.account.AccountMgr
     * @author Jan Fiedler
     */
    cartridge interface Account extends ExtensibleObject
    {
        /*
         * Numeric type codes can be used to distinguish different types of accounts for UI purposes. The account manager provides appropriate lookup methods to find accounts in type specific ways.
         */
        attribute typeCode : int readonly required;

        /*
         * The context ID carries the UUID of the persistent business object the account is 'attached' to.
         */
        attribute contextID : string readonly required;

        relation transactions : AccountTransaction[0..n] readonly;
    }
}
