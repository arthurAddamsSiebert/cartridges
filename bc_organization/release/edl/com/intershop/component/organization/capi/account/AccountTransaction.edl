import "enfinity:/bc_organization/edl/com/intershop/component/organization/capi/account/Account.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObject.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.component.organization.capi.account
{
    /*
     * This interface represents an individual monetary transaction performed in the context of a single or multiple accounts. An account transaction is created independently of an actual account. Once created, an account transaction is usually bound to one or multiple accounts.
     * 
     * @see com.intershop.component.organization.capi.account.AccountMgr
     * @author Jan Fiedler
     */
    cartridge interface AccountTransaction extends ExtensibleObject
    {
        /*
         * Numeric type codes can be used to distinguish different types of account transactions for UI purposes. The type code has no real semantic for the account calculation.
         */
        attribute typeCode : int readonly required;

        /*
         * This money attribute represents the actual amount of the monetary transaction. Negative amounts are used for debits, positive amounts are used for credits.
         */
        attribute amount : Money required;

        /*
         * The timestamp records the time the transaction took place. Since transactions can not be edited later on, this timestamp is fix.
         */
        attribute ^timestamp : datetime required;

        relation accounts : Account[0..n] readonly;
    }
}
