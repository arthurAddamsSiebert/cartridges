<?xml version="1.0" encoding="UTF-8"?>
<query description="Gets organizations by different parameters">
<parameters>
    <parameter name="OwningDomain" type="com.intershop.beehive.core.capi.domain.Domain" optional="false"/>
    <parameter name="TypeCodes" type="java.util.Iterator" optional="true"/>
    <parameter name="ID" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
    <parameter name="Name" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
    <parameter name="Description" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
    <parameter name="SortBy" type="java.lang.String" optional="true"/>
    <parameter name="SortDirection" type="java.lang.String" optional="true"/>
    <parameter name="Locale" type="com.intershop.beehive.core.capi.localization.LocaleInformation" optional="true"/>
    <parameter name="ExcludeAnonymousOrg" type="java.lang.Boolean" optional="true"/>
    <!-- simple search (ID or Name) -->
    <parameter name="SimpleSearchTermExp" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true" description="search string"/>
</parameters>

<return-mappings>
    <return-mapping name="Organization" type="orm" class="com.intershop.component.organization.internal.organization.OrganizationPO">
        <return-attribute name="UUID"/>
    </return-mapping>
</return-mappings>
<processor name="OracleSQL">
    <processor-preprocessing output="cID" input="ID" processing="SearchExpression2Contains"/>
    <processor-preprocessing output="cName" input="Name" processing="SearchExpression2Contains"/>
    <processor-preprocessing output="cDescription" input="Description" processing="SearchExpression2Contains"/>
    <processor-preprocessing output="cSimpleSearchTermExp" input="SimpleSearchTermExp" processing="SearchExpression2Contains"/>
</processor>
<template type="countedobjects">

    SELECT o.uuid as UUID, 
    
    <!-- some pipelines use 'name' instead of 'displayName' for sorting-->
    <template-if condition="isDefined(SortBy) 
                                 AND (lcase(SortBy) eq &apos;name&apos; 
                                       OR lcase(SortBy) eq &apos;displayname&apos; 
                                       OR lcase(SortBy) eq &apos;description&apos;)">
        o_av.stringvalue AS sorting, 
    <if-elseif condition="isDefined(SortBy) 
                                 AND (lcase(SortBy) eq &apos;typecode&apos;)" />
        o.typecode AS sorting,
    <if-elseif condition="isDefined(SortBy) 
                                 AND (lcase(SortBy) eq &apos;id&apos;)" />
        o.id AS sorting,
    <if-else />
        o_av.stringvalue AS sorting,
    </template-if>              
    count(o.uuid) over() AS "rowcount"

    FROM organization o
    LEFT OUTER JOIN 
            organization_av o_av ON (o.uuid = o_av.ownerid)
    
    <!-- some pipelines use 'name' instead of 'displayName' for sorting -->
    <template-if condition=" (isDefined(SortBy) 
                                 AND ( 
                                      lcase(SortBy) eq &apos;name&apos; 
                                      OR lcase(SortBy) eq &apos;displayname&apos; 
                                      OR lcase(SortBy) eq &apos;description&apos;)
                             )">
            
            <!-- some pipelines use 'name' instead of 'displayName' for sorting -->
            <template-if condition=" lcase(SortBy) eq &apos;name&apos;">
                AND o_av.name = &apos;displayName&apos;
            <if-else />
                AND o_av.name = <template-variable value="SortBy"/>
            </template-if>
       <if-else/>
          AND o_av.name = &apos;displayName&apos;
    </template-if>
    AND o_av.localeid = <template-variable value="Locale:LocaleID"/>
    
    <!-- for simple search (ID or Name) -->
    <template-if condition="isDefined(SimpleSearchTermExp) and SimpleSearchTermExp:NotEmpty">
        JOIN
            organizationsearch org_s ON o.uuid = org_s.uuid
    </template-if>
    
    WHERE o.domainid=<template-variable value="OwningDomain:UUID"/>

    <!-- for simple search (ID or Name) -->
    <template-if condition="isDefined(SimpleSearchTermExp) and SimpleSearchTermExp:NotEmpty">
        AND (
        	<sql-dialect name="Oracle">
            	CONTAINS(org_s.STRINGVALUE, <template-variable value="cSimpleSearchTermExp"/>) &gt; 0
            </sql-dialect>
            <sql-dialect name="Microsoft">
            	org_s.STRINGVALUE like &apos;%<template-variable value="cSimpleSearchTermExp" processing="text"/>%&apos;
            </sql-dialect>
            <template-call name="inc/SearchExpression2Like">
                    <call-parameter name="SearchExpression" value="SimpleSearchTermExp"/>
                    <call-parameter name="ColumnNames" value="&quot;org_s.DOMAINNAME&quot;"/>
                    <call-parameter name="CaseInsensitive" value="true()"/>
                    <call-parameter name="ConcatenationOperator" value="&quot; OR &quot;"/>
            </template-call> 
        )
    </template-if>
    
    <template-if condition="isDefined(ExcludeAnonymousOrg) AND ExcludeAnonymousOrg">
    <sql-dialect name="Microsoft">
        AND not o.id=<template-variable value="OwningDomain:DomainName"/>+&apos;-Anonymous&apos;
    </sql-dialect>
        <sql-dialect name="Oracle">
            AND not o.id=<template-variable value="OwningDomain:DomainName"/>||&apos;-Anonymous&apos;
        </sql-dialect>
        
        
    </template-if>
    
    <template-if condition="isDefined(TypeCodes)">
        AND o.typecode IN (
        <template-loop iterator="TypeCodes" alias="TypeCode">
            <loop-statement><template-variable value="TypeCode"/></loop-statement>
            <loop-separator>,</loop-separator>
        </template-loop>)
    </template-if>
    
    <template-if condition="isDefined(ID)  and ID:NotEmpty">
        <template-call name="inc/SearchExpression2Like">
            <call-parameter name="SearchExpression" value="ID"/>
            <call-parameter name="ColumnNames" value="&quot;o.id&quot;"/>
            <call-parameter name="CaseInsensitive" value="true()"/>
            <call-parameter name="ConcatenationOperator" value="&quot; AND &quot;"/>
        </template-call>
    </template-if>
    
    <template-if condition="isDefined(Name) and Name:NotEmpty">
        AND o.uuid IN (
            SELECT ownerid FROM organization_av
            WHERE name=&apos;displayName&apos; 
                AND (localeid=<template-variable value="Locale:LocaleID"/> OR localizedflag = 0)               
               	AND CONTAINS(stringvalue,<template-variable value="cName"/>)<sql-dialect name="Oracle">&gt;0</sql-dialect>
        )	
    </template-if>
    
    <template-if condition="isDefined(Description) and Description:NotEmpty">
        AND o.uuid IN (
            SELECT ownerid FROM organization_av
            WHERE name=&apos;description&apos;
                AND (localeid=<template-variable value="Locale:LocaleID"/> OR localizedflag = 0)
                AND CONTAINS(stringvalue,<template-variable value="cDescription"/>)<sql-dialect name="Oracle">&gt;0</sql-dialect>
        )
    </template-if>

    <!-- sorting by sort attribute -->       
    <template-if condition="isDefined(SortBy)">
        ORDER BY sorting
        <template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ 'D'">
        	DESC <sql-dialect name="Oracle">NULLS FIRST</sql-dialect>    
        <if-else/>
        	ASC <sql-dialect name="Oracle">NULLS LAST</sql-dialect>
        </template-if>
    <if-else/>
      	ORDER BY sorting ASC <sql-dialect name="Oracle">NULLS LAST</sql-dialect>
    </template-if>
</template>
</query>
