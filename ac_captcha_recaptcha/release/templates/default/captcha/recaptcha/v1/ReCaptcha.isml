<!--- TEMPLATENAME: ReCaptcha.isml --->

<!--- template for recaptcha --->
<!--- recaptcha set translation keys--->
<script type="text/javascript">
var RecaptchaOptions = {
	custom_translations : {
	    instructions_visual : "<istext key="recaptcha.instruction.visual" encoding="off" />",
	    instructions_audio : "<istext key="recaptcha.instruction.audio" encoding="off" />",
	    play_again : "<istext key="recaptcha.play.again" encoding="off" />",
	    cant_hear_this : "<istext key="recaptcha.cantHear" encoding="off" />",
	    visual_challenge : "<istext key="recaptcha.challenge.visual" encoding="off" />",
	    audio_challenge : "<istext key="recaptcha.challenge.audio" encoding="off" />",
	    refresh_btn : "<istext key="recaptcha.btn.refresh" encoding="off"/>",
	    help_btn : "<istext key="recaptcha.btn.help" encoding="off"/>",
	    incorrect_try_again : "<istext key="recaptcha.incorrect" encoding="off" />",
    },
	theme: "white",
	lang: "<isprint value="#CurrentRequest:Locale:Language#">"
};			        	
</script>
<isif condition="#((isDefined(captchaFormData)) AND (isDefined(captchaFormData:HTMLSnippet)))#">
	<isprint value="#captchaFormData:HTMLSnippet#" encoding="off">
</isif>
<!--- for captcha in dialog boxes (needs captchaHeaderInclude) --->
<ISUUID name="CaptchaID">
<div id="#'captcha-'.CaptchaID#" class="captcha"></div>

<isif condition="#formField:Invalid#">
	<small class="help-block"><istext key="recaptcha.incorrect.error"/></small>
</isif>

<!--- ReCaptcha doesn't allow to change the input field name, so set an arbitrary value for the 
form field here so that the webform "required" check does not fail. The service implementation 
will still validate the value from the correct input field. --->
<input type="hidden" name="#formField:QualifiedName#" value="#formField:QualifiedName#"/>