import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObjectPO.edl";
import "enfinity:/bc_shipping/edl/com/intershop/component/shipping/internal/shippingrule/ShippingRulePO.edl";
import "enfinity:/bc_foundation/edl/com/intershop/component/foundation/capi/condition/Condition.edl";

namespace com.intershop.component.shipping.internal.shippingrule
{
    /*
     * Stores a condition to trigger a shippingrule
     */
    orm class ShippingConditionPO extends ExtensibleObjectPO implements Condition
    {
        index(shippingruleID);
        index(parentConditionID, position);

        /*
         * UUID of a shippingrule
         */
        attribute shippingruleID: uuid;

        /**
         * Position under a parent
         */
        attribute position: int;

        /*
         * UUID of parent condition
         */
        attribute parentConditionID: uuid;

        /*
         * ID of condition descriptor
         */
        attribute conditionDescriptorID: string<256> required;

        /*
         * Name of the shippingrule condition
         */
        attribute name: string<256>;

        /**
         * Condition is an operator condition
         */
        attribute operator: boolean;

        /**
         * Inverse condition
         */
        attribute not: boolean;
        
        /**
         * Condition is an groupng operator
         */
         attribute groupingOperator : boolean;

        /*
         * Relation to shippingrule
         */
        relation shippingRulePO: ShippingRulePO[0..1] inverse shippingConditionPO implements owner
        {
            foreign key(shippingruleID) -> (UUID);
        }

        /*
         * Relation to parent condition
         */
        relation parentConditionPO: ShippingConditionPO[0..1] inverse subConditionPOs implements parentCondition
        {
            foreign key(parentConditionID) -> (UUID);
        }

        /*
         * Relation to sub conditions
         */
        relation subConditionPOs: ShippingConditionPO[0..n] inverse parentConditionPO implements subConditions cached strong delete
        propagate;
    }
}