<?xml version="1.0" encoding="UTF-8"?>

<components xmlns="http://www.intershop.de/component/2010">

<!-- Configuration for Component ShippingChargeCalculator  START -->
	
	<implementation name="DimensionalWeightCalculator"
		class="com.intershop.component.shipping.internal.shippingchargecalculator.dimension.DimensionalWeightCalculatorImpl">
		<requires name="unitConverter" contract="UnitOfMeasurementProvider" />
	</implementation>
	
	<implementation name="FlatRatePlanCalculator"
		class="com.intershop.component.shipping.internal.shippingchargecalculator.FlatRatePlanCalculatorImpl">
	</implementation>
	
	<implementation name="ValueBasedPlanCalculator"
		class="com.intershop.component.shipping.internal.shippingchargecalculator.ValueBasedPlanCalculatorImpl">
	</implementation>
	
	<implementation name="ItemCountPlanCalculator"
		class="com.intershop.component.shipping.internal.shippingchargecalculator.ItemCountPlanCalculatorImpl">
	</implementation>
	
	<implementation name="FlexPlanCalculator"
		class="com.intershop.component.shipping.internal.shippingchargecalculator.FlexPlanCalculatorImpl">
		<requires name="subcalculators" contract="ShippingChargeCalculator" cardinality="0..n" />
	</implementation>
	
	<implementation name="WeightBasedPlanCalculator"
		class="com.intershop.component.shipping.internal.shippingchargecalculator.WeightBasedPlanCalculatorImpl">
		<requires name="unitConverter" contract="UnitOfMeasurementProvider" />
		<requires name="dimensionalWeightCalculator" contract="DimensionalWeightCalculator" cardinality="1..n"/>
	</implementation>
	
	<implementation name="NamedShippingChargeCalculator"
		class="com.intershop.component.shipping.internal.shippingchargecalculator.NamedShippingChargeCalculatorImpl">
		<requires name="name" contract="String" />
		<requires name="calculator" contract="ShippingChargeCalculator" />
	</implementation>
	
	<implementation name="ShippingChargeCalculatorProvider"
		class="com.intershop.component.shipping.internal.shippingchargecalculator.ShippingChargeCalculatorProviderImpl">
		<requires name="calculator" contract="ShippingChargeCalculator" cardinality="1..n"/>
	</implementation>
	
<!-- Configuration for Component ShippingChargeCalculator  END -->

	<implementation name="ShippingChargeCalculatorPreview"
        class="com.intershop.component.shipping.internal.shippingchargecalculator.preview.ShippingChargeCalculatorPreviewImpl">
        <requires name="shippingChargeCalculatorProvider" contract="ShippingChargeCalculatorProvider" /> 
    </implementation>  
    
    <implementation name="ShippingEligibilityRepository"
        class="com.intershop.component.shipping.internal.shippingeligibility.ShippingEligibilityRepositoryImpl">
    </implementation>  
    
    <implementation name="ShippingRuleRepository"
        class="com.intershop.component.shipping.internal.shippingrule.ShippingRuleRepositoryImpl">
    </implementation>    
    
    <implementation name="ProductShippingChargeOverrideRepository"
        class="com.intershop.component.shipping.internal.productextracharge.ProductShippingChargeOverrideRepositoryImpl">
    </implementation> 
    
    <implementation name="ProductShippingSurchargeRepository" implements="ProductShippingSurchargeRepository" 
        class="com.intershop.component.shipping.internal.productextracharge.ProductShippingSurchargeRepositoryImpl">
    </implementation> 
    
    <implementation name="FreightClassRepository" implements="FreightClassRepository"
        class="com.intershop.component.shipping.internal.freightclass.FreightClassRepositoryImpl">
        <requires name="cacheEngine" contract="CacheEngine" />
    </implementation>
    
     <implementation name="ShippingDateProvider" implements="ShippingDateProvider"
        class="com.intershop.component.shipping.internal.defaultdataprovider.DefaultShippingDateProviderImpl">       
    </implementation>
    
    <implementation name="EligibleShippingMethodsProvider" implements="EligibleShippingMethodsProvider"
        class="com.intershop.component.shipping.internal.eligibleshippingmethodsprovider.EligibleShippingMethodsProviderImpl">
        <requires name="shippingEligibilityRepository" contract="ShippingEligibilityRepository" />
        <requires name="freightClassRepository" contract="FreightClassRepository" />
        <requires name="shippingMethodRepository" contract="ShippingMethodRepository" />
        <requires name="regionResolver" contract="RegionResolver" />
        <requires name="regionRepository" contract="RegionRepository" />
        <requires name="shippingDateProvider" contract="ShippingDateProvider" />
    </implementation>
    
    <implementation name="CachedEligibleShippingMethodsProvider" implements="EligibleShippingMethodsProvider"
        class="com.intershop.component.shipping.internal.eligibleshippingmethodsprovider.CachedEligibleShippingMethodsProviderImpl">
        <requires name="eligibleShippingMethodsProvider" contract="EligibleShippingMethodsProvider" />
        <requires name="freightClassRepository" contract="FreightClassRepository" />
        <requires name="regionResolver" contract="RegionResolver" />
        <requires name="shippingDateProvider" contract="ShippingDateProvider" />
        <requires name="shippingConsumerGroupProvider" contract="ShippingConsumerGroupProvider" />
        <requires name="cacheCapacity" contract="Integer" />
    </implementation>
    
    <implementation name="RuleBasedEligibleShippingMethodsProvider" implements="EligibleShippingMethodsProvider"
        class="com.intershop.component.shipping.internal.eligibleshippingmethodsprovider.RuleBasedEligibleShippingMethodsProviderImpl">
        <requires name="freightClassRepository" contract="FreightClassRepository" />
        <requires name="eligibleShippingMethodsProvider" contract="EligibleShippingMethodsProvider" cardinality="0..1" />
        <requires name="eligibilityRuleExecutor" contract="ShippingEligibilityRuleExecutor" />
        <requires name="regionResolver" contract="RegionResolver" />
        <requires name="shippingConsumerGroupProvider" contract="ShippingConsumerGroupProvider" />
        <requires name="shippingRuleRepository" contract="ShippingRuleRepository" />
        <requires name="restrictionRuleExecutor" contract="RestrictionRuleExecutor" />
    </implementation>        
    
    <implementation name="DefaultShippingMethodProvider"
        class="com.intershop.component.shipping.internal.defaultshippingmethodprovider.DefaultShippingMethodProviderImpl">
        <requires name="eligibleShippingMethodsProvider" contract="EligibleShippingMethodsProvider" />
        <requires name="shippingConsumerGroupProvider" contract="ShippingConsumerGroupProvider" />
    </implementation> 
    
    <implementation name="ShippingBucketComparator" implements="ShippingBucketComparator"
         class="com.intershop.component.shipping.capi.shippingbucket.ShippingBucketComparator" />

    <implementation name="ShippingBucketComposer"
       class="com.intershop.component.shipping.internal.shippingbucketcomposer.ShippingBucketComposerImpl">
       <requires name="shippingBucketComparator" contract="ShippingBucketComparator" />
       <requires name="freightClassRepository" contract="FreightClassRepository" />
       <requires name="regionResolver" contract="RegionResolver" />
    </implementation>
    
    <implementation name="SingleShippingBucketComposer"
       class="com.intershop.component.shipping.internal.shippingbucketcomposer.SingleShippingBucketComposer">
       <requires name="regionResolver" contract="RegionResolver" />
    </implementation>

	<implementation name="ShippingBucketComposerProvider"
       class="com.intershop.component.shipping.internal.shippingbucketcomposer.ShippingBucketComposerProviderImpl" />
    
    <implementation name="ShippingDestinationCountriesProvider"
       class="com.intershop.component.shipping.internal.shippingdestination.ShippingDestinationCountriesProviderImpl">
       <requires name="regionRepository" contract="RegionRepository" />
       <requires name="shippingEligibilityRepository" contract="ShippingEligibilityRepository" />
    </implementation>
    
    <implementation name="CachedShippingDestinationCountriesProvider"
       class="com.intershop.component.shipping.internal.shippingdestination.CachedShippingDestinationCountriesProviderImpl">
       <requires name="shippingDestinationCountriesProvider" contract="ShippingDestinationCountriesProvider" />
    </implementation>
    
    <implementation name="DefaultShippingMethodSelector"
        class="com.intershop.component.shipping.internal.defaultshippingmethodselector.DefaultShippingMethodSelectorImpl">
        <requires name="eligibleShippingMethodsProvider" contract="EligibleShippingMethodsProvider" />
        <requires name="defaultShippingMethodProvider" contract="DefaultShippingMethodProvider" />
        <requires name="shippingConsumerGroupProvider" contract="ShippingConsumerGroupProvider" />
    </implementation> 
    
    
    <!-- shipping rules section                  -->
    
    <implementation name="ShippingRuleMapper" implements="ShippingRuleMapper"
        class="com.intershop.component.shipping.internal.ruleengineadapter.mapping.ShippingRuleMapperImpl">
        <requires name="shippingRuleRepository" contract="ShippingRuleRepository" />
        <requires name="ruleRepository" contract="RuleRepository" />
        <requires name="conditionDescriptorRegistry" contract="ConditionDescriptorRegistry" />
        <requires name="siteAppProvider" contract="SiteAppProvider" />
    </implementation>
    
    <implementation name="ShippingRuleObjectMapper" implements="ShippingRuleObjectMapper"
        class="com.intershop.component.shipping.internal.ruleengineadapter.businessobject.ShippingRuleObjectMapperImpl" >
        <requires name="objectFactory" contract="ShippingRuleObjectFactory" cardinality="0..n" />
    </implementation>    
             
    <implementation name="ConditionAttributesRepository" implements="ConditionAttributesRepository"
        class="com.intershop.component.shipping.internal.ruleengineadapter.businessobject.ConditionAttributesRepository">
        <requires name="shippingRuleRepository" contract="ShippingRuleRepository" />
        <requires name="conditionDescriptorRegistry" contract="ConditionDescriptorRegistry" />
        <requires name="shippingRuleMapper" contract="ShippingRuleMapper" />
    </implementation>   
    
    <implementation name="CatalogCategoryFactory" implements="ShippingRuleObjectFactory"
        class="com.intershop.component.shipping.internal.ruleengineadapter.businessobject.CatalogCategoryFactory">
        <requires name="attributesRepository" contract="ConditionAttributesRepository" />
        <requires name="unitOfMeasurementProvider" contract="UnitOfMeasurementProvider" />
    </implementation>
    
    <implementation name="ProductFactory" implements="ShippingRuleObjectFactory"
        class="com.intershop.component.shipping.internal.ruleengineadapter.businessobject.ProductFactory">
        <requires name="unitOfMeasurementProvider" contract="UnitOfMeasurementProvider" />
        <requires name="freightClassRepository" contract="FreightClassRepository" />
        <requires name="attributesRepository" contract="ConditionAttributesRepository" />
    </implementation>
    
    <implementation name="RegionFactory" implements="ShippingRuleObjectFactory"
        class="com.intershop.component.shipping.internal.ruleengineadapter.businessobject.RegionFactory">
        <requires name="attributesRepository" contract="ConditionAttributesRepository" />
        <requires name="unitOfMeasurementProvider" contract="UnitOfMeasurementProvider" />
    </implementation>
    
    <implementation name="LocationFactory" implements="ShippingRuleObjectFactory"
        class="com.intershop.component.shipping.internal.ruleengineadapter.businessobject.LocationFactory">
    </implementation>
    
    <implementation name="StateProvinceFactory" implements="ShippingRuleObjectFactory"
        class="com.intershop.component.shipping.internal.ruleengineadapter.businessobject.StateProvinceFactory">
    </implementation>
        
    <implementation name="CountryFactory" implements="ShippingRuleObjectFactory"
        class="com.intershop.component.shipping.internal.ruleengineadapter.businessobject.CountryFactory">
    </implementation>
    
    <implementation name="BillToRegionFactory" implements="ShippingRuleObjectFactory"
        class="com.intershop.component.shipping.internal.ruleengineadapter.businessobject.BillToRegionFactory">
        <requires name="attributesRepository" contract="ConditionAttributesRepository" />
    </implementation>
    
    <implementation name="BillToLocationFactory" implements="ShippingRuleObjectFactory"
        class="com.intershop.component.shipping.internal.ruleengineadapter.businessobject.BillToLocationFactory">
    </implementation>
    
    <implementation name="BillToStateProvinceFactory" implements="ShippingRuleObjectFactory"
        class="com.intershop.component.shipping.internal.ruleengineadapter.businessobject.BillToStateProvinceFactory">
    </implementation>
        
    <implementation name="BillToCountryFactory" implements="ShippingRuleObjectFactory"
        class="com.intershop.component.shipping.internal.ruleengineadapter.businessobject.BillToCountryFactory">
    </implementation>
    
    <implementation name="ShippingMethodFactory" implements="ShippingRuleObjectFactory"
        class="com.intershop.component.shipping.internal.ruleengineadapter.businessobject.ShippingMethodFactory">
        <requires name="attributesRepository" contract="ConditionAttributesRepository" />
        <requires name="unitOfMeasurementProvider" contract="UnitOfMeasurementProvider" />
    </implementation>    
        
    <implementation name="FreightClassFactory" implements="ShippingRuleObjectFactory"
        class="com.intershop.component.shipping.internal.ruleengineadapter.businessobject.FreightClassFactory">
        <requires name="attributesRepository" contract="ConditionAttributesRepository" />
        <requires name="unitOfMeasurementProvider" contract="UnitOfMeasurementProvider" />
    </implementation>
    
    <implementation name="ConsumerGroupFactory" implements="ShippingRuleObjectFactory"
        class="com.intershop.component.shipping.internal.ruleengineadapter.businessobject.ConsumerGroupFactory">
    </implementation>
    
    <implementation name="ShippingExtraChargeRuleExecutor" implements="ShippingExtraChargeRuleExecutor"
        class="com.intershop.component.shipping.internal.ruleengineadapter.execution.ShippingExtraChargeRuleExecutorImpl">
        <requires name="rulePackageIdentifier" contract="String" />
		<requires name="shippingEngine" contract="ShippingEngine" />
        <requires name="ruleRepository" contract="RuleRepository" />
        <requires name="shippingRuleRepository" contract="ShippingRuleRepository" />
        <requires name="objectMapper" contract="ShippingRuleObjectMapper" />
    </implementation>

    <implementation name="CachedShippingExtraChargeRuleExecutor" implements="ShippingExtraChargeRuleExecutor"
        class="com.intershop.component.shipping.internal.ruleengineadapter.execution.CachedShippingExtraChargeRuleExecutorImpl">
        <requires name="freightClassRepository" contract="FreightClassRepository" />
        <requires name="shippingExtraChargeRuleExecutor" contract="ShippingExtraChargeRuleExecutor" />
        <requires name="cacheCapacity" contract="Integer" />
    </implementation>
     
    <implementation name="RestrictionRuleExecutor" implements="RestrictionRuleExecutor"
        class="com.intershop.component.shipping.internal.ruleengineadapter.execution.RestrictionRuleExecutorImpl">
        <requires name="rulePackageIdentifier" contract="String" />
		<requires name="shippingEngine" contract="ShippingEngine" />
        <requires name="ruleRepository" contract="RuleRepository" />
        <requires name="shippingRuleRepository" contract="ShippingRuleRepository" />
        <requires name="objectMapper" contract="ShippingRuleObjectMapper" />
    </implementation>

    <implementation name="CachedRestrictionRuleExecutor" implements="RestrictionRuleExecutor"
        class="com.intershop.component.shipping.internal.ruleengineadapter.execution.CachedRestrictionRuleExecutorImpl">
        <requires name="freightClassRepository" contract="FreightClassRepository" />
        <requires name="restrictionRuleExecutor" contract="RestrictionRuleExecutor" />
        <requires name="cacheCapacity" contract="Integer" />
    </implementation>
    
    <implementation name="ShippingEligibilityRuleExecutor" implements="ShippingEligibilityRuleExecutor"
        class="com.intershop.component.shipping.internal.ruleengineadapter.execution.ShippingEligibilityRuleExecutorImpl">
        <requires name="rulePackageIdentifier" contract="String" />
		<requires name="shippingEngine" contract="ShippingEngine" />
        <requires name="ruleRepository" contract="RuleRepository" />
        <requires name="shippingMethodRepository" contract="ShippingMethodRepository" />
        <requires name="objectMapper" contract="ShippingRuleObjectMapper" />
    </implementation> 
        
    <implementation name="RuleExecutorAdministrator" 
        class="com.intershop.component.shipping.internal.ruleengineadapter.execution.RuleExecutorAdministrator" >
        <requires name="ruleExecutor" contract="AbstractRuleExecutor" cardinality="0..n" />
        <requires name="attributesRepository" contract="ConditionAttributesRepository" cardinality="0..n" />
    </implementation>
    
    <!-- shipping consumer group provider -->
    <implementation name="BaseShippingConsumerGroupProvider" implements="ShippingConsumerGroupProvider"
        class="com.intershop.component.shipping.internal.consumergroup.ShippingConsumerGroupProviderImpl" />
    
    <!-- shipping information provider section -->
    
    <implementation name="ShippingInformationProvider" implements="ShippingInformationProvider"
        class="com.intershop.component.shipping.internal.shippinginformation.ShippingInformationProviderImpl">
        <requires name="handler" contract="ShippingInformationHandler" cardinality="0..1"/>
        <requires name="shippingInformationProvider" contract="ShippingInformationProvider" cardinality="0..n"/>
    </implementation>
    
    <implementation name="ProductShippingInformationHandler" implements="ShippingInformationHandler"
        class="com.intershop.component.shipping.internal.shippinginformation.handler.ProductShippingInformationHandler">
        <requires name="overrideRepository" contract="ProductShippingChargeOverrideRepository" />
        <requires name="surchargeRepository" contract="ProductShippingSurchargeRepository" />
        <requires name="regionResolver" contract="RegionResolver"/>  
    </implementation>
    
    <implementation name="ShippingMethodRestrictionInformationHandler" implements="ShippingInformationHandler"
        class="com.intershop.component.shipping.internal.shippinginformation.handler.ShippingMethodRestrictionInformationHandler" >
         <requires name="eligibleShippingMethodsProvider" contract="EligibleShippingMethodsProvider" />
         <requires name="shippingConsumerGroupProvider" contract="ShippingConsumerGroupProvider" />
    </implementation>
       
    <implementation name="ShippingRestrictionInformationHandler" implements="ShippingInformationHandler"
        class="com.intershop.component.shipping.internal.shippinginformation.handler.ShippingRestrictionInformationHandler">
        <requires name="regionResolver" contract="RegionResolver" />
        <requires name="restrictionRuleExecutor" contract="RestrictionRuleExecutor" />
        <requires name="freightClassRepository" contract="FreightClassRepository" />
        <requires name="shippingConsumerGroupProvider" contract="ShippingConsumerGroupProvider" />
    </implementation>    
        
    <implementation name="EligibleShippingMethodsInformationHandler" implements="ShippingInformationHandler"
        class="com.intershop.component.shipping.internal.shippinginformation.handler.EligibleShippingMethodsInformationHandler">
        <requires name="eligibleShippingMethodsProvider" contract="EligibleShippingMethodsProvider"/>
        <requires name="regionResolver" contract="RegionResolver" />
        <requires name="shippingConsumerGroupProvider" contract="ShippingConsumerGroupProvider" />
    </implementation>
    
    <!-- Shipping Engine -->
    <implementation name="ShippingEngine" implements="ShippingEngine"
        class="com.intershop.component.shipping.internal.shippingengine.ShippingEngineImpl">
        <requires name="eligibleShippingMethodsProvider" contract="EligibleShippingMethodsProvider"/>
        <requires name="regionResolver" contract="RegionResolver" />
        <requires name="regionRepository" contract="RegionRepository" />
        <requires name="freightClassRepository" contract="FreightClassRepository" />
        <requires name="shippingRuleRepository" contract="ShippingRuleRepository" />
        <requires name="shippingMethodRepository" contract="ShippingMethodRepository" />
        <requires name="shippingEligibilityRepository" contract="ShippingEligibilityRepository" />
        <requires name="shippingDestinationCountriesProvider" contract="ShippingDestinationCountriesProvider" />
        <requires name="shippingChargePlanRepositoryProvider" contract="ShippingChargePlanRepositoryProvider" />
        <requires name="ruleRuntimeProvider" contract="RuleRuntimeProvider"/>
    </implementation>

</components>
