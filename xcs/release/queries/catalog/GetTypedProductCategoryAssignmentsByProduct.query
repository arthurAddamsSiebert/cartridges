<?xml version="1.0" encoding="UTF-8"?>
<query description="Returns the TypedProductCategoryAssignments for a given product and type code.">
<parameters>
	<parameter name="Product" type="com.intershop.beehive.xcs.capi.product.Product" optional="false"/>
	<parameter name="TypeCodeName" type="java.lang.String" optional="false" description="The type of the TypedProductCategoryAssignments to be returned.
Use the string representation of the TypedProductCategoryAssignment TypeCode here (as defined by a TypeCodeDefinition:Name, where TypeCodeDefinition:Group=&quot;TypedProductCategoryAssignment&quot;)."/>
</parameters>
<processor name="OracleSQL">
	<processor-preprocessing output="Sharing" input="Product:Domain" processing="ProductSharingHelper"/>
</processor>
<template type="objects">
<template-comment>
Notes for the "inline" hint:
    The "inline" SQL query hint was added to avoid materializing the inline data within the "with _alias_ as" clause. The usage
    of hidden (alter session/system) underline parameter "_with_subquery" (values: optimizer (default), materialize, inline) is
    not a good practice.
Solved problems:
    Possible "ora-1652: unable to extend temp segment..." errors are avoided with the "inline" hint. Previously, the error occurred
    if the optimizer chooses execution plans with "temp table transformation" and "load as select from sys_temp..." and the temp
    data were not subsequently deleted.
</template-comment>
<template-if condition="Sharing:Enabled">
WITH c_tpcas AS (
    SELECT /*+ inline - to avoid massive not released temporary tablespace data */ ctpca.*
    FROM
        TYPEDPRODUCTCATEGORYASSM ctpca
    JOIN
        typecodedefinition tcd ON (tcd.typecode = ctpca.typecode)
    WHERE
        ctpca.productid = <template-variable value="Product:UUID"/>
    AND
        ctpca.domainid = <template-variable value="Product:DomainID"/>
    AND tcd.name = <template-variable value="TypeCodeName"/>
    AND tcd.typecodegroup = 'TypedProductCategoryAssignment'
)
SELECT productid, catalogcategoryid, domainid, position FROM c_tpcas
UNION ALL
SELECT productid, catalogcategoryid, domainid, position
FROM
    TYPEDPRODUCTCATEGORYASSM mr_tpca
WHERE
    productid = <template-variable value="Product:UUID"/>
AND
(
    domainid IN (<template-loop alias="Domain" iterator="Sharing:Domains"><loop-statement><template-variable value="Domain:UUID"/></loop-statement><loop-separator>,</loop-separator></template-loop>)
    <template-if condition="hasElements(Sharing:ProductSets)">
        OR domainid IN (
            SELECT ps.domainid
            FROM
                productsetassignment psa
            JOIN
                productset ps ON (ps.uuid = psa.productsetuuid)
            WHERE
                psa.productUUID = <template-variable value="Product:UUID"/>
        )
    </template-if>
)
AND
    NOT EXISTS (
        SELECT 1
        FROM c_tpcas
        WHERE c_tpcas.productid = <template-variable value="Product:UUID"/>
        AND c_tpcas.domainid = <template-variable value="Product:DomainID"/>
        AND c_tpcas.catalogcategoryid=mr_tpca.catalogcategoryid
    )
<if-else/>
SELECT tpca.productid, tpca.catalogcategoryid, tpca.domainid, tpca.position 
FROM
    TYPEDPRODUCTCATEGORYASSM tpca
JOIN
    typecodedefinition tcd ON (tcd.typecode = tpca.typecode)
WHERE
    productid = <template-variable value="Product:UUID"/>
AND
    domainid = <template-variable value="Product:DomainID"/>
AND tcd.name = <template-variable value="TypeCodeName"/>
AND tcd.typecodegroup = 'TypedProductCategoryAssignment'
</template-if>
</template>
</query>
