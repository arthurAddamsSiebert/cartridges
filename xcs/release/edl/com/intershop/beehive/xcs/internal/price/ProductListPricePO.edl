import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";
import "enfinity:/xcs/edl/com/intershop/beehive/xcs/capi/price/ProductListPrice.edl";
import "enfinity:/xcs/edl/com/intershop/beehive/xcs/internal/product/ProductPO.edl";

namespace com.intershop.beehive.xcs.internal.price
{
    /*
     * The ProductListPrice is a simple Buyer independent price for a Product.
     */
    oca timestamp orm class ProductListPricePO implements ProductListPrice table "ProductListPrice"
    {
        primary key(productID, currency);

        index(productID);

        /*
         * The UUID of the assigned Product.
         */
        attribute productID : uuid required;

        /*
         * The currency of the ProductListPrice.
         */
        attribute currency : string<3> required;

        /*
         * The monetary value of the ProductListPrice.
         */
        attribute value : decimal required;

        /*
         * Flag indicating that the ProductListPrice represents a net price (true = net price). The net price is the price excluding tax.
         */
        attribute netPrice : boolean = true;

		/*
		 * If partitioning is disabled, the domain id might be null. In such case refer the product's domain id.
		 */
        attribute domainID : uuid;

        relation productPO : ProductPO[1..1] inverse listPricePOs
        {
            foreign key(productID) -> (UUID);
        }
    }
}
