import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObjectPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";
import "enfinity:/xcs/edl/com/intershop/beehive/xcs/capi/productapproval/ProductApproval.edl";
import "enfinity:/xcs/edl/com/intershop/beehive/xcs/capi/product/Product.edl";
import "enfinity:/xcs/edl/com/intershop/beehive/xcs/internal/product/ProductPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/internal/profile/BasicProfilePO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.beehive.xcs.internal.productapproval
{
	/*
     * The objects stores the approval status of a product.
     * 
     * @isobject ProductApprovalPO
     */
    orm class ProductApprovalPO extends ExtensibleObjectPO implements ProductApproval table "ProductApproval"
    {		
        index(productID);
        
        alternate key(productID, domainID);
        
		/*
	     * The UUID of the corresponding Product.
	     */
	    attribute productID : uuid required readonly;
	    
	    /*
	     * Approval status - edited/reviewed/approved
	     */
	    attribute approvalStatus : int required;
	    
	    /*
	     * Hash string with serialized product data
	     */
	    attribute productData : string<256> required;
	    
	    /*
	     * Reason for changed approval status
	     */
	    attribute lastChangeReason : string<256>;
	    
	    /**
	     * ID of user
	     */
	    attribute lastChangeUserID : string;
    
    	/*
    	 * The date of last changed product data (status)
    	 */
    	attribute lastChangeDate: datetime;
    	
    	relation ProductPO : ProductPO[1..1] inverse productApprovalPOs
        {
            foreign key(productID) -> (UUID);
        }
    }
}
 