import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/PersistentObjectPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObjectPO.edl";
import "enfinity:/xcs/edl/com/intershop/beehive/xcs/capi/manufacturer/alias/ManufacturerName.edl";
import "enfinity:/xcs/edl/com/intershop/beehive/xcs/capi/manufacturer/alias/ManufacturerNameAlias.edl";
import "enfinity:/xcs/edl/com/intershop/beehive/xcs/internal/manufacturer/alias/ManufacturerNameAliasPO.edl";


namespace com.intershop.beehive.xcs.internal.manufacturer.alias
{
	/*
	 * stores brand (manufacturer) names
	 *  in importing manufacturers for products the spelling might slightly differ for the very same brand
	 *  (i.g. ADIDIDAS adidas Adidas). To ensure that all variants are handled as one brand the ManufacturerNameAlias
	 *  is used for certain features instead of directly using the manufacturer name
	 *  This class holds the stored manufacturer names for the defined aliases
	 *  It is not used for product import and it is not ensured that names here are used in the product table attribute -
	 *  or that a name used in the product table attribute will occur here
	 * @author vdressler
	 */
	orm class ManufacturerNamePO extends ExtensibleObjectPO implements ManufacturerName table "ManufacturerName"

	{
		// just for information: the index is created in the custom section since the code generator can not access domainID
		//unique index (name,domainID);
		semantic key (name,domainID);
		index (manufacturerNameAliasID,domainID);
		
		attribute name : string <256> required;
		
		attribute manufacturerNameAliasID : uuid;

		relation manufacturerNameAlias : ManufacturerNameAliasPO [1..1] inverse manufacturerNamesPO
		{
		    foreign key(manufacturerNameAliasID) -> (UUID);
		}
	}
}
