import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObjectPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";
import "enfinity:/xcs/edl/com/intershop/beehive/xcs/capi/product/ProductLink.edl";
import "enfinity:/xcs/edl/com/intershop/beehive/xcs/internal/catalog/CatalogCategoryPO.edl";
import "enfinity:/xcs/edl/com/intershop/beehive/xcs/internal/product/ProductPO.edl";

namespace com.intershop.beehive.xcs.internal.product
{
    /*
     * A ProductLink represents a relation between two Products which are linked together. The ProductLink logically points from a source Product to a target Product. It can provide a type to distinguish ProductLinks.
     * <p>
     * @see com.intershop.beehive.xcs.capi.product.ProductLinkConstants for the different supported typeCodes
     */
    orm class ProductLinkPO extends ExtensibleObjectPO implements ProductLink table "ProductLink"
    {
        index(targetID);

        index(linkedCatalogCategoryID);

        index(sourceID);

        /*
         * The UUID of the source Product. This is the Product from which the ProductLink comes.
         */
        attribute sourceID : uuid required;

        /*
         * The UUID of the target Product. This is the Product where the ProductLink points to.
         */
        attribute targetID : uuid required;

        /*
         * Used to group ProductLinks based on the UUID of a CatalogCategory which contains the linked (target) Products.
         */
        attribute linkedCatalogCategoryID : uuid;

        /*
         * The integer typeCode of the ProductLink.
         * This is a TypeCodeDefinition:TypeCode out of the TypeCodeDefinitions with TypeCodeDefinition:Group equal to constant ProductLink:TypeCodeDefinitionGroup.
         * Attention: The CAPI interface ProductLink deals only with the string representations of typeCodes (TypeCodeDefinition:Name).
         * @see com.intershop.component.foundation.capi.typecode.TypeCodeDefinition
         * @see com.intershop.component.foundation.capi.typecode.TypeCodeRegistry
         */
        attribute typeCodeInteger : int required column "TYPECODE";

        /*
         * The quantity of the linked product.
         */
        attribute quantity : decimal;

        /*
         * The localizable unit of the linked product.
         */
        attribute unit : string localized;

        /*
         * The localizable description of the product link.
         */
        attribute description : string localized;

        dependency linkedCatalogCategoryPO : CatalogCategoryPO
        {
            foreign key(linkedCatalogCategoryID);
        }

        /*
         * NOTE: the reverse relation can be traversed through custom methods identified by name "incomingProductLinks"
         */
        dependency targetProductPO : ProductPO
        {
            foreign key(targetID);
        }
    }
}
