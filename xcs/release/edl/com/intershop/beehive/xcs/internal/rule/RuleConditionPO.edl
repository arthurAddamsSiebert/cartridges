import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/PersistentObjectPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";
import "enfinity:/xcs/edl/com/intershop/beehive/xcs/internal/rule/RulePO.edl";

namespace com.intershop.beehive.xcs.internal.rule
{
    /*
     * This class is the abstract base class for all rule conditions.
     * The conditions are checked by the rule before the rule action is performed.
     * <p>
     * Rules and rule conditions are persistent objects.
     * 
     * @see com.intershop.beehive.bts.promotion.rule.Rule
     * @see         com.intershop.beehive.bts.promotion.rule.IRuleCondition
     */
    abstract orm class RuleConditionPO extends PersistentObjectPO
    {
        index(conditionRuleID);

        index(exceptionRuleID);

        /*
         * This attribute contains the UUID of the actual condition instance of the rule. Note that the referenced condition can contain other conditions that <b>must</b> be satisfied.
         */
        attribute conditionRuleID : uuid;

        /*
         * This attribute contains the UUID of the exception condition instance of the rule. Note that the referenced condition can contain other conditions that <b>must</b> not be satisfied.
         */
        attribute exceptionRuleID : uuid;

        relation exceptionRule : RulePO[0..1] inverse exceptions
        {
            foreign key(exceptionRuleID) -> (UUID);
        }

        relation conditionRule : RulePO[0..1] inverse conditions
        {
            foreign key(conditionRuleID) -> (UUID);
        }
    }
}
