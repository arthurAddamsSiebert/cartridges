import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObject.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";
import "enfinity:/xcs/edl/com/intershop/beehive/xcs/capi/product/Product.edl";
import "enfinity:/xcs/edl/com/intershop/beehive/xcs/capi/productvariation/ProductVariationValue.edl";

external SystemException type "com.intershop.beehive.core.capi.common.SystemException";
external Positionable type "com.intershop.beehive.core.capi.util.Positionable";

namespace com.intershop.beehive.xcs.capi.productvariation
{
    /*
     * A product master hosts a set of mastered product items (e.g. a set of concret sellable shirts) and a variation model. The variation model contains of a set of variable variation attributes as well as a set of values for each of the variable variation attribute. The variable variation attributes are represented by this class VariableVariationAttribute.
     * <p>
     * E.g. the product master could be T-Shirt. The T-Shirts are selled in different sizes and different colors. For each of these variable attributes (size and color) one corresponding instance of VariableVariationAttribute is available.
     * 
     * @isobject
     */
    cartridge interface VariableVariationAttribute extends ExtensibleObject, Positionable
    {
        /*
         * The UUID of the product master which has declared this attribute as variable for the variation model.
         */
        attribute productMasterID : string required readonly;

        /*
         * The name of the variable variation attribute (e.g. color or size).
         */
        attribute name : string required;

        /*
         * A flag indicating whether the values for the assigned ProductVariationValues are localized.
         */
        attribute ^localized : boolean required;

        /*
         * The valueType of the ProductVariationValues which are assigned to this VariableVariationAttribute.
         * 
         * @see com.intershop.beehive.xcs.capi.product.ProductAttributeEnumerationConstants for the possible typeCodes
         */
        attribute valueType : int required;

        /*
         * Localized name for the variation variable. For instance if the variable is called 'colour' this attribute should be set to 'color' (en_US) and 'Farbe' (de_DE).
         */
        attribute displayName : string required localized;

        /*
         * Position within a ProductMaster.
         */
        attribute position : double required;
        
        attribute presentationOption : string;
        
        attribute presentationProductAttributeName : string;

        relation productMaster : Product[0..1];

        relation productVariationValues : ProductVariationValue[0..n] readonly;

        operation getValueTypeNull() : boolean throws SystemException;

        operation setValueTypeNull(aFlag : boolean) : void throws SystemException;

        operation getPositionNull() : boolean throws SystemException;

        operation setPositionNull(aFlag : boolean) : void throws SystemException;
    }
}
