import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";
import "enfinity:/xcs/edl/com/intershop/beehive/xcs/capi/product/Product.edl";

namespace com.intershop.beehive.xcs.capi.price
{
    /*
     * The ProductPrice is a simple User independent price for a Product.
     * @isobject
     */
    cartridge interface ProductPrice
    {
        /*
         * The UUID of the assigned Product.
         */
        attribute productID : string readonly required;

        attribute currency : string readonly required;

        /*
         * The monetary value of the ProductPrice.
         */
        attribute value : decimal required;

        /*
         * Flag indicating that the ProductPrice represents a net price (true = net price). The net price is the price excluding tax.
         */
        attribute netPrice : boolean required;

        /*
         * The uuid of the related domain.
         */
        attribute domainID : string required;

        relation product : Product[0..1] readonly;

        /*
         * Returns the actual amount of the product price instance as a monetary value.
         * 
         * @return The actual amount.
         * @isattribute Amount
         * @is-txAttribute Supports
         */
        operation getAmount() : Money;

        /*
         * This field contains the timestamp the objects was written to the database.
         */
        operation getLastModified() : datetime;

        /*
         * This field contains the timestamp the objects was written to the database.
         */
        operation setLastModified(aDate : datetime) : void;

        operation getOriginalPrice() : ProductPrice;
    }
}
