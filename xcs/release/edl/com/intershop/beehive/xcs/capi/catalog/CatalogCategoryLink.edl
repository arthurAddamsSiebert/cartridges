import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";
import "enfinity:/xcs/edl/com/intershop/beehive/xcs/capi/catalog/CatalogCategory.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObject.edl";

external SystemException type "com.intershop.beehive.core.capi.common.SystemException";
external Positionable type "com.intershop.beehive.core.capi.util.Positionable";

namespace com.intershop.beehive.xcs.capi.catalog
{
    /*
     * A CatalogCategoryLink is used to establish cross-relations between CatalogCategories (in opposite to the parent-child relations on which the catalog structure is based).
     * <p>
     * A CatalogCategoryLink points from a so called source CatalogCategory to a target CatalogCategory.
     * <p>
     * A CatalogCategoryLink requires for creation the UUID of the source and the target CatalogCategory.
     * <p>
     * Each CatalogCategoryLink has a typeCode. All the typeCodes used by CatalogCategoryLink need to be defined by TypeCodeDefinitions.
     * The TypeCodeDefinitions must have a TypeCodeDefinition:Group equal to constant CatalogCategoryLink:TypeCodeDefinitionGroup.
     * To ensure uniqueness of the TypeCodeDefinition:Name the following naming convention should be used: Use the project name as a prefix for the type code name, followed by an underscore. Standard Enfinity will have to use "ES_" as prefix for its type code names.
     * @see com.intershop.component.foundation.capi.typecode.TypeCodeDefinition
     * @see com.intershop.component.foundation.capi.typecode.TypeCodeRegistry
     *
     * @isobject
     */
    cartridge interface CatalogCategoryLink extends ExtensibleObject, Positionable
    {
        /*
         * The UUID of the CatalogCategory the link originates from.
         */
        attribute sourceCategoryID : string readonly required;

        /*
         * The UUID of the CatalogCategory the link points to.
         */
        attribute targetCategoryID : string readonly required;

        /*
         * The UUID of the Domain the CatalogCategoryLink is assigned to.
         */
        attribute domainID : string readonly required;

        /*
         * Constant defining the TypeCodeDefinition group used for CatalogCategoryLinks.
         * All typeCodes used for CatalogCategoryLinks must to be defined by TypeCodeDefinitions with a TypeCodeDefinition:Group equal to this constant.
         * @see com.intershop.component.foundation.capi.typecode.TypeCodeDefinition
         * @see com.intershop.component.foundation.capi.typecode.TypeCodeRegistry
         */
        constant TypeCodeDefinitionGroup : string = "CatalogCategoryLink";

        /*
         * The typeCode of a CatalogCategoryLink.
         * This is a TypeCodeDefinition:Name out of the TypeCodeDefinitions with TypeCodeDefinition:Group equal to constant CatalogCategoryLink:TypeCodeDefinitionGroup.
         * @see com.intershop.component.foundation.capi.typecode.TypeCodeDefinition
         * @see com.intershop.component.foundation.capi.typecode.TypeCodeRegistry
         */
        attribute typeCode : String readonly required;

        /*
         * The localized name of the link.
         */
        attribute displayName : string required localized;

        /*
         * The localized description of the link.
         */
        attribute description : string required localized;

        attribute position : double;

        relation sourceCategory : CatalogCategory[0..1] readonly;

        relation targetCategory : CatalogCategory[0..1] readonly;

        /*
         * * Returns the value of attribute 'lastModified'.<p>
         * *
         * * This field contains the timestamp the objects was written to the
         * * database.
         * *
         * * @return      the value of the attribute 'lastModified'
         * * @isattribute LastModified
         */
        operation getLastModified() : datetime throws SystemException;

        /*
         * * Sets the value of the attribute 'lastModified'.<p>
         * *
         * * This field contains the timestamp the objects was written to the
         * * database.
         * *
         * * @param       aValue        the new value of the attribute
         */
        operation setLastModified(aValue : datetime) : void throws SystemException;

        /*
         * * Checks whether the value of the attribute 'lastModified' is null.<p>
         * *
         * * This field contains the timestamp the objects was written to the
         * * database.
         * *
         * * @return      true if the value of attribute 'lastModified' is null,
         * *              false otherwise
         * * @isattribute LastModifiedNull
         */
        operation getLastModifiedNull() : boolean throws SystemException;

        /*
         * * Sets the value of the attribute 'lastModified' to null.<p>
         * *
         * * This field contains the timestamp the objects was written to the
         * * database.
         * *
         * * @param       aFlag       meaningless
         */
        operation setLastModifiedNull(aFlag : boolean) : void throws SystemException;

        /*
         * Creates an iterator on all custom attribute names of the catalog
         * category link.
         * 
         * @return An iterator on the names of custom attributes.
         * @isiterator CustomCatalogCategoryLinkAttributeNames java.lang.String
         */
        operation createCustomCatalogCategoryLinkAttributeNamesIterator() : Iterator;

        /*
         * Returns an iterator on all custom category attributes of the catalog
         * category.
         * <p>The current session's locale is used to determine localized attribute value
         * elements.  The locale fallback strategy is used.
         * 
         * @return An iterator on all custom attributes.
         * @isiterator CustomCatalogCategoryLinkAttributes com.intershop.beehive.core.capi.common.AttributeValue
         */
        operation createCustomCatalogCategoryLinkAttributesIterator() : Iterator;
    }
}
