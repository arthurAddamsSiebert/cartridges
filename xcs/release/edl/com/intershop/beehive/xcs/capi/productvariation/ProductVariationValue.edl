import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObject.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/localization/LocaleInformation.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";
import "enfinity:/xcs/edl/com/intershop/beehive/xcs/capi/productvariation/ProductVariation.edl";
import "enfinity:/xcs/edl/com/intershop/beehive/xcs/capi/productvariation/VariableVariationAttribute.edl";

namespace com.intershop.beehive.xcs.capi.productvariation
{
    /*
     * A product master hosts a set of mastered product items (e.g. a set of concret sellable shirts) and a variation model. The variation model contains of a set of variable variation attributes (instances of type VariableVariationAttribute) as well as a set of values for each of the variable variation attribute. These values are represented by this class ProductVariationValue.
     * <p>
     * E.g. the product master could be T-Shirt. VariableVariationAttributes are "size" and "color" of a T-Shirt. The seller provide T-Shirts in the size S,M,L,XL,XXL and each in the colors red, blue and green. Each value (S,M,L,XL,XXL,red,blue and green) is represented by a single instance of a ProductVariationValue.
     * <p>
     * The values can be localized too. This means for the variable attribute "color" the values can be in english red, blue und yellow, whereas in german the values are rot, blau und gelb. In that case for each color (red, rot);(blue, blau) and (yellow,gelb) one instance of a ProductVariationValue is provided by the variation model.
     * 
     * @isobject
     */
    cartridge interface ProductVariationValue extends ExtensibleObject
    {
        /*
         * The UUID of the VariableVariationAttribute.
         */
        attribute variableVariationAttributeID : string required readonly;

        relation variableVariationAttribute : VariableVariationAttribute[0..1];

        relation productVariations : ProductVariation[0..n] readonly;

        /*
         * Returns the name of the referenced VariableVariationAttribute.
         * Used by a client to get the appropriate identifier to set a value.
         * 
         * @return the name of the referenced VariableVariationAttribute
         * @isattribute Name
         */
        operation getName() : string;

        /*
         * Returns the valueType of the referenced VariableVariationAttribute.
         * 
         * @return the valueType of the referenced VariableVariationAttribute
         * @isattribute ValueType
         */
        operation getValueType() : int;

        /*
         * Returns the localized status of the referenced VariableVariationAttribute.
         * 
         * @return the localized status of the referenced VariableVariationAttribute
         * @isattribute Localized
         */
        operation isLocalized() : boolean;

        /*
         * Returns the not localized value of this ProductVariationValue (refering to the class doc, this value could be red, blue or green).
         * 
         * @return the not localized value of this ProductVariationValue
         * @isattribute VariationValue
         */
        operation getVariationValue() : Object;

        /*
         * Returns the localized value of this ProductVariationValue (refering to the class doc, the value could be red for the english locale or rot for german locale).
         * 
         * @param locale the locale for which the value is required
         * @return the localized value of this ProductVariationValue
         */
        operation getLocalizedVariationValue(locale : LocaleInformation) : Object;

        operation getVariableVariationAttributeIDNull() : boolean;
    }
}
