/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.ac_005fbmecat.default_.inc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;
import java.io.IOException;
import java.util.Collections;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import com.intershop.adapter.bmecat.util.BMEcatExportUtil;
import com.intershop.beehive.core.capi.localization.LocaleInformation;
import com.intershop.beehive.core.capi.domain.ExtensibleObject;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.internal.impex.XMLVerifyException;
import com.intershop.beehive.core.internal.template.AbstractTemplate;
import com.intershop.beehive.xcs.capi.product.Product;
import com.intershop.component.foundation.capi.content.AdditionalContent;
import com.intershop.component.foundation.capi.content.AdditionalContentMgr;
import com.intershop.component.foundation.capi.content.AdditionalContentConstants;
import com.intershop.component.foundation.capi.upload.FileUtil;

public final class MimeInfo_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

 protected Boolean printTemplateMarker() { return Boolean.FALSE; } 

	private final static Set dataSheetTypes = new HashSet();
	
	static
	{
		dataSheetTypes.add("doc");
		dataSheetTypes.add("txt");
		dataSheetTypes.add("pdf");
		dataSheetTypes.add("xls");
	};
 
	private static void writeMime(JspWriter out, AbstractTemplate template, String type, String source, String descr, String purpose)
		throws XMLVerifyException, IOException
	{
		out.println("<MIME>");

		BMEcatExportUtil.writeElement(out, template, "type", type, "MIME_TYPE", 30, true);
		out.println();
		BMEcatExportUtil.writeElement(out, template, "source", source, "MIME_SOURCE", 250, false);
		out.println();
		BMEcatExportUtil.writeElement(out, template, "descr", descr, "MIME_DESCR", 250, true);
		out.println();
		BMEcatExportUtil.writeElement(out, template, "purpose", purpose, "MIME_PURPOSE", 20, true);
		out.println();
		out.println("</MIME>");
	}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/xml;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 


setEncodingType("text/xml"); 
      out.write('\n');
      out.write('\n');
      out.write('\n');

	ExtensibleObject object = (ExtensibleObject)getObject("object");
	LocaleInformation locale = (LocaleInformation)getObject("locale");
	Iterator acs = ((AdditionalContentMgr)NamingMgr.getInstance().
		lookupManager(AdditionalContentMgr.REGISTRY_NAME)).
			createAdditionalContentIterator(object, AdditionalContentConstants.AC_TYPE_ALL, locale);

		
	
	if ((object instanceof Product) && acs.hasNext())
	{
		out.println("<MIME_INFO>");

		while (acs.hasNext())
		{
			AdditionalContent ac = (AdditionalContent)acs.next();
			String value = ac.getValue();
			int pos;
			String fileExtension = 
				(pos = value.lastIndexOf('.')) != -1 && pos < (value.length() - 1) ?
					value.substring(pos + 1) : ""; 
			String purpose = dataSheetTypes.contains(fileExtension) ? "data_sheet" : "others";
			
			if(ac.getDescription() != null)
			{
			    writeMime(out, this, FileUtil.getMimeType(value), value, encodeString(ac.getDescription()), purpose);
			}
		}

		out.println("</MIME_INFO>");
	}

      out.write('\n');
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
