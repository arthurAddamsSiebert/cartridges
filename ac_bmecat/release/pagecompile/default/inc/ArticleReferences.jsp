<%@  page buffer="none" import="java.util.*,java.io.*,com.intershop.beehive.core.internal.template.*,com.intershop.beehive.core.internal.template.isml.*,com.intershop.beehive.core.capi.log.*,com.intershop.beehive.core.capi.resource.*,com.intershop.beehive.core.capi.util.UUIDMgr,com.intershop.beehive.core.capi.util.XMLHelper,com.intershop.beehive.foundation.util.*,com.intershop.beehive.core.internal.url.*,com.intershop.beehive.core.internal.resource.*,com.intershop.beehive.core.internal.wsrp.*,com.intershop.beehive.core.capi.pipeline.PipelineDictionary,com.intershop.beehive.core.capi.naming.NamingMgr,com.intershop.beehive.core.capi.pagecache.PageCacheMgr,com.intershop.beehive.core.capi.request.SessionMgr,com.intershop.beehive.core.internal.request.SessionMgrImpl,com.intershop.beehive.core.pipelet.PipelineConstants" extends="com.intershop.beehive.core.internal.template.AbstractTemplate" %><% 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 %><% %><%! protected Boolean printTemplateMarker() { return Boolean.FALSE; } %><%%><%@ page contentType="text/xml;charset=utf-8" %><%%><%@ page session="false"%><%setEncodingType("text/xml"); %>
<% while (loop("Product:OutgoingProductLinks","Link",null)) { %>
	<ARTICLE_REFERENCE type="<% _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("Link:TypeCode")).doubleValue() ==((Number)(new Double(1))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",3,e);}if (_boolean_result) { %>others<% } else {_boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("Link:TypeCode")).doubleValue() ==((Number)(new Double(2))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",3,e);}if (_boolean_result) { %>similar<% } else {_boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("Link:TypeCode")).doubleValue() ==((Number)(new Double(3))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",4,e);}if (_boolean_result) { %>others<% } else {_boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("Link:TypeCode")).doubleValue() ==((Number)(new Double(4))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",5,e);}if (_boolean_result) { %>accessories<% } else {_boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("Link:TypeCode")).doubleValue() ==((Number)(new Double(5))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",6,e);}if (_boolean_result) { %>followup<% } else {_boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("Link:TypeCode")).doubleValue() ==((Number)(new Double(6))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",7,e);}if (_boolean_result) { %>diff_orderunit<% } else {_boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("Link:TypeCode")).doubleValue() ==((Number)(new Double(7))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",8,e);}if (_boolean_result) { %>sparepart<% } else { %>others<% }}}}}}} %>">
		<% processOpenTag(response, pageContext, "writeelement", new TagParameter[] {
new TagParameter("size","32"),
new TagParameter("objectpath","Link:TargetProduct:SKU"),
new TagParameter("element","ART_ID_TO")}, 10); %>
	</ARTICLE_REFERENCE>
<% } %>
<% while (loop("Product:BundleAssignments","Assignment",null)) { %>
	<ARTICLE_REFERENCE type="consists_of" quantity="<% {String value = null;try{value=context.getFormattedValue(getObject("Assignment:Quantity"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {14}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>">
		<% processOpenTag(response, pageContext, "writeelement", new TagParameter[] {
new TagParameter("size","32"),
new TagParameter("objectpath","Assignment:Product:SKU"),
new TagParameter("element","ART_ID_TO")}, 15); %>
	</ARTICLE_REFERENCE>
<% } %><% printFooter(out); %>