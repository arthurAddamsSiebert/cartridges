<%@  page buffer="none" import="java.util.*,java.io.*,com.intershop.beehive.core.internal.template.*,com.intershop.beehive.core.internal.template.isml.*,com.intershop.beehive.core.capi.log.*,com.intershop.beehive.core.capi.resource.*,com.intershop.beehive.core.capi.util.UUIDMgr,com.intershop.beehive.core.capi.util.XMLHelper,com.intershop.beehive.foundation.util.*,com.intershop.beehive.core.internal.url.*,com.intershop.beehive.core.internal.resource.*,com.intershop.beehive.core.internal.wsrp.*,com.intershop.beehive.core.capi.pipeline.PipelineDictionary,com.intershop.beehive.core.capi.naming.NamingMgr,com.intershop.beehive.core.capi.pagecache.PageCacheMgr,com.intershop.beehive.core.capi.request.SessionMgr,com.intershop.beehive.core.internal.request.SessionMgrImpl,com.intershop.beehive.core.pipelet.PipelineConstants" extends="com.intershop.beehive.core.internal.template.AbstractTemplate" %><% 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 %><% %><%@ page contentType="text/html;charset=utf-8" %><%setEncodingType("text/html"); %><% {Object temp_obj = (getObject("CurrentCartBO:UserBO:Extension(\"CostCenter\"):BuyerCostCenterBOs")); getPipelineDictionary().put("CostCenterBOs", temp_obj);} %><% _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("CostCenterBOs") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",3,e);}if (_boolean_result) { %><% {Object temp_obj = (((!((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_CostCenterMissing")))).booleanValue() && ((Boolean) ((( ((Number) getObject("CostCenterBOs:Size")).doubleValue() ==((Number)(new Double(1))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE)); getPipelineDictionary().put("OnlyOneCostCenter", temp_obj);} %><div class="section clearfix" id="Checkout_CostCenterSelection"><% _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ERROR_CostCenterMissing"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",7,e);}if (_boolean_result) { %><div role="alert" class="alert alert-danger"><% {out.write(localizeISText("checkout.payment.costcenter.error","",null,null,null,null,null,null,null,null,null,null,null));} %></div><% } %><p class="indicates-required"><span class="required">*</span><% {out.write(localizeISText("account.required_field.message","",null,null,null,null,null,null,null,null,null,null,null));} %></p>
<div class="form-group<% _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ERROR_CostCenterMissing"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",13,e);}if (_boolean_result) { %> has-error<% } %>">
<label class="control-label col-sm-2"><% {out.write(localizeISText("checkout.payment.costcenter.label","",null,null,null,null,null,null,null,null,null,null,null));} %><span class="required">*</span></label>
<div class="col-sm-6" id="CostCenter_Dropdown"><% {Object temp_obj = (getObject("CurrentCartBO:Extension(\"BasketBOCostCenterExtension\"):CostCenterBO:ID")); getPipelineDictionary().put("SelectedCostCenterID", temp_obj);} %><select 
data-testing-id="CostCenterSelection"
class="form-control" 
name="CostCenterID" 
data-bv-notempty-message="<% {out.write(localizeISText("checkout.payment.costcenter.error","",null,null,null,null,null,null,null,null,null,null,null));} %>"/>"><% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (((!((Boolean) (disableErrorMessages().isDefined(getObject("SelectedCostCenterID")))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("SelectedCostCenterID"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && !((Boolean) getObject("OnlyOneCostCenter")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",24,e);}if (_boolean_result) { %> 
<option value=""><% {out.write(localizeISText("checkout.payment.costcenter.select.option.first","",null,null,null,null,null,null,null,null,null,null,null));} %></option><% } %><% while (loop("CostCenterBOs","CostCenter",null)) { %><option value="<%=context.getFormattedValue(getObject("CostCenter:ID"),null)%>"
<% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("CostCenter:ID"),null).equals(context.getFormattedValue(getObject("SelectedCostCenterID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) getObject("OnlyOneCostCenter")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",29,e);}if (_boolean_result) { %>selected<% } %>
><% {String value = null;try{value=context.getFormattedValue(getObject("CostCenter:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {30}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %> - <% {String value = null;try{value=context.getFormattedValue(getObject("CostCenter:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {30}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></option> 
<% } %></select>
</div>
</div>
</div><% } %><% printFooter(out); %>