<%@  page buffer="none" import="java.util.*,java.io.*,com.intershop.beehive.core.internal.template.*,com.intershop.beehive.core.internal.template.isml.*,com.intershop.beehive.core.capi.log.*,com.intershop.beehive.core.capi.resource.*,com.intershop.beehive.core.capi.util.UUIDMgr,com.intershop.beehive.core.capi.util.XMLHelper,com.intershop.beehive.foundation.util.*,com.intershop.beehive.core.internal.url.*,com.intershop.beehive.core.internal.resource.*,com.intershop.beehive.core.internal.wsrp.*,com.intershop.beehive.core.capi.pipeline.PipelineDictionary,com.intershop.beehive.core.capi.naming.NamingMgr,com.intershop.beehive.core.capi.pagecache.PageCacheMgr,com.intershop.beehive.core.capi.request.SessionMgr,com.intershop.beehive.core.internal.request.SessionMgrImpl,com.intershop.beehive.core.pipelet.PipelineConstants" extends="com.intershop.beehive.core.internal.template.AbstractTemplate" %><% 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 %><% %><%@ page contentType="text/html;charset=utf-8" %><%setEncodingType("text/html"); %><% {Object temp_obj = (getObject("BasketBO:Extension(\"BasketBOCostCenterExtension\"):CostCenterBO")); getPipelineDictionary().put("CostCenterBO", temp_obj);} %><% {Object temp_obj = (getObject("CostCenterBO:Extension(\"CostCenterBOOrderExtension\")")); getPipelineDictionary().put("CostCenterOrderBOOrderExtension", temp_obj);} %><% {Object temp_obj = (getObject("BasketBO:GrandTotalGross")); getPipelineDictionary().put("BasketTotal", temp_obj);} %><% {Object temp_obj = (getObject("BasketBO:Extension(\"Approval\")")); getPipelineDictionary().put("BasketApprovalExtension", temp_obj);} %> 
<% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("CostCenterBO")))).booleanValue() && ((Boolean) getObject("CostCenterBO:isApprover(UserBO)")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",8,e);}if (_boolean_result) { %><div class="section infobox">
<h3><% {out.write(localizeISText("approval.detailspage.costcenter.approval.heading","",null,null,null,null,null,null,null,null,null,null,null));} %></h3>
<div class="row">
<div class="col-sm-6">
<p class="row">
<strong class="col-xs-6"><% {out.write(localizeISText("approval.detailspage.cost_center.label","",null,null,null,null,null,null,null,null,null,null,null));} %></strong>
<span class="col-xs-6"><% {String value = null;try{value=context.getFormattedValue(getObject("BasketBO:Extension(\"BasketBOCostCenterExtension\"):CostCenterBO:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {19}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></span>
</p>
</div>
</div><% {Object temp_obj = (getObject("CostCenterBO:Budget")); getPipelineDictionary().put("CostCenterLimit", temp_obj);} %><% {Object temp_obj = (getObject("CostCenterBO:BudgetPeriod")); getPipelineDictionary().put("CostCenterLimitPediod", temp_obj);} %><% {Object temp_obj = (getObject("CostCenterOrderBOOrderExtension:OrdersTotal")); getPipelineDictionary().put("CostCenterOrdersTotal", temp_obj);} %><div class="row section">
<div class="col-sm-6">
<p class="row">
<strong class="col-xs-6"><% {out.write(localizeISText(context.getFormattedValue(context.getFormattedValue("approval.detailspage.costcenter.budget.type.",null) + context.getFormattedValue((context.getFormattedValue(getObject("CostCenterLimitPediod"),null).toLowerCase()),null) + context.getFormattedValue(".label",null),null),"",null,null,null,null,null,null,null,null,null,null,null));} %></strong>
<span class="col-xs-6"><% _boolean_result=false;try {_boolean_result=((Boolean)(getObject("CostCenterLimit:Available"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",36,e);}if (_boolean_result) { %><% {String value = null;try{value=context.getFormattedValue(getObject("CostCenterLimit"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {37}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %><% } else { %><% {out.write(localizeISText("approval.details.threshold.unlimited","",null,null,null,null,null,null,null,null,null,null,null));} %><% } %></span>
</p><% _boolean_result=false;try {_boolean_result=((Boolean)(getObject("CostCenterLimit:Available"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",45,e);}if (_boolean_result) { %><p class="row">
<strong class="col-xs-6"><% {out.write(localizeISText("approval.detailspage.budget.already_spent.label","",null,null,null,null,null,null,null,null,null,null,null));} %></strong>
<span class="col-xs-6"><% _boolean_result=false;try {_boolean_result=((Boolean)(getObject("CostCenterOrdersTotal:Available"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",52,e);}if (_boolean_result) { %><% {String value = null;try{value=context.getFormattedValue(getObject("CostCenterOrdersTotal"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {53}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %><% {Object temp_obj = ((new Double( ((Number) getObject("CostCenterOrdersTotal:Value")).doubleValue() / ((Number) getObject("CostCenterLimit:Value")).doubleValue() *((Number) new Double(100)).doubleValue()))); getPipelineDictionary().put("CostCenterOrdersTotalPercentage", temp_obj);} %><% _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("CostCenterOrdersTotalPercentage")).doubleValue() >((Number)(new Double(100))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",55,e);}if (_boolean_result) { %><span class="label label-danger pull-right"><% } else { %><span class="label label-default pull-right"><% } %>
(<% {String value = null;try{value=context.getFormattedValue(getObject("CostCenterOrdersTotalPercentage"),"#.#",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {60}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %> %)
</span><% } else { %><% processOpenTag(response, pageContext, "moneycalculator", new TagParameter[] {
new TagParameter("result","ZeroAmount"),
new TagParameter("operand1",getObject("BasketTotal")),
new TagParameter("operand2",getObject("BasketTotal")),
new TagParameter("method","subtract")}, 63); %><% {String value = null;try{value=context.getFormattedValue(getObject("ZeroAmount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {67}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %> 
<span class="label label-default pull-right">
(0.00 %)
</span><% } %></span>
</p><% _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("BasketApprovalExtension:OverallApprovalStatus:ID"),null).equals(context.getFormattedValue("pending",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",74,e);}if (_boolean_result) { %><% _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (getObject("RecurringBasket:Recurring"))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",75,e);}if (_boolean_result) { %><p class="row">
<strong class="col-xs-6"><% {out.write(localizeISText("approval.detailspage.budget.including_order.label","",null,null,null,null,null,null,null,null,null,null,null));} %></strong>
<span class="col-xs-6"><% _boolean_result=false;try {_boolean_result=((Boolean)(getObject("CostCenterOrdersTotal:Available"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",81,e);}if (_boolean_result) { %><% processOpenTag(response, pageContext, "moneycalculator", new TagParameter[] {
new TagParameter("result","CostCenterOrdersTotalEstimation"),
new TagParameter("operand1",getObject("CostCenterOrdersTotal")),
new TagParameter("operand2",getObject("BasketTotal")),
new TagParameter("method","add")}, 82); %><% } else { %><% {Object temp_obj = (getObject("BasketTotal")); getPipelineDictionary().put("CostCenterOrdersTotalEstimation", temp_obj);} %><% } %><% {String value = null;try{value=context.getFormattedValue(getObject("CostCenterOrdersTotalEstimation"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {90}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %><% {Object temp_obj = ((new Double( ((Number) getObject("CostCenterOrdersTotalEstimation:Value")).doubleValue() / ((Number) getObject("CostCenterLimit:Value")).doubleValue() *((Number) new Double(100)).doubleValue()))); getPipelineDictionary().put("CostCenterOrdersTotalEstimationPercentage", temp_obj);} %><% _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("CostCenterOrdersTotalEstimationPercentage")).doubleValue() >((Number)(new Double(100))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",92,e);}if (_boolean_result) { %><span class="label label-danger pull-right"><% } else { %><span class="label label-default pull-right"><% } %>
(<% {String value = null;try{value=context.getFormattedValue(getObject("CostCenterOrdersTotalEstimationPercentage"),"#.#",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {97}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %> %)
</span>
</span>
</p><% } %><% } %></div><% _boolean_result=false;try {_boolean_result=((Boolean)(getObject("CostCenterLimit:Available"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",105,e);}if (_boolean_result) { %><% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("BasketApprovalExtension:OverallApprovalStatus:ID"),null).equals(context.getFormattedValue("pending",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((((Boolean) getObject("RecurringBasket:Recurring")).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",106,e);}if (_boolean_result) { %><div class="col-sm-6"><% processOpenTag(response, pageContext, "indicatorbar", new TagParameter[] {
new TagParameter("Addition",getObject("BasketTotal")),
new TagParameter("Comparison",getObject("CostCenterOrdersTotal")),
new TagParameter("Limit",getObject("CostCenterLimit"))}, 108); %></div><% } else { %><div class="col-sm-6"><% processOpenTag(response, pageContext, "indicatorbar", new TagParameter[] {
new TagParameter("Comparison",getObject("CostCenterOrdersTotal")),
new TagParameter("Limit",getObject("CostCenterLimit"))}, 116); %></div> 
<% } %><% } %><% } %></div><% {Object temp_obj = (getObject("BasketBO:UserBO:Extension(\"UserBOCostCenterBudgetExtension\")")); getPipelineDictionary().put("UserBOCostCenterBudgetExtension", temp_obj);} %><% {Object temp_obj = (getObject("UserBOCostCenterBudgetExtension:Budget(CostCenterBO:ID)")); getPipelineDictionary().put("BuyerCostCenterLimit", temp_obj);} %><% {Object temp_obj = (getObject("UserBOCostCenterBudgetExtension:BudgetPeriod(CostCenterBO:ID)")); getPipelineDictionary().put("BuyerCostCenterLimitPediod", temp_obj);} %><% {Object temp_obj = (getObject("CostCenterOrderBOOrderExtension:BuyerOrdersTotal(BasketBO:UserBO)")); getPipelineDictionary().put("BuyerCostCenterOrdersTotal", temp_obj);} %><div class="row">
<div class="col-sm-6">
<p class="row">
<strong class="col-xs-6"><% {out.write(localizeISText(context.getFormattedValue(context.getFormattedValue("approval.detailspage.costcenter.buyer.budget.type.",null) + context.getFormattedValue((context.getFormattedValue(getObject("BuyerCostCenterLimitPediod"),null).toLowerCase()),null) + context.getFormattedValue(".label",null),null),"",null,null,null,null,null,null,null,null,null,null,null));} %></strong>
<span class="col-xs-6"><% _boolean_result=false;try {_boolean_result=((Boolean)(getObject("BuyerCostCenterLimit:Available"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",139,e);}if (_boolean_result) { %><% {String value = null;try{value=context.getFormattedValue(getObject("BuyerCostCenterLimit"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {140}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %><% } else { %><% {out.write(localizeISText("approval.details.threshold.unlimited","",null,null,null,null,null,null,null,null,null,null,null));} %><% } %></span>
</p><% _boolean_result=false;try {_boolean_result=((Boolean)(getObject("BuyerCostCenterLimit:Available"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",147,e);}if (_boolean_result) { %><p class="row">
<strong class="col-xs-6"><% {out.write(localizeISText("approval.detailspage.budget.already_spent.label","",null,null,null,null,null,null,null,null,null,null,null));} %></strong>
<span class="col-xs-6"><% _boolean_result=false;try {_boolean_result=((Boolean)(getObject("BuyerCostCenterOrdersTotal:Available"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",153,e);}if (_boolean_result) { %><% {String value = null;try{value=context.getFormattedValue(getObject("BuyerCostCenterOrdersTotal"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {154}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %><% {Object temp_obj = ((new Double( ((Number) getObject("BuyerCostCenterOrdersTotal:Value")).doubleValue() / ((Number) getObject("BuyerCostCenterLimit:Value")).doubleValue() *((Number) new Double(100)).doubleValue()))); getPipelineDictionary().put("BuyerCostCenterOrdersTotalPercentage", temp_obj);} %><% _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("BuyerCostCenterOrdersTotalPercentage")).doubleValue() >((Number)(new Double(100))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",156,e);}if (_boolean_result) { %><span class="label label-danger pull-right"><% } else { %><span class="label label-default pull-right"><% } %>
(<% {String value = null;try{value=context.getFormattedValue(getObject("BuyerCostCenterOrdersTotalPercentage"),"#.#",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {161}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %> %)
</span><% } else { %><% processOpenTag(response, pageContext, "moneycalculator", new TagParameter[] {
new TagParameter("result","ZeroAmount"),
new TagParameter("operand1",getObject("BasketTotal")),
new TagParameter("operand2",getObject("BasketTotal")),
new TagParameter("method","subtract")}, 165); %><% {String value = null;try{value=context.getFormattedValue(getObject("ZeroAmount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {169}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %> 
<span class="label label-default pull-right">
(0.00 %)
</span><% } %></span>
</p><% _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("BasketApprovalExtension:OverallApprovalStatus:ID"),null).equals(context.getFormattedValue("pending",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",176,e);}if (_boolean_result) { %><% _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (getObject("RecurringBasket:Recurring"))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",177,e);}if (_boolean_result) { %><p class="row">
<strong class="col-xs-6"><% {out.write(localizeISText("approval.detailspage.budget.including_order.label","",null,null,null,null,null,null,null,null,null,null,null));} %></strong>
<span class="col-xs-6"><% _boolean_result=false;try {_boolean_result=((Boolean)(getObject("BuyerCostCenterOrdersTotal:Available"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",183,e);}if (_boolean_result) { %><% processOpenTag(response, pageContext, "moneycalculator", new TagParameter[] {
new TagParameter("result","BuyerCostCenterOrdersTotalEstimation"),
new TagParameter("operand1",getObject("BuyerCostCenterOrdersTotal")),
new TagParameter("operand2",getObject("BasketTotal")),
new TagParameter("method","add")}, 184); %><% } else { %><% {Object temp_obj = (getObject("BasketTotal")); getPipelineDictionary().put("BuyerCostCenterOrdersTotalEstimation", temp_obj);} %><% } %><% {String value = null;try{value=context.getFormattedValue(getObject("BuyerCostCenterOrdersTotalEstimation"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {192}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %><% {Object temp_obj = ((new Double( ((Number) getObject("BuyerCostCenterOrdersTotalEstimation:Value")).doubleValue() / ((Number) getObject("BuyerCostCenterLimit:Value")).doubleValue() *((Number) new Double(100)).doubleValue()))); getPipelineDictionary().put("BuyerCostCenterOrdersTotalPercentage", temp_obj);} %><% _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("BuyerCostCenterOrdersTotalPercentage")).doubleValue() >((Number)(new Double(100))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",194,e);}if (_boolean_result) { %><span class="label label-danger pull-right"><% } else { %><span class="label label-default pull-right"><% } %>
(<% {String value = null;try{value=context.getFormattedValue(getObject("BuyerCostCenterOrdersTotalPercentage"),"#.#",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {199}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %> %)
</span>
</span>
</p><% } %><% } %></div><% _boolean_result=false;try {_boolean_result=((Boolean)(getObject("CostCenterLimit:Available"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",208,e);}if (_boolean_result) { %><% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("BasketApprovalExtension:OverallApprovalStatus:ID"),null).equals(context.getFormattedValue("pending",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((((Boolean) getObject("RecurringBasket:Recurring")).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",209,e);}if (_boolean_result) { %><div class="col-sm-6"><% processOpenTag(response, pageContext, "indicatorbar", new TagParameter[] {
new TagParameter("Addition",getObject("BasketTotal")),
new TagParameter("Comparison",getObject("BuyerCostCenterOrdersTotal")),
new TagParameter("Limit",getObject("BuyerCostCenterLimit"))}, 211); %></div><% } else { %><div class="col-sm-6"><% processOpenTag(response, pageContext, "indicatorbar", new TagParameter[] {
new TagParameter("Comparison",getObject("BuyerCostCenterOrdersTotal")),
new TagParameter("Limit",getObject("BuyerCostCenterLimit"))}, 219); %></div><% } %><% } %><% } %> 
</div>
</div><% } %><% printFooter(out); %>