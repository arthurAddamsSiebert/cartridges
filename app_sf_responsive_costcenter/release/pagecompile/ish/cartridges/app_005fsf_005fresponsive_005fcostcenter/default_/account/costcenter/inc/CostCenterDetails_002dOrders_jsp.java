/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-16 22:40:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fsf_005fresponsive_005fcostcenter.default_.account.costcenter.inc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class CostCenterDetails_002dOrders_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
      out.write("<hr/>\n<div class=\"row\">\n<div class=\"col-xs-6\">\n<h3>");
 {out.write(localizeISText("account.costcenter.details.orders.list.title","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</h3>\n</div>\n</div>");
 {Object temp_obj = (getObject("CostCenterBO:Extension(\"CostCenterBOOrderExtension\"):Orders")); getPipelineDictionary().put("CostCenterOrderBOs", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("CostCenterOrderBOs")))).booleanValue() && ((Boolean) (hasLoopElements("CostCenterOrderBOs") ? Boolean.TRUE : Boolean.FALSE)).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",13,e);}if (_boolean_result) { 
      out.write("<div class=\"table-responsive\">\n<table class=\"table table-condensed\" data-testing-id=\"orders-list\" data-table=\"CostCenterOrdersList\">\n<thead>\n<th data-column-id=\"order-id\">");
 {out.write(localizeISText("account.costcenter.details.orders.list.header.no","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n<th data-column-id=\"order-items\">");
 {out.write(localizeISText("account.costcenter.details.orders.list.header.items","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n<th data-column-id=\"order-buyer\">");
 {out.write(localizeISText("account.costcenter.details.orders.list.header.buyer","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n<th data-column-id=\"order-date\">");
 {out.write(localizeISText("account.costcenter.details.orders.list.header.orderdate","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n<th data-column-id=\"order-status\">");
 {out.write(localizeISText("account.costcenter.details.orders.list.header.orderstatus","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n<th class=\"text-right\" data-column-id=\"order-total\">");
 {out.write(localizeISText("account.costcenter.details.orders.list.header.total","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n</thead>\n<tbody>");
 while (loop("CostCenterOrderBOs","OrderBO",null)) { 
      out.write("<tr>\n<td>\n<a href=\"");
      out.print(context.getFormattedValue(url(true,context.getFormattedValue(getObject("SecureURL"),null), context.getFormattedValue("",null), (new URLPipelineAction(context.getFormattedValue("ViewCostCenter-OrderDetails",null))), (new URLParameterSet().addURLParameter(context.getFormattedValue("OrderID",null),context.getFormattedValue(getObject("OrderBO:ID"),null)))),null));
      out.write('"');
      out.write('>');
 {String value = null;try{value=context.getFormattedValue(getObject("OrderBO:DocumentNo"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {42}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</a>\n</td>\n<td>");
 {String value = null;try{value=context.getFormattedValue(getObject("OrderBO:TotalProductQuantity"),new Integer(QUANTITY_SHORT),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {46}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n<td>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("OrderBO:BuyerFirstName"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("OrderBO:BuyerLastName"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",49,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(getObject("OrderBO:NotificationEmailAddress"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {50}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
 {String value = null;try{value=context.getFormattedValue(getObject("OrderBO:BuyerFirstName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {52}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(' ');
 {String value = null;try{value=context.getFormattedValue(getObject("OrderBO:BuyerLastName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {52}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("<br/>");
 } 
      out.write("</td>\n<td>");
 {String value = null;try{value=context.getFormattedValue(getObject("OrderBO:CreationDate"),new Integer(DATE_SHORT),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {56}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n<td>");
 processOpenTag(response, pageContext, "orderstatus", new TagParameter[] {
new TagParameter("Order",getObject("OrderBO"))}, 59); 
      out.write("</td>\n<td class=\"text-right\">");
 {String value = null;try{value=context.getFormattedValue(getObject("OrderBO:GrandTotalGross"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {62}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n</tr>");
 } 
      out.write("</tbody>\n</table>\n</div>\n<script>\n$('[data-table=\"CostCenterOrdersList\"]').DataTable({\n\"responsive\" : true, \n\"language\": {\n\"sEmptyTable\": \"");
 {out.write(localizeISText("datatables.sEmptyTable","javascript",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\",\n\"sInfo\": \"");
 {out.write(localizeISText("datatables.sInfo","javascript",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\",\n\"sInfoEmpty\": \"");
 {out.write(localizeISText("datatables.sInfoEmpty","javascript",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\",\n\"sInfoFiltered\": \"");
 {out.write(localizeISText("datatables.sInfoFiltered","javascript",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\",\n\"sLengthMenu\": \"");
 {out.write(localizeISText("datatables.sLengthMenu","javascript",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\",\n\"sLoadingRecords\": \"");
 {out.write(localizeISText("datatables.sLoadingRecords","javascript",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\",\n\"sProcessing\": \"");
 {out.write(localizeISText("datatables.sProcessing","javascript",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\",\n\"sSearch\": \"");
 {out.write(localizeISText("datatables.sSearch","javascript",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\",\n\"sZeroRecords\": \"");
 {out.write(localizeISText("datatables.sZeroRecords","javascript",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\",\n\"oPaginate\": {\n\"sFirst\": \"");
 {out.write(localizeISText("datatables.sFirst","javascript",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\",\n\"sLast\": \"");
 {out.write(localizeISText("datatables.sLast","javascript",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\",\n\"sNext\": \"");
 {out.write(localizeISText("datatables.sNext","javascript",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\",\n\"sPrevious\": \"");
 {out.write(localizeISText("datatables.sPrevious","javascript",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\"\n}\n}\n});\n</script>");
 } else { 
      out.write('<');
      out.write('p');
      out.write('>');
 {out.write(localizeISText("account.costcenter.details.orders.list.noorders","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>");
 } 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
