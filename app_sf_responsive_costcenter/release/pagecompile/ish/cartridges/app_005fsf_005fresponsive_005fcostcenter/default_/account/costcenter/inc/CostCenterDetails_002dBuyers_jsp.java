/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-16 22:40:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fsf_005fresponsive_005fcostcenter.default_.account.costcenter.inc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class CostCenterDetails_002dBuyers_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
 processOpenTag(response, pageContext, "userpermissionmap", new TagParameter[] {
new TagParameter("User",getObject("UserBO")),
new TagParameter("UserPermissionMap","UserPermissionMap")}, 3); 
      out.write("<hr/>\n<div class=\"row\">\n<div class=\"col-xs-6\">\n<h3>");
 {out.write(localizeISText("account.costcenter.details.buyers.list.title","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</h3>\n</div>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("UserPermissionMap:get(\"APP_B2B_MANAGE_COSTCENTER\")"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",11,e);}if (_boolean_result) { 
      out.write("<div class=\"col-xs-6\">\n<button \ndata-url=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewCostCenter-ShowAddBuyerForm",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("CostCenterID",null),context.getFormattedValue(getObject("CostCenterBO:ID"),null))).addURLParameter(context.getFormattedValue("CustomerID",null),context.getFormattedValue(getObject("CustomerBO:ID"),null))),null));
      out.write("\" \nclass=\"btn btn-default pull-right open-costcenter-modal\"\ndata-toggle=\"modal\"\ndata-quick-title=\"");
 {out.write(localizeISText("account.costcenter.details.buyers.action.add.quicktitle","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write('"');
      out.write('\n');
      out.write('>');
 {out.write(localizeISText("account.costcenter.details.buyers.action.add","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</button>\n</div>");
 } 
      out.write("</div>\n<div class=\"row\">\n<div class=\"col-xs-12\">\n<p>");
 {out.write(localizeISText("account.costcenter.details.buyers.list.titleinfo","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>\n</div>\n</div>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("Buyers")))).booleanValue() && ((Boolean) (hasLoopElements("Buyers") ? Boolean.TRUE : Boolean.FALSE)).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",27,e);}if (_boolean_result) { 
      out.write("<div class=\"row\">\n<div class=\"col-xs-12\">\n<div class=\"list-header\">\n<div class=\"list-header-item col-sm-2\">");
 {out.write(localizeISText("account.costcenter.details.buyers.list.header.name","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</div>\n<div class=\"list-header-item col-sm-3\">");
 {out.write(localizeISText("account.costcenter.details.buyers.list.header.approvedorders","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</div>\n<div class=\"list-header-item col-sm-3\">");
 {out.write(localizeISText("account.costcenter.details.buyers.list.header.pendingorders","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</div>\n<div class=\"list-header-item col-sm-4\">");
 {out.write(localizeISText("account.costcenter.details.buyers.list.header.orderspendlimit","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</div>\n</div>\n<div class=\"list-body\" data-testing-id=\"cost-center-buyers-list\">");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("Buyers")))).booleanValue() && ((Boolean) (hasLoopElements("Buyers") ? Boolean.TRUE : Boolean.FALSE)).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",46,e);}if (_boolean_result) { 
 while (loop("Buyers","BuyerBO",null)) { 
      out.write("<div class=\"list-item-row-big list-item-row\">\n<div class=\"list-item col-xs-12 col-sm-2\">\n<label class=\"hidden-lg hidden-md hidden-sm control-label\">");
 {out.write(localizeISText("account.costcenter.details.buyers.list.header.name","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</label>\n<span>");
 processOpenTag(response, pageContext, "username", new TagParameter[] {
new TagParameter("User",getObject("BuyerBO")),
new TagParameter("Customer",getObject("CustomerBO"))}, 51); 
      out.write("</span>\n</div>\n<div class=\"list-item col-xs-12 col-sm-3\">");
 {try{executePipeline("ProcessCostCenterBuyers-GetBuyerApprovedOrdersCount",((java.util.Map)(((new ParameterMap().addParameter(new ParameterEntry("CustomerBO",getObject("CustomerBO")))).addParameter(new ParameterEntry("BuyerBO",getObject("BuyerBO"))).addParameter(new ParameterEntry("OrderDomain",getObject("CurrentOrganization:OwningDomain"))).addParameter(new ParameterEntry("CostCenterBO",getObject("CostCenterBO"))).addParameter(new ParameterEntry("OrderCurrency",getObject("CurrentRequest:Currency")))))),"ApprovedOrdersResult");}catch(Exception e){Logger.error(this,"ISPIPELINE failed. Line: 55.",e);}} 
      out.write("<label class=\"hidden-lg hidden-md hidden-sm control-label\">");
 {out.write(localizeISText("account.costcenter.details.buyers.list.header.approvedorders","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</label>\n<span>");
 {String value = null;try{value=context.getFormattedValue(getObject("ApprovedOrdersResult:ApprovedOrdersCount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {59}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</span>\n</div>\n<div class=\"list-item col-xs-12 col-sm-3\">");
 processOpenTag(response, pageContext, "createmap", new TagParameter[] {
new TagParameter("key1","UserBO"),
new TagParameter("key2","BasketDomain"),
new TagParameter("key0","CustomerBO"),
new TagParameter("value2",getObject("CurrentOrganization:Domain")),
new TagParameter("value1",getObject("BuyerBO")),
new TagParameter("value0",getObject("CustomerBO")),
new TagParameter("mapname","Parameters")}, 63); 
 {try{executePipeline("ViewUsers-GetPendingOrdersCount",((java.util.Map)(getObject("Parameters"))),"PendingOrdersResult");}catch(Exception e){Logger.error(this,"ISPIPELINE failed. Line: 68.",e);}} 
      out.write("<label class=\"hidden-lg hidden-md hidden-sm control-label\">");
 {out.write(localizeISText("account.costcenter.details.buyers.list.header.pendingorders","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</label>\n<span>");
 {String value = null;try{value=context.getFormattedValue(getObject("PendingOrdersResult:PendingOrdersCount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {70}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</span>\n</div>");
 {Object temp_obj = (getObject("BuyerBO:Extension(\"UserBOOrderApprovalExtension\")")); getPipelineDictionary().put("OrderApprovalExtension", temp_obj);} 
 {Object temp_obj = (getObject("BuyerBO:Extension(\"UserBOCostCenterBudgetExtension\")")); getPipelineDictionary().put("CostCenterBudgetExtension", temp_obj);} 
      out.write("<div class=\"list-item col-xs-12 col-sm-3\">\n<label class=\"hidden-lg hidden-md hidden-sm control-label\">");
 {out.write(localizeISText("account.costcenter.details.buyers.list.header.orderspendlimit","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</label>\n<span>");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue(getObject("CostCenterBudgetExtension:Budget(CostCenterBO:ID)"),null) + context.getFormattedValue(" / ",null) + context.getFormattedValue(localizeText(context.getFormattedValue(context.getFormattedValue("account.costcenter.label.budget.period.",null) + context.getFormattedValue(getObject("CostCenterBudgetExtension:BudgetPeriod(CostCenterBO:ID)"),null),null)),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {77}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</span>\n</div>\n<div class=\"list-item col-xs-3 text-left-xs col-sm-1 text-right-sm text-right-lg\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("UserPermissionMap:get(\"APP_B2B_MANAGE_COSTCENTER\")"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",80,e);}if (_boolean_result) { 
      out.write("<a href=\"\"\ndata-url=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewCostCenter-EditBuyerBudget",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("CostCenterID",null),context.getFormattedValue(getObject("CostCenterBO:ID"),null))).addURLParameter(context.getFormattedValue("CustomerID",null),context.getFormattedValue(getObject("CustomerBO:ID"),null)).addURLParameter(context.getFormattedValue("BuyerID",null),context.getFormattedValue(getObject("BuyerBO:ID"),null)).addURLParameter(context.getFormattedValue("FormType",null),context.getFormattedValue("edit",null))),null));
      out.write("\" \nclass=\"btn-tool open-costcenter-modal\" \ndata-quick-title=\"");
 {out.write(localizeISText("account.costcenter.details.buyers.action.editbudget.title","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\">\n<span class=\"glyphicon glyphicon-pencil\" title=\"");
 {out.write(localizeISText("account.costcenter.details.action.edit","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\"></span>\n</a>\n<a href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewCostCenter-RemoveCostCenterBuyer",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("CostCenterID",null),context.getFormattedValue(getObject("CostCenterBO:ID"),null))).addURLParameter(context.getFormattedValue("BuyerID",null),context.getFormattedValue(getObject("BuyerBO:ID"),null))),null));
      out.write("\"\nclass=\"btn-tool\"\ndata-quick-title=\"");
 {out.write(localizeISText("account.costcenter.details.buyers.list.action.remove","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\">\n<span class=\"glyphicon glyphicon-trash\" title=\"");
 {out.write(localizeISText("account.costcenter.list.action.remove.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\"></span>\n</a>");
 } 
      out.write("</div>\n</div>");
 } 
 } 
      out.write("</div>\n</table>\n</div>");
 } else { 
      out.write('<');
      out.write('p');
      out.write('>');
 {out.write(localizeISText("account.costcenter.details.buyers.list.nobuyers","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>");
 } 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
