<%@  page buffer="none" import="java.util.*,java.io.*,com.intershop.beehive.core.internal.template.*,com.intershop.beehive.core.internal.template.isml.*,com.intershop.beehive.core.capi.log.*,com.intershop.beehive.core.capi.resource.*,com.intershop.beehive.core.capi.util.UUIDMgr,com.intershop.beehive.core.capi.util.XMLHelper,com.intershop.beehive.foundation.util.*,com.intershop.beehive.core.internal.url.*,com.intershop.beehive.core.internal.resource.*,com.intershop.beehive.core.internal.wsrp.*,com.intershop.beehive.core.capi.pipeline.PipelineDictionary,com.intershop.beehive.core.capi.naming.NamingMgr,com.intershop.beehive.core.capi.pagecache.PageCacheMgr,com.intershop.beehive.core.capi.request.SessionMgr,com.intershop.beehive.core.internal.request.SessionMgrImpl,com.intershop.beehive.core.pipelet.PipelineConstants" extends="com.intershop.beehive.core.internal.template.AbstractTemplate" %><% 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 %><% %><%! protected Boolean printTemplateMarker() { return Boolean.FALSE; } %><%%><%@ page contentType="text/xml;charset=utf-8" %><%setEncodingType("text/xml"); %><% {Object temp_obj = ("OrderStateGroup"); getPipelineDictionary().put("OrderStateGroup", temp_obj);} %><% {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"inc/cXMLHeader.isml", null, "4");} %><Header>
<From>
<Credential domain='<% {String value = null;try{value=context.getFormattedValue(getObject("SetupRequestInfo:To:Domain"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {9}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>'>
<Identity><% {String value = null;try{value=context.getFormattedValue(getObject("SetupRequestInfo:To:Identity"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {10}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></Identity>
</Credential>
</From>
<To>
<Credential domain='<% {String value = null;try{value=context.getFormattedValue(getObject("SetupRequestInfo:From:Domain"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {14}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>'>
<Identity><% {String value = null;try{value=context.getFormattedValue(getObject("SetupRequestInfo:From:Identity"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {15}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></Identity>
</Credential>
</To>
<Sender>
<Credential domain='<% {String value = null;try{value=context.getFormattedValue(getObject("OrgName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {19}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>'>
<Identity>admin@<% {String value = null;try{value=context.getFormattedValue(getObject("OrgName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {20}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></Identity>
</Credential>
<UserAgent><% {String value = null;try{value=context.getFormattedValue(getObject("ProductName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {22}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></UserAgent>
</Sender>
</Header>
<Message><% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("StatusCode")))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("StatusCode"),null).equals(context.getFormattedValue("200",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",26,e);}if (_boolean_result) { %><Status code='<% {String value = null;try{value=context.getFormattedValue(getObject("StatusCode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {26}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>' text='<% {String value = null;try{value=context.getFormattedValue(getObject("StatusText"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {26}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>'></Status><% } %><PunchOutOrderMessage>
<BuyerCookie><% {String value = null;try{value=context.getFormattedValue(getObject("SetupRequestInfo:BuyerCookie"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {28}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></BuyerCookie>
<PunchOutOrderMessageHeader operationAllowed='<% _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("Requisition:State(OrderStateGroup)")).doubleValue() ==((Number)(new Double(1000))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",29,e);}if (_boolean_result) { %>edit<% } else { %>inspect<% } %>'>
<Total>
<Money currency='<% _boolean_result=false;try {_boolean_result=((Boolean)(((!((Boolean) (disableErrorMessages().isDefined(getObject("StatusCode")))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("StatusCode"),null).equals(context.getFormattedValue("200",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",31,e);}if (_boolean_result) { %><% {String value = null;try{value=context.getFormattedValue(getObject("Requisition:GrandTotalNetPriceLC:CurrencyMnemonic"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {31}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %><% } %>'><% _boolean_result=false;try {_boolean_result=((Boolean)(((!((Boolean) (disableErrorMessages().isDefined(getObject("StatusCode")))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("StatusCode"),null).equals(context.getFormattedValue("200",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",31,e);}if (_boolean_result) { %><% {String value = null;try{value=context.getFormattedValue(getObject("Requisition:GrandTotalNetPriceLC:Value"),"0.00",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {31}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %><% } %></Money>
</Total><% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((Boolean) (disableErrorMessages().isDefined(getObject("StatusCode")))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("StatusCode"),null).equals(context.getFormattedValue("200",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",33,e);}if (_boolean_result) { %> 
<Shipping>
<Money currency='<% {String value = null;try{value=context.getFormattedValue(getObject("Requisition:Shipping:NetPricePC:CurrencyMnemonic"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {35}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>'><% {String value = null;try{value=context.getFormattedValue(getObject("Requisition:Shipping:NetPricePC"),"0.00",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {35}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></Money>
<Description xml:lang='en-us'><% _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("Requisition:ShippingMethod:DisplayName"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",36,e);}if (_boolean_result) { %><% {String value = null;try{value=context.getFormattedValue(getObject("Requisition:ShippingMethod:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {36}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %><% } else { %><% {String value = null;try{value=context.getFormattedValue(getObject("Requisition:ShippingMethod:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {36}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %><% } %></Description>
</Shipping><% _boolean_result=false;try {_boolean_result=((Boolean)(getObject("Requisition:GrandTotalTaxPC:isAvailable"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",38,e);}if (_boolean_result) { %><Tax>
<Money currency='<% {String value = null;try{value=context.getFormattedValue(getObject("Requisition:GrandTotalTaxPC:CurrencyMnemonic"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {40}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>'><% {String value = null;try{value=context.getFormattedValue(getObject("Requisition:GrandTotalTaxPC:Value"),"0.00",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {40}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></Money>
<Description xml:lang='en'>Value-added tax</Description>
</Tax><% } %><% } %></PunchOutOrderMessageHeader><% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((Boolean) (disableErrorMessages().isDefined(getObject("StatusCode")))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("StatusCode"),null).equals(context.getFormattedValue("200",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",46,e);}if (_boolean_result) { %><% while (loop("Requisition:ProductLineItemsOrderedByPosition","PLI",null)) { %><ItemIn quantity='<% {String value = null;try{value=context.getFormattedValue(getObject("PLI:Quantity:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {48}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>' lineNumber='<% {String value = null;try{value=context.getFormattedValue(getObject("PLI:Position"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {48}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>'>
<ItemID>
<SupplierPartID><% {String value = null;try{value=context.getFormattedValue(getObject("PLI:OfferProductRef"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {50}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></SupplierPartID>
<SupplierPartAuxiliaryID><% {String value = null;try{value=context.getFormattedValue(getObject("Requisition:UUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {51}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>@<% {String value = null;try{value=context.getFormattedValue(getObject("Requisition:Oca"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {51}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></SupplierPartAuxiliaryID>
</ItemID>
<ItemDetail>
<UnitPrice>
<Money currency='<% {String value = null;try{value=context.getFormattedValue(getObject("PLI:SinglePricePC:CurrencyMnemonic"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {55}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>'><% {String value = null;try{value=context.getFormattedValue(getObject("PLI:SinglePricePC:Value"),"0.00",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {55}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></Money>
</UnitPrice>
<Description xml:lang='en'>
<ShortName><% {String value = null;try{value=context.getFormattedValue(getObject("PLI:ProductName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {58}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></ShortName><% {String value = null;try{value=context.getFormattedValue(getObject("PLI:ShortDescription"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {59}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></Description>
<UnitOfMeasure><% {String value = null;try{value=context.getFormattedValue(getObject("PLI:Quantity:Unit"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {61}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></UnitOfMeasure>
<Classification domain=''></Classification>
<Extrinsic name='TaxClass'><% {String value = null;try{value=context.getFormattedValue(getObject("PLI:TaxClassCode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {63}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></Extrinsic>
<Extrinsic name='TaxRate'><% {String value = null;try{value=context.getFormattedValue(getObject("PLI:TaxRate"),"0.00",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {64}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></Extrinsic>
</ItemDetail>
<Tax>
<Money currency='<% {String value = null;try{value=context.getFormattedValue(getObject("PLI:TaxPC:CurrencyMnemonic"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {67}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>'><% {String value = null;try{value=context.getFormattedValue(getObject("PLI:TaxPC:Value"),"0.00#",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {67}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></Money>
<Description xml:lang='en'>Value-added tax</Description>
</Tax>
<ShipTo>
<Address addressID='<% {String value = null;try{value=context.getFormattedValue(getObject("PLI:ShipToAddressID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {71}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>'>
<Name xml:lang='en'><% {String value = null;try{value=context.getFormattedValue(getObject("PLI:ShipToAddress:AddressName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {72}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></Name>
<PostalAddress>
<DeliverTo><% {String value = null;try{value=context.getFormattedValue(getObject("PLI:ShipToAddress:FirstName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {74}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %> <% {String value = null;try{value=context.getFormattedValue(getObject("PLI:ShipToAddress:LastName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {74}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></DeliverTo>
<Street><% {String value = null;try{value=context.getFormattedValue(getObject("PLI:ShipToAddress:Street"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {75}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></Street>
<City><% {String value = null;try{value=context.getFormattedValue(getObject("PLI:ShipToAddress:City"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {76}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></City>
<State><% {String value = null;try{value=context.getFormattedValue(getObject("PLI:ShipToAddress:State"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {77}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></State>
<PostalCode><% {String value = null;try{value=context.getFormattedValue(getObject("PLI:ShipToAddress:PostalCode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {78}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></PostalCode>
<Country isoCountryCode='<% {String value = null;try{value=context.getFormattedValue(getObject("PLI:ShipToAddress:CountryCode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {79}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>'><% {String value = null;try{value=context.getFormattedValue(getObject("PLI:ShipToAddress:Country"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {79}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></Country>
</PostalAddress>
</Address>
</ShipTo>
</ItemIn><% } %><% } %></PunchOutOrderMessage>
</Message>
</cXML><% printFooter(out); %>