/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-16 22:40:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fsf_005fresponsive.default_.modules.productlisting;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class ProductList_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
response.setHeader(TemplateConstants.PERSONALIZED_HEADER, "1");setEncodingType("text/html"); 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"modules/Modules", null, "2");} 
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("ProductBOs") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",4,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("CatalogBO:Extension(\"Inventory\")")); getPipelineDictionary().put("CatalogCategoryInventory", temp_obj);} 
 {Object temp_obj = (getObject("CatalogCategoryInventory:InventoryStatusForProductsInWarehouse(ProductBOs)")); getPipelineDictionary().put("InventoryMappings", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("maxNumberOfProducts"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",10,e);}if (_boolean_result) { 
 {Object temp_obj = ((new Double( ((Number) getObject("maxNumberOfProducts")).doubleValue() *((Number) new Double(1.0)).doubleValue()))); getPipelineDictionary().put("maxNumberOfProducts", temp_obj);} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("listBehavior")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("listBehavior"),null).equals(context.getFormattedValue("carousel",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",15,e);}if (_boolean_result) { 
      out.write("<div class=\"product-list slick-carousel\" \n");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("numberOfProductsPerSlide"),null).equals(context.getFormattedValue("1",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",18,e);}if (_boolean_result) { 
      out.write("\ndata-slick='{\"slidesToShow\": 1, \"slidesToScroll\": 1}'\n");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("numberOfProductsPerSlide"),null).equals(context.getFormattedValue("2",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",20,e);}if (_boolean_result) { 
      out.write("\ndata-slick='{\"slidesToShow\": 2, \"slidesToScroll\": 2}'\n");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("numberOfProductsPerSlide"),null).equals(context.getFormattedValue("3",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",22,e);}if (_boolean_result) { 
      out.write("\ndata-slick='{\"slidesToShow\": 3, \"slidesToScroll\": 3, \"responsive\": [{\"breakpoint\": 992, \"settings\": {\"slidesToShow\": 2, \"slidesToScroll\": 2}}]}'\n");
 } else { 
      out.write("\ndata-slick='{\"slidesToShow\": 4, \"slidesToScroll\": 4, \"responsive\": [{\"breakpoint\": 992, \"settings\": {\"slidesToShow\": 3, \"slidesToScroll\": 3}}, {\"breakpoint\": 768, \"settings\": {\"slidesToShow\": 2, \"slidesToScroll\": 2}}]}'\n");
 }}} 
      out.write('\n');
      out.write('>');
 } else { 
      out.write("<div class=\"product-list row\">");
 } 
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("ProductsCounter", temp_obj);} 
 while (loop("ProductBOs","ProductBO",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("ProductBO:Online")).booleanValue() && ((Boolean) getObject("ProductBO:Accessible")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",34,e);}if (_boolean_result) { 
 {Object temp_obj = ((new Double( ((Number) getObject("ProductsCounter")).doubleValue() +((Number) new Double(1)).doubleValue()))); getPipelineDictionary().put("ProductsCounter", temp_obj);} 
 {Object temp_obj = (getObject("ProductBO")); getPipelineDictionary().put("ProductBO", temp_obj);} 
 {Object temp_obj = (getObject("InventoryMappings:get(ProductBO:ProductRef)")); getPipelineDictionary().put("InventoryStatus", temp_obj);} 
 {Object temp_obj = (getObject("ListNavigationVO:SearchResult:FilteredVariationsCount(ProductBO:ProductBOMaster:ID)")); getPipelineDictionary().put("FilteredVariationsCount", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("FilteredVariationsCount")))).booleanValue() && ((Boolean) ((( ((Number) getObject("FilteredVariationsCount")).doubleValue() >((Number)(new Double(0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",39,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("ListNavigationVO:SearchResult:Query")); getPipelineDictionary().put("SearchParameter", temp_obj);} 
 } else { 
 {Object temp_obj = (""); getPipelineDictionary().put("SearchParameter", temp_obj);} 
 } 
 {Object key_obj = getObject("ProductBO"); NamingMgr.getManager(PageCacheMgr.class).registerObject(getObject("ProductBO"));} 
      out.write("<div class=\"product-list-item ");
 {String value = null;try{value=context.getFormattedValue(getObject("listItemCssClass"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {45}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write(' ');
 _boolean_result=false;try {_boolean_result=((Boolean)((((!(context.getFormattedValue(getObject("SearchParameter"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",45,e);}if (_boolean_result) { 
      out.write("data-search=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("SearchParameter"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {45}",e);}if (value==null) value="";value = encodeString(value,"url");out.write(value);} 
      out.write('"');
 } 
      out.write('>');
 processOpenTag(response, pageContext, "uuid", new TagParameter[] {
new TagParameter("name","RenderEntityID")}, 46); 
 processOpenTag(response, pageContext, "renderentityrenderingstart", new TagParameter[] {
new TagParameter("RenderEntityRenderObject",getObject("ProductBO")),
new TagParameter("RenderEntityID",getObject("RenderEntityID"))}, 47); 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("viewContext"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",48,e);}if (_boolean_result) { 
 processOpenTag(response, pageContext, "viewcontext", new TagParameter[] {
new TagParameter("ViewContext",getObject("viewContext"))}, 49); 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("viewContextID")))).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("viewContextResourceSet")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",50,e);}if (_boolean_result) { 
 processOpenTag(response, pageContext, "viewcontext", new TagParameter[] {
new TagParameter("ID",getObject("viewContextID")),
new TagParameter("ResourceSet",getObject("viewContextResourceSet"))}, 51); 
 }} 
 processOpenTag(response, pageContext, "renderentityrenderingend", new TagParameter[] {
new TagParameter("RenderEntityRenderObject",getObject("ProductBO")),
new TagParameter("RenderEntityID",getObject("RenderEntityID"))}, 53); 
      out.write("</div>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("maxNumberOfProducts")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("ProductsCounter"),null).equals(context.getFormattedValue(getObject("maxNumberOfProducts"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",55,e);}if (_boolean_result) { 
 if (getLoopStack().isEmpty()) {Logger.error(this,"ISBREAK occured outside ISLOOP. Line: {}",56);}else{getLoopStack().pop();break;} 
 } 
 } 
 } 
      out.write("</div>");
 processOpenTag(response, pageContext, "includetrackingtool", new TagParameter[] {
new TagParameter("template","RecommendationsTracking")}, 62); 
 } 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
