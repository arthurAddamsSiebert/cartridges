/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-16 22:40:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fsf_005fresponsive.default_.modules.product;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class AddToCartInc_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
      out.write("<div class=\"add-to-cart\">");
 {Object temp_obj = (getObject("ProductBO:Extension(\"Pricing\")")); getPipelineDictionary().put("ProductPrice", temp_obj);} 
 processOpenTag(response, pageContext, "currentcustomerbo", new TagParameter[] {
new TagParameter("currentcustomerbo","CustomerBO")}, 5); 
 processOpenTag(response, pageContext, "getproductpricecontext", new TagParameter[] {
new TagParameter("CustomerBO",getObject("CustomerBO")),
new TagParameter("ProductPriceContext","ProductPriceContext")}, 6); 
 {Object temp_obj = (getObject("ProductPrice:Price(\"SalePrice\",Currency,ProductPriceContext)")); getPipelineDictionary().put("salePrice", temp_obj);} 
 {Object temp_obj = (getObject("ProductBO:Extension(\"Inventory\")")); getPipelineDictionary().put("ProductInventory", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ProductInventory:ServiceEnabled"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",10,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("InventoryStatus")))).booleanValue() && ((Boolean) getObject("InventoryStatus:InStock")).booleanValue() && ((Boolean) getObject("salePrice:Price:Available")).booleanValue() && !((Boolean) (getObject("ProductBO:OrderableAsDependentOnly"))).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("ProductBO:TaxClassID")))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("ProductBO:TaxClassID"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && !((Boolean) (((((Boolean) getObject("ProductBO:isLastOrderDate")).booleanValue() || ((Boolean) getObject("ProductBO:isEndOfLife")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && !((Boolean) (getObject("ProductBO:ProductMaster"))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",11,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((disableErrorMessages().isDefined(getObject("addToCartBehavior")))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",20,e);}if (_boolean_result) { 
      out.write("<input type=\"hidden\" name=\"addToCartBehavior\"\nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("addToCartBehavior"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {22}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" />");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ProductBO:ServiceType:DigitalGiftCard"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",25,e);}if (_boolean_result) { 
      out.write("<a class=\"btn btn-primary ");
 {String value = null;try{value=context.getFormattedValue(getObject("class"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {26}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('\n');
 {String value = null;try{value=context.getFormattedValue(getObject("DataAttributes"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {27}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\ndata-dialog\n");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("addToCartBehavior"),null).equals(context.getFormattedValue("expresscart",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",29,e);}if (_boolean_result) { 
      out.write("\nhref=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewGiftCertificates-ViewGiftCertificateForm",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("SKU",null),context.getFormattedValue(getObject("ProductBO:SKU"),null))).addURLParameter(context.getFormattedValue("addToCartBehavior",null),context.getFormattedValue("expresscart",null))),null));
      out.write('"');
      out.write('\n');
 } else { 
      out.write("\nhref=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewGiftCertificates-ViewGiftCertificateForm",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("SKU",null),context.getFormattedValue(getObject("ProductBO:SKU"),null)))),null));
      out.write('"');
      out.write('\n');
 } 
      out.write("\ntitle=\"");
 {out.write(localizeISText("product.add_to_cart.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" data-testing-id=\"addToCartButton\"\n>");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("DisplayType"),null).equals(context.getFormattedValue("glyphicon",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",36,e);}if (_boolean_result) { 
      out.write("<span class=\"glyphicon glyphicon-shopping-cart\"></span>");
 } else { 
 {out.write(localizeISText("product.add_to_cart.link","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
      out.write("</a>");
 } else { 
      out.write("<button type=\"submit\" name=\"addProduct\"\nclass=\"btn ");
 {String value = null;try{value=context.getFormattedValue(getObject("class"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {44}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(' ');
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("DisplayType"),null).equals(context.getFormattedValue("glyphicon",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",44,e);}if (_boolean_result) { 
      out.write("btn-primary");
 } 
      out.write('"');
      out.write('\n');
 {String value = null;try{value=context.getFormattedValue(getObject("DataAttributes"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {45}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("addToCartBehavior"),null).equals(context.getFormattedValue("expresscart",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",46,e);}if (_boolean_result) { 
      out.write("\ndata-expresscart\ndata-expresscart-action=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewExpressShop-AddProduct",null)))),null));
      out.write('"');
      out.write('\n');
 } 
      out.write("\ntitle=\"");
 {out.write(localizeISText("product.add_to_cart.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" data-testing-id=\"addToCartButton\"\n>");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("DisplayType"),null).equals(context.getFormattedValue("glyphicon",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",52,e);}if (_boolean_result) { 
      out.write("<span class=\"glyphicon glyphicon-shopping-cart\"></span>");
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ProductBO:isRetailSet"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",55,e);}if (_boolean_result) { 
 {out.write(localizeISText("product.add_to_cart.retailset.link","",null,null,null,null,null,null,null,null,null,null,null));} 
 } else { 
 {out.write(localizeISText("product.add_to_cart.link","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
 } 
      out.write("</button>");
 } 
 } 
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("ProductBO:InventoryStatus:InStock")).booleanValue() && ((Boolean) getObject("salePrice:Price:Available")).booleanValue() && !((Boolean) (getObject("ProductBO:OrderableAsDependentOnly"))).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("ProductBO:TaxClassID")))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("ProductBO:TaxClassID"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && !((Boolean) (((((Boolean) getObject("ProductBO:isLastOrderDate")).booleanValue() || ((Boolean) getObject("ProductBO:isEndOfLife")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && !((Boolean) (getObject("ProductBO:ProductMaster"))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",65,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((disableErrorMessages().isDefined(getObject("addToCartBehavior")))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",72,e);}if (_boolean_result) { 
      out.write("<input type=\"hidden\" name=\"addToCartBehavior\"\nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("addToCartBehavior"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {74}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" />");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ProductBO:ServiceType:DigitalGiftCard"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",77,e);}if (_boolean_result) { 
      out.write("<a class=\"btn btn-primary ");
 {String value = null;try{value=context.getFormattedValue(getObject("class"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {78}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('\n');
 {String value = null;try{value=context.getFormattedValue(getObject("DataAttributes"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {79}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\ndata-dialog\n");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("addToCartBehavior"),null).equals(context.getFormattedValue("expresscart",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",81,e);}if (_boolean_result) { 
      out.write("\nhref=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewGiftCertificates-ViewGiftCertificateForm",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("SKU",null),context.getFormattedValue(getObject("ProductBO:SKU"),null))).addURLParameter(context.getFormattedValue("addToCartBehavior",null),context.getFormattedValue("expresscart",null))),null));
      out.write('"');
      out.write('\n');
 } else { 
      out.write("\nhref=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewGiftCertificates-ViewGiftCertificateForm",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("SKU",null),context.getFormattedValue(getObject("ProductBO:SKU"),null)))),null));
      out.write('"');
      out.write('\n');
 } 
      out.write("\ntitle=\"");
 {out.write(localizeISText("product.add_to_cart.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" data-testing-id=\"addToCartButton\"\n>");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("DisplayType"),null).equals(context.getFormattedValue("glyphicon",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",88,e);}if (_boolean_result) { 
      out.write("<span class=\"glyphicon glyphicon-shopping-cart\"></span>");
 } else { 
 {out.write(localizeISText("product.add_to_cart.link","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
      out.write("</a>");
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ProductInventory:ServiceEnabled"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",95,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("InventoryStatus")))).booleanValue() && ((Boolean) getObject("InventoryStatus:InStock")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",96,e);}if (_boolean_result) { 
      out.write("<button type=\"submit\" name=\"addProduct\"\nclass=\"btn ");
 {String value = null;try{value=context.getFormattedValue(getObject("class"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {98}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(' ');
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("DisplayType"),null).equals(context.getFormattedValue("glyphicon",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",98,e);}if (_boolean_result) { 
      out.write("btn-primary");
 } 
      out.write('"');
      out.write('\n');
 {String value = null;try{value=context.getFormattedValue(getObject("DataAttributes"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {99}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("addToCartBehavior"),null).equals(context.getFormattedValue("expresscart",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",100,e);}if (_boolean_result) { 
      out.write("\ndata-expresscart\ndata-expresscart-action=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewExpressShop-AddProduct",null)))),null));
      out.write('"');
      out.write('\n');
 } 
      out.write("\ntitle=\"");
 {out.write(localizeISText("product.add_to_cart.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" data-testing-id=\"addToCartButton\"\n>");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("DisplayType"),null).equals(context.getFormattedValue("glyphicon",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",106,e);}if (_boolean_result) { 
      out.write("<span class=\"glyphicon glyphicon-shopping-cart\"></span>");
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ProductBO:isRetailSet"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",109,e);}if (_boolean_result) { 
 {out.write(localizeISText("product.add_to_cart.retailset.link","",null,null,null,null,null,null,null,null,null,null,null));} 
 } else { 
 {out.write(localizeISText("product.add_to_cart.link","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
 } 
      out.write("</button>");
 } 
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ProductBO:InventoryStatus:InStock"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",118,e);}if (_boolean_result) { 
      out.write("<button type=\"submit\" name=\"addProduct\"\nclass=\"btn ");
 {String value = null;try{value=context.getFormattedValue(getObject("class"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {120}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(' ');
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("DisplayType"),null).equals(context.getFormattedValue("glyphicon",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",120,e);}if (_boolean_result) { 
      out.write("btn-primary");
 } 
      out.write('"');
      out.write('\n');
 {String value = null;try{value=context.getFormattedValue(getObject("DataAttributes"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {121}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("addToCartBehavior"),null).equals(context.getFormattedValue("expresscart",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",122,e);}if (_boolean_result) { 
      out.write("\ndata-expresscart\ndata-expresscart-action=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewExpressShop-AddProduct",null)))),null));
      out.write('"');
      out.write('\n');
 } 
      out.write("\ntitle=\"");
 {out.write(localizeISText("product.add_to_cart.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" data-testing-id=\"addToCartButton\"\n>");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("DisplayType"),null).equals(context.getFormattedValue("glyphicon",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",128,e);}if (_boolean_result) { 
      out.write("<span class=\"glyphicon glyphicon-shopping-cart\"></span>");
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ProductBO:isRetailSet"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",131,e);}if (_boolean_result) { 
 {out.write(localizeISText("product.add_to_cart.retailset.link","",null,null,null,null,null,null,null,null,null,null,null));} 
 } else { 
 {out.write(localizeISText("product.add_to_cart.link","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
 } 
      out.write("</button>");
 } 
 } 
 } 
 } 
 } 
      out.write("</div>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
