/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-16 22:40:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fsf_005fresponsive.default_.modules.search.index;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;
import com.intershop.beehive.app.capi.AppContext;
import com.intershop.beehive.core.capi.app.AppContextUtil;
import com.intershop.beehive.xcs.capi.catalog.CatalogCategory;
import com.intershop.component.catalog.capi.CatalogBORepository;
import com.intershop.component.catalog.capi.CatalogBORepositoryExtension;
import com.intershop.component.catalog.capi.CatalogCategoryBO;
import com.intershop.component.application.capi.ApplicationBO;
import com.intershop.component.catalog.capi.CatalogBO;
import com.intershop.application.responsive.internal.searchindex.FilterUtils;

public final class Filter_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 

String paramsName = (String)getObject("params");
Object params = getObject(paramsName);
if(params != null)
{
	getPipelineDictionary().put("TmpParams", params);
}
getPipelineDictionary().put("SearchIndexFilterUtils", FilterUtils.INSTANCE);

 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (disableErrorMessages().isDefined(getObject("showcount")))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",22,e);}if (_boolean_result) { 
 {Object temp_obj = ("true"); getPipelineDictionary().put("showcount", temp_obj);} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("filter:ConfigurationAttribute:FilterOptions:DisplayType"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",25,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("filter:ConfigurationAttribute:FilterOptions:DisplayType")); getPipelineDictionary().put("displayType", temp_obj);} 
 } else { 
 {Object temp_obj = ("text"); getPipelineDictionary().put("displayType", temp_obj);} 
 } 
 {Object temp_obj = ("filter-list"); getPipelineDictionary().put("displayClass", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("filter:ConfigurationAttribute:FilterOptions:SelectionType"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",32,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("filter:ConfigurationAttribute:FilterOptions:SelectionType")); getPipelineDictionary().put("selectionType", temp_obj);} 
 } else { 
 {Object temp_obj = ("single"); getPipelineDictionary().put("selectionType", temp_obj);} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) ((disableErrorMessages().isDefined(getObject("showselected"))))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",37,e);}if (_boolean_result) { 
 {Object temp_obj = ("true"); getPipelineDictionary().put("showselected", temp_obj);} 
 } 
 {Object temp_obj = (getObject("CategoryBO")); getPipelineDictionary().put("BackupCategoryBO", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("sortvalue"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",45,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("sortvalue")); getPipelineDictionary().put("tmp_sortvalue", temp_obj);} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("filter"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",50,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("filter:FilterAttributeEntry") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",51,e);}if (_boolean_result) { 
 {Object temp_obj = ("false"); getPipelineDictionary().put("EntrySelected", temp_obj);} 
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("SelectedLevel", temp_obj);} 
 {Object temp_obj = ("false"); getPipelineDictionary().put("HasUnselectedValues", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((((!(context.getFormattedValue(getObject("page"),null).equals(context.getFormattedValue("category",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",57,e);}if (_boolean_result) { 
      out.write("<h3 data-toggle=\"collapse\" href=\"");
      out.print(context.getFormattedValue("#",null));
 {String value = null;try{value=context.getFormattedValue(replace(context.getFormattedValue((context.getFormattedValue(getObject("filter:ConfigurationAttribute:Name"),null).trim()),null),(String)("[^A-Za-z0-9]"),(String)("_")),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {58}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("_id\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((((!(context.getFormattedValue(getObject("filter:ConfigurationAttribute:FilterOptions:DisplayName"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",59,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(getObject("filter:ConfigurationAttribute:FilterOptions:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {60}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(" <span class=\"glyphicon glyphicon-chevron-down pull-right\"></span>");
 } else { 
 {String value = null;try{value=context.getFormattedValue(getObject("filter:ConfigurationAttribute:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {62}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(" <span class=\"glyphicon glyphicon-chevron-down pull-right\"></span>");
 } 
      out.write("</h3>");
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("categoryObj:RootCatalogCategoryBO:DisplayName"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",66,e);}if (_boolean_result) { 
      out.write("<h3 data-toggle=\"collapse\" href=\"");
      out.print(context.getFormattedValue("#",null));
 {String value = null;try{value=context.getFormattedValue(replace(context.getFormattedValue((context.getFormattedValue(getObject("filter:ConfigurationAttribute:Name"),null).trim()),null),(String)("[^A-Za-z0-9]"),(String)("_")),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {67}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("_id\">");
 {String value = null;try{value=context.getFormattedValue(getObject("categoryObj:RootCatalogCategoryBO:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {68}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(" <span class=\"glyphicon glyphicon-chevron-down pull-right\"></span>\n</h3>");
 } 
 } 
      out.write("<ul class=\"filter-list ");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("page"),null).equals(context.getFormattedValue("category",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",72,e);}if (_boolean_result) { 
      out.write("filter-category");
 } 
      out.write('"');
      out.write('>');
 while (loop("filter:FilterAttributeEntry","entry",null)) { 
 {Object temp_obj = (""); getPipelineDictionary().put("CssParametricClass", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("entry:Level")).doubleValue() >((Number)(new Double(0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",76,e);}if (_boolean_result) { 
 {Object temp_obj = (context.getFormattedValue("filter-layer",null) + context.getFormattedValue(getObject("entry:Level"),null)); getPipelineDictionary().put("CssParametricClass", temp_obj);} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("entry:isSelected")).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("entry:Value"),null).equals(context.getFormattedValue("SHOWALL",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("entry:Value"),null).equals(context.getFormattedValue("SHOWLESS",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",79,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("entry:Level")); getPipelineDictionary().put("SelectedLevel", temp_obj);} 
 {Object temp_obj = ("true"); getPipelineDictionary().put("EntrySelected", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("showselected"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",83,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("entry:Name"),null).equals(context.getFormattedValue("ContextCategoryUUID",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("selectionType"),null).equals(context.getFormattedValue("taxonomic",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",85,e);}if (_boolean_result) { 
 } else { 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"modules/search/index/RemovedSelectionQuery", null, "87");} 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("displayType"),null).equals(context.getFormattedValue("text_clear",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) (((((Boolean) (((!(context.getFormattedValue(getObject("selectionType"),null).equals(context.getFormattedValue("taxonomic",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((!((Boolean) getObject("entry:CatalogCategory:RootCategory")).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("ListNavigationVO:SearchTerm")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",88,e);}if (_boolean_result) { 
 } else { 
      out.write("<li class=\"filter-item filter-selected ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("displayType"),null).equals(context.getFormattedValue("swatch",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",91,e);}if (_boolean_result) { 
      out.write("filter-colour");
 } 
      out.write(' ');
 {String value = null;try{value=context.getFormattedValue(getObject("CssParametricClass"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {91}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write(' ');
      out.write('>');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("displayType"),null).equals(context.getFormattedValue("text_clear",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) (((((Boolean) (((!(context.getFormattedValue(getObject("selectionType"),null).equals(context.getFormattedValue("taxonomic",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((!((Boolean) getObject("entry:CatalogCategory:RootCategory")).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("ListNavigationVO:SearchTerm")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",92,e);}if (_boolean_result) { 
      out.write("<a class=\"ish-pageNavigation-filters-filter-clear\" href=\"");
 processOpenTag(response, pageContext, "filterlink", new TagParameter[] {
new TagParameter("pipelinename",getObject("pipeline")),
new TagParameter("catalogid",getObject("entry:CatalogCategory:UUID")),
new TagParameter("catalogcategoryid",getObject("tmp_catalogcategory_uuid")),
new TagParameter("sortvalue",getObject("tmp_sortvalue")),
new TagParameter("pagesize",getObject("query:PageSize")),
new TagParameter("searchparameter",getObject("tmp_remove_query")),
new TagParameter("params","TmpParams")}, 94); 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("search.filter.clear.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a>");
 } 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"modules/search/index/SelectedFilterValueItem", null, "103");} 
      out.write("</li>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("displayType"),null).equals(context.getFormattedValue("text_clear",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",106,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("entry:CatalogCategory:RootCategory")).booleanValue() && !((Boolean) ((disableErrorMessages().isDefined(getObject("ListNavigationVO:SearchTerm"))))).booleanValue() || ((Boolean) (((((Boolean) (((!(context.getFormattedValue(getObject("selectionType"),null).equals(context.getFormattedValue("taxonomic",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("entry:Name"),null).equals(context.getFormattedValue("ContextCategoryUUID",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",107,e);}if (_boolean_result) { 
 } else { 
      out.write("<li class=\"filter-item filter-selected ");
 {String value = null;try{value=context.getFormattedValue(getObject("CssParametricClass"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {110}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" >\n<a class=\"filter-clear\" href=\"");
 processOpenTag(response, pageContext, "filterlink", new TagParameter[] {
new TagParameter("pipelinename",getObject("pipeline")),
new TagParameter("catalogid",getObject("entry:CatalogCategory:UUID")),
new TagParameter("catalogcategoryid",getObject("tmp_catalogcategory_uuid")),
new TagParameter("sortvalue",getObject("tmp_sortvalue")),
new TagParameter("pagesize",getObject("query:PageSize")),
new TagParameter("searchparameter",getObject("tmp_remove_query")),
new TagParameter("params","TmpParams")}, 112); 
      out.write("\"><span class=\"glyphicon glyphicon-minus pull-right\"></span></a>\n<span class=\"icon-selected\"></span>");
 {String value = null;try{value=context.getFormattedValue(getObject("entry:DisplayValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {120}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</li>");
 } 
 } 
 } 
 } 
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("selectionType"),null).equals(context.getFormattedValue("taxonomic",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("EntrySelected"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((( ((Number) getObject("entry:Level")).doubleValue() <=((Number)(getObject("SelectedLevel"))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",127,e);}if (_boolean_result) { 
 } else { 
 {Object temp_obj = ("true"); getPipelineDictionary().put("HasUnselectedValues", temp_obj);} 
 } 
 } 
 } 
      out.write("</ul>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("showselected"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("HasUnselectedValues"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",134,e);}if (_boolean_result) { 
      out.write("<ul class=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("displayClass"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {136}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(" clearfix collapse in\" id=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue(replace(context.getFormattedValue((context.getFormattedValue(getObject("filter:ConfigurationAttribute:Name"),null).trim()),null),(String)("[^A-Za-z0-9]"),(String)("_")),null) + context.getFormattedValue("_id",null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {136}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("displayType"),null).equals(context.getFormattedValue("dropdown",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("displayType"),null).equals(context.getFormattedValue("checkbox",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",137,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("displayType"),null).equals(context.getFormattedValue("dropdown",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",139,e);}if (_boolean_result) { 
      out.write("<form name=\"myForm\" data-submit-form-handler=\"change\" method=\"post\" action=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue(getObject("pipeline"),null)))),null));
      out.write('"');
      out.write(' ');
      out.write('>');
 } else { 
      out.write("<form name=\"myForm\" method=\"post\" action=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue(getObject("pipeline"),null)))),null));
      out.write('"');
      out.write(' ');
      out.write('>');
 } 
 while (loop("TmpParams:EntrySet","map",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("map:Key"),null).equals(context.getFormattedValue("SearchParameter",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",145,e);}if (_boolean_result) { 
      out.write("<input type=\"hidden\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("map:Key"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {146}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("map:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {146}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" />");
 } 
      out.write(' ');
      out.write('\n');
 } 
      out.write("<input type=\"hidden\" name=\"PageSize\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("query:PageSize"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {149}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("displayType"),null).equals(context.getFormattedValue("dropdown",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("HasUnselectedValues"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",150,e);}if (_boolean_result) { 
      out.write("<select name=\"SearchParameter\" class=\"ws-submit-search-param form-control\">\n<option value=\"\">");
 {out.write(localizeISText("search.filter.select_option.text","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</Option>");
 } 
 } 
 while (loop("filter:FilterAttributeEntry","entry",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("entry:CatalogCategory"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",158,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("entry:CatalogCategory")); getPipelineDictionary().put("CatalogCategory", temp_obj);} 

							PipelineDictionary dictionary = this.getPipelineDictionary();
							CatalogCategory category = (CatalogCategory) dictionary.get("CatalogCategory");
							
							if (category != null) {
								final AppContext appContext = AppContextUtil.getCurrentAppContext();
						        final ApplicationBO applicationBO = appContext.getVariable(ApplicationBO.CURRENT);
						         
						        // returns a repository which is filled by a domain
						        final CatalogBORepository catalogBORepository = applicationBO.getRepository(CatalogBORepositoryExtension.EXTENSION_ID);
						        
						        CatalogCategoryBO catalogCategoryBO = null;
						                    
						        CatalogBO catalogBO = catalogBORepository.getCatalogBOByCatalogRepositoryBOID(
						                        category.getDomainID());
			
								if(catalogBO == null)
						        {
						            dictionary.put("CategoryBO", catalogCategoryBO);
						        }
						        else
						        {
						            catalogCategoryBO = catalogBO.getCatalogCategoryBOByID(category.getUUID());
						            dictionary.put("CategoryBO", catalogCategoryBO);    
						        }
							}
						
 } else { 
 {Object temp_obj = (getObject("BackupCategoryBO")); ((SessionMgr) NamingMgr.getInstance().lookupManager(SessionMgr.REGISTRY_NAME)).getCurrentSession().putObject("T_CatalogBO", temp_obj);} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("entry:Value"),null).equals(context.getFormattedValue("SHOWALL",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",193,e);}if (_boolean_result) { 
      out.write("<li class=\"filter-item\"><a class=\"filter-item-name\" href=\"");
 processOpenTag(response, pageContext, "filterlink", new TagParameter[] {
new TagParameter("pipelinename",getObject("pipeline")),
new TagParameter("sortvalue",getObject("tmp_sortvalue")),
new TagParameter("pagesize",getObject("query:PageSize")),
new TagParameter("searchparameter",getObject("query:ExtendedFilterGroupSize(filter:ConfigurationAttribute:Name,\"(Integer)0\")")),
new TagParameter("params","TmpParams")}, 194); 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("search.filter.show_all.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a></li>");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("entry:Value"),null).equals(context.getFormattedValue("SHOWLESS",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",201,e);}if (_boolean_result) { 
      out.write("<li class=\"filter-item\"><a class=\"filter-item-name\" href=\"");
 processOpenTag(response, pageContext, "filterlink", new TagParameter[] {
new TagParameter("pipelinename",getObject("pipeline")),
new TagParameter("sortvalue",getObject("tmp_sortvalue")),
new TagParameter("pagesize",getObject("query:PageSize")),
new TagParameter("searchparameter",getObject("query:RemovedFilterGroupSize(filter:ConfigurationAttribute:Name)")),
new TagParameter("params","TmpParams")}, 202); 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("search.filter.show_less.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a></li>");
 } else { 
 {Object temp_obj = (""); getPipelineDictionary().put("CssParametricClass", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("entry:Level")).doubleValue() >((Number)(new Double(0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",212,e);}if (_boolean_result) { 
 {Object temp_obj = (context.getFormattedValue("filter-layer",null) + context.getFormattedValue(getObject("entry:Level"),null)); getPipelineDictionary().put("CssParametricClass", temp_obj);} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("entry:isSelected"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",217,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("showselected"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",218,e);}if (_boolean_result) { 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"modules/search/index/RemovedSelectionQuery", null, "219");} 
 _boolean_result=false;try {_boolean_result=((Boolean)((((((Boolean) (((!(context.getFormattedValue(getObject("selectionType"),null).equals(context.getFormattedValue("taxonomic",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("entry:Name"),null).equals(context.getFormattedValue("ContextCategoryUUID",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",220,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("displayType"),null).equals(context.getFormattedValue("text_clear",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",221,e);}if (_boolean_result) { 
      out.write("<li class=\"filter-item filter-selected ");
 {String value = null;try{value=context.getFormattedValue(getObject("CssParametricClass"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {222}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write(' ');
      out.write('>');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("entry:CatalogCategory:RootCategory")).booleanValue() && !((Boolean) ((disableErrorMessages().isDefined(getObject("ListNavigationVO:SearchTerm"))))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",223,e);}if (_boolean_result) { 
 } else { 
      out.write("<a class=\"filter-clear\" href=\"");
 processOpenTag(response, pageContext, "filterlink", new TagParameter[] {
new TagParameter("pipelinename",getObject("pipeline")),
new TagParameter("catalogid",getObject("entry:CatalogCategory:UUID")),
new TagParameter("catalogcategoryid",getObject("tmp_catalogcategory_uuid")),
new TagParameter("sortvalue",getObject("tmp_sortvalue")),
new TagParameter("pagesize",getObject("query:PageSize")),
new TagParameter("searchparameter",getObject("tmp_remove_query")),
new TagParameter("params","TmpParams")}, 227); 
      out.write("\"><span class=\"glyphicon glyphicon-minus pull-right\"></span></a>");
 } 
      out.write("<span class=\"icon-selected\"></span>");
 {String value = null;try{value=context.getFormattedValue(getObject("entry:DisplayValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {236}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</li>");
 } else { 
      out.write("<li class=\"filter-item filter-selected ");
 {String value = null;try{value=context.getFormattedValue(getObject("CssParametricClass"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {239}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write(' ');
      out.write('>');
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"modules/search/index/SelectedFilterValueItem", null, "240");} 
      out.write("</li>");
 } 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("displayType"),null).equals(context.getFormattedValue("text_clear",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) (((((Boolean) (((!(context.getFormattedValue(getObject("selectionType"),null).equals(context.getFormattedValue("taxonomic",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((!((Boolean) getObject("entry:CatalogCategory:RootCategory")).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("ListNavigationVO:SearchTerm")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",244,e);}if (_boolean_result) { 
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("displayType"),null).equals(context.getFormattedValue("swatch",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",246,e);}if (_boolean_result) { 
      out.write("<li class=\"filter-item filter-selected ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("displayType"),null).equals(context.getFormattedValue("swatch",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",247,e);}if (_boolean_result) { 
      out.write("filter-colour");
 } 
      out.write(' ');
 {String value = null;try{value=context.getFormattedValue(getObject("CssParametricClass"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {247}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" >\n<a data-testing-id=\"filter-swatch-");
 {String value = null;try{value=context.getFormattedValue(getObject("entry:getDisplayValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {248}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" \nclass=\"filter-swatch\" title=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("entry:getDisplayValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {249}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("showcount"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((( ((Number) getObject("entry:Count")).doubleValue() !=((Number)(new Double(0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",249,e);}if (_boolean_result) { 
      out.write(' ');
      out.write('(');
 {String value = null;try{value=context.getFormattedValue(getObject("entry:Count"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {249}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(')');
 } 
      out.write("\" href=\"");
 processOpenTag(response, pageContext, "filterlink", new TagParameter[] {
new TagParameter("pipelinename",getObject("pipeline")),
new TagParameter("sortvalue",getObject("tmp_sortvalue")),
new TagParameter("pagesize",getObject("query:PageSize")),
new TagParameter("searchparameter",getObject("tmp_remove_query")),
new TagParameter("params","TmpParams")}, 249); 
      out.write('"');
      out.write('>');
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("entry:getImageRef"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",255,e);}if (_boolean_result) { 
      out.write("<img src=\"");
      out.print(context.getFormattedValue(contentURL(context.getFormattedValue(getObject("entry:getImageRef"),null),context.getFormattedValue(getObject("CurrentRequest:Locale:LocaleID"),null)),null));
      out.write("\" alt=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("entry:DisplayValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {256}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" />");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("entry:ColorCode"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",257,e);}if (_boolean_result) { 
      out.write("<span style=\"background-color:");
 {String value = null;try{value=context.getFormattedValue(getObject("entry:ColorCode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {258}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"></span>");
 } else { 
      out.write("<div class=\"filter-swatch-text\" >");
 {String value = null;try{value=context.getFormattedValue(getObject("entry:DisplayValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {260}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</div>");
 }} 
      out.write("</a>\n</li>");
 } 
 } 
 } 
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("selectionType"),null).equals(context.getFormattedValue("taxonomic",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("EntrySelected"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((( ((Number) getObject("entry:Level")).doubleValue() <=((Number)(getObject("SelectedLevel"))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",269,e);}if (_boolean_result) { 
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((!((Boolean) ((disableErrorMessages().isDefined(getObject("entry:CatalogCategory"))))).booleanValue() || ((Boolean) getObject("SearchIndexFilterUtils:CategoryFilterItemVisibleForSelectedFilters(query,ListNavigationVO:SearchIndex:Configuration,entry:CatalogCategory)")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",272,e);}if (_boolean_result) { 
      out.write("<li class=\"filter-item ");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("displayType"),null).equals(context.getFormattedValue("swatch",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",273,e);}if (_boolean_result) { 
      out.write("filter-colour");
 } 
      out.write(' ');
 {String value = null;try{value=context.getFormattedValue(getObject("CssParametricClass"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {273}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("displayType"),null).equals(context.getFormattedValue("checkbox",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",274,e);}if (_boolean_result) { 
      out.write("<label class=\"filter-checkbox-label\" for=\"");
 {String value = null;try{value=context.getFormattedValue((context.getFormattedValue(getObject("entry:DisplayValue"),null).trim()),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {275}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("_id\">");
 {String value = null;try{value=context.getFormattedValue(getObject("entry:DisplayValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {275}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</label>\n<input type=\"checkbox\" name=\"SearchParameter\" id=\"");
 {String value = null;try{value=context.getFormattedValue((context.getFormattedValue(getObject("entry:DisplayValue"),null).trim()),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {276}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("_id\" class=\"filter-checkbox\" data-document-location=\"");
 processOpenTag(response, pageContext, "filterlink", new TagParameter[] {
new TagParameter("pipelinename",getObject("pipeline")),
new TagParameter("sortvalue",getObject("tmp_sortvalue")),
new TagParameter("pagesize",getObject("query:PageSize")),
new TagParameter("searchparameter",getObject("query:ExtendedCondition(entry:Name,entry:Value,selectionType)")),
new TagParameter("params","TmpParams")}, 276); 
      out.write('"');
      out.write('>');
 {String value = null;try{value=context.getFormattedValue(getObject("entry:DisplayValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {282}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("displayType"),null).equals(context.getFormattedValue("dropdown",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",283,e);}if (_boolean_result) { 
      out.write("<option value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("query:ExtendedCondition(entry:Name,entry:Value,selectionType)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {284}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {String value = null;try{value=context.getFormattedValue(getObject("entry:DisplayValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {284}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</option>");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("displayType"),null).equals(context.getFormattedValue("swatch",null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",285,e);}if (_boolean_result) { 
      out.write("<a class=\"filter-swatch\" \ndata-testing-id=\"filter-swatch-");
 {String value = null;try{value=context.getFormattedValue(getObject("entry:getDisplayValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {287}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\ntitle=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("entry:getDisplayValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {288}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("showcount"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((( ((Number) getObject("entry:Count")).doubleValue() !=((Number)(new Double(0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",288,e);}if (_boolean_result) { 
      out.write(' ');
      out.write('(');
 {String value = null;try{value=context.getFormattedValue(getObject("entry:Count"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {288}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(')');
 } 
      out.write("\" href=\"");
 processOpenTag(response, pageContext, "filterlink", new TagParameter[] {
new TagParameter("pipelinename",getObject("pipeline")),
new TagParameter("sortvalue",getObject("tmp_sortvalue")),
new TagParameter("pagesize",getObject("query:PageSize")),
new TagParameter("searchparameter",getObject("query:ExtendedCondition(entry:Name,entry:Value,selectionType)")),
new TagParameter("params","TmpParams")}, 288); 
      out.write('"');
      out.write('>');
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("entry:getImageRef"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",294,e);}if (_boolean_result) { 
      out.write("<img src=\"");
      out.print(context.getFormattedValue(contentURL(context.getFormattedValue(getObject("entry:getImageRef"),null),context.getFormattedValue(getObject("CurrentRequest:Locale:LocaleID"),null)),null));
      out.write("\" alt=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("entry:DisplayValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {295}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" />");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("entry:ColorCode"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",296,e);}if (_boolean_result) { 
      out.write("<span style=\"background-color:");
 {String value = null;try{value=context.getFormattedValue(getObject("entry:ColorCode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {297}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(";\"></span>");
 } else { 
      out.write("<div class=\"filter-swatch-text\" >");
 {String value = null;try{value=context.getFormattedValue(getObject("entry:DisplayValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {299}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</div>");
 }} 
      out.write("</a>");
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("entry:CatalogCategory")))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("noncategoryfilterselected"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",303,e);}if (_boolean_result) { 
 {try{executePipeline("ViewStandardCatalog-GetCatalogCategoryBO",((java.util.Map)(((new ParameterMap().addParameter(new ParameterEntry("CatalogID",getObject("entry:CatalogCategory:Parent:Name")))).addParameter(new ParameterEntry("CatalogCategoryID",getObject("entry:CatalogCategory:UUID")))))),"Result");}catch(Exception e){Logger.error(this,"ISPIPELINE failed. Line: 304.",e);}} 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("Result:CategoryBO"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",305,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("Result:CategoryBO:Accessible"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",306,e);}if (_boolean_result) { 
      out.write("<a class=\"filter-item-name\" href=\"");
 processOpenTag(response, pageContext, "filterlink", new TagParameter[] {
new TagParameter("pipelinename",getObject("pipeline")),
new TagParameter("catalogcategoryid",getObject("entry:Value")),
new TagParameter("sortvalue",getObject("tmp_sortvalue")),
new TagParameter("pagesize",getObject("query:PageSize")),
new TagParameter("searchparameter",getObject("query:ExtendedCondition(entry:Name,entry:Value,selectionType)")),
new TagParameter("params","TmpParams")}, 307); 
      out.write("\"><span class=\"icon-notselected\"></span>");
 {String value = null;try{value=context.getFormattedValue(getObject("entry:DisplayValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {313}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</a>");
 } 
 } else { 
      out.write("<a class=\"filter-item-name\" href=\"");
 processOpenTag(response, pageContext, "filterlink", new TagParameter[] {
new TagParameter("pipelinename",getObject("pipeline")),
new TagParameter("catalogcategoryid",getObject("entry:Value")),
new TagParameter("sortvalue",getObject("tmp_sortvalue")),
new TagParameter("pagesize",getObject("query:PageSize")),
new TagParameter("searchparameter",getObject("query:ExtendedCondition(entry:Name,entry:Value,selectionType)")),
new TagParameter("params","TmpParams")}, 316); 
      out.write("\"><span class=\"icon-notselected\"></span>");
 {String value = null;try{value=context.getFormattedValue(getObject("entry:DisplayValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {322}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</a>");
 } 
 } else { 
      out.write("<a class=\"filter-item-name\" \ndata-testing-id=\"filter-link-");
 {String value = null;try{value=context.getFormattedValue(getObject("entry:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {326}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nhref=\"");
 processOpenTag(response, pageContext, "filterlink", new TagParameter[] {
new TagParameter("pipelinename",getObject("pipeline")),
new TagParameter("sortvalue",getObject("tmp_sortvalue")),
new TagParameter("pagesize",getObject("query:PageSize")),
new TagParameter("searchparameter",getObject("query:ExtendedCondition(entry:Name,entry:Value,selectionType)")),
new TagParameter("params","TmpParams")}, 327); 
      out.write("\"><span class=\"icon-notselected\"></span>");
 {String value = null;try{value=context.getFormattedValue(getObject("entry:DisplayValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {332}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</a>");
 } 
 }}} 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("showcount"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((( ((Number) getObject("entry:Count")).doubleValue() !=((Number)(new Double(0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("displayType"),null).equals(context.getFormattedValue("swatch",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",335,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("entry:CatalogCategory")))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("noncategoryfilterselected"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",336,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("Result:CategoryBO"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",337,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("Result:CategoryBO:Accessible"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",338,e);}if (_boolean_result) { 
      out.write("<span class=\"filter-count\">(");
 {String value = null;try{value=context.getFormattedValue(getObject("entry:Count"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {339}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(")</span>");
 } 
 } else { 
      out.write("<span class=\"filter-count\">(");
 {String value = null;try{value=context.getFormattedValue(getObject("entry:Count"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {342}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(")</span>");
 } 
 } else { 
      out.write("<span class=\"filter-count\">(");
 {String value = null;try{value=context.getFormattedValue(getObject("entry:Count"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {345}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(")</span>");
 } 
 } 
      out.write("</li>");
 } 
 } 
 } 
 }} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("displayType"),null).equals(context.getFormattedValue("dropdown",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("displayType"),null).equals(context.getFormattedValue("checkbox",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",355,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("displayType"),null).equals(context.getFormattedValue("dropdown",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("HasUnselectedValues"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",356,e);}if (_boolean_result) { 
      out.write("</select>\n<noscript>\n<button type=\"submit\">");
 {out.write(localizeISText("search.filter.filter.button","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</button>\n</noscript>");
 } 
      out.write("</form>");
 } 
      out.write("</ul>");
 } 
 } 
 } 
 {Object temp_obj = (getObject("BackupCategoryBO")); getPipelineDictionary().put("CategoryBO", temp_obj);} 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
