/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-16 22:40:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fsf_005fresponsive.default_.modules.account;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class WishlistItem_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
response.setHeader(TemplateConstants.PERSONALIZED_HEADER, "1");setEncodingType("text/html"); 
 {Object temp_obj = (getObject("WishlistItem:ProductBO")); getPipelineDictionary().put("ProductBO", temp_obj);} 
 {Object temp_obj = ("Miscellaneous / Color"); getPipelineDictionary().put("ColorAttributeName", temp_obj);} 
      out.write("<div class=\"col-sm-2 col-xs-3 list-item\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("showImage"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",8,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ProductBO:Online"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",9,e);}if (_boolean_result) { 
      out.write("<a href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewProduct-Start",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("SKU",null),context.getFormattedValue(getObject("ProductBO:SKU"),null)))),null));
      out.write('"');
      out.write('>');
 processOpenTag(response, pageContext, "productimage", new TagParameter[] {
new TagParameter("Class","img-responsive"),
new TagParameter("ProductBO",getObject("ProductBO")),
new TagParameter("ImageType","S")}, 11); 
      out.write("</a>");
 } else { 
 processOpenTag(response, pageContext, "productimage", new TagParameter[] {
new TagParameter("Class","img-responsive"),
new TagParameter("ProductBO",getObject("ProductBO")),
new TagParameter("ImageType","S")}, 15); 
 } 
      out.write(' ');
      out.write('\n');
 } 
      out.write("</div>\n<div class=\"col-sm-10 col-xs-9 list-item\">\n<div class=\"row\">\n<div class=\"col-sm-4\"> \n<div class=\"pli-description\">");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ProductBO:Online"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",26,e);}if (_boolean_result) { 
      out.write("<a class=\"product-title\" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewProduct-Start",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("SKU",null),context.getFormattedValue(getObject("ProductBO:SKU"),null)))),null));
      out.write('"');
      out.write('>');
 {String value = null;try{value=context.getFormattedValue(getObject("ProductBO:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {28}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</a>");
 } else { 
      out.write("<div class=\"product-title\">");
 {String value = null;try{value=context.getFormattedValue(getObject("ProductBO:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {32}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</div> \n");
 } 
      out.write("<p class=\"product-id\">");
 {out.write(localizeISText("account.wishlist.table.item.item","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(' ');
 {String value = null;try{value=context.getFormattedValue(getObject("ProductBO:SKU"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {36}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</p>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ProductBO:String(ColorAttributeName)"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",37,e);}if (_boolean_result) { 
      out.write('<');
      out.write('p');
      out.write('>');
 {out.write(localizeISText("account.wishlist.table.item.color","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(' ');
 {String value = null;try{value=context.getFormattedValue(getObject("ProductBO:String(ColorAttributeName)"),"#",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {38}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</p>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("ProductBO:BundleInformationBO:BundledProductBOs:Size")).doubleValue() >((Number)(new Double(0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",42,e);}if (_boolean_result) { 
      out.write("<ul>");
 while (loop("ProductBO:BundleInformationBO:BundledProductBOs","BundledProductBO",null)) { 
      out.write("<li>");
 {String value = null;try{value=context.getFormattedValue(getObject("BundledProductBO:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {45}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</li>");
 } 
      out.write("</ul>");
 } 
 {Object temp_obj = (getObject("ProductBO:ProductVariationInformationBO")); getPipelineDictionary().put("VariationInfo", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("VariationInfo:VariationAttributes") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",51,e);}if (_boolean_result) { 
      out.write("<dl class=\"dl-horizontal\">");
 while (loop("VariationInfo:VariationAttributes","VariationAttribute",null)) { 
      out.write("<dt>");
 {String value = null;try{value=context.getFormattedValue(getObject("VariationAttribute:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {54}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(":</dt>\n<dd>");
 {String value = null;try{value=context.getFormattedValue(getObject("VariationInfo:SelectedVariationValue(VariationAttribute)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {55}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</dd>");
 } 
      out.write("</dl>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("showDateAdded"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",61,e);}if (_boolean_result) { 
      out.write("<p class=\"hidden-xs\">\n<label>");
 {out.write(localizeISText("account.wishlist.table.added_on","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label>&nbsp;\n");
 {String value = null;try{value=context.getFormattedValue(getObject("WishlistItem:CreationDate"),new Integer(DATE_LONG),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {64}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</p>");
 } 
      out.write("</div>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("showAddToCartButton"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("showEditItemButtons"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",70,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("showEditItemButtons"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",71,e);}if (_boolean_result) { 
      out.write("<!-- Show/Hide checkbox -->\n<div class=\"checkbox clearfix\">\n<label><input type=\"checkbox\" name=\"Private_");
 {String value = null;try{value=context.getFormattedValue(getObject("WishlistItem:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {74}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" id=\"private_");
 {String value = null;try{value=context.getFormattedValue(getObject("WishlistItem:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {74}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('\n');
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) ((((context.getFormattedValue(getObject("WishlistItem:Public"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",75,e);}if (_boolean_result) { 
      out.write("checked=\"checked\"");
 } 
      out.write(' ');
      out.write('/');
      out.write('>');
 {out.write(localizeISText("account.wishlist.table.options.do_not_share","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label>\n</div>\n<p>\n<a class=\"btn-tool\"\ndata-dialog\ntitle=\"");
 {out.write(localizeISText("account.wishlist.table.options.move_to_another_wishlist","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\"\nhref=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewWishlist-ShowMoveItemDialog",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("AjaxRequestMarker",null),context.getFormattedValue("true",null))).addURLParameter(context.getFormattedValue("SourceWishlistID",null),context.getFormattedValue(getObject("WishlistItem:WishlistBO:ID"),null)).addURLParameter(context.getFormattedValue("SourceWishlistItemID",null),context.getFormattedValue(getObject("WishlistItem:ID"),null))),null));
      out.write("\"\n>\n<span class=\"glyphicon glyphicon-move\"></span>\n</a>");
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"inc/CSRFGuardJSToken", null, "91");} 
      out.write("<a href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewWishlist-RemoveItem",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("WishlistID",null),context.getFormattedValue(getObject("WishlistItem:WishlistBO:ID"),null))).addURLParameter(context.getFormattedValue("WishlistItemID",null),context.getFormattedValue(getObject("WishlistItem:ID"),null))),null));
      out.write("\" \nclass=\"btn-tool\" \ndata-csrf-guarded\ntitle=\"");
 {out.write(localizeISText("account.wishlist.table.options.remove","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\"\n>\n<span class=\"glyphicon glyphicon-trash\"></span>\n</a>\n</p>");
 } 
 } 
      out.write("</div>\n<div class=\"");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("showWishlistLink"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",104,e);}if (_boolean_result) { 
      out.write("col-sm-4");
 } else { 
      out.write("col-sm-3");
 } 
      out.write("\"> \n");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("showWishlistLink"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",105,e);}if (_boolean_result) { 
      out.write("<a href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewWishlist-View",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("WishlistID",null),context.getFormattedValue(getObject("WishlistItem:WishlistBO:ID"),null)))),null));
      out.write('"');
      out.write('>');
 {out.write(localizeISText("account.wishlist.table.wishlist_link","",null,getObject("WishlistItem:WishlistBO:Name"),null,null,null,null,null,null,null,null,null));} 
      out.write("</a>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("showQuantitiesText"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",112,e);}if (_boolean_result) { 
      out.write("<div class=\"form-horizontal\">\n<div class=\"form-group \">\n<label class=\"col-xs-12 col-sm-12 control-label\">");
 {out.write(localizeISText("account.wishlist.table.desired_quantity","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label>\n<div class=\"col-xs-6 col-sm-12\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("showQuantityControls"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",118,e);}if (_boolean_result) { 
      out.write("<input class=\"form-control quantity\" type=\"number\" step=\"1\" min=\"1\" data-validate=\"qty_required numbers\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("WishlistItem:DesiredQuantity"),"0",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {119}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" name=\"DesiredQuantity_");
 {String value = null;try{value=context.getFormattedValue(getObject("WishlistItem:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {119}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" id=\"DesiredQuantity_");
 {String value = null;try{value=context.getFormattedValue(getObject("WishlistItem:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {119}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" class=\"form-control\"/>");
 } else { 
      out.write("\n&nbsp;");
 {String value = null;try{value=context.getFormattedValue(getObject("WishlistItem:DesiredQuantity"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {121}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } 
      out.write("</div>\n</div>\n</div>\n<p>");
 {out.write(localizeISText("account.wishlist.table.purchased_quantity","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("<br />");
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("WishlistItem:PurchasedQuantity:Value")).doubleValue() >((Number)(new Double(0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",129,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(getObject("WishlistItem:PurchasedQuantity"),"0",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {130}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
 {out.write(localizeISText("account.wishlist.table.not_yet_purchased","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
      out.write("</p>");
 } 
      out.write("</div>");
 {Object temp_obj = (getObject("ProductBO:Extension(\"Pricing\")")); getPipelineDictionary().put("ProductPrice", temp_obj);} 
 processOpenTag(response, pageContext, "currentcustomerbo", new TagParameter[] {
new TagParameter("currentcustomerbo","CustomerBO")}, 139); 
 processOpenTag(response, pageContext, "currentuserbo", new TagParameter[] {
new TagParameter("currentuserbo","UserBO")}, 140); 
 processOpenTag(response, pageContext, "getproductpricecontext", new TagParameter[] {
new TagParameter("UserBO",getObject("UserBO")),
new TagParameter("CustomerBO",getObject("CustomerBO")),
new TagParameter("AddressSpecificPrice","true"),
new TagParameter("ProductPriceContext","ProductPriceContext")}, 141); 
 {Object temp_obj = (getObject("ProductPrice:Price(\"SalePrice\",Currency,ProductPriceContext)")); getPipelineDictionary().put("salePrice", temp_obj);} 
      out.write("<div class=\"");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("showWishlistLink"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",145,e);}if (_boolean_result) { 
      out.write("col-sm-4");
 } else { 
      out.write("col-sm-5");
 } 
      out.write(" column-price\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("showPrice"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",147,e);}if (_boolean_result) { 
      out.write("<!-- TODO: maybe multiply by the desired quantity? -->");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("salePrice:Range"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",149,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue(getObject("salePrice:PriceRange:MinimumPrice"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {150}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(getObject("salePrice:Price:Available"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",151,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue(getObject("salePrice:Price"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {152}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue(getObject("ProductBO:Price"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {154}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 }} 
      out.write('<');
      out.write('p');
      out.write('>');
 processOpenTag(response, pageContext, "productpriceadditionaltext", new TagParameter[] {
new TagParameter("ProductBO",getObject("ProductBO"))}, 156); 
      out.write("</p>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("showAddToCartButton"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("showEditItemButtons"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",160,e);}if (_boolean_result) { 
      out.write("<p class=\"availability\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (getObject("ProductBO:Accessible"))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",162,e);}if (_boolean_result) { 
      out.write("<span class=\"product-out-of-stock\">");
 {out.write(localizeISText("account.wishlist.table.not_accessible","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</span>");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(getObject("ProductBO:InventoryStatus:InStock"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",164,e);}if (_boolean_result) { 
      out.write("<span class=\"product-in-stock\">");
 {out.write(localizeISText("account.wishlist.table.in_stock","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</span>");
 } else { 
      out.write("<span class=\"product-out-of-stock\">");
 {out.write(localizeISText("account.wishlist.table.out_of_stock","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</span>");
 }} 
      out.write("</p>");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("showAddToCartButton"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",172,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("ProductBO:InventoryStatus:InStock")).booleanValue() && ((Boolean) getObject("ProductBO:Accessible")).booleanValue() && !((Boolean) (((((Boolean) getObject("ProductBO:isLastOrderDate")).booleanValue() || ((Boolean) getObject("ProductBO:isEndOfLife")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) getObject("salePrice:Price:Available")).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("ProductBO:TaxClassID")))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("ProductBO:TaxClassID"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",173,e);}if (_boolean_result) { 
 {Object temp_obj = ((new Double( ((Number) getObject("WishlistItem:DesiredQuantity:Value")).doubleValue() -((Number) getObject("WishlistItem:PurchasedQuantity:Value")).doubleValue()))); getPipelineDictionary().put("initialQuantityToAdd", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("initialQuantityToAdd")).doubleValue() <((Number)(new Double(1))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",176,e);}if (_boolean_result) { 
 {Object temp_obj = (new Double(1)); getPipelineDictionary().put("initialQuantityToAdd", temp_obj);} 
 } 
      out.write("<div class=\"form-horizontal\">\n<div class=\"form-group \">\n<label class=\"col-xs-6 control-label control-label-right\" for=\"inputType\">");
 {out.write(localizeISText("account.wishlist.table.options.add_to_cart_quantity_label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label>\n<div class=\"col-xs-6\">\n<input class=\"form-control quantity\" type=\"number\" step=\"1\" min=\"1\" data-validate=\"required\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("initialQuantityToAdd"),"0",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {184}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" formatter=\"0\" name=\"Quantity_");
 {String value = null;try{value=context.getFormattedValue(getObject("WishlistItem:ProductBO:SKU"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {184}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" id=\"Quantity_");
 {String value = null;try{value=context.getFormattedValue(getObject("WishlistItem:ProductBO:SKU"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {184}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" />\n</div>\n</div>\n</div>\n<div class=\"form-group\">\n<button class=\"btn btn-primary\" type=\"submit\" name=\"AddToBasket\" onclick=\"setWishlistItemID('");
 {String value = null;try{value=context.getFormattedValue(getObject("WishlistItem:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {190}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("');\">");
 {out.write(localizeISText("account.wishlist.table.options.add_to_cart","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</button>\n</div>");
 } else { 
 {out.write(localizeISText("account.wishlist.table.not_availableMessage","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
 } 
 } 
      out.write("</div>\n</div>\n</div>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
