/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-16 22:40:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fsf_005fresponsive.default_.modules.product;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class Modules_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

 protected Boolean printTemplateMarker() { return Boolean.FALSE; } 
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 

setEncodingType("text/html"); 
 context.setCustomTagTemplateName("productimage","modules/product/ProductImage.isml",true,new String[]{"ProductBO","ImageType","ImageView","Class","AltText","RichSnippetsEnabled"},null); 
 context.setCustomTagTemplateName("productalternateimages","modules/product/ProductAlternateImages.isml",true,new String[]{"ProductBO","ImageType","IncludePrimaryImage","RichSnippetsEnabled"},null); 
 context.setCustomTagTemplateName("productimagescarousel","inc/product/ProductImagesCarousel.isml",true,new String[]{"ProductBO","ImageType","RichSnippetsEnabled","ExpressShop"},null); 
 context.setCustomTagTemplateName("productprice","modules/product/ProductPrice.isml",true,new String[]{"ProductBO","Currency","ShowInformationalPrice","ShowPriceSavings","RichSnippetsEnabled"},null); 
 context.setCustomTagTemplateName("productpriceadditionaltext","modules/product/ProductPriceAdditionalText.isml",true,new String[]{"ProductBO","SetAsDictionaryValue"},new String[]{"ProductPriceAdditionalText"}); 
 context.setCustomTagTemplateName("productlifecyclestatus","modules/product/ProductLifecycleStatus.isml",true,new String[]{"ProductBO"},null); 
 context.setCustomTagTemplateName("productavailability","modules/product/ProductAvailability.isml",true,new String[]{"ProductBO","RichSnippetsEnabled","InventoryStatus"},null); 
 context.setCustomTagTemplateName("expressshoptrigger","modules/product/ExpressShopTrigger.isml",true,new String[]{"ProductBO","label"},null); 
 context.setCustomTagTemplateName("addtocart","modules/product/AddToCart.isml",true,new String[]{"ProductBO","addToCartBehavior","Currency","class","DisplayType","DataAttributes","InventoryStatus"},null); 
 context.setCustomTagTemplateName("choosevariation","modules/product/ChooseVariation.isml",true,new String[]{"ProductBO","class"},null); 
 context.setCustomTagTemplateName("addtowishlist","modules/product/AddToWishlist.isml",true,new String[]{"ProductBO","Currency","class","DisplayType","DataAttributes"},null); 
 context.setCustomTagTemplateName("addtoproductcompare","modules/product/AddToProductCompare.isml",true,new String[]{"ProductBO","class","DisplayType"},null); 
 context.setCustomTagTemplateName("addtoproductnotification","modules/product/AddToProductNotification.isml",true,new String[]{"ProductBO","CurrentSession","class","InventoryStatus"},null); 
 context.setCustomTagTemplateName("productvariationselect","modules/product/ProductVariationSelect.isml",true,new String[]{"ProductBO","page"},null); 
 context.setCustomTagTemplateName("productquantity","modules/product/ProductQuantity.isml",true,new String[]{"ProductBO","ProductLineItemBO","type","initialQuantity","displayQuantity","maxQuantity","nullQuantity","Currency","customStyle","InventoryStatus"},null); 
 context.setCustomTagTemplateName("productshipping","modules/product/ProductShipping.isml",true,new String[]{"ProductBO"},null); 
 context.setCustomTagTemplateName("productgiftstatus","modules/product/ProductGiftStatus.isml",true,new String[]{"ProductBO"},null); 
 context.setCustomTagTemplateName("productwarranty","modules/product/ProductWarranty.isml",true,new String[]{"ProductBO","Currency","DisplayType"},null); 
 context.setCustomTagTemplateName("promotionlist","modules/product/PromotionList.isml",true,new String[]{"ProductBO","DisplayType","MaxNumber","Locale"},null); 
 context.setCustomTagTemplateName("productattachments","modules/product/ProductAttachments.isml",true,new String[]{"ProductBO","Type","ShowDescription","MaxNumber"},null); 
 context.setCustomTagTemplateName("contentdescriptorfile","modules/product/ContentDescriptorFile.isml",false,new String[]{"contentdescriptor","file"},null); 
 context.setCustomTagTemplateName("getproductpricecontext","modules/product/GetProductPriceContext.isml",true,new String[]{"CustomerBO","UserBO","InvoiceToAddressBO","ShipToAddressBO","ShipFromAddressBO","ContextProductBO","AddressSpecificPrice"},new String[]{"ProductPriceContext"}); 
 context.setCustomTagTemplateName("productlabel","modules/product/ProductLabel.isml",true,new String[]{"ProductBO"},null); 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
