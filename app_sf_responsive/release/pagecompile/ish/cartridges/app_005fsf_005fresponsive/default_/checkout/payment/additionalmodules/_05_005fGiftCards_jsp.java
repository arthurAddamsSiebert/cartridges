/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-16 22:40:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fsf_005fresponsive.default_.checkout.payment.additionalmodules;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;
import org.apache.commons.lang.StringUtils;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;

public final class _05_005fGiftCards_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
response.setHeader(TemplateConstants.PERSONALIZED_HEADER, "1");setEncodingType("text/html"); 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"modules/captcha/Modules", null, "2");} 
 processOpenTag(response, pageContext, "getpreference", new TagParameter[] {
new TagParameter("domainname",getObject("CurrentOrganization:OwningDomain:DomainName")),
new TagParameter("preferencekey","intershop.CaptchaPreferences.RedemptionOfGiftCardsAndCertificates"),
new TagParameter("type","String"),
new TagParameter("return","GiftCardAndCertificateCaptchaPreference")}, 6); 
      out.write(' ');
      out.write('\n');

	PipelineDictionary dict = getPipelineDictionary();
	boolean isCaptchaEnable = false;
	String preferenceValue = (String)dict.get("GiftCardAndCertificateCaptchaPreference");
	if (StringUtils.isNotBlank(preferenceValue))
	{
		try
		{
			isCaptchaEnable="ON".equalsIgnoreCase(preferenceValue);
			dict.put("isEnableGiftCardAndCertificateCaptcha", isCaptchaEnable);
		}
		catch(Exception ex){}
	}

 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("PaymentServiceBOs") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",23,e);}if (_boolean_result) { 
 while (loop("PaymentServiceBOs","PaymentServiceBO",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((disableErrorMessages().isDefined(getObject("PaymentServiceBO:Extension(\"LimitedTender\")"))))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("PaymentServiceBO:Applicability(CurrentCartBO):State"),null).equals(context.getFormattedValue("Applicable",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",25,e);}if (_boolean_result) { 
 {Object temp_obj = ("true"); getPipelineDictionary().put("isGiftPaymentActive", temp_obj);} 
      out.write(' ');
      out.write('\n');
 } 
 } 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("isGiftPaymentActive"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",31,e);}if (_boolean_result) { 
      out.write("<h3>");
 {out.write(localizeISText("checkout.payment.pay_with_giftcard.heading","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</h3>");
 URLPipelineAction action58 = new URLPipelineAction(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewCheckoutPayment-Dispatch",null)))),null));String site58 = null;String serverGroup58 = null;String actionValue58 = context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewCheckoutPayment-Dispatch",null)))),null);if (site58 == null){  site58 = action58.getDomain();  if (site58 == null)  {      site58 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getDomainName();  }}if (serverGroup58 == null){  serverGroup58 = action58.getServerGroup();  if (serverGroup58 == null)  {      serverGroup58 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getServerGroup();  }}out.print("<form");out.print(" method=\"");out.print("post");out.print("\"");out.print(" action=\"");out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewCheckoutPayment-Dispatch",null)))),null));out.print("\"");out.print(" name=\"");out.print("GiftCardCaptchaForm");out.print("\"");out.print(" class=\"");out.print("form-horizontal");out.print("\"");out.print(">");out.print(context.prepareWACSRFTag(actionValue58, site58, serverGroup58,true)); 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ERROR_zeroAmountPII"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",36,e);}if (_boolean_result) { 
      out.write("<div role=\"alert\" class=\"alert alert-danger\">\n<p>");
 {out.write(localizeISText("checkout.payment.giftcard.empty","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>\n</div>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ERROR_duplicateGiftCard"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",42,e);}if (_boolean_result) { 
      out.write("<div role=\"alert\" class=\"alert alert-danger\">\n<p>");
 {out.write(localizeISText("checkout.payment.giftcard.dublicate","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>\n</div>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("Result:Errors") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",47,e);}if (_boolean_result) { 
      out.write(' ');
      out.write('\n');
 while (loop("Result:Errors","Error",null)) { 
      out.write("<div class=\"alert alert-danger\">\n<p>");
 {out.write(localizeISText(context.getFormattedValue(context.getFormattedValue("checkout.payment.giftcard.",null) + context.getFormattedValue(getObject("Error:ReasonCode"),null),null),null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</div>");
 } 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("SUCCESS_GiftCard"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",58,e);}if (_boolean_result) { 
      out.write("<div class=\"alert alert-success\">\n<p>");
 {out.write(localizeISText("checkout.payment.giftcard.success.message","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>\n</div>");
 } 
 while (loop("PaymentServiceBOs","PaymentServiceBO",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((disableErrorMessages().isDefined(getObject("PaymentServiceBO:Extension(\"LimitedTender\")"))))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("PaymentServiceBO:Applicability(CurrentCartBO):State"),null).equals(context.getFormattedValue("Applicable",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",66,e);}if (_boolean_result) { 
      out.write("<div class=\"section\">");
 while (loop("PaymentServiceBO:PaymentInstrumentParameters","PaymentInstrumentParameter",null)) { 
 processOpenTag(response, pageContext, "propertyeditor", new TagParameter[] {
new TagParameter("hidetitle","true"),
new TagParameter("validationresult",getObject("ValidatedPropertyGroupConfiguration:get(PaymentInstrumentParameter)")),
new TagParameter("formfieldname",getObject("PaymentServiceBO:ID")),
new TagParameter("propertydescriptor",getObject("PaymentInstrumentParameter"))}, 69); 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("CurrentSession:LoggedIn")).booleanValue() || !((Boolean) (getObject("isEnableGiftCardAndCertificateCaptcha"))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",77,e);}if (_boolean_result) { 
      out.write("<div class=\"form-group\">\n<div class=\"col-sm-offset-4 col-sm-8\">\n<button class=\"btn btn-default\" type=\"submit\" name=\"applyGiftCard\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("PaymentServiceBO:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {81}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("checkout.payment.apply.button.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</button>");
 processOpenTag(response, pageContext, "tooltip", new TagParameter[] {
new TagParameter("contentkey","checkout.payment.giftcard.tooltip"),
new TagParameter("linktextkey","checkout.detail.text"),
new TagParameter("linkclass","details-tooltip btn btn-link")}, 82); 
      out.write("</div>\n</div>");
 } else { 
 processOpenTag(response, pageContext, "captchainclude", new TagParameter[] {
}, 87); 
      out.write("<input type=\"hidden\" name=\"webform-id\" value=\"GiftCardCaptchaForm\" />\n<div class=\"form-group");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("GiftCardCaptchaForm:recaptcharesponsefield:Invalid"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",89,e);}if (_boolean_result) { 
      out.write(" server-error");
 } 
      out.write("\">\n<div class=\"col-sm-offset-4 col-sm-8\">");
 processOpenTag(response, pageContext, "captchaformfield", new TagParameter[] {
new TagParameter("fieldname","GiftCardCaptchaForm:recaptcharesponsefield"),
new TagParameter("enablepreference","intershop.CaptchaPreferences.RedemptionOfGiftCardsAndCertificates"),
new TagParameter("loginstatus",getObject("CurrentSession:LoggedIn"))}, 91); 
      out.write("</div>\n</div>\n<div class=\"form-group\">\n<div class=\"col-sm-offset-4 col-sm-8\">\n<button class=\"btn btn-default\" type=\"submit\" name=\"applyGiftCardAnonymous\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("PaymentServiceBO:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {96}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("checkout.payment.apply.button.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</button>");
 processOpenTag(response, pageContext, "tooltip", new TagParameter[] {
new TagParameter("contentkey","checkout.payment.giftcard.tooltip"),
new TagParameter("linktextkey","checkout.detail.text"),
new TagParameter("linkclass","details-tooltip btn btn-link")}, 99); 
      out.write("</div>\n</div>");
 } 
      out.write("</div>");
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"checkout/payment/paymentmethods/GiftCardsAssignedToBasket", null, "105");} 
 } 
 } 
 out.print("</form>"); 
 } 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
