/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-16 22:40:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fsf_005fresponsive.default_.checkout.payment;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class CheckoutPayment_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
response.setHeader(TemplateConstants.PERSONALIZED_HEADER, "1");setEncodingType("text/html"); 
 {try{String currentCacheTime = (String)((com.intershop.beehive.core.capi.request.ServletResponse)response).getHeaderValue(TemplateConstants.PAGECACHE_HEADER);if (currentCacheTime!=null && !"00".equals(currentCacheTime)) {Logger.debug(this, "ISCACHE 'forbidden' overwrites prior caching declaration.");}response.setHeader(TemplateConstants.PAGECACHE_HEADER, "00");}catch(Exception e){Logger.error(this,"ISCACHE failed. Line: {2}",e);}} 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"webcontrols/Modules", null, "4");} 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"checkout/common/HeaderProgressBar", null, "6");} 
      out.write("<div class=\"marketing-area\">");
 processOpenTag(response, pageContext, "marketingslot", new TagParameter[] {
new TagParameter("id","baseMarketing")}, 9); 
      out.write("</div>");
 {Object temp_obj = (getObject("CurrentCartBO:Extension(\"Payment\")")); getPipelineDictionary().put("CartPayment", temp_obj);} 
 {Object temp_obj = (getObject("CurrentCartBO:UserBO")); getPipelineDictionary().put("UserBO", temp_obj);} 
      out.write("<h1>");
 {out.write(localizeISText("checkout.payment.pagetitle","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</h1>\n<div class=\"row\" data-testing-id=\"checkout-payment-page\">\n<div class=\"col-sm-12 col-md-8\">");
 URLPipelineAction action57 = new URLPipelineAction(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewCheckoutPayment-Dispatch",null)))),null));String site57 = null;String serverGroup57 = null;String actionValue57 = context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewCheckoutPayment-Dispatch",null)))),null);if (site57 == null){  site57 = action57.getDomain();  if (site57 == null)  {      site57 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getDomainName();  }}if (serverGroup57 == null){  serverGroup57 = action57.getServerGroup();  if (serverGroup57 == null)  {      serverGroup57 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getServerGroup();  }}out.print("<form");out.print(" method=\"");out.print("post");out.print("\"");out.print(" action=\"");out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewCheckoutPayment-Dispatch",null)))),null));out.print("\"");out.print(" name=\"");out.print("PaymentForm");out.print("\"");out.print(" id=\"");out.print("form-payment");out.print("\"");out.print(" class=\"");out.print("form-horizontal");out.print("\"");out.print(">");out.print(context.prepareWACSRFTag(actionValue57, site57, serverGroup57,true)); 
 processOpenTag(response, pageContext, "basketvalidationmessages", new TagParameter[] {
new TagParameter("basketValidationResults",getObject("BasketValidationResults"))}, 21); 
 processOpenTag(response, pageContext, "ordercreationmessages", new TagParameter[] {
new TagParameter("basketValidationResults",getObject("BasketValidationResults")),
new TagParameter("orderCreationResult",getObject("OrderCreationResult"))}, 22); 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("AuthorizationStatus"),null).equals(context.getFormattedValue("Cancel",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",25,e);}if (_boolean_result) { 
      out.write("<div role=\"alert\" class=\"alert alert-danger\">\n<div>");
 {out.write(localizeISText("checkout.payment.sorry_message.text","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</div>\n<div>");
 {out.write(localizeISText("checkout.payment.canceled.text","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</div>\n</div>");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("AuthorizationStatus"),null).equals(context.getFormattedValue("Failure",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",30,e);}if (_boolean_result) { 
      out.write("<div role=\"alert\" class=\"alert alert-danger\">\n<div>");
 {out.write(localizeISText("checkout.payment.sorry_message.text","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</div>\n<div>");
 {out.write(localizeISText("checkout.payment.failed.text","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</div>\n</div>");
 }} 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ERROR_Payment"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",37,e);}if (_boolean_result) { 
      out.write("<div role=\"alert\" class=\"alert alert-danger\">");
 {out.write(localizeISText("checkout.payment.no_Selection.error","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</div>");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ERROR_BasketCovered"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",41,e);}if (_boolean_result) { 
      out.write("<div role=\"alert\" class=\"alert alert-danger\">");
 {out.write(localizeISText("checkout.payment.basketCovered.error","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</div>");
 }} 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ERROR_PaymentServiceNotAssignable"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",47,e);}if (_boolean_result) { 
      out.write("<div role=\"alert\" class=\"alert alert-danger\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("NotCoveredAmount"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",49,e);}if (_boolean_result) { 
 {out.write(localizeISText("checkout.payment.paymentInstrumentAssigmentFailed.basketNotCovered","",null,null,null,null,null,null,null,null,null,null,null));} 
 } else { 
 {out.write(localizeISText("checkout.payment.paymentInstrumentAssigmentFailed.basketCovered","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
      out.write("</div>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ERROR_duplicatePII"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",57,e);}if (_boolean_result) { 
      out.write("<div role=\"alert\" class=\"alert alert-danger\">");
 {out.write(localizeISText("checkout.payment.method.duplicate","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</div>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("Result")))).booleanValue() && ((Boolean) (hasLoopElements("Result:Errors") ? Boolean.TRUE : Boolean.FALSE)).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",63,e);}if (_boolean_result) { 
      out.write("<div role=\"alert\" class=\"alert alert-danger\">");
 while (loop("Result:Errors","Error",null)) { 
      out.write('<');
      out.write('p');
      out.write('>');
 {Object temp_obj = (replace(context.getFormattedValue(getObject("Error:Message"),null),(String)("^\\{|\\}$"),(String)(""))); getPipelineDictionary().put("ErrorMessage", temp_obj);} 
 {Object temp_obj = (localizeText(context.getFormattedValue(getObject("ErrorMessage"),null))); getPipelineDictionary().put("LocalicedErrorMessage", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("LocalicedErrorMessage"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",70,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(getObject("LocalicedErrorMessage"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {71}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
 {String value = null;try{value=context.getFormattedValue(getObject("ErrorMessage"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {73}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } 
      out.write("</p>");
 } 
      out.write("</div>");
 } 
 {out.flush();processExtensionPoint((com.intershop.beehive.core.capi.request.ServletResponse)response,"PaymentErrors", null, "90");} 
 {out.flush();processExtensionPoint((com.intershop.beehive.core.capi.request.ServletResponse)response,"BeforePaymentMethodSelection", null, "103");} 
      out.write("<h3>");
 {out.write(localizeISText("checkout.payment.method.select.heading","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</h3>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((hasLoopElements("PaymentServiceBOs") ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((( ((Number) getObject("CurrentCartBO:BasketTotalPriceMinusLimitedTenderGross:Value")).doubleValue() >((Number)(new Double(0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",107,e);}if (_boolean_result) { 
      out.write("<ul class=\"list-unstyled\" id=\"payment-accordion\" role=\"tablist\" aria-multiselectable=\"true\">");
 while (loop("PaymentServiceBOs","PaymentServiceBO",null)) { 
 {Object temp_obj = (getObject("PaymentServiceBO:Applicability(CurrentCartBO)")); getPipelineDictionary().put("Applicability", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("Applicability:State"),null).equals(context.getFormattedValue("Restricted",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",112,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("Applicability:Output:Restrictions")); getPipelineDictionary().put("RestrictionErrors", temp_obj);} 
 } else { 

								getPipelineDictionary().remove("RestrictionErrors");
							
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("PaymentServiceBO:Extension(\"LimitedTender\")"),null).equals(context.getFormattedValue(getObject("null"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("Applicability:State"),null).equals(context.getFormattedValue("NotApplicable",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",121,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (hasLoopElements("PaymentServiceBO:PaymentInstrumentParameters") ? Boolean.TRUE : Boolean.FALSE)).booleanValue() || ((Boolean) (((!((Boolean) (hasLoopElements("PaymentInstrumentBORepository:PaymentInstrumentBOs(PaymentServiceBO)") ? Boolean.TRUE : Boolean.FALSE)).booleanValue() && ((Boolean) (((((Boolean) ((((context.getFormattedValue(getObject("UserBO:Extension(\"PaymentInstrument\")"),null).equals(context.getFormattedValue(getObject("null"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) ((((Boolean) (hasLoopElements("UserBO:Extension(\"PaymentInstrument\"):PaymentInstrumentBOs(PaymentServiceBO)") ? Boolean.TRUE : Boolean.FALSE)).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("PaymentServiceBO:Extension(\"FastCheckout\")"),null).equals(context.getFormattedValue(getObject("null"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",125,e);}if (_boolean_result) { 
      out.write("<li class=\"panel\">\n<div class=\"radio\" role=\"tab\" id=\"payment-accordion-heading-");
 {String value = null;try{value=context.getFormattedValue(getObject("PaymentServiceBO:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {132}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<label ");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("RestrictionErrors"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",133,e);}if (_boolean_result) { 
      out.write("class=\"disabled\"");
 } 
      out.write(">\n<input type=\"radio\"\nid=\"paymentOption_");
 {String value = null;try{value=context.getFormattedValue(replace(context.getFormattedValue(getObject("PaymentServiceBO:ID"),null),(String)("\\."),(String)("-")),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {135}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("PaymentServiceBO:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {135}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nname=\"PaymentServiceSelection\" \ndata-testing-id=\"payment-");
 {String value = null;try{value=context.getFormattedValue(getObject("PaymentServiceBO:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {137}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("-element\"\ndata-toggle=\"collapse\" \ndata-parent=\"");
      out.print(context.getFormattedValue("#",null));
      out.write("payment-accordion\" \ndata-target=\"");
      out.print(context.getFormattedValue("#",null));
      out.write("payment-accordion-body-");
 {String value = null;try{value=context.getFormattedValue(replace(context.getFormattedValue(getObject("PaymentServiceBO:ID"),null),(String)("\\."),(String)("-")),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {140}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" \naria-controls=\"payment-accordion-body-");
 {String value = null;try{value=context.getFormattedValue(replace(context.getFormattedValue(getObject("PaymentServiceBO:ID"),null),(String)("\\."),(String)("-")),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {141}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nclass=\"collapsed\"\n");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("RestrictionErrors"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",143,e);}if (_boolean_result) { 
      out.write("\ndisabled=\"disabled\"\n");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("PaymentSelectionUUID"),null).equals(context.getFormattedValue(getObject("PaymentServiceBO:ID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",145,e);}if (_boolean_result) { 
      out.write("\nchecked=\"checked\"\n");
 }} 
      out.write('\n');
      out.write('/');
      out.write('>');
 processOpenTag(response, pageContext, "paymentservicedisplay", new TagParameter[] {
new TagParameter("restrictionerrors",getObject("RestrictionErrors")),
new TagParameter("paymentcosts",getObject("PaymentServiceBO:PaymentCostBO(CurrentCartBO:PurchaseCurrencyCode)")),
new TagParameter("paymentservice",getObject("PaymentServiceBO")),
new TagParameter("currentcartbo",getObject("CurrentCartBO"))}, 149); 
 {out.flush();processExtensionPoint((com.intershop.beehive.core.capi.request.ServletResponse)response,"AdditionalPaymentServiceDescriptionData", null, "169");} 
      out.write("</label>\n</div>\n<div \nid=\"payment-accordion-body-");
 {String value = null;try{value=context.getFormattedValue(replace(context.getFormattedValue(getObject("PaymentServiceBO:ID"),null),(String)("\\."),(String)("-")),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {175}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" \nclass=\"panel-collapse collapse");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("PaymentSelectionUUID"),null).equals(context.getFormattedValue(getObject("PaymentServiceBO:ID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",176,e);}if (_boolean_result) { 
      out.write(' ');
      out.write('i');
      out.write('n');
 } 
      out.write("\" \nrole=\"tabpanel\" \naria-labelledby=\"payment-accordion-heading-");
 {String value = null;try{value=context.getFormattedValue(replace(context.getFormattedValue(getObject("PaymentServiceBO:ID"),null),(String)("\\."),(String)("-")),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {178}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('\n');
      out.write('>');
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("PaymentServiceBO:PaymentInstrumentParameters") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",181,e);}if (_boolean_result) { 
 while (loop("PaymentServiceBO:PaymentInstrumentParameters","PaymentInstrumentParameter",null)) { 
 processOpenTag(response, pageContext, "propertyeditor", new TagParameter[] {
new TagParameter("hidetitle","true"),
new TagParameter("validationresult",getObject("ValidatedPropertyGroupConfiguration:get(PaymentInstrumentParameter)")),
new TagParameter("formfieldname",getObject("PaymentServiceBO:ID")),
new TagParameter("propertydescriptor",getObject("PaymentInstrumentParameter"))}, 185); 
 } 
 {out.flush();processExtensionPoint((com.intershop.beehive.core.capi.request.ServletResponse)response,"HostedPaymentPageData", null, "193");} 
      out.write("<div class=\"form-group\">\n<div class=\"col-sm-offset-4 col-sm-8\">");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("CurrentSession:isLoggedIn")).booleanValue() && ((Boolean) getObject("PaymentServiceBO:isPaymentInstrumentSavingAllowed")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",198,e);}if (_boolean_result) { 
      out.write("<fieldset>\n<label>\n<input name=\"CopyToWallet_");
 {String value = null;try{value=context.getFormattedValue(getObject("PaymentServiceBO:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {201}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" value=\"");
      out.print(context.getFormattedValue(getObject("PaymentServiceBO:ID"),null));
      out.write("\" type=\"checkbox\" checked=\"checked\" data-testing-id=\"payment-saveForLater-checkbox\"/> ");
 {out.write(localizeISText("checkout.save_edit.checkbox.label","",null,null,null,null,null,null,null,null,null,null,null));} 
 processOpenTag(response, pageContext, "tooltip", new TagParameter[] {
new TagParameter("contentkey","checkout.save_edit.checkbox.description"),
new TagParameter("linktextkey","checkout.detail.text"),
new TagParameter("headlinekey","checkout.save_edit.checkbox.label"),
new TagParameter("linkclass","details-tooltip")}, 202); 
      out.write("</label>\n</fieldset>");
 } 
      out.write("</div>\n</div>");
 } 
      out.write("</div>");
 {out.flush();processExtensionPoint((com.intershop.beehive.core.capi.request.ServletResponse)response,"AdditionalPaymentServiceInformation", null, "224");} 
      out.write("</li>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("PaymentInstrumentBOs") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",229,e);}if (_boolean_result) { 
 while (loop("PaymentInstrumentBOs","PaymentInstrumentBO",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("PaymentInstrumentBO:PaymentServiceBO:ID"),null).equals(context.getFormattedValue(getObject("PaymentServiceBO:ID"),null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",232,e);}if (_boolean_result) { 
      out.write("<li class=\"panel\">");
 {Object temp_obj = ("false"); getPipelineDictionary().put("containsPaymentInstrument", temp_obj);} 
 while (loop("CartPayment:SelectedPaymentInstrumentBOs","SelectedPaymentInstrumentBO",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SelectedPaymentInstrumentBO:ID"),null).equals(context.getFormattedValue(getObject("PaymentInstrumentBO:ID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",236,e);}if (_boolean_result) { 
 {Object temp_obj = ("true"); getPipelineDictionary().put("containsPaymentInstrument", temp_obj);} 
 } 
 } 
      out.write("<div class=\"radio\" role=\"tab\" id=\"payment-accordion-heading2-");
 {String value = null;try{value=context.getFormattedValue(getObject("PaymentInstrumentBO:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {240}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<label ");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("RestrictionErrors"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",241,e);}if (_boolean_result) { 
      out.write("class=\"disabled\"");
 } 
      out.write(">\n<input type=\"radio\" \nid=\"paymentOption_");
 {String value = null;try{value=context.getFormattedValue(replace(context.getFormattedValue(getObject("PaymentInstrumentBO:ID"),null),(String)("\\."),(String)("-")),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {243}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" \nname=\"PaymentServiceSelection\"\ndata-testing-id=\"payment-");
 {String value = null;try{value=context.getFormattedValue(getObject("PaymentServiceBO:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {245}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("-element\"\ndata-toggle=\"collapse\" \ndata-parent=\"");
      out.print(context.getFormattedValue("#",null));
      out.write("payment-accordion\" \ndata-target=\"");
      out.print(context.getFormattedValue("#",null));
      out.write("payment-accordion-body2-");
 {String value = null;try{value=context.getFormattedValue(replace(context.getFormattedValue(getObject("PaymentInstrumentBO:ID"),null),(String)("\\."),(String)("-")),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {248}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" \naria-controls=\"payment-accordion-body2-");
 {String value = null;try{value=context.getFormattedValue(replace(context.getFormattedValue(getObject("PaymentInstrumentBO:ID"),null),(String)("\\."),(String)("-")),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {249}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("PaymentInstrumentBO:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {250}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" \nclass=\"collapsed\"\n");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("RestrictionErrors"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",252,e);}if (_boolean_result) { 
      out.write("\ndisabled=\"disabled\"\n");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("PaymentSelectionUUID"),null).equals(context.getFormattedValue(getObject("PaymentInstrumentBO:ID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",254,e);}if (_boolean_result) { 
      out.write("\nchecked=\"checked\"\n");
 }} 
      out.write('\n');
      out.write('/');
      out.write('>');
 _boolean_result=false;try {_boolean_result=((Boolean)(((!((Boolean) ((((context.getFormattedValue(getObject("EditPaymentInstrumentBO"),null).equals(context.getFormattedValue(getObject("PaymentInstrumentBO"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((hasLoopElements("PaymentServiceBO:PaymentInstrumentParameters") ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",259,e);}if (_boolean_result) { 
 {out.flush();processExtensionPoint((com.intershop.beehive.core.capi.request.ServletResponse)response,"AdditionalPaymentInstrumentDescriptionData", null, "277");} 
 while (loop("PaymentServiceBO:PaymentInstrumentParameters","PaymentInstrumentParameter",null)) { 
 processOpenTag(response, pageContext, "propertyviewer", new TagParameter[] {
new TagParameter("owner",getObject("PaymentInstrumentBO")),
new TagParameter("hidetitle","true"),
new TagParameter("propertydescriptor",getObject("PaymentInstrumentParameter"))}, 279); 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("myaccount"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",284,e);}if (_boolean_result) { 
      out.write("<div class=\"form-group\">\n<div class=\"col-sm-offset-4 col-sm-8\">\n<button class=\"btn btn-default\" type=\"button\" form=\"form-payment\" name=\"deletePayment\" value=\"");
      out.print(context.getFormattedValue(getObject("PaymentInstrumentBO:ID"),null));
      out.write('"');
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("checkout.payment.method.delete.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</button>\n</div>\n</div>");
 } 
 } else { 
 processOpenTag(response, pageContext, "paymentservicedisplay", new TagParameter[] {
new TagParameter("restrictionerrors",getObject("RestrictionErrors")),
new TagParameter("paymentcosts",getObject("PaymentServiceBO:PaymentCostBO(CurrentCartBO:PurchaseCurrencyCode)")),
new TagParameter("paymentservice",getObject("PaymentServiceBO")),
new TagParameter("currentcartbo",getObject("CurrentCartBO"))}, 295); 
 {out.flush();processExtensionPoint((com.intershop.beehive.core.capi.request.ServletResponse)response,"AdditionalPaymentServiceDescriptionData", null, "318");} 
 } 
      out.write("</label>\n</div> \n<div \nid=\"payment-accordion-body2-");
 {String value = null;try{value=context.getFormattedValue(replace(context.getFormattedValue(getObject("PaymentInstrumentBO:ID"),null),(String)("\\."),(String)("-")),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {323}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" \nclass=\"panel-collapse collapse");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("PaymentSelectionUUID"),null).equals(context.getFormattedValue(getObject("PaymentInstrumentBO:ID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",324,e);}if (_boolean_result) { 
      out.write(' ');
      out.write('i');
      out.write('n');
 } 
      out.write("\" \nrole=\"tabpanel\" \naria-labelledby=\"payment-accordion-heading2-");
 {String value = null;try{value=context.getFormattedValue(getObject("PaymentServiceBO:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {326}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('\n');
      out.write('>');
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("PaymentServiceBO:PaymentInstrumentParameters") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",328,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("EditPaymentInstrumentBO"),null).equals(context.getFormattedValue(getObject("PaymentInstrumentBO"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",329,e);}if (_boolean_result) { 
 while (loop("PaymentServiceBO:PaymentInstrumentParameters","PaymentInstrumentParameter",null)) { 
 processOpenTag(response, pageContext, "propertyeditor", new TagParameter[] {
new TagParameter("owner",getObject("PaymentInstrumentBO")),
new TagParameter("hidetitle","true"),
new TagParameter("validationresult",getObject("ValidatedPropertyGroupConfiguration:get(PaymentInstrumentParameter)")),
new TagParameter("formfieldname",getObject("PaymentInstrumentBO:ID")),
new TagParameter("propertydescriptor",getObject("PaymentInstrumentParameter"))}, 331); 
      out.write("<button class=\"btn btn-default\" type=\"submit\" name=\"applyPayment\" value=\"");
      out.print(context.getFormattedValue(getObject("PaymentInstrumentBO:ID"),null));
      out.write('"');
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("checkout.payment.apply.button.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</button>");
 } 
 } 
 } 
      out.write("</div>");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("PaymentServiceBO:PaymentInstrumentParameters") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",343,e);}if (_boolean_result) { 
 {out.flush();processExtensionPoint((com.intershop.beehive.core.capi.request.ServletResponse)response,"AdditionalPaymentInstrumentInformation", null, "360");} 
 } else { 
 {out.flush();processExtensionPoint((com.intershop.beehive.core.capi.request.ServletResponse)response,"AdditionalPaymentServiceInformation", null, "378");} 
 } 
      out.write("</li>");
 } 
 } 
 } 
 } 
 } 
      out.write("</ul>");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("CurrentCartBO:BasketTotalPriceMinusLimitedTenderGross:Value")).doubleValue() ==((Number)(new Double(0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",387,e);}if (_boolean_result) { 
      out.write("<div class=\"alert alert-info\">");
 {out.write(localizeISText("checkout.payment.no_selection_required.info","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</div>");
 } else { 
      out.write("<div class=\"alert alert-danger\">");
 {out.write(localizeISText("checkout.payment.no_AvailablePaymentMethods.error","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</div>");
 }} 
      out.write(' ');
      out.write('\n');
 out.print("</form>"); 
      out.write("<div class=\"section checkout-payment-giftcard\">");
 {out.flush();processExtensionPoint((com.intershop.beehive.core.capi.request.ServletResponse)response,"AfterPaymentMethodSelection", null, "410");} 
      out.write("</div> \n</div>\n<div class=\"col-sm-12 col-md-4 order-summary order-summary-paymentpage\">");
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"checkout/payment/ajax/OrderSummary", null, "417");} 
      out.write(" \n</div>\n</div>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
