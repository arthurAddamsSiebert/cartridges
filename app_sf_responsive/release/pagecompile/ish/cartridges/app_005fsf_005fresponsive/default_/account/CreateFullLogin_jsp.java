/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-16 22:40:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fsf_005fresponsive.default_.account;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class CreateFullLogin_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"modules/common/Modules", null, "3");} 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"modules/account/Modules", null, "4");} 
 processOpenTag(response, pageContext, "getpreference", new TagParameter[] {
new TagParameter("domainname",getObject("CurrentDomain:DomainName")),
new TagParameter("preferencekey","UserRegistrationLoginType"),
new TagParameter("type","String"),
new TagParameter("return","RegistrationLoginType")}, 6); 
      out.write("<div class=\"row\">\n<div class=\"col-lg-6 col-md-8 col-sm-10\">");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (((((Boolean) getObject("LoginForm:isSubmitted")).booleanValue() && ((Boolean) getObject("LoginForm:isInvalid")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_User")))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("ERROR_User"),null).equals(context.getFormattedValue("UserNotLoggedIn",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",12,e);}if (_boolean_result) { 
      out.write("<div class=\"alert alert-danger\">");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("RegistrationLoginType")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("RegistrationLoginType"),null).equals(context.getFormattedValue("username",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",14,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("LoginForm:Login:isError(\"error.required\")"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",15,e);}if (_boolean_result) { 
      out.write('<');
      out.write('p');
      out.write('>');
 {out.write(localizeISText("account.username.empty.error","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_User")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("ERROR_User"),null).equals(context.getFormattedValue("LoginAlreadyInUse",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",18,e);}if (_boolean_result) { 
      out.write('<');
      out.write('p');
      out.write('>');
 {out.write(localizeISText("account.username.already_exist.error","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>");
 } 
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((((Boolean) getObject("LoginForm:Login:isError(\"error.required\")")).booleanValue() || ((Boolean) getObject("LoginForm:Login:isError(\"error.email\")")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",22,e);}if (_boolean_result) { 
      out.write('<');
      out.write('p');
      out.write('>');
 {out.write(localizeISText("account.update_email.email.error.email","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_User")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("ERROR_User"),null).equals(context.getFormattedValue("LoginAlreadyInUse",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",25,e);}if (_boolean_result) { 
      out.write('<');
      out.write('p');
      out.write('>');
 {out.write(localizeISText("account.email.already_exist.error","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>");
 } 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("LoginForm:Password:isError(\"error.required\")"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",29,e);}if (_boolean_result) { 
      out.write('<');
      out.write('p');
      out.write('>');
 {out.write(localizeISText("account.create_user.password.error.required","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("LoginForm:Password:isError(\"invalid.password\")"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",32,e);}if (_boolean_result) { 
      out.write('<');
      out.write('p');
      out.write('>');
 {out.write(localizeISText("password.invalid.password","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("LoginForm:PasswordConfirmation:isError(\"error.required\")"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",35,e);}if (_boolean_result) { 
      out.write('<');
      out.write('p');
      out.write('>');
 {out.write(localizeISText("account.create_user.password_confirmation.invalid.error","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("LoginForm:PasswordConfirmation:isError(\"error.stringcompare\")"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",38,e);}if (_boolean_result) { 
      out.write('<');
      out.write('p');
      out.write('>');
 {out.write(localizeISText("account.registration.password.not_match.error","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_User")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("ERROR_User"),null).equals(context.getFormattedValue("PasswordNotValid",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",41,e);}if (_boolean_result) { 
      out.write('<');
      out.write('p');
      out.write('>');
 {out.write(localizeISText("account.update_password.new_password.error.regexp","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("LoginForm:recaptcharesponsefield:isError(\"error.captcha\")"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",44,e);}if (_boolean_result) { 
      out.write('<');
      out.write('p');
      out.write('>');
 {out.write(localizeISText("captcha.incorrect","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>");
 } 
      out.write("</div>");
 } 
      out.write("<p class=\"indicates-required\"><span class=\"required\">*</span>");
 {out.write(localizeISText("account.required_field.message","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>\n<div class=\"form-group\">\n<label class=\"col-sm-4 control-label\" for=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("LoginForm:Login:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {55}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("account.register.email.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("<span class=\"required\">*</span>\n</label>\n<div class=\"col-sm-8\">\n<input type=\"email\" autocomplete=\"off\" class=\"form-control\" maxlength=\"256\"\nrequired\nid=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("LoginForm:Login:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {63}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nname=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("LoginForm:Login:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {64}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("LoginForm:Login:FormattedValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {65}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\ndata-bv-notempty-message=\"");
 {out.write(localizeISText("account.update_email.email.error.notempty","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\"\ndata-bv-emailaddress-message=\"");
 {out.write(localizeISText("account.update_email.email.error.email","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\"\n/>\n</div>\n</div>\n<div class=\"form-group\">\n<label class=\"col-sm-4 control-label\" for=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("LoginForm:EmailConfirmation:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {73}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("account.register.email_confirmation.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("<span class=\"required\">*</span>\n</label>\n<div class=\"col-sm-8\">\n<input type=\"email\" autocomplete=\"off\" class=\"form-control\" maxlength=\"256\"\nrequired\nid=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("LoginForm:EmailConfirmation:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {80}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nname=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("LoginForm:EmailConfirmation:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {81}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("LoginForm:EmailConfirmation:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {82}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\ndata-bv-notempty-message=\"");
 {out.write(localizeISText("account.update_email.email.error.notempty","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\"\ndata-bv-emailaddress-message=\"");
 {out.write(localizeISText("account.update_email.email.error.email","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\"\ndata-bv-identical=\"true\"\ndata-bv-identical-field=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("LoginForm:Login:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {86}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\ndata-bv-identical-message=\"");
 {out.write(localizeISText("account.registration.email.not_match.error","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\"\n/>\n</div>\n</div>");
 processOpenTag(response, pageContext, "passwordinput", new TagParameter[] {
new TagParameter("Field",getObject("LoginForm:Password")),
new TagParameter("LabelClass","col-sm-4"),
new TagParameter("ShowRequired","true"),
new TagParameter("Class","col-sm-8"),
new TagParameter("Domain",getObject("CurrentOrganization:Domain")),
new TagParameter("ConfirmationField",getObject("LoginForm:PasswordConfirmation")),
new TagParameter("HintClass","col-sm-offset-4 col-sm-8")}, 93); 
      out.write("<div class=\"form-group\">\n<label class=\"col-sm-4 control-label\" for=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("LoginForm:SecurityQuestion:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {104}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("account.security_question.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("<span class=\"required\">*</span>\n</label>\n<div class=\"col-sm-8\">");
 processOpenTag(response, pageContext, "securityquestionselectbox", new TagParameter[] {
new TagParameter("formparameter",getObject("LoginForm:SecurityQuestion:QualifiedName")),
new TagParameter("selectedsecurityquestionvalue",getObject("LoginForm:SecurityQuestion:Value"))}, 109); 
      out.write("</div>\n</div>\n<div class=\"form-group\">\n<label class=\"col-sm-4 control-label\" for=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("LoginForm:Answer:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {114}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("account.register.security_answer.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("<span class=\"required\">*</span>\n</label>\n<div class=\"col-sm-8\">\n<input type=\"password\" autocomplete=\"off\" class=\"form-control ");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("LoginForm:Answer:isInvalid"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",119,e);}if (_boolean_result) { 
      out.write("server-error");
 } 
      out.write("\"\nid=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("LoginForm:Answer:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {120}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nname=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("LoginForm:Answer:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {121}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nrequired\ndata-bv-notempty-message=\"");
 {out.write(localizeISText("account.register.security_answer.error.required","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\"\n/>\n</div>\n</div>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("Provider")))).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("BasketEmailOptIn")))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("BasketEmailOptIn"),null).equals(context.getFormattedValue("yes",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",129,e);}if (_boolean_result) { 
      out.write("<div class=\"form-group\">\n<div class=\"col-sm-8 col-sm-push-4\">\n<div class=\"checkbox\">\n<label class=\"control-label\" for=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("LoginForm:Newsletter:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {133}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<input type=\"checkbox\"\nid=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("LoginForm:Newsletter:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {135}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nname=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("LoginForm:Newsletter:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {136}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nvalue=\"true\"\n");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("address")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("address:PreferredBilling"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",138,e);}if (_boolean_result) { 
      out.write("checked=\"checked\"");
 } 
      out.write('\n');
      out.write('/');
      out.write('>');
 {out.write(localizeISText("account.register.newsletter.checkbox.text","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("<br>\n<small class=\"input-help\">");
 {out.write(localizeISText("account.register.newsletter_opt-in_ouf.note.text",null,null,encodeString(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewContent-Start",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("PageletEntryPointID",null),context.getFormattedValue("systeminclude.dialog.privacyPolicy.pagelet2-Include",null)))),null)),null,null,null,null,null,null,null,null,null));} 
      out.write("</small>\n</label>\n</div>\n</div>\n<div class=\"col-sm-8 col-sm-push-4\">\n</div>");
 } else { 
      out.write("<div class=\"col-sm-8 col-sm-push-4\">\n<small class=\"input-help\">");
 {out.write(localizeISText("account.register.newsletter_opt-in_ouf.note.text",null,null,encodeString(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewContent-Start",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("PageletEntryPointID",null),context.getFormattedValue("systeminclude.dialog.privacyPolicy.pagelet2-Include",null)))),null)),null,null,null,null,null,null,null,null,null));} 
      out.write("</small>\n</div>");
 } 
      out.write("</div>\n</div>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
