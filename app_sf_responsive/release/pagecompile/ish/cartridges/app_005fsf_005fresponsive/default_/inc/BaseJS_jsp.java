/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-16 22:40:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fsf_005fresponsive.default_.inc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;
import com.intershop.beehive.core.capi.url.*;

public final class BaseJS_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
 {out.flush();
URLRewriteHandler handler = getTemplateExecutionConfig().getURLRewriteHandler();
try
{
getTemplateExecutionConfig().setURLRewriteHandler(NullURLRewriteHandler.getInstance());
processRemoteIncludeAutomatic((com.intershop.beehive.core.capi.request.ServletResponse)response,context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("RESTConfiguration-Start",null)))),null), null, null, "2");}
finally
{
    getTemplateExecutionConfig().setURLRewriteHandler(handler);
}} 
      out.write("<script src=\"");
      out.print(context.getFormattedValue(context.getFormattedValue(context.webRoot(),null) + context.getFormattedValue("/js/vendor/jquery-3.3.1.min.js",null),null));
      out.write("\"></script>");
 { ISFileBundle filebundle = new ISFileBundle("/js/theme.min.js");List<? extends Resource> resources = null;
boolean processesResources = (filebundle.isCheckSource() || !filebundle.hasCachedResources());if (processesResources) {filebundle.setDefaultProcessors(new String[]{"JSCompressor"}); 
 }TagParameter[] parameters = new TagParameter[] {
};
CustomTag renderer = new CustomTag() {{
isStrict = true;
tagName = "FileBundleRenderer";
}
public void processOpenTag(PageContext pageContext, com.intershop.beehive.core.capi.request.ServletResponse response, AbstractTemplate template, int line) throws IOException, ServletException {
ServletContext application = pageContext.getServletContext();
ServletConfig config = pageContext.getServletConfig();
JspWriter out = pageContext.getOut();
Object page = template;
TemplateExecutionConfig context = getTemplateExecutionConfig(); 
      out.write("<script src=\"");
      out.print(context.getFormattedValue(context.getFormattedValue(context.webRoot(),null) + context.getFormattedValue("/",null) + context.getFormattedValue(getObject("File:Name"),null) + context.getFormattedValue("?lastModified=",null),null));
 {String value = null;try{value=context.getFormattedValue(getObject("File:LastModified"),"0",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {8}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"></script>");
 
}};
if (processesResources) { 
 {
String fileName = "/js/vendor/modernizr-custom-3.6.0.js";
String[] processors = null;filebundle.addResource(fileName, processors);
}
 
 {
String fileName = "/js/vendor/bootstrap-3.4.0.js";
String[] processors = null;filebundle.addResource(fileName, processors);
}
 
 {
String fileName = "/js/vendor/bootstrapValidator-0.5.2.js";
String[] processors = null;filebundle.addResource(fileName, processors);
}
 
 {
String fileName = "/js/vendor/jquery.mobile.touch-1.5.0-pre.js";
String[] processors = null;filebundle.addResource(fileName, processors);
}
 
 {
String fileName = "/js/vendor/slick-1.8.0.js";
String[] processors = null;filebundle.addResource(fileName, processors);
}
 
 {
String fileName = "/js/vendor/jquery.maskedinput-1.4.1.js";
String[] processors = null;filebundle.addResource(fileName, processors);
}
 
 {
String fileName = "/js/vendor/bootstrap-select-1.13.2.js";
String[] processors = null;filebundle.addResource(fileName, processors);
}
 
 {
String fileName = "/js/vendor/bootstrap-datepicker-1.8.0.js";
String[] processors = null;filebundle.addResource(fileName, processors);
}
 
 {
String fileName = "/js/vendor/js.cookie-2.2.0.js";
String[] processors = null;filebundle.addResource(fileName, processors);
}
 
 {
String fileName = "/js/dialog.js";
String[] processors = null;filebundle.addResource(fileName, processors);
}
 
 {
String fileName = "/js/captcha.js";
String[] processors = null;filebundle.addResource(fileName, processors);
}
 
 {
String fileName = "/js/validation.js";
String[] processors = null;filebundle.addResource(fileName, processors);
}
 
 {
String fileName = "/js/global.js";
String[] processors = null;filebundle.addResource(fileName, processors);
}
 
 {
String fileName = "/js/mobile.js";
String[] processors = null;filebundle.addResource(fileName, processors);
}
 
 {
String fileName = "/js/category.js";
String[] processors = null;filebundle.addResource(fileName, processors);
}
 
 {
String fileName = "/js/productdetail.js";
String[] processors = null;filebundle.addResource(fileName, processors);
}
 
 {
String fileName = "/js/checkout.js";
String[] processors = null;filebundle.addResource(fileName, processors);
}
 
 {
String fileName = "/js/account.js";
String[] processors = null;filebundle.addResource(fileName, processors);
}
 
 {
String fileName = "/js/wishlist.js";
String[] processors = null;filebundle.addResource(fileName, processors);
}
 
 {
String fileName = "/js/search.js";
String[] processors = null;filebundle.addResource(fileName, processors);
}
 
 {
String fileName = "/js/tracking.js";
String[] processors = null;filebundle.addResource(fileName, processors);
}
 
 {
String fileName = "/js/navigation.js";
String[] processors = null;filebundle.addResource(fileName, processors);
}
 
 {
String fileName = "/js/video.js";
String[] processors = null;filebundle.addResource(fileName, processors);
}
 
 resources = filebundle.process();
} else {resources = filebundle.getChachedResources();
}for(Resource resource : resources) {
PipelineDictionary newDict = context.createPipelineDictionary();
newDict.put("File", resource);
for(TagParameter parameter : parameters) {newDict.put(parameter.getKey(), parameter.getValue());}context.pushPipelineDictionary(newDict);renderer.processOpenTag(pageContext, (com.intershop.beehive.core.capi.request.ServletResponse) response, this, 49);
renderer.processCloseTag(pageContext, (com.intershop.beehive.core.capi.request.ServletResponse) response, this, 49);
context.popPipelineDictionary();}} 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"inc/BootstrapSelect", null, "52");} 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"inc/BootstrapDatePickerLocales", null, "54");} 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"inc/UserClientValidators.isml", null, "55");} 
      out.write("<script type=\"text/javascript\">\nif (typeof RetailShop === 'undefined') {var RetailShop = {}};\nRetailShop.URLs = {};\nRetailShop.URLs.getProductComponents = \"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewProduct-RenderProductComponents",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("CatalogID",null),context.getFormattedValue(getObject("CategoryBO:CatalogBO:Name"),null))).addURLParameter(context.getFormattedValue("CategoryName",null),context.getFormattedValue(getObject("CategoryBO:Name"),null))),null));
      out.write("\"; // additional params: SKU, cid, [cid, cid, ...]\nRetailShop.URLs.getRecommendedProducts = \"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewProductRecommendation-Start",null)))),null));
      out.write("\"; // params: SKU, ContextViewId\nRetailShop.URLs.getRecommendationSession = \"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewProductRecommendation-GetSessionData",null)))),null));
      out.write("\"; // no params\nRetailShop.URLs.loginPage = \"");
      out.print(context.getFormattedValue(url(true,context.getFormattedValue(getObject("SecureURL"),null), context.getFormattedValue("",null), (new URLPipelineAction(context.getFormattedValue("ViewUserAccount-ShowLogin",null)))),null));
      out.write("\";\n</script>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
