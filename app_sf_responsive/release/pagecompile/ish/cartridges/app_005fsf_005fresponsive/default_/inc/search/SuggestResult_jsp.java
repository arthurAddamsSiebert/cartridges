/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-16 22:40:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fsf_005fresponsive.default_.inc.search;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class SuggestResult_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

 protected Boolean printTemplateMarker() { return Boolean.FALSE; } 
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 

setEncodingType("text/html"); 
      out.write('\n');
 {try{String currentCacheTime = (String)((com.intershop.beehive.core.capi.request.ServletResponse)response).getHeaderValue(TemplateConstants.PAGECACHE_HEADER);if (currentCacheTime!=null && "00".equals(currentCacheTime)) {Logger.debug(this, "ISCACHE declaration is ignored since a prior 'forbidden'.");}else {long time = System.currentTimeMillis()/1000;long minute=0;if (minute <0) minute=0;long hour=24;if (hour <0)  hour=0;time += 60*minute+3600*hour;String extCacheTime = (String)((com.intershop.beehive.core.capi.request.ServletResponse)response).getHeaderValue(TemplateConstants.EXT_PAGECACHE_HEADER);Long oldTime=(currentCacheTime!=null)?Long.valueOf(currentCacheTime):(extCacheTime!=null)?Long.valueOf(extCacheTime):null;if (oldTime!=null && oldTime<time) {Logger.debug(this, "ISCACHE declaration is ignored since a prior declaration with a smaller caching period.");response.setHeader(TemplateConstants.PAGECACHE_HEADER, String.valueOf(oldTime));}else if (oldTime!=null && oldTime>time) {Logger.debug(this, "ISCACHE declaration reduces a caching period set by a prior declaration.");}if (oldTime==null || oldTime>time){if (time > Integer.MAX_VALUE){  time = Integer.MAX_VALUE;} response.setHeader(TemplateConstants.PAGECACHE_HEADER, String.valueOf(time));}}}catch(Exception e){Logger.error(this,"ISCACHE failed. Line: {2}",e);}} 
      out.write('\n');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (hasLoopElements("SearchResult:Hits") ? Boolean.TRUE : Boolean.FALSE)).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("SuggestSearchIndex:SearchIndexFeature:FeatureID"),null).equals(context.getFormattedValue("SFObjectSuggestSearch",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",3,e);}if (_boolean_result) { 
      out.write("\n\t<ul class=\"suggest-results-list\">\n\t\t");
 {Object temp_obj = (getObject("SearchResult:HitsBySuggestType(\"product\")")); getPipelineDictionary().put("ProductHits", temp_obj);} 
      out.write('\n');
      out.write('	');
      out.write('	');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (hasLoopElements("ProductHits") ? Boolean.TRUE : Boolean.FALSE)).booleanValue() && ((Boolean) ((((context.getFormattedValue("ShowProducts",null).equals(context.getFormattedValue("ShowProducts",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",6,e);}if (_boolean_result) { 
      out.write(" \n\t\t\t<li class=\"sectionHeader\">");
 {out.write(localizeISText("search.result.type.product.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</li>\n\t\t\t");
 {Object temp_obj = (getObject("ApplicationBO:Repository(\"ProductBORepository\")")); getPipelineDictionary().put("ProductBORepository", temp_obj);} 
      out.write("\n\t\t\t");
 while (loop("ProductHits","Hit",null)) { 
      out.write("\n\t\t\t\t<li>\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t<a href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewProduct-Start",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("SKU",null),context.getFormattedValue(getObject("Hit:Product:SKU"),null)))),null));
      out.write("\" data-search-result=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Hit:Query"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {13}",e);}if (value==null) value="";out.write(value);} 
      out.write("\" class=\"search-result\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span class=\"left\">\n\t\t\t\t\t\t\t\t");
 {Object temp_obj = (getObject("ProductBORepository:ProductBOBySKU(Hit:Product:SKU)")); getPipelineDictionary().put("ProductBO", temp_obj);} 
      out.write("\n\t\t\t\t\t\t\t\t<img src=\"");
      out.print(context.getFormattedValue(stringToHtml(context.getFormattedValue(getObject("ProductBO:Extension(\"Image\"):ImageContainerBO:PrimaryImageBO(\"S\"):EffectiveUrl"),null)),null));
      out.write("\" />\n\t\t\t\t\t\t\t\t");
 {String value = null;try{value=context.getFormattedValue(replace(context.getFormattedValue(getObject("Hit:Query"),null),(String)(context.getFormattedValue("(?i)(\\Q",null) + context.getFormattedValue(getObject("SearchTerm"),null) + context.getFormattedValue("\\E)",null)),(String)("<span class=\"ish-searchTerm\">$1</span>")),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {18}",e);}if (value==null) value="";out.write(value);} 
      out.write("\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span class=\"right\">\n\t\t\t\t\t\t\t\t");
 {String value = null;try{value=context.getFormattedValue(getObject("ProductBO:Price"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {21}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span class=\"clearfix\"></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasNext("Hit") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",25,e);}if (_boolean_result) { 
      out.write("<div class=\"border\"></div>");
 } 
      out.write("\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t");
 } 
      out.write('\n');
      out.write('	');
      out.write('	');
 } 
      out.write("\n\n\t\t");
 {Object temp_obj = (getObject("SearchResult:HitsBySuggestType(\"category\")")); getPipelineDictionary().put("CategoryHits", temp_obj);} 
      out.write('\n');
      out.write('	');
      out.write('	');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (hasLoopElements("CategoryHits") ? Boolean.TRUE : Boolean.FALSE)).booleanValue() && ((Boolean) ((((context.getFormattedValue("ShowCategories",null).equals(context.getFormattedValue("ShowCategories",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",32,e);}if (_boolean_result) { 
      out.write(" \n\t\t\t<li class=\"sectionHeader\">");
 {out.write(localizeISText("search.result.type.category.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</li>\n\t\t\t");
 while (loop("CategoryHits","Hit",null)) { 
      out.write("\n\t\t\t\t<li class=\"textOnly\">\n\t\t\t\t\t<a href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewStandardCatalog-Browse",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("CatalogID",null),context.getFormattedValue(getObject("Hit:Catalog:Id"),null))).addURLParameter(context.getFormattedValue("CategoryName",null),context.getFormattedValue(getObject("Hit:Category:Name"),null))),null));
      out.write("\" data-search-result=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Hit:Category:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {36}",e);}if (value==null) value="";out.write(value);} 
      out.write("\" class=\"search-result\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span class=\"left\">");
 {String value = null;try{value=context.getFormattedValue(replace(context.getFormattedValue(getObject("Hit:Category:DisplayName"),null),(String)(context.getFormattedValue("(?i)(\\Q",null) + context.getFormattedValue(getObject("SearchTerm"),null) + context.getFormattedValue("\\E)",null)),(String)("<span class=\"ish-searchTerm\">$1</span>")),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {38}",e);}if (value==null) value="";out.write(value);} 
      out.write("</span>\n\t\t\t\t\t\t\t<span class=\"right\">(");
 {String value = null;try{value=context.getFormattedValue(getObject("Hit:HitCount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {39}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(")</span>\n\t\t\t\t\t\t\t<span class=\"clearfix\"></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasNext("Hit") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",42,e);}if (_boolean_result) { 
      out.write("<div class=\"border\"></div>");
 } 
      out.write("\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t");
 } 
      out.write('\n');
      out.write('	');
      out.write('	');
 } 
      out.write("\n\n\t\t");
 {Object temp_obj = (getObject("SearchResult:HitsBySuggestType(\"brand\")")); getPipelineDictionary().put("BrandHits", temp_obj);} 
      out.write('\n');
      out.write('	');
      out.write('	');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (hasLoopElements("BrandHits") ? Boolean.TRUE : Boolean.FALSE)).booleanValue() && ((Boolean) ((((context.getFormattedValue("ShowBrands",null).equals(context.getFormattedValue("ShowBrands",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",49,e);}if (_boolean_result) { 
      out.write(" \n\t\t\t<li class=\"sectionHeader\">");
 {out.write(localizeISText("search.result.type.brand.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</li>\n\t\t\t");
 while (loop("BrandHits","Hit",null)) { 
      out.write("\n\t\t\t\t<li class=\"textOnly\">\n\t\t\t\t\t<a href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewParametricSearch-SimpleOfferSearch",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("SearchTerm",null),context.getFormattedValue(getObject("Hit:Query"),null)))),null));
      out.write("\" data-search-result=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Hit:Query"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {53}",e);}if (value==null) value="";out.write(value);} 
      out.write("\" class=\"search-result\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span class=\"left\">");
 {String value = null;try{value=context.getFormattedValue(replace(context.getFormattedValue(getObject("Hit:Query"),null),(String)(context.getFormattedValue("(?i)(\\Q",null) + context.getFormattedValue(getObject("SearchTerm"),null) + context.getFormattedValue("\\E)",null)),(String)("<span class=\"ish-searchTerm\">$1</span>")),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {55}",e);}if (value==null) value="";out.write(value);} 
      out.write("</span>\n\t\t\t\t\t\t\t<span class=\"right\">(");
 {String value = null;try{value=context.getFormattedValue(getObject("Hit:HitCount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {56}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(")</span>\n\t\t\t\t\t\t\t<span class=\"clearfix\"></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasNext("Hit") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",59,e);}if (_boolean_result) { 
      out.write("<div class=\"border\"></div>");
 } 
      out.write("\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t");
 } 
      out.write('\n');
      out.write('	');
      out.write('	');
 } 
      out.write("\n\n\t\t");
 {Object temp_obj = (getObject("SearchResult:HitsBySuggestType(\"content\")")); getPipelineDictionary().put("ContentHits", temp_obj);} 
      out.write('\n');
      out.write('	');
      out.write('	');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (hasLoopElements("ContentHits") ? Boolean.TRUE : Boolean.FALSE)).booleanValue() && ((Boolean) ((((context.getFormattedValue("ShowContents",null).equals(context.getFormattedValue("ShowContents",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",66,e);}if (_boolean_result) { 
      out.write(" \n\t\t\t<li class=\"rcol sectionHeader\">");
 {out.write(localizeISText("search.result.type.content.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</li>\n\t\t\t");
 while (loop("ContentHits","Hit",null)) { 
      out.write("\n\t\t\t\t<li class=\"rcol textOnly\">\n\t\t\t\t\t<a href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewContent-Start",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("PageletEntryPointID",null),context.getFormattedValue(getObject("Hit:Reference"),null)))),null));
      out.write("\" data-search-result=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Hit:Query"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {70}",e);}if (value==null) value="";out.write(value);} 
      out.write("\" class=\"search-result\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span class=\"left\">");
 {String value = null;try{value=context.getFormattedValue(replace(context.getFormattedValue(getObject("Hit:Query"),null),(String)(context.getFormattedValue("(?i)(\\Q",null) + context.getFormattedValue(getObject("SearchTerm"),null) + context.getFormattedValue("\\E)",null)),(String)("<span class=\"ish-searchTerm\">$1</span>")),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {72}",e);}if (value==null) value="";out.write(value);} 
      out.write("</span>\n\t\t\t\t\t\t\t<span class=\"right\">(");
 {String value = null;try{value=context.getFormattedValue(getObject("Hit:HitCount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {73}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(")</span>\n\t\t\t\t\t\t\t<span class=\"clearfix\"></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasNext("Hit") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",76,e);}if (_boolean_result) { 
      out.write("<div class=\"border\"></div>");
 } 
      out.write("\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t");
 } 
      out.write('\n');
      out.write('	');
      out.write('	');
 } 
      out.write("\n\t\t\n\t\t\n\t</ul>\n");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("SearchResult:Hits") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",91,e);}if (_boolean_result) { 
      out.write("\n\t<ul class=\"suggest-results-list\">\n\t\t");
 while (loop("SearchResult:Hits","Hit",null)) { 
      out.write("\n\t\t\t<li class=\"classic\"><button type=\"button\" data-search-result=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Hit:Query"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {94}",e);}if (value==null) value="";out.write(value);} 
      out.write("\" class=\"search-result\">");
 {String value = null;try{value=context.getFormattedValue(replace(context.getFormattedValue(getObject("Hit:Query"),null),(String)(context.getFormattedValue("(?i)(\\Q",null) + context.getFormattedValue(getObject("SearchTerm"),null) + context.getFormattedValue("\\E)",null)),(String)("<span class=\"ish-searchTerm\">$1</span>")),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {94}",e);}if (value==null) value="";out.write(value);} 
      out.write("</button></li>\n\t\t");
 } 
      out.write("\n\t</ul>\n");
 }} 
      out.write('\n');
      out.write('\n');
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
