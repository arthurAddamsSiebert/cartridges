/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-16 22:40:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fsf_005fresponsive.default_.inc.product.variation;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class PresentationSwatchImageOrColorCode_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ProductBO:AttributeValue(VariationAttribute:Name)"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",3,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("ProductBO:AttributeValue(VariationAttribute:Name):Object")); getPipelineDictionary().put("defaultValue", temp_obj);} 
 } else { 
 {Object temp_obj = (""); getPipelineDictionary().put("defaultValue", temp_obj);} 
 } 
 {Object temp_obj = (""); getPipelineDictionary().put("defaultValues", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("defaultValue") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",10,e);}if (_boolean_result) { 
 while (loop("defaultValue","defValue",null)) { 
 {Object temp_obj = (context.getFormattedValue(getObject("defaultValues"),null) + context.getFormattedValue(getObject("defValue"),null)); getPipelineDictionary().put("defaultValues", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((hasNext("defValue") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",13,e);}if (_boolean_result) { 
 {Object temp_obj = (context.getFormattedValue(getObject("defaultValues"),null) + context.getFormattedValue("|",null)); getPipelineDictionary().put("defaultValues", temp_obj);} 
 } 
 } 
 } else { 
 {Object temp_obj = (getObject("defaultValue")); getPipelineDictionary().put("defaultValues", temp_obj);} 
 } 
      out.write("<ul class=\"variation-attribute imageVariationList\n");
 _boolean_result=false;try {_boolean_result=((Boolean)((((((Boolean) ((((context.getFormattedValue(getObject("VariationAttribute:PresentationOption"),null).equals(context.getFormattedValue("swatchImage",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("VariationAttribute:PresentationOption"),null).equals(context.getFormattedValue("defaultAndSwatchImage",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",20,e);}if (_boolean_result) { 
      out.write("swatchImage");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((((Boolean) ((((context.getFormattedValue(getObject("VariationAttribute:PresentationOption"),null).equals(context.getFormattedValue("colorCode",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("VariationAttribute:PresentationOption"),null).equals(context.getFormattedValue("defaultAndColorCode",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",21,e);}if (_boolean_result) { 
      out.write("colorCode");
 } 
      out.write("\"\ndata-attribute-uuid=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("VariationAttribute:UUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {22}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('\n');
      out.write('>');
 while (loop("VariationInfo:VariationValues(VariationAttribute)","VariationValue",null)) { 
 while (loop("VariationInfo:VariationProductBOs","Variation",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("Variation:Attribute(VariationAttribute:Name)"),null).equals(context.getFormattedValue(getObject("VariationValue"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",28,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("Variation")); getPipelineDictionary().put("VariationProduct", temp_obj);} 
 } 
 } 
 {Object temp_obj = (""); getPipelineDictionary().put("VariationValues", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("VariationValue") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",35,e);}if (_boolean_result) { 
 while (loop("VariationValue","attrValue",null)) { 
 {Object temp_obj = (context.getFormattedValue(getObject("VariationValues"),null) + context.getFormattedValue(getObject("attrValue"),null)); getPipelineDictionary().put("VariationValues", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((hasNext("attrValue") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",38,e);}if (_boolean_result) { 
 {Object temp_obj = (context.getFormattedValue(getObject("VariationValues"),null) + context.getFormattedValue("|",null)); getPipelineDictionary().put("VariationValues", temp_obj);} 
 } 
 } 
 } else { 
 {Object temp_obj = (getObject("VariationValue")); getPipelineDictionary().put("VariationValues", temp_obj);} 
 } 
      out.write("<li class=\"imageVariationListItem\" >");
 {Object temp_obj = (getObject("VariationInfo:VariationProduct(VariationAttribute,VariationValues)")); getPipelineDictionary().put("VariationProductSameConfiguration", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("VariationProduct"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",47,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) ((disableErrorMessages().isDefined(getObject("VariationProductSameConfiguration"))))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",48,e);}if (_boolean_result) { 
      out.write("<a data-variation-product-attribute=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("VariationValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {49}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" data-variation-attribute=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("VariationAttribute:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {49}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" class=\"");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("defaultValues"),null).equals(context.getFormattedValue(getObject("VariationValues"),null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",49,e);}if (_boolean_result) { 
      out.write("selected");
 } 
      out.write("\" href=\"javascript:void(false)\" style=\"opacity: 0.3;\" title=\"");
 {out.write(localizeISText("product.available_in_different_configuration","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write('"');
      out.write('>');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("VariationAttribute:DisplayName")))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("VariationAttribute:DisplayName"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",50,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("VariationAttribute:PresentationOption"),null).equals(context.getFormattedValue("colorCode",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("VariationAttribute:PresentationOption"),null).equals(context.getFormattedValue("defaultAndColorCode",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",51,e);}if (_boolean_result) { 
      out.write("<span style=\"background-color:");
      out.print(context.getFormattedValue("#",null));
 {String value = null;try{value=context.getFormattedValue(getObject("VariationProduct:AttributeValue(VariationAttribute:PresentationProductAttributeName):StringValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {52}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("VariationProduct")))).booleanValue() && !((Boolean) (getObject("VariationProduct:Available"))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",52,e);}if (_boolean_result) { 
      out.write("title=\"");
 {out.write(localizeISText("product.variation.not_available.text","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write('"');
 } 
      out.write(">&nbsp;</span>");
 } else { 
      out.write("<img src=\"");
      out.print(context.getFormattedValue(contentURL(context.getFormattedValue(getObject("VariationProduct:AttributeValue(VariationAttribute:PresentationProductAttributeName):StringValue"),null)),null));
      out.write("\" alt=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("VariationValues"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {54}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write(' ');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("VariationProduct")))).booleanValue() && !((Boolean) (getObject("VariationProduct:Available"))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",54,e);}if (_boolean_result) { 
      out.write("title=\"");
 {out.write(localizeISText("product.variation.not_available.text","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write('"');
 } 
      out.write('/');
      out.write('>');
 } 
 } else { 
      out.write("<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/img/not_available.png\" alt=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("VariationValues"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {57}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write(' ');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("VariationProduct")))).booleanValue() && !((Boolean) (getObject("VariationProduct:Available"))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",57,e);}if (_boolean_result) { 
      out.write("title=\"");
 {out.write(localizeISText("product.variation.not_available.text","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write('"');
 } 
      out.write('/');
      out.write('>');
 } 
      out.write("</a>");
 } else { 
      out.write("<a data-variation-product-attribute=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("VariationValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {61}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" data-variation-attribute=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("VariationAttribute:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {61}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" class=\"");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((context.getFormattedValue(getObject("defaultValues"),null).equals(context.getFormattedValue(getObject("VariationValues"),null)))) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",61,e);}if (_boolean_result) { 
      out.write("selected");
 } 
      out.write("\" href=\"javascript:void(false)\">");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("VariationAttribute:DisplayName")))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("VariationAttribute:DisplayName"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",62,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("VariationAttribute:PresentationOption"),null).equals(context.getFormattedValue("colorCode",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("VariationAttribute:PresentationOption"),null).equals(context.getFormattedValue("defaultAndColorCode",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",63,e);}if (_boolean_result) { 
      out.write("<span style=\"background-color:");
      out.print(context.getFormattedValue("#",null));
 {String value = null;try{value=context.getFormattedValue(getObject("VariationProduct:AttributeValue(VariationAttribute:PresentationProductAttributeName):StringValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {64}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("VariationProduct")))).booleanValue() && !((Boolean) (getObject("VariationProduct:Available"))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",64,e);}if (_boolean_result) { 
      out.write("title=\"");
 {out.write(localizeISText("product.variation.not_available.text","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write('"');
 } 
      out.write(">&nbsp;</span>");
 } else { 
      out.write("<img src=\"");
      out.print(context.getFormattedValue(contentURL(context.getFormattedValue(getObject("VariationProduct:AttributeValue(VariationAttribute:PresentationProductAttributeName):StringValue"),null)),null));
      out.write("\" alt=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("VariationValues"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {66}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write(' ');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("VariationProduct")))).booleanValue() && !((Boolean) (getObject("VariationProduct:Available"))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",66,e);}if (_boolean_result) { 
      out.write("title=\"");
 {out.write(localizeISText("product.variation.not_available.text","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write('"');
 } 
      out.write('/');
      out.write('>');
 } 
 } else { 
      out.write("<img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/img/not_available.png\" alt=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("VariationValues"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {69}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write(' ');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("VariationProduct")))).booleanValue() && !((Boolean) (getObject("VariationProduct:Available"))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",69,e);}if (_boolean_result) { 
      out.write("title=\"");
 {out.write(localizeISText("product.variation.not_available.text","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write('"');
 } 
      out.write('/');
      out.write('>');
 } 
      out.write("</a>");
 } 
 } 
      out.write("</li>");
 } 
      out.write("</ul>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
