<%@  page buffer="none" import="java.util.*,java.io.*,com.intershop.beehive.core.internal.template.*,com.intershop.beehive.core.internal.template.isml.*,com.intershop.beehive.core.capi.log.*,com.intershop.beehive.core.capi.resource.*,com.intershop.beehive.core.capi.util.UUIDMgr,com.intershop.beehive.core.capi.util.XMLHelper,com.intershop.beehive.foundation.util.*,com.intershop.beehive.core.internal.url.*,com.intershop.beehive.core.internal.resource.*,com.intershop.beehive.core.internal.wsrp.*,com.intershop.beehive.core.capi.pipeline.PipelineDictionary,com.intershop.beehive.core.capi.naming.NamingMgr,com.intershop.beehive.core.capi.pagecache.PageCacheMgr,com.intershop.beehive.core.capi.request.SessionMgr,com.intershop.beehive.core.internal.request.SessionMgrImpl,com.intershop.beehive.core.pipelet.PipelineConstants" extends="com.intershop.beehive.core.internal.template.AbstractTemplate" %><% 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 %><% %><%@ page contentType="text/html;charset=utf-8" %><%response.setHeader(TemplateConstants.PERSONALIZED_HEADER, "1");setEncodingType("text/html"); %><% {Object temp_obj = ("false"); getPipelineDictionary().put("hasGiftOption", temp_obj);} %><% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("GiftWrap_Switch")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("GiftWrap_Switch"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("GiftMessage_Switch")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("GiftMessage_Switch"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",4,e);}if (_boolean_result) { %><% {Object temp_obj = ("true"); getPipelineDictionary().put("hasGiftOption", temp_obj);} %><% } %><div class="section"><% processOpenTag(response, pageContext, "bucketheader", new TagParameter[] {
new TagParameter("bucket",getObject("Bucket")),
new TagParameter("displaydeliverytime","false"),
new TagParameter("bucketnumber",getObject("CartShippingMethod:BasketShippingMethodSelectionBucketBOs:Size"))}, 10); %><div class="list-header">
<div class="list-header-item <% _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("hasGiftOption"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",14,e);}if (_boolean_result) { %>col-sm-6<% } else { %>col-sm-8<% } %>"><% {out.write(localizeISText("checkout.shipping.pli.description.heading","",null,null,null,null,null,null,null,null,null,null,null));} %></div>
<div class="list-header-item col-sm-1"><% {out.write(localizeISText("checkout.shipping.pli.qty.heading","",null,null,null,null,null,null,null,null,null,null,null));} %></div><% _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("hasGiftOption"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",16,e);}if (_boolean_result) { %><div class="list-header-item col-sm-2"><% {out.write(localizeISText("checkout.gifting.shipping.heading","",null,null,null,null,null,null,null,null,null,null,null));} %></div><% } %><div class="list-header-item col-sm-3"><% {out.write(localizeISText("checkout.shipping.pli.availability.heading","",null,null,null,null,null,null,null,null,null,null,null));} %></div>
</div><% _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("CartShippingMethod:BasketShippingMethodSelectionBucketBOs:Size")).doubleValue() <=((Number)(new Double(1))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",21,e);}if (_boolean_result) { %><h3 class="visible-xs"><% {out.write(localizeISText("checkout.shipping.pli.items.heading","",null,null,null,null,null,null,null,null,null,null,null));} %></h3><% } %><div class="list-body"><% {Object temp_obj = (getObject("CurrentCartBO:Extension(\"Inventory\")")); getPipelineDictionary().put("BasketBOInventoryExtension", temp_obj);} %><% {Object temp_obj = (getObject("BasketBOInventoryExtension:InventoryStatusForProductsInWarehouse")); getPipelineDictionary().put("InventoryMappings", temp_obj);} %><% while (loop("Bucket:ProductLineItemBOs","PLI",null)) { %><% {Object temp_obj = (getObject("PLI:Extension(\"Gifting\")")); getPipelineDictionary().put("PLIGifting", temp_obj);} %><% {Object temp_obj = (getObject("PLI:Extension(\"Warranty\")")); getPipelineDictionary().put("PLIWarranty", temp_obj);} %><div class="list-item-row list-item-row-big">
<div class="<% _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("hasGiftOption"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",36,e);}if (_boolean_result) { %>col-sm-6<% } else { %>col-sm-8<% } %> list-item"><% {Object temp_obj = (getObject("InventoryMappings:get(PLI:ProductRef):InStock")); getPipelineDictionary().put("InventoryStock", temp_obj);} %><% processOpenTag(response, pageContext, "plidescription", new TagParameter[] {
new TagParameter("BasketBOInventoryExtension",getObject("BasketBOInventoryExtension")),
new TagParameter("InventoryMappings",getObject("InventoryStock")),
new TagParameter("variationattributes","horizontal"),
new TagParameter("showimage","false"),
new TagParameter("showwarranty","false"),
new TagParameter("pli",getObject("PLI")),
new TagParameter("owningdomain",getObject("CurrentOrganization:OwningDomain"))}, 39); %><% {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"checkout/common/PromotionCodeList", null, "40");} %><% _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PLIWarranty:Warranty:Warranty"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",43,e);}if (_boolean_result) { %><div><% {String value = null;try{value=context.getFormattedValue(getObject("PLIWarranty:Warranty:Warranty:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {45}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %><a href="<%=context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewWarrantyDetails-Start",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("SKU",null),context.getFormattedValue(getObject("PLIWarranty:Warranty:ProductSKU"),null)))),null)%>" data-dialog class="details-link"><% {out.write(localizeISText("shopping_cart.detail.text","",null,null,null,null,null,null,null,null,null,null,null));} %></a>
</div><% } %></div>
<div class="col-sm-1 list-item">
<input type="hidden" name="<% {String value = null;try{value=context.getFormattedValue(getObject("Bucket:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {52}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>_<% {String value = null;try{value=context.getFormattedValue(getObject("PLI:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {52}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>" value="<% {String value = null;try{value=context.getFormattedValue(getObject("PLI:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {52}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>" />
<label class="hidden-sm hidden-md hidden-lg control-label"><% {out.write(localizeISText("checkout.shipping.pli.qty.label","",null,null,null,null,null,null,null,null,null,null,null));} %></label><% {String value = null;try{value=context.getFormattedValue(getObject("PLI:Quantity"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {54}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></div> 
<% _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("hasGiftOption"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",58,e);}if (_boolean_result) { %><div class="col-sm-2 list-item checkbox"><% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("PLIGifting:GiftWrappable"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("PLIGifting:GiftMessagable"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",60,e);}if (_boolean_result) { %><% processOpenTag(response, pageContext, "getindirectvalue", new TagParameter[] {
new TagParameter("entry","GiftOptionsFromTemplate"),
new TagParameter("print","false"),
new TagParameter("key",context.getFormattedValue("giftOptionsFromTemplate_",null) + context.getFormattedValue(getObject("PLI:ID"),null))}, 61); %><% processOpenTag(response, pageContext, "getindirectvalue", new TagParameter[] {
new TagParameter("entry","GiftOption"),
new TagParameter("print","false"),
new TagParameter("key",context.getFormattedValue("giftOption_",null) + context.getFormattedValue(getObject("PLI:ID"),null))}, 62); %><label for="gift_checkbox_<% {String value = null;try{value=context.getFormattedValue(getObject("PLI:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {64}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>">
<input name="giftOption_<% {String value = null;try{value=context.getFormattedValue(getObject("PLI:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {65}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>"
<% _boolean_result=false;try {_boolean_result=((Boolean)(((disableErrorMessages().isDefined(getObject("GiftOptionsFromTemplate")))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",66,e);}if (_boolean_result) { %><% _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("GiftOption"),null).equals(context.getFormattedValue("on",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",67,e);}if (_boolean_result) { %> checked="checked"<% } %><% } else {_boolean_result=false;try {_boolean_result=((Boolean)((((((Boolean) (disableErrorMessages().isDefined(getObject("PLIGifting:GiftOptionMarked")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("PLIGifting:GiftOptionMarked"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",68,e);}if (_boolean_result) { %> checked="checked"
<% }} %>
id="gift_checkbox_<% {String value = null;try{value=context.getFormattedValue(getObject("PLI:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {70}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>" type="checkbox" 
/><% {out.write(localizeISText("checkout.gifting.shipping.gift_checkbox.text","",null,null,null,null,null,null,null,null,null,null,null));} %></label><% } else { %><span class="hidden-xs"><% {out.write(localizeISText("checkout.gifting.shipping.gift_notavailable.text","",null,null,null,null,null,null,null,null,null,null,null));} %></span>
<span class="hidden-sm hidden-md hidden-lg"><% {out.write(localizeISText("checkout.gifting.shipping.gift_notavailable.xs.text","",null,null,null,null,null,null,null,null,null,null,null));} %></span><% } %></div>
<input type="hidden" name="<%=context.getFormattedValue(context.getFormattedValue("giftOptionsFromTemplate_",null) + context.getFormattedValue(getObject("PLI:ID"),null),null)%>" value="true" /><% } %><div class="col-sm-3 list-item">
<p><% _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("PLI:Available"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",85,e);}if (_boolean_result) { %><% {out.write(localizeISText("checkout.shipping.pli.instock.text","",null,null,null,null,null,null,null,null,null,null,null));} %><% } else { %><% {out.write(localizeISText("checkout.shipping.pli.out_of_stock.text","",null,null,null,null,null,null,null,null,null,null,null));} %><% } %></p><% _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ApplicationBO:Configuration:String(\"DesiredDeliveryDate_Switch\")"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",92,e);}if (_boolean_result) { %><% _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) getObject("RecurringBasket:Recurring")).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",93,e);}if (_boolean_result) { %><% _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) getObject("PLI:FreeGift")).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",94,e);}if (_boolean_result) { %><% _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) getObject("Bucket:SelectedShippingMethod:DigitalDelivery")).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",95,e);}if (_boolean_result) { %><div class="form-group <% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_DesiredDeliveryDate")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("ERROR_DesiredDeliveryDateUUID"),null).equals(context.getFormattedValue(getObject("PLI:ID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",96,e);}if (_boolean_result) { %>has-error<% } %>">
<label class="control-label" for="desiredDeliveryDate_<% {String value = null;try{value=context.getFormattedValue(getObject("PLI:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {99}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>"><% {out.write(localizeISText("checkout.shipping.pli.dddate.short.text","",null,null,null,null,null,null,null,null,null,null,null));} %></label>
<input data-testing-id="desiredDeliveryDate" type="text" maxlength="255" aria-required="true" 
class="desiredDeliveryDateField form-control" 
value="
<% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_DesiredDeliveryDate")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("ERROR_DesiredDeliveryDateUUID"),null).equals(context.getFormattedValue(getObject("PLI:ID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",103,e);}if (_boolean_result) { %><% {String value = null;try{value=context.getFormattedValue(getObject("ERROR_DesiredDeliveryDateValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {103}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %><% } else {_boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("DeliveryDate"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",104,e);}if (_boolean_result) { %><% {String value = null;try{value=context.getFormattedValue(getObject("DeliveryDate"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {104}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %><% } else { %><% {String value = null;try{value=context.getFormattedValue(getObject("PLI:DesiredDeliveryDate"),new Integer(DATE_INPUT),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {105}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %><% }} %>
" 
id="desiredDeliveryDate_<% {String value = null;try{value=context.getFormattedValue(getObject("PLI:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {108}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>"
/><% processOpenTag(response, pageContext, "datepicker", new TagParameter[] {
new TagParameter("end_date",getObject("ExcludedDeliveryDatesCalendar:EndDateJS")),
new TagParameter("days_of_week_disabled",getObject("ExcludedDeliveryDatesCalendar:DaysOfWeekDisabled")),
new TagParameter("locale",getObject("CurrentSession:Locale")),
new TagParameter("dates_disabled",getObject("ExcludedDeliveryDatesCalendar:ExcludedDatesByPLIAsJSON(PLI,CurrentSession:Locale:DefaultRegionalSettings:inputDatePattern)")),
new TagParameter("input_id",context.getFormattedValue("desiredDeliveryDate_",null) + context.getFormattedValue(getObject("PLI:ID"),null)),
new TagParameter("start_date",getObject("ExcludedDeliveryDatesCalendar:StartDateJS"))}, 110); %><small class="input-help"><% {String value = null;try{value=context.getFormattedValue((context.getFormattedValue(getObject("CurrentSession:Locale:DefaultRegionalSettings:inputDatePattern"),null).toUpperCase()),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {119}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></small>
</div><% } %><% } %><% } %><% } %></div>
</div><% } %></div>
</div> <% printFooter(out); %>