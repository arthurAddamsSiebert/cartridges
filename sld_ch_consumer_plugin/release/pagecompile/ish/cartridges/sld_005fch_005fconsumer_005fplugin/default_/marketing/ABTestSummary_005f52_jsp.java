/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fch_005fconsumer_005fplugin.default_.marketing;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class ABTestSummary_005f52_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"marketing/abtest/Modules", null, "3");} 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"marketing/Modules", null, "4");} 
      out.write("<!-- Working Area -->\n<!-- Main Content -->");
 processOpenTag(response, pageContext, "marketingobjectdisplayname", new TagParameter[] {
new TagParameter("Locale",getObject("CurrentSession:Locale")),
new TagParameter("Print","false"),
new TagParameter("ObjectDisplayName","ABTestDisplayName"),
new TagParameter("Object",getObject("ABTest"))}, 8); 
 processOpenTag(response, pageContext, "breadcrumbtrail", new TagParameter[] {
new TagParameter("text1",context.getFormattedValue(" - ",null) + context.getFormattedValue(localizeText(context.getFormattedValue("ABTestSummary_52.Summary.text1",null)),null)),
new TagParameter("link",url(true,(new URLPipelineAction(context.getFormattedValue("ViewABTestSummary_52-Show",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("ChannelID",null),context.getFormattedValue(getObject("CurrentChannel:UUID"),null))).addURLParameter(context.getFormattedValue("ABTestUUID",null),context.getFormattedValue(getObject("ABTest:UUID"),null)))),
new TagParameter("id",getObject("ABTest:UUID")),
new TagParameter("text",getObject("ABTestDisplayName"))}, 9); 
      out.write("<!-- Tabs -->");
 processOpenTag(response, pageContext, "put", new TagParameter[] {
new TagParameter("name","SelectedTab"),
new TagParameter("value","Summary")}, 12); 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"marketing/ABTestTabs_52", null, "13");} 
      out.write("<!-- EO Tabs -->\n<div class=\"table_title w e s\" style=\"line-height: 34px\">");
 {String value = null;try{value=context.getFormattedValue(getObject("ABTestDisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {17}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ABTest:ContentApproved"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",18,e);}if (_boolean_result) { 
      out.write("&nbsp;-&nbsp;");
 processOpenTag(response, pageContext, "abtestapprovalmessage", new TagParameter[] {
new TagParameter("abtest","ABTest")}, 18); 
 } 
      out.write("</div>\n<!-- keep content confirmation-->");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("keepContent"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",21,e);}if (_boolean_result) { 
      out.write("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n<tr>\n<td>");
 URLPipelineAction action589 = new URLPipelineAction(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewABTestSetContentOnline_52-Dispatch",null)))),null));String site589 = null;String serverGroup589 = null;String actionValue589 = context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewABTestSetContentOnline_52-Dispatch",null)))),null);if (site589 == null){  site589 = action589.getDomain();  if (site589 == null)  {      site589 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getDomainName();  }}if (serverGroup589 == null){  serverGroup589 = action589.getServerGroup();  if (serverGroup589 == null)  {      serverGroup589 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getServerGroup();  }}out.print("<form");out.print(" method=\"");out.print("post");out.print("\"");out.print(" action=\"");out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewABTestSetContentOnline_52-Dispatch",null)))),null));out.print("\"");out.print(" name=\"");out.print("keepContentForm");out.print("\"");out.print(">");out.print(context.prepareWACSRFTag(actionValue589, site589, serverGroup589,true)); 
      out.write("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"confirm_box\">");
 processOpenTag(response, pageContext, "messagebox", new TagParameter[] {
new TagParameter("colspan","1"),
new TagParameter("parametervalue4",getObject("CurrentChannel:UUID")),
new TagParameter("parametername1","ABTestGroupUUID"),
new TagParameter("parametervalue2",getObject("ABTest:UUID")),
new TagParameter("subject","ABTestGroup"),
new TagParameter("cancelbtnname","cancel"),
new TagParameter("parametervalue1",getObject("ABTestGroup:UUID")),
new TagParameter("parametername2","ABTestUUID"),
new TagParameter("parametername3","ChannelID"),
new TagParameter("okbtnname","confirmKeepContent"),
new TagParameter("type","sdc"),
new TagParameter("message",localizeText(context.getFormattedValue("ABTestSummary_52.KeepContentConfirmation.message",null)))}, 28); 
      out.write("</table>");
 out.print("</form>"); 
      out.write("</td>\n</tr>\n</table>");
 } 
      out.write("<div class=\"table_title_description w e s\">");
 {out.write(localizeISText("ABTestSummary_52.TheseStatisticsAreUpdatedEveryTimeTheJobUpdateTrack.table_title_description",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(' ');
      out.write('\n');
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ABTest:ContentApproved"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",47,e);}if (_boolean_result) { 
 } else { 
 {out.write(localizeISText("ABTestSummary_52.FinishTheABTestByClickingSetContentOnline.table_title_description",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(' ');
      out.write('\n');
 } 
      out.write(" \n</div>");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("ABTestGroups") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",54,e);}if (_boolean_result) { 
      out.write("<h2 class=\"section s e w opened\" onclick=\"$('div[selector=Overview]').toggle( 0, function() {$('div[selector=Overview]').is(':visible') ? $(this).addClass('opened') : $(this).removeClass('opened') }.bind(this) )\">");
 {out.write(localizeISText("ABTestSummary_52.Overview.section",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</h2>\n<div selector=\"Overview\" class=\"section\" style=\"display: block\">\n<table class=\"abtest_zebra_table s\">\n<tr>\n<th class=\"table_header s w e left\">");
 {out.write(localizeISText("ABTestSummary_52.Statistics.table_header",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n<th class=\"table_header s e right\" style=\"width: 15%\">");
 {String value = null;try{value=context.getFormattedValue(getObject("ABTest:ControlGroup:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {64}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(' ');
      out.write('(');
 {String value = null;try{value=context.getFormattedValue((new Double( ((Number) getObject("ABTest:ControlGroup:Ratio")).doubleValue() /((Number) new Double(100)).doubleValue())),new Integer(PERCENTAGE),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {64}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(")\n</th>");
 while (loop("ABTestGroups","TestGroup",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("ABTest:ControlGroup:UUID"),null).equals(context.getFormattedValue(getObject("TestGroup:UUID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",67,e);}if (_boolean_result) { 
      out.write("<th class=\"table_header s e right\" style=\"width: 15%\">");
 {String value = null;try{value=context.getFormattedValue(getObject("TestGroup:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {69}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(' ');
      out.write('(');
 {String value = null;try{value=context.getFormattedValue((new Double( ((Number) getObject("TestGroup:Ratio")).doubleValue() /((Number) new Double(100)).doubleValue())),new Integer(PERCENTAGE),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {69}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(")\n</th>");
 } 
 } 
      out.write("<th class=\"table_header s e right\" style=\"width: 15%\">");
 {out.write(localizeISText("ABTestSummary_52.Total.table_header",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n</tr>");
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectViewedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","count"),
new TagParameter("summarygroup","total"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","TestObjectViewedEvent")}, 76); 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectAppliedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","count"),
new TagParameter("summarygroup","total"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","TestObjectAppliedEvent")}, 83); 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectClickedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","count"),
new TagParameter("summarygroup","total"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","TestObjectClickedEvent")}, 91); 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","OrderCreatedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","countandsum"),
new TagParameter("summarygroup","total"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","OrderCreatedEvent"),
new TagParameter("togglefor","SummaryCurrency")}, 99); 
 while (loop("Currencies","Currency","Counter")) { 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","OrderCreatedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","countandsum"),
new TagParameter("summarygroup","total"),
new TagParameter("currency",getObject("Currency")),
new TagParameter("selector","SummaryCurrency"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","OrderCreatedEvent")}, 107); 
 } 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","lastupdate1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","time"),
new TagParameter("summarygroup","lastupdate"),
new TagParameter("type","timestamp"),
new TagParameter("statisticskey1","null")}, 117); 
      out.write("</table>\n</div>");
      out.write("<h2 class=\"section s e w\" onclick=\"$('div[selector=TotalValues]').toggle( 0, function() {$('div[selector=TotalValues]').is(':visible') ? $(this).addClass('opened') : $(this).removeClass('opened') }.bind(this) )\">");
 {out.write(localizeISText("ABTestSummary_52.TotalValues.section",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</h2>\n<div selector=\"TotalValues\" class=\"section\">\n<table class=\"abtest_zebra_table\">\n<tr>\n<th class=\"table_header s e w left\">");
 {out.write(localizeISText("ABTestSummary_52.Statistics.table_header",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n<th class=\"table_header s e right\" style=\"width: 15%\">");
 {String value = null;try{value=context.getFormattedValue(getObject("ABTest:ControlGroup:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {135}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(' ');
      out.write('(');
 {String value = null;try{value=context.getFormattedValue((new Double( ((Number) getObject("ABTest:ControlGroup:Ratio")).doubleValue() /((Number) new Double(100)).doubleValue())),new Integer(PERCENTAGE),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {135}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(")\n</th>");
 while (loop("ABTestGroups","TestGroup",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("ABTest:ControlGroup:UUID"),null).equals(context.getFormattedValue(getObject("TestGroup:UUID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",138,e);}if (_boolean_result) { 
      out.write("<th class=\"table_header s e right\" style=\"width: 15%\">");
 {String value = null;try{value=context.getFormattedValue(getObject("TestGroup:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {140}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(' ');
      out.write('(');
 {String value = null;try{value=context.getFormattedValue((new Double( ((Number) getObject("TestGroup:Ratio")).doubleValue() /((Number) new Double(100)).doubleValue())),new Integer(PERCENTAGE),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {140}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(")\n</th>");
 } 
 } 
      out.write("<th class=\" table_header s e right\" style=\"width: 15%\">");
 {out.write(localizeISText("ABTestSummary_52.Total.table_header",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n</tr>");
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","ABTestSessionCreatedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","count"),
new TagParameter("summarygroup","total"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","ABTestSessionCreatedEvent")}, 148); 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","ShoppingCartEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","count"),
new TagParameter("summarygroup","total"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","ShoppingCartEvent")}, 155); 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","CheckoutEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","count"),
new TagParameter("summarygroup","total"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","CheckoutEvent")}, 162); 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","OrderCreatedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","countandsum"),
new TagParameter("summarygroup","total"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","OrderCreatedEvent"),
new TagParameter("togglefor","TotalValuesOrders")}, 169); 
 while (loop("Currencies","Currency",null)) { 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","OrderCreatedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","countandsum"),
new TagParameter("summarygroup","total"),
new TagParameter("currency",getObject("Currency")),
new TagParameter("selector","TotalValuesOrders"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","OrderCreatedEvent")}, 177); 
 } 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("statisticmarker1","Sum"),
new TagParameter("displaynamekey","ItemsOrderedEvent1"),
new TagParameter("calculator1","sum"),
new TagParameter("summarygroup","total"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","ItemsOrderedEvent"),
new TagParameter("togglefor","TotalValuesItems")}, 187); 
 while (loop("Currencies","Currency",null)) { 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("statisticmarker1","Sum"),
new TagParameter("displaynamekey","ItemsOrderedEvent1"),
new TagParameter("calculator1","sum"),
new TagParameter("summarygroup","total"),
new TagParameter("selector","TotalValuesItems"),
new TagParameter("currency",getObject("Currency")),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","ItemsOrderedEvent")}, 195); 
 } 
 while (loop("Currencies","Currency",null)) { 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("statisticmarker1","Sum"),
new TagParameter("displaynamekey","OrderCreatedEvent2"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","countandsum"),
new TagParameter("summarygroup","total"),
new TagParameter("currency",getObject("Currency")),
new TagParameter("selector","TotalValuesItems"),
new TagParameter("type","currency"),
new TagParameter("statisticskey1","OrderCreatedEvent")}, 206); 
 } 
      out.write("</table>\n</div>");
      out.write("<h2 class=\"section s e w\" onclick=\"$('div[selector=Conversion]').toggle( 0, function() {$('div[selector=Conversion]').is(':visible') ? $(this).addClass('opened') : $(this).removeClass('opened') }.bind(this) )\">");
 {out.write(localizeISText("ABTestSummary_52.Conversion.section",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</h2>\n<div selector=\"Conversion\" class=\"section\">\n<table class=\"abtest_zebra_table\">\n<tr>\n<th class=\"table_header s w e left\">");
 {out.write(localizeISText("ABTestSummary_52.Statistics.table_header",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n<th class=\"table_header s e right\" style=\"width: 15%\">");
 {String value = null;try{value=context.getFormattedValue(getObject("ABTest:ControlGroup:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {229}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(' ');
      out.write('(');
 {String value = null;try{value=context.getFormattedValue((new Double( ((Number) getObject("ABTest:ControlGroup:Ratio")).doubleValue() /((Number) new Double(100)).doubleValue())),new Integer(PERCENTAGE),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {229}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(")\n</th>");
 while (loop("ABTestGroups","TestGroup",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("ABTest:ControlGroup:UUID"),null).equals(context.getFormattedValue(getObject("TestGroup:UUID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",232,e);}if (_boolean_result) { 
      out.write("<th class=\"table_header s e right\" style=\"width: 15%\">");
 {String value = null;try{value=context.getFormattedValue(getObject("TestGroup:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {234}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(' ');
      out.write('(');
 {String value = null;try{value=context.getFormattedValue((new Double( ((Number) getObject("TestGroup:Ratio")).doubleValue() /((Number) new Double(100)).doubleValue())),new Integer(PERCENTAGE),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {234}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(")\n</th>");
 } 
 } 
      out.write("<th class=\"table_header s e right\" style=\"width: 15%\">");
 {out.write(localizeISText("ABTestSummary_52.Total.table_header",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n</tr>");
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectViewedEvent1.TestObjectClickedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","chisqu"),
new TagParameter("summarygroup","conversion"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","TestObjectViewedEvent-TestObjectClickedEvent")}, 242); 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectViewedEvent1.TestObjectAppliedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","chisqu"),
new TagParameter("summarygroup","conversion"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","TestObjectViewedEvent-TestObjectAppliedEvent")}, 250); 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectViewedEvent1.ShoppingCartEvent1"),
new TagParameter("calculator1","chisqu"),
new TagParameter("summarygroup","conversion"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","TestObjectViewedEvent-ShoppingCartEvent")}, 257); 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectClickedEvent1.ShoppingCartEvent1"),
new TagParameter("calculator1","chisqu"),
new TagParameter("summarygroup","conversion"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","TestObjectClickedEvent-ShoppingCartEvent")}, 265); 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectViewedEvent1.CheckoutEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","chisqu"),
new TagParameter("summarygroup","conversion"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","TestObjectViewedEvent-CheckoutEvent")}, 273); 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectClickedEvent1.CheckoutEvent1"),
new TagParameter("calculator1","chisqu"),
new TagParameter("summarygroup","conversion"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","TestObjectClickedEvent-CheckoutEvent")}, 281); 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectAppliedEvent1.CheckoutEvent1"),
new TagParameter("calculator1","chisqu"),
new TagParameter("summarygroup","conversion"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","TestObjectAppliedEvent-CheckoutEvent")}, 289); 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectViewedEvent1.OrderCreatedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","chisqu"),
new TagParameter("summarygroup","conversion"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","TestObjectViewedEvent-OrderCreatedEvent"),
new TagParameter("togglefor","ConversionTestObjectViewed")}, 296); 
 while (loop("Currencies","Currency",null)) { 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectViewedEvent1.OrderCreatedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","chisqu"),
new TagParameter("summarygroup","conversion"),
new TagParameter("currency",getObject("Currency")),
new TagParameter("selector","ConversionTestObjectViewed"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","TestObjectViewedEvent-OrderCreatedEvent")}, 304); 
 } 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectClickedEvent1.OrderCreatedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","chisqu"),
new TagParameter("summarygroup","conversion"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","TestObjectClickedEvent-OrderCreatedEvent"),
new TagParameter("togglefor","ConversionTestObjectClicked")}, 315); 
 while (loop("Currencies","Currency",null)) { 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectClickedEvent1.OrderCreatedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","chisqu"),
new TagParameter("summarygroup","conversion"),
new TagParameter("currency",getObject("Currency")),
new TagParameter("selector","ConversionTestObjectClicked"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","TestObjectClickedEvent-OrderCreatedEvent")}, 323); 
 } 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectAppliedEvent1.OrderCreatedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","chisqu"),
new TagParameter("summarygroup","conversion"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","TestObjectAppliedEvent-OrderCreatedEvent"),
new TagParameter("togglefor","ConversionTestObjectApplied")}, 334); 
 while (loop("Currencies","Currency",null)) { 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectAppliedEvent1.OrderCreatedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","chisqu"),
new TagParameter("summarygroup","conversion"),
new TagParameter("currency",getObject("Currency")),
new TagParameter("selector","ConversionTestObjectApplied"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","TestObjectAppliedEvent-OrderCreatedEvent")}, 342); 
 } 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("statisticmarker1","Sum"),
new TagParameter("displaynamekey","TestObjectViewedEvent1.ItemsOrderedEvent1"),
new TagParameter("calculator1","ttest"),
new TagParameter("summarygroup","conversion"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","TestObjectViewedEvent-ItemsOrderedEvent"),
new TagParameter("togglefor","ConversionTestObjectOrdered")}, 352); 
 while (loop("Currencies","Currency",null)) { 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("statisticmarker1","Sum"),
new TagParameter("displaynamekey","TestObjectViewedEvent1.ItemsOrderedEvent1"),
new TagParameter("calculator1","ttest"),
new TagParameter("summarygroup","conversion"),
new TagParameter("selector","ConversionTestObjectOrdered"),
new TagParameter("currency",getObject("Currency")),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","TestObjectViewedEvent-ItemsOrderedEvent")}, 360); 
 } 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("statisticmarker1","Sum"),
new TagParameter("displaynamekey","TestObjectClickedEvent1.ItemsOrderedEvent1"),
new TagParameter("calculator1","ttest"),
new TagParameter("summarygroup","conversion"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","TestObjectClickedEvent-ItemsOrderedEvent"),
new TagParameter("togglefor","ConversionTestObjectClickedItemsOrdered")}, 371); 
 while (loop("Currencies","Currency",null)) { 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("statisticmarker1","Sum"),
new TagParameter("displaynamekey","TestObjectClickedEvent1.ItemsOrderedEvent1"),
new TagParameter("calculator1","ttest"),
new TagParameter("summarygroup","conversion"),
new TagParameter("currency",getObject("Currency")),
new TagParameter("selector","ConversionTestObjectClickedItemsOrdered"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","TestObjectClickedEvent-ItemsOrderedEvent")}, 379); 
 } 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("statisticmarker1","Sum"),
new TagParameter("displaynamekey","TestObjectAppliedEvent1.ItemsOrderedEvent1"),
new TagParameter("calculator1","ttest"),
new TagParameter("summarygroup","conversion"),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","TestObjectAppliedEvent-ItemsOrderedEvent"),
new TagParameter("togglefor","ConversionTestObjectAppliedItemsOrdered")}, 390); 
 while (loop("Currencies","Currency",null)) { 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("statisticmarker1","Sum"),
new TagParameter("displaynamekey","TestObjectAppliedEvent1.ItemsOrderedEvent1"),
new TagParameter("calculator1","ttest"),
new TagParameter("summarygroup","conversion"),
new TagParameter("selector","ConversionTestObjectAppliedItemsOrdered"),
new TagParameter("currency",getObject("Currency")),
new TagParameter("type","integer"),
new TagParameter("statisticskey1","TestObjectAppliedEvent-ItemsOrderedEvent")}, 398); 
 } 
 while (loop("Currencies","Currency",null)) { 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("statisticmarker1","Sum"),
new TagParameter("displaynamekey","TestObjectViewedEvent1.OrderCreatedEvent2"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","ttest"),
new TagParameter("summarygroup","conversion"),
new TagParameter("currency",getObject("Currency")),
new TagParameter("selector","ConversionTestObjectAppliedItemsOrdered"),
new TagParameter("type","currency"),
new TagParameter("statisticskey1","TestObjectViewedEvent-OrderCreatedEvent")}, 409); 
 } 
 while (loop("Currencies","Currency",null)) { 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("statisticmarker1","Sum"),
new TagParameter("displaynamekey","TestObjectClickedEvent1.OrderCreatedEvent2"),
new TagParameter("calculator1","ttest"),
new TagParameter("summarygroup","conversion"),
new TagParameter("currency",getObject("Currency")),
new TagParameter("selector","ConversionTestObjectAppliedItemsOrdered"),
new TagParameter("type","currency"),
new TagParameter("statisticskey1","TestObjectClickedEvent-OrderCreatedEvent")}, 422); 
 } 
 while (loop("Currencies","Currency",null)) { 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("statisticmarker1","Sum"),
new TagParameter("displaynamekey","TestObjectAppliedEvent1.OrderCreatedEvent2"),
new TagParameter("calculator1","ttest"),
new TagParameter("summarygroup","conversion"),
new TagParameter("currency",getObject("Currency")),
new TagParameter("selector","ConversionTestObjectAppliedItemsOrdered"),
new TagParameter("type","currency"),
new TagParameter("statisticskey1","TestObjectAppliedEvent-OrderCreatedEvent")}, 434); 
 } 
      out.write(" \n</table>\n</div>");
      out.write("<h2 class=\"section s e w\" onclick=\"$('div[selector=AverageValues]').toggle( 0, function() {$('div[selector=AverageValues]').is(':visible') ? $(this).addClass('opened') : $(this).removeClass('opened') }.bind(this) )\">");
 {out.write(localizeISText("ABTestSummary_52.AverageValues.section",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</h2>\n<div selector=\"AverageValues\" class=\"section\">\n<table class=\"abtest_zebra_table\">\n<tr>\n<th class=\"table_header s e w left\">");
 {out.write(localizeISText("ABTestSummary_52.Statistics.table_header",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n<th class=\"table_header s e right\" style=\"width: 15%\">");
 {String value = null;try{value=context.getFormattedValue(getObject("ABTest:ControlGroup:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {456}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(' ');
      out.write('(');
 {String value = null;try{value=context.getFormattedValue((new Double( ((Number) getObject("ABTest:ControlGroup:Ratio")).doubleValue() /((Number) new Double(100)).doubleValue())),new Integer(PERCENTAGE),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {456}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(")\n</th>");
 while (loop("ABTestGroups","TestGroup",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("ABTest:ControlGroup:UUID"),null).equals(context.getFormattedValue(getObject("TestGroup:UUID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",459,e);}if (_boolean_result) { 
      out.write("<th class=\"table_header s e right\" style=\"width: 15%\">");
 {String value = null;try{value=context.getFormattedValue(getObject("TestGroup:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {461}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(' ');
      out.write('(');
 {String value = null;try{value=context.getFormattedValue((new Double( ((Number) getObject("TestGroup:Ratio")).doubleValue() /((Number) new Double(100)).doubleValue())),new Integer(PERCENTAGE),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {461}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(")\n</th>");
 } 
 } 
      out.write("<th class=\"table_header s e right\" style=\"width: 15%\">");
 {out.write(localizeISText("ABTestSummary_52.Total.table_header",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n</tr>");
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectViewedEvent1.ABTestSessionCreatedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","count"),
new TagParameter("summarygroup","averageinpercent"),
new TagParameter("calculator2","count"),
new TagParameter("type","percent"),
new TagParameter("statisticskey2","ABTestSessionCreatedEvent"),
new TagParameter("statisticskey1","TestObjectViewedEvent")}, 468); 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","OrderCreatedEvent1.ABTestSessionCreatedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","countandsum"),
new TagParameter("summarygroup","averageinpercent"),
new TagParameter("calculator2","count"),
new TagParameter("type","percent"),
new TagParameter("statisticskey2","ABTestSessionCreatedEvent"),
new TagParameter("statisticskey1","OrderCreatedEvent")}, 477); 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","OrderCreatedEvent1.CheckoutEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","countandsum"),
new TagParameter("summarygroup","averageinpercent"),
new TagParameter("calculator2","count"),
new TagParameter("type","percent"),
new TagParameter("statisticskey2","CheckoutEvent"),
new TagParameter("statisticskey1","OrderCreatedEvent")}, 486); 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectViewedEvent1_OrderCreatedEvent1.OrderCreatedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","chisqu"),
new TagParameter("summarygroup","averageinpercent"),
new TagParameter("calculator2","countandsum"),
new TagParameter("type","percent"),
new TagParameter("statisticskey2","OrderCreatedEvent"),
new TagParameter("statisticskey1","TestObjectViewedEvent-OrderCreatedEvent"),
new TagParameter("togglefor","AverageValuesTestObjectVisible")}, 495); 
 while (loop("Currencies","Currency",null)) { 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectViewedEvent1_OrderCreatedEvent1.OrderCreatedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","chisqu"),
new TagParameter("summarygroup","averageinpercent"),
new TagParameter("calculator2","countandsum"),
new TagParameter("currency",getObject("Currency")),
new TagParameter("selector","AverageValuesTestObjectVisible"),
new TagParameter("type","percent"),
new TagParameter("statisticskey2","OrderCreatedEvent"),
new TagParameter("statisticskey1","TestObjectViewedEvent-OrderCreatedEvent")}, 505); 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("statisticmarker1","Sum"),
new TagParameter("displaynamekey","TestObjectViewedEvent1_OrderCreatedEvent2.TestObjectViewedEvent1_OrderCreatedEvent1"),
new TagParameter("calculator1","ttest"),
new TagParameter("summarygroup","average"),
new TagParameter("calculator2","ttest"),
new TagParameter("currency",getObject("Currency")),
new TagParameter("selector","AverageValuesTestObjectVisible"),
new TagParameter("type","currency"),
new TagParameter("statisticskey2","TestObjectViewedEvent-OrderCreatedEvent"),
new TagParameter("statisticskey1","TestObjectViewedEvent-OrderCreatedEvent")}, 516); 
 } 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectAppliedEvent1_OrderCreatedEvent1.OrderCreatedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","chisqu"),
new TagParameter("summarygroup","averageinpercent"),
new TagParameter("calculator2","countandsum"),
new TagParameter("type","percent"),
new TagParameter("statisticskey2","OrderCreatedEvent"),
new TagParameter("statisticskey1","TestObjectAppliedEvent-OrderCreatedEvent"),
new TagParameter("togglefor","AverageValuesOrdersApplied")}, 528); 
 while (loop("Currencies","Currency",null)) { 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectAppliedEvent1_OrderCreatedEvent1.OrderCreatedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","chisqu"),
new TagParameter("summarygroup","averageinpercent"),
new TagParameter("calculator2","countandsum"),
new TagParameter("currency",getObject("Currency")),
new TagParameter("selector","AverageValuesOrdersApplied"),
new TagParameter("type","percent"),
new TagParameter("statisticskey2","OrderCreatedEvent"),
new TagParameter("statisticskey1","TestObjectAppliedEvent-OrderCreatedEvent")}, 538); 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("statisticmarker1","Sum"),
new TagParameter("displaynamekey","TestObjectAppliedEvent1_OrderCreatedEvent2.TestObjectAppliedEvent1_OrderCreatedEvent1"),
new TagParameter("calculator1","ttest"),
new TagParameter("summarygroup","average"),
new TagParameter("calculator2","ttest"),
new TagParameter("currency",getObject("Currency")),
new TagParameter("selector","AverageValuesOrdersApplied"),
new TagParameter("type","currency"),
new TagParameter("statisticskey2","TestObjectAppliedEvent-OrderCreatedEvent"),
new TagParameter("statisticskey1","TestObjectAppliedEvent-OrderCreatedEvent")}, 549); 
 } 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectClickedEvent1_OrderCreatedEvent1.OrderCreatedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","chisqu"),
new TagParameter("summarygroup","averageinpercent"),
new TagParameter("calculator2","countandsum"),
new TagParameter("type","percent"),
new TagParameter("statisticskey2","OrderCreatedEvent"),
new TagParameter("statisticskey1","TestObjectClickedEvent-OrderCreatedEvent"),
new TagParameter("togglefor","AverageValuesOrdersClicked")}, 562); 
 while (loop("Currencies","Currency",null)) { 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectClickedEvent1_OrderCreatedEvent1.OrderCreatedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","chisqu"),
new TagParameter("summarygroup","averageinpercent"),
new TagParameter("calculator2","countandsum"),
new TagParameter("currency",getObject("Currency")),
new TagParameter("selector","AverageValuesOrdersClicked"),
new TagParameter("type","percent"),
new TagParameter("statisticskey2","OrderCreatedEvent"),
new TagParameter("statisticskey1","TestObjectClickedEvent-OrderCreatedEvent")}, 572); 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("statisticmarker1","Sum"),
new TagParameter("displaynamekey","TestObjectClickedEvent1_OrderCreatedEvent2.TestObjectClickedEvent1_OrderCreatedEvent1"),
new TagParameter("calculator1","ttest"),
new TagParameter("summarygroup","average"),
new TagParameter("calculator2","ttest"),
new TagParameter("currency",getObject("Currency")),
new TagParameter("selector","AverageValuesOrdersClicked"),
new TagParameter("type","currency"),
new TagParameter("statisticskey2","TestObjectClickedEvent-OrderCreatedEvent"),
new TagParameter("statisticskey1","TestObjectClickedEvent-OrderCreatedEvent")}, 583); 
 } 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectViewedEvent1_CheckoutEvent1.CheckoutEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","chisqu"),
new TagParameter("summarygroup","averageinpercent"),
new TagParameter("calculator2","count"),
new TagParameter("type","percent"),
new TagParameter("statisticskey2","CheckoutEvent"),
new TagParameter("statisticskey1","TestObjectViewedEvent-CheckoutEvent")}, 596); 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectAppliedEvent1_CheckoutEvent1.CheckoutEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","chisqu"),
new TagParameter("summarygroup","averageinpercent"),
new TagParameter("calculator2","count"),
new TagParameter("type","percent"),
new TagParameter("statisticskey2","CheckoutEvent"),
new TagParameter("statisticskey1","TestObjectAppliedEvent-CheckoutEvent")}, 605); 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("displaynamekey","TestObjectClickedEvent1_CheckoutEvent1.CheckoutEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","chisqu"),
new TagParameter("summarygroup","averageinpercent"),
new TagParameter("calculator2","count"),
new TagParameter("type","percent"),
new TagParameter("statisticskey2","CheckoutEvent"),
new TagParameter("statisticskey1","TestObjectClickedEvent-CheckoutEvent")}, 615); 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("statisticmarker1","Sum"),
new TagParameter("displaynamekey","ItemsOrderedEvent1.OrderCreatedEvent1"),
new TagParameter("calculator1","sum"),
new TagParameter("summarygroup","average"),
new TagParameter("calculator2","countandsum"),
new TagParameter("type","decimal"),
new TagParameter("statisticskey2","OrderCreatedEvent"),
new TagParameter("statisticskey1","ItemsOrderedEvent"),
new TagParameter("togglefor","AverageValuesItemsPerOrder")}, 625); 
 while (loop("Currencies","Currency",null)) { 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("statisticmarker1","Sum"),
new TagParameter("displaynamekey","ItemsOrderedEvent1.OrderCreatedEvent1"),
new TagParameter("calculator1","sum"),
new TagParameter("summarygroup","average"),
new TagParameter("calculator2","countandsum"),
new TagParameter("currency",getObject("Currency")),
new TagParameter("selector","AverageValuesItemsPerOrder"),
new TagParameter("type","decimal"),
new TagParameter("statisticskey2","OrderCreatedEvent"),
new TagParameter("statisticskey1","ItemsOrderedEvent")}, 635); 
 } 
 while (loop("Currencies","Currency",null)) { 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("statisticmarker1","Sum"),
new TagParameter("displaynamekey","OrderCreatedEvent2.OrderCreatedEvent1"),
new TagParameter("isimportant","true"),
new TagParameter("calculator1","countandsum"),
new TagParameter("summarygroup","average"),
new TagParameter("calculator2","countandsum"),
new TagParameter("currency",getObject("Currency")),
new TagParameter("selector","AverageValuesItemsPerOrder"),
new TagParameter("type","currency"),
new TagParameter("statisticskey2","OrderCreatedEvent"),
new TagParameter("statisticskey1","OrderCreatedEvent")}, 648); 
 } 
 while (loop("Currencies","Currency",null)) { 
 processOpenTag(response, pageContext, "summaryline", new TagParameter[] {
new TagParameter("statisticmarker1","Sum"),
new TagParameter("displaynamekey","OrderCreatedEvent2.ItemsOrderedEvent1"),
new TagParameter("calculator1","countandsum"),
new TagParameter("summarygroup","average"),
new TagParameter("calculator2","sum"),
new TagParameter("currency",getObject("Currency")),
new TagParameter("selector","AverageValuesItemsPerOrder"),
new TagParameter("type","currency"),
new TagParameter("statisticskey2","ItemsOrderedEvent"),
new TagParameter("statisticskey1","OrderCreatedEvent"),
new TagParameter("statisticmarker2","Sum")}, 662); 
 } 
      out.write("</table>\n</div>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("CurrentChannelPermissionMap:SLD_MANAGE_ABTESTS"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",676,e);}if (_boolean_result) { 
      out.write("<div class=\"section\" style=\"display:block\">\n<table>\n<tr>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ABTest:ContentApproved"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",680,e);}if (_boolean_result) { 
 } else { 
      out.write("<td class=\"w e s\"></td>\n<td class=\"table_detail e s right\" style=\"width: 15%\">");
 URLPipelineAction action590 = new URLPipelineAction(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewABTestSetContentOnline_52-Dispatch",null)))),null));String site590 = null;String serverGroup590 = null;String actionValue590 = context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewABTestSetContentOnline_52-Dispatch",null)))),null);if (site590 == null){  site590 = action590.getDomain();  if (site590 == null)  {      site590 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getDomainName();  }}if (serverGroup590 == null){  serverGroup590 = action590.getServerGroup();  if (serverGroup590 == null)  {      serverGroup590 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getServerGroup();  }}out.print("<form");out.print(" method=\"");out.print("post");out.print("\"");out.print(" action=\"");out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewABTestSetContentOnline_52-Dispatch",null)))),null));out.print("\"");out.print(" name=\"");out.print("TestSummaryForm2");out.print("\"");out.print(">");out.print(context.prepareWACSRFTag(actionValue590, site590, serverGroup590,true)); 
      out.write("<input type=\"hidden\" name=\"ABTestGroupUUID\" value=\"");
      out.print(context.getFormattedValue(getObject("ABTest:ControlGroup:UUID"),null));
      out.write("\"/>\n<input class=\"button\" type=\"submit\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("ABTestSummary_52.KeepContent.button",null)),null));
      out.write("\" name=\"keepContent\" \n");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("ABTest:Status"),null).equals(context.getFormattedValue("3",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",688,e);}if (_boolean_result) { 
      out.write("\ndisabled=\"disabled\"\n");
 } 
      out.write('\n');
      out.write('/');
      out.write('>');
 out.print("</form>"); 
      out.write("</td>");
 while (loop("ABTestGroups","TestGroup",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("ABTest:ControlGroup:UUID"),null).equals(context.getFormattedValue(getObject("TestGroup:UUID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",695,e);}if (_boolean_result) { 
      out.write("<td class=\"table_detail e s right\" style=\"width: 15%\">");
 URLPipelineAction action591 = new URLPipelineAction(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewABTestSetContentOnline_52-Dispatch",null)))),null));String site591 = null;String serverGroup591 = null;String actionValue591 = context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewABTestSetContentOnline_52-Dispatch",null)))),null);if (site591 == null){  site591 = action591.getDomain();  if (site591 == null)  {      site591 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getDomainName();  }}if (serverGroup591 == null){  serverGroup591 = action591.getServerGroup();  if (serverGroup591 == null)  {      serverGroup591 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getServerGroup();  }}out.print("<form");out.print(" method=\"");out.print("post");out.print("\"");out.print(" action=\"");out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewABTestSetContentOnline_52-Dispatch",null)))),null));out.print("\"");out.print(" name=\"");out.print("TestSummaryForm3");out.print("\"");out.print(">");out.print(context.prepareWACSRFTag(actionValue591, site591, serverGroup591,true)); 
      out.write("<input type=\"hidden\" name=\"ABTestGroupUUID\" value=\"");
      out.print(context.getFormattedValue(getObject("TestGroup:UUID"),null));
      out.write("\"/>\n<input class=\"button\" type=\"submit\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("ABTestSummary_52.SetContentOnline.button",null)),null));
      out.write("\" name=\"setContentOnline\"\n");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("ABTest:Status"),null).equals(context.getFormattedValue("3",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",700,e);}if (_boolean_result) { 
      out.write("\ndisabled=\"disabled\"\n");
 } 
      out.write('\n');
      out.write('/');
      out.write('>');
 out.print("</form>"); 
      out.write("</td>");
 } 
 } 
      out.write("<td class=\"e s\" style=\"width: 15%\"></td>");
 } 
      out.write("</tr>\n</table>\n</div>");
 } 
 } else { 
      out.write("<div class=\"table_detail w e s\">");
 {out.write(localizeISText("ABTestSummary_52.ThereAreCurrentlyNoTestGroupsToShowHere.table_detail",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</div>");
 } 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"inc/BackToList", null, "719");} 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
