/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fch_005fconsumer_005fplugin.default_.inc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class CustomersListColumns_005f52_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

 protected Boolean printTemplateMarker() { return Boolean.FALSE; } 
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/javascript;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 

setEncodingType("text/javascript"); 
      out.write('\n');
      out.write('[');
      out.write('\n');
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("params:UserPermissionForEdit"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",3,e);}if (_boolean_result) { 
      out.write("\n{\nid: 'uuid',\ntype: 'select',\ndataKey: 'linkID',\nselectedItemsName: 'SelectedObjectUUID',\navailableItemsName: 'ObjectUUID'\n}, \n");
 } 
      out.write("\n{\nid: 'type',\ntype: 'text',\ndataKey: 'type',\ntitle: '");
 {out.write(localizeISText("CustomersListColumns_52.Type",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("',\nsortable: false,\nwidth: 30,\nmaxWidth: 30,\nrender: function (args) {\nvar type = args.row.type;\nvar result = [];\nresult.push('<div class=\"ish-customerType-' + type + '-icon\" width=\"1\"><span class=\"ish-icon\">' + type + '</span></div>');\nreturn result.join('');\n}\n}, {\nid: 'customer',\ntype: 'text',\ndataKey: 'customer',\nsortable: false,\ntitle: '");
 {out.write(localizeISText("CustomersListColumns_52.Customer",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("',\nsortable: false,\n");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((Boolean) (disableErrorMessages().isDefined(getObject("params:UsePlainText")))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue() || ((Boolean) ((((Boolean) getObject("params:UsePlainText")).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",33,e);}if (_boolean_result) { 
      out.write("\nrender: function(args) {\nvar customer = args.row.customer;\nvar customerLink = args.row.customerLink;\nvar result = [];\nresult.push('<a href=\"' + customerLink + '\">' + customer + '</a>');\nreturn result.join('');\n}\n");
 } 
      out.write("\n}, {\nid: 'id',\ntype: 'text',\ndataKey: 'ID',\ntitle: '");
 {out.write(localizeISText("CustomersListColumns_52.ID",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("',\nwidth: 350,\nmaxWidth: 350,\nsortable: false\n}, {\nid: 'status',\ntype: 'text',\ndataKey: 'status',\ntitle: '");
 {out.write(localizeISText("CustomersListColumns_52.Status",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("',\nwidth: 80,\nmaxWidth: 150,\nsortable: false,\nrender: function (args) {\nvar status = args.row.status;\nvar result = [];\nif (status == 'active')\n{\nresult.push('<img border=\"0\" title=\"");
 {out.write(localizeISText("customers.list.status.active","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" alt=\"");
 {out.write(localizeISText("customers.list.status.active","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/online.png\" />');\n} \nelse\n{\nresult.push('<img border=\"0\" title=\"");
 {out.write(localizeISText("customers.list.status.disabled","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" alt=\"");
 {out.write(localizeISText("customers.list.status.disabled","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/offline.png\" />');\n}\nreturn result.join('');\n}\n}, {\nid: 'CreationDate',\ntype: 'text',\ndataKey: 'creationDate',\ntitle: '");
 {out.write(localizeISText("CustomersListColumns_52.CreationDate",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("',\nwidth: 350,\nmaxWidth: 350,\nsortable: false\n}]");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
