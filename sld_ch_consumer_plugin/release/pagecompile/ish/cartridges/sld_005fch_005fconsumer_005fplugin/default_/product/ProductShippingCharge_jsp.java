/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fch_005fconsumer_005fplugin.default_.product;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class ProductShippingCharge_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
      out.write("<!-- BEGIN TEMPLATE ");
 out.write(getTemplateName()); 
      out.write(" -->\n");
 
setEncodingType("text/html"); 
      out.write('\n');
      out.write('\n');
 processOpenTag(response, pageContext, "createmap", new TagParameter[] {
new TagParameter("key1","Product"),
new TagParameter("key0","Domain"),
new TagParameter("value1",getObject("Product")),
new TagParameter("value0",getObject("CurrentChannel:Domain:Site")),
new TagParameter("mapname","RegionParams")}, 4); 
      out.write('\n');
      out.write('	');
 {try{executePipeline("ProcessRegion-GetRegionsByDomain",((java.util.Map)(getObject("RegionParams"))),"RegionDic");}catch(Exception e){Logger.error(this,"ISPIPELINE failed. Line: 7.",e);}} 
      out.write('\n');
      out.write('	');
 {try{executePipeline("ProcessShippingMethod-GetShippingMethodsByDomain",((java.util.Map)(getObject("RegionParams"))),"ShippingMethodDic");}catch(Exception e){Logger.error(this,"ISPIPELINE failed. Line: 8.",e);}} 
      out.write("\n\t\n\t\n");
 URLPipelineAction action135 = new URLPipelineAction(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewProductPrices_52-Dispatch",null)))),null));String site135 = null;String serverGroup135 = null;String actionValue135 = context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewProductPrices_52-Dispatch",null)))),null);if (site135 == null){  site135 = action135.getDomain();  if (site135 == null)  {      site135 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getDomainName();  }}if (serverGroup135 == null){  serverGroup135 = action135.getServerGroup();  if (serverGroup135 == null)  {      serverGroup135 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getServerGroup();  }}out.print("<form");out.print(" method=\"");out.print("post");out.print("\"");out.print(" action=\"");out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewProductPrices_52-Dispatch",null)))),null));out.print("\"");out.print(" name=\"");out.print("formProductShippingCharge");out.print("\"");out.print(">");out.print(context.prepareWACSRFTag(actionValue135, site135, serverGroup135,true)); 
      out.write('\n');
      out.write('	');
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("SortingAttribute"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",12,e);}if (_boolean_result) { 
      out.write("\n\t\t<input type=\"hidden\" name=\"SortingAttribute\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("SortingAttribute"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {13}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n\t\t<input type=\"hidden\" name=\"SortDirection\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("SortDirection"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {14}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n\t");
 } 
      out.write("\n\t<input type=\"hidden\" name=\"ProductID\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Product:UUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {16}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n\t<input type=\"hidden\" name=\"ChannelID\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ChannelID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {17}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n\t\n\t\n\t<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("ShippingChargeErrorCode")))).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("ShippingChargeCreationErrorCode")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",21,e);}if (_boolean_result) { 
      out.write("\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"4\" width=\"100%\" class=\"error_box w e s\">\n\t\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t\t<td class=\"error_icon top e\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/error.gif\" width=\"16\" height=\"15\" alt=\"\" border=\"0\"/></td>\n\t\t\t\t\t\t\t<td class=\"error top\" width=\"100%\">\n\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("ShippingChargeErrorCode")))).booleanValue() || ((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("ShippingChargeCreationErrorCode")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("ShippingChargeCreationErrorCode"),null).equals(context.getFormattedValue("DuplicateRecord",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",28,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("updateShippingCharges"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",29,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t");
 {out.write(localizeISText("ProductShippingCharge.ErrorDuringUpdatingProductShippingCharge.error",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":<br/>\n\t\t\t\t\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t\t\t");
 {out.write(localizeISText("ProductShippingCharge.ErrorDuringCreationOfProductShippingCharge.error",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":<br/>\n\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ShippingChargeErrorCode"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",35,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t\t\t");
 {out.write(localizeISText("ProductShippingCharge.PleaseProvideAValidValue.error",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\n\t\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("ShippingChargeCreationErrorCode")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("ShippingChargeCreationErrorCode"),null).equals(context.getFormattedValue("DuplicateRecord",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",38,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t\t\t");
 {out.write(localizeISText("ProductShippingCharge.ThereAlreadyExistsAnOverrideOrSurcharge.error",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\n\t\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</table>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t");
 } 
      out.write('\n');
      out.write('	');
      out.write('	');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("confirmDeleteShippingCharge")))).booleanValue() && ((Boolean) (hasLoopElements("ShippingCharges") ? Boolean.TRUE : Boolean.FALSE)).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",49,e);}if (_boolean_result) { 
      out.write("\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t<input type=\"hidden\" name=\"ChannelID\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ChannelID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {52}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n\t\t\t\t\t<table border=\"0\" cellpadding=\"4\" cellspacing=\"0\" width=\"100%\" class=\"confirm_box e w s\">\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td class=\"error_icon e\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/confirmation.gif\" width=\"16\" height=\"15\" alt=\"\" border=\"0\"/></td>\n\t\t\t\t\t\t\t<td class=\"confirm\" width=\"100%\">");
 {out.write(localizeISText("ProductShippingCharge.AreYouSureYouWantToDeleteTheseShippingCharges.confirm",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n\t\t\t\t\t\t\t<td nowrap=\"nowrap\">\n\t\t\t\t\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td class=\"button\">\n\t\t\t\t\t\t\t\t\t\t\t");
 while (loop("ShippingCharges","Selected",null)) { 
      out.write("\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"DeleteShippingCharges\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Selected"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {62}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n\t\t\t\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"deleteShippingCharge\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("ProductShippingCharge.OK.button",null)),null));
      out.write("\" class=\"button\"/>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td>&nbsp;</td>\n\t\t\t\t\t\t\t\t\t\t<td class=\"button\"><input type=\"submit\" name=\"cancel\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("ProductShippingCharge.Cancel.button",null)),null));
      out.write("\" class=\"button\"/></td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</table>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t");
 } 
      out.write("\n\t\t<!-- delete confirmation -->\n\t\t<!-- error message nothing selected -->\n\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("confirmDeleteShippingCharge")))).booleanValue() && ((Boolean) ((((Boolean) (hasLoopElements("ShippingCharges") ? Boolean.TRUE : Boolean.FALSE)).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",78,e);}if (_boolean_result) { 
      out.write("\n\t\t\t<tr>\n\t\t\t\t<td colspan=\"8\">\n\t\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"4\" width=\"100%\" class=\"w e s\">\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td class=\"error_icon e\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/error.gif\" width=\"16\" height=\"15\" alt=\"\" border=\"0\"/></td>\n\t\t\t\t\t\t\t<td class=\"error top\" width=\"100%\">\n\t\t\t\t\t\t\t\t");
 {out.write(localizeISText("ProductShippingCharge.YouHaveNotSelectedAnyShippingChargeToBeDeleted.error",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</table>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t");
 } 
      out.write("\t\n\t\t<tr>\n\t\t\t<td class=\"table_title_description w e\">\n\t\t\t\t<span>");
 {out.write(localizeISText("ProductShippingCharge.ProductShippingChargeUpWillBeAddedToTheShippingCharges.table_title_description",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\n\t\t\t\t<br/>\n\t\t\t\t");
 {out.write(localizeISText("ProductShippingCharge.NoteAlsoThatMoreSpecificSettingsOverride.table_title_description",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<table border=\"0\" cellpadding=\"4\" cellspacing=\"0\" width=\"100%\" class=\"infobox n e w\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td class=\"infobox_title\">");
 {out.write(localizeISText("ProductShippingCharge.ProductShippingCharges.infobox_title",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n\t\t\t\t\t</tr>\t\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td class=\"s\">\n\t\t\t\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td class=\"label_select\" nowrap=\"nowrap\"><label class=\"label label_select label_light\" for=\"ShippingCharge_Type\">");
 {out.write(localizeISText("ProductShippingCharge.ShippingChargeType.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</label></td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<select name=\"ShippingCharge_Type\" id=\"ShippingCharge_Type\" class=\"select inputfield_en\" style=\"width: 190px;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"surcharge\">");
 {out.write(localizeISText("ProductShippingCharge.Surcharge.option",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td class=\"label_select\" nowrap=\"nowrap\"><label class=\"label label_select label_light label_horizontal_align\" for=\"ShippingCharge_ShippingMethodID\">");
 {out.write(localizeISText("ProductShippingCharge.ShippingMethod.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</label></td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<select name=\"ShippingCharge_ShippingMethodID\" id=\"ShippingCharge_ShippingMethodID\" class=\"select inputfield_en\" style=\"width: 190px;\">\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">");
 {out.write(localizeISText("ProductShippingCharge.All.option",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n\t\t\t\t\t\t\t\t\t\t\t\t");
 while (loop("ShippingMethodDic:ShippingMethods","ShippingMethod",null)) { 
      out.write("\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ShippingMethod:Id"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {121}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ShippingMethod:DisplayName"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",121,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(getObject("ShippingMethod:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {121}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
 {String value = null;try{value=context.getFormattedValue(getObject("ShippingMethod:Id"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {121}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } 
      out.write("</option>\n\t\t\t\t\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td class=\"label_select\" nowrap=\"nowrap\"><label class=\"label label_select label_light label_horizontal_align\" for=\"ShippingCharge_RegionID\">");
 {out.write(localizeISText("ProductShippingCharge.Region.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</label></td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<select name=\"ShippingCharge_RegionID\" id=\"ShippingCharge_RegionID\" class=\"select inputfield_en\" style=\"width: 190px;\">\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">");
 {out.write(localizeISText("ProductShippingCharge.All.option",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n\t\t\t\t\t\t\t\t\t\t\t\t");
 while (loop("RegionDic:Regions","Region",null)) { 
      out.write("\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Region:Id"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {130}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("Region:DisplayName"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",130,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(getObject("Region:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {130}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
 {String value = null;try{value=context.getFormattedValue(getObject("Region:Id"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {130}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } 
      out.write("</option>\n\t\t\t\t\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td class=\"label\" nowrap=\"nowrap\"><label class=\"label label_light label_horizontal_align\" for=\"ShippingCharge_Value\">");
 {out.write(localizeISText("ProductShippingCharge.Value.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</label></td>\n\t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"ShippingCharge_Value\" id=\"ShippingCharge_Value\" value=\"\" maxlength=\"15\" size=\"15\" class=\"inputfield_en\"/></td>\n\t\t\t\t\t\t\t\t\t<td width=\"100%\">\n\t\t\t\t\t\t\t\t\t\t<table border=\"0\" cellspacing=\"4\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td class=\"button\">\n\t\t\t\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ProductLockedForMe"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",140,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"addShippingCharge\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("ProductShippingCharge.Add.button",null)),null));
      out.write("\" class=\"button\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"addShippingCharge\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("ProductShippingCharge.Add.button",null)),null));
      out.write("\" class=\"button\" disabled=\"disabled\"/>   \n\t\t\t\t\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td class=\"label_select\" nowrap=\"nowrap\"><label class=\"label label_select label_light\" for=\"ShippingCharge_Currency\">");
 {out.write(localizeISText("ProductShippingCharge.SelectCurrency.label",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":</label></td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ShippingCharge_Currency"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",159,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t\t\t\t");
 {Object temp_obj = (getObject("ShippingCharge_Currency")); getPipelineDictionary().put("SelectedLocaleID", temp_obj);} 
      out.write("\n\t\t\t\t\t\t\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t\t\t\t\t\t");
 {Object temp_obj = (getObject("CurrentSession:CurrencyCode")); getPipelineDictionary().put("SelectedLocaleID", temp_obj);} 
      out.write("\n\t\t\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t\t\t\t<select name=\"ShippingCharge_Currency\" id=\"ShippingCharge_Currency\" class=\"select inputfield_en\">\n\t\t\t\t\t\t\t\t\t\t\t");
 while (loop("Currencies",null,null)) { 
      out.write("\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Currencies:Mnemonic"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {166}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" \n\t\t\t\t\t\t\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("SelectedLocaleID"),null).equals(context.getFormattedValue(getObject("Currencies:Mnemonic"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",167,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write("\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t");
 {String value = null;try{value=context.getFormattedValue(getObject("Currencies:CurrencyName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {169}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td width=\"100%\">\n\t\t\t\t\t\t\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"4\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"button\"><input type=\"submit\" name=\"searchByCurrency\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("ProductShippingCharge.Apply.button",null)),null));
      out.write("\" class=\"button\"/></td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("ProductShippingCharges") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",190,e);}if (_boolean_result) { 
      out.write("\n\t\t\t<tr>\n\t\t\t\t<td class=\"aldi left\" nowrap=\"nowrap\" width=\"80\">\n\t\t\t\t\t<div id=\"ShippingChargeA\">\n\t\t\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" class=\"table_header center\" width=\"80\">\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td nowrap=\"nowrap\">\n\t\t\t\t\t\t\t\t\t<a href=\"javascript:selectAll('formProductShippingCharge','DeleteShippingCharge','ShippingChargeA','ShippingChargeB');\" class=\"tableheader\">");
 {out.write(localizeISText("ProductShippingCharge.SelectAll.link",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"ShippingChargeB\" style=\"display:none\">\n\t\t\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" class=\"table_header center\" width=\"80\">\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td nowrap=\"nowrap\">\n\t\t\t\t\t\t\t\t\t<a href=\"javascript:selectAll('formProductShippingCharge','DeleteShippingCharge','ShippingChargeA','ShippingChargeB');\" class=\"tableheader\">");
 {out.write(localizeISText("ProductShippingCharge.ClearAll.link",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</td>\n\t\t\t\t<td class=\"table_header n e s\">");
 {out.write(localizeISText("ProductShippingCharge.Type.table_header",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\t\n\t\t\t\t<td class=\"table_header n e s\">");
 {out.write(localizeISText("ProductShippingCharge.ShippingMethod.table_header",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n\t\t\t\t<td class=\"table_header n e s\">");
 {out.write(localizeISText("ProductShippingCharge.Region.table_header",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n\t\t\t\t<td class=\"table_header n e s\">");
 {out.write(localizeISText("ProductShippingCharge.Value.table_header",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n\t\t\t</tr>\n\t\t\t");
 while (loop("ProductShippingCharges","productShippingCharges",null)) { 
      out.write("\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"table_detail2 w e s center\">\n\t\t\t\t\t\t");
 {Object temp_obj = (context.getFormattedValue(getObject("productShippingCharges:Type"),null) + context.getFormattedValue("_",null) + context.getFormattedValue(getObject("productShippingCharges:UUID"),null)); getPipelineDictionary().put("SelectedShippingCharge", temp_obj);} 
      out.write("\n\t\t\t\t\t\t<input type=\"hidden\" name=\"ProductShippingCharge\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("productShippingCharges:UUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {221}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n\t\t\t\t\t\t<input type=\"checkbox\" name=\"DeleteShippingCharge\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("productShippingCharges:Type"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {222}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('_');
 {String value = null;try{value=context.getFormattedValue(getObject("productShippingCharges:UUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {222}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write(' ');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("confirmDeleteShippingCharge")))).booleanValue() && ((Boolean) (hasLoopElements("ShippingCharges") ? Boolean.TRUE : Boolean.FALSE)).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",222,e);}if (_boolean_result) { 
 while (loop("ShippingCharges",null,null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ShippingCharges"),null).equals(context.getFormattedValue(getObject("SelectedShippingCharge"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",222,e);}if (_boolean_result) { 
      out.write("checked=\"checked\"");
 if (getLoopStack().isEmpty()) {Logger.error(this,"ISBREAK occured outside ISLOOP. Line: {}",222);}else{getLoopStack().pop();break;} 
 } 
 } 
 } 
      out.write("/>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"table_detail2 e s\">\n\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("productShippingCharges:Type"),null).equals(context.getFormattedValue("override",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",225,e);}if (_boolean_result) { 
 {out.write(localizeISText("ProductShippingCharge.OverrideShippingCharges.table_detail2",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\n\t\t\t\t\t\t");
 } else { 
 {out.write(localizeISText("ProductShippingCharge.Surcharge.table_detail2",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\n\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t<input type=\"hidden\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("productShippingCharges:UUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {228}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("_ShippingChargeType\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("productShippingCharges:Type"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {228}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"table_detail2 e s\">\n\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("productShippingCharges:ShippingMethod"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",231,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t");
 {out.write(localizeISText("ProductShippingCharge.All.table_detail2",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\n\t\t\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t\t");
 {String value = null;try{value=context.getFormattedValue(getObject("productShippingCharges:ShippingMethod"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {234}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\n\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"table_detail2 e s\">\n\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("productShippingCharges:Region"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",238,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t");
 {out.write(localizeISText("ProductShippingCharge.All.table_detail2",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\n\t\t\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t\t");
 {String value = null;try{value=context.getFormattedValue(getObject("productShippingCharges:Region"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {241}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\n\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"table_detail2 e s\">\n\t\t\t\t\t\t<input type=\"text\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("productShippingCharges:UUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {245}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("_CurrencyValue\" maxlength=\"30\" size=\"30\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("productShippingCharges:Price"),"#00.00#",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {245}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"  class=\"inputfield_en\"/>\n\t\t\t\t\t\t<input type=\"hidden\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("productShippingCharges:UUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {246}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("_CurrencyMnemonic\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("SelectedLocaleID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {246}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t");
 } 
      out.write('\n');
      out.write('	');
      out.write('	');
 } 
      out.write('\n');
      out.write('	');
      out.write('	');
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) ((hasLoopElements("ProductShippingCharges") ? Boolean.TRUE : Boolean.FALSE))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",251,e);}if (_boolean_result) { 
      out.write("\n\t\t\t<tr>\n\t\t\t\t<td colspan=\"6\" class=\"table_detail aldi\">");
 {out.write(localizeISText("ProductShippingCharge.ThereAreCurrentlyNoProductShippingChargesToShowHere.table_detail",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n\t\t\t</tr>\n\t\t");
 } 
      out.write("\n\t\t<tr>\n\t\t\t<td class=\"w e s\" colspan=\"6\" align=\"right\">\n\t\t\t\t<table border=\"0\" cellspacing=\"4\" cellpadding=\"0\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td class=\"button\">\n\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ProductLockedForMe"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",261,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"updateShippingCharges\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("ProductShippingCharge.Apply.button",null)),null));
      out.write("\" class=\"button\"/>\n\t\t\t\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"updateShippingCharges\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("ProductShippingCharge.Apply.button",null)),null));
      out.write("\" class=\"button\" disabled=\"disabled\"/>\n\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"button\">\n\t\t\t\t\t\t\t<input type=\"reset\" name=\"reset\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("ProductShippingCharge.Reset.button",null)),null));
      out.write("\" class=\"button\"/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\n\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("ProductShippingCharges") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",271,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t<td class=\"button\">\n\t\t\t\t\t\t\t");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ProductLockedForMe"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",273,e);}if (_boolean_result) { 
      out.write("\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"confirmDeleteShippingCharge\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("ProductShippingCharge.Delete.button",null)),null));
      out.write("\" class=\"button\"/>\n\t\t\t\t\t\t\t");
 } else { 
      out.write("\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"confirmDeleteShippingCharge\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("ProductShippingCharge.Delete.button",null)),null));
      out.write("\" class=\"button\" disabled=\"disabled\"/>\n\t\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t");
 } 
      out.write("\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n");
 out.print("</form>"); 
      out.write("\n<!-- END TEMPLATE ");
 out.write(getTemplateName()); 
      out.write(" -->");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
