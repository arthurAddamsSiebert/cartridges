/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fch_005fconsumer_005fplugin.default_.customer;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class CustomerSegmentCustomersSearch_005f52_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"customer/forms/CustomerFormModules", null, "2");} 
      out.write("<div class=\"infobox searchbox w e s\"> \n<table border=\"0\" cellpadding=\"5\" cellspacing=\"0\" width=\"100%\" class=\"infobox js-searchbox-simpleSearch\">\n<tr>\n<td class=\"infobox_title js-searchbox-simpleSearch-title\" nowrap=\"nowrap\">");
 {out.write(localizeISText("customers.list.search.simple.short.caption","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>\n<tr>\n<td colspan=\"2\">\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1\">\n<tr>");
 processOpenTag(response, pageContext, "customerfieldstring", new TagParameter[] {
new TagParameter("Field",getObject("CustomerSearch:NameOrID")),
new TagParameter("LabelClass","label label_light")}, 15); 
      out.write("<td class=\"button left\">\n<input type=\"submit\" name=\"search\" value=\"");
 {out.write(localizeISText("customer.search.buttons.find","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" class=\"button\"/>\n</td>\n</tr>\n</table>\n</td>\n</tr>\n</table>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("isCustomersAdvancedSearchAvailable")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("isCustomersAdvancedSearchAvailable"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",24,e);}if (_boolean_result) { 
      out.write("<table border=\"0\" cellpadding=\"5\" cellspacing=\"0\" width=\"100%\" class=\"infobox js-searchbox-advancedSearch\" id=\"\">\n<tr>\n<td class=\"infobox_title js-searchbox-advancedSearch-title\" nowrap=\"nowrap\" colspan=\"2\">");
 {out.write(localizeISText("customers.list.search.parametric.short.caption","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>\n<tr>");
 processOpenTag(response, pageContext, "customerfieldstring", new TagParameter[] {
new TagParameter("Field",getObject("CustomerSearch:CustomerNo")),
new TagParameter("LabelClass","label label_indent label_light")}, 32); 
      out.write("</tr>\n<tr>");
 processOpenTag(response, pageContext, "customerfieldstring", new TagParameter[] {
new TagParameter("Field",getObject("CustomerSearch:Login")),
new TagParameter("LabelClass","label label_indent label_light")}, 35); 
      out.write("</tr>\n<tr class=\"js-privateCntr\">");
 processOpenTag(response, pageContext, "customerfieldstring", new TagParameter[] {
new TagParameter("Field",getObject("CustomerSearch:FirstName")),
new TagParameter("LabelClass","label label_indent label_light")}, 38); 
      out.write("</tr>\n<tr class=\"js-privateCntr\">");
 processOpenTag(response, pageContext, "customerfieldstring", new TagParameter[] {
new TagParameter("Field",getObject("CustomerSearch:LastName")),
new TagParameter("LabelClass","label label_indent label_light")}, 41); 
      out.write("</tr>\n<tr class=\"js-smbCntr\">");
 processOpenTag(response, pageContext, "customerfieldstring", new TagParameter[] {
new TagParameter("Field",getObject("CustomerSearch:CompanyName")),
new TagParameter("LabelClass","label label_indent label_light")}, 44); 
      out.write("</tr>\n<tr>\n<tr>\n<td class=\"label_select\" width=\"1%\">\n<label class=\"label label_select label_indent label_light");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("CustomerSearch:CustomerType:Invalid"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",49,e);}if (_boolean_result) { 
      out.write(" label_error");
 } 
      out.write("\" for=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CustomerSearch:CustomerType:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {49}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText(context.getFormattedValue(context.getFormattedValue("customer.form.fields.labels.",null) + context.getFormattedValue(getObject("CustomerSearch:CustomerType:ID"),null),null),"",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label>\n</td>\n<td class=\"left table_detail\">");
 {Object temp_obj = (getObject("ApplicationBO:NamedObject(\"CustomerTypeProvider\")")); getPipelineDictionary().put("CustomerTypeProvider", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("CustomerTypeProvider")))).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("CustomerTypeProvider")))).booleanValue() && ((Boolean) (hasLoopElements("CustomerTypeProvider:AllCustomerTypes") ? Boolean.TRUE : Boolean.FALSE)).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",55,e);}if (_boolean_result) { 
      out.write("<select class=\"select inputfield_en js-companyTypeList\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CustomerSearch:CustomerType:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {56}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" id=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CustomerSearch:CustomerType:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {56}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<option value=\"\">");
 {out.write(localizeISText("customer.form.fields.labels.any","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>");
 while (loop("CustomerTypeProvider:AllCustomerTypes","CustomerType",null)) { 
      out.write("<option value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CustomerType:CustomerTypeID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {59}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("CustomerSearch:CustomerType:Value"),null).equals(context.getFormattedValue(getObject("CustomerType:CustomerTypeID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",59,e);}if (_boolean_result) { 
      out.write(" selected=\"selected\"");
 } 
      out.write('>');
 {out.write(localizeISText(context.getFormattedValue(getObject("CustomerType:LocalizationKeyForName"),null),"",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>");
 } 
      out.write("</select>");
 } else { 
 {out.write(localizeISText("customer.details.not-available","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
      out.write("</td>\n</tr> \n</tr>\n<tr>");
 processOpenTag(response, pageContext, "customerfielddatetime", new TagParameter[] {
new TagParameter("Field",getObject("CustomerSearch:CustomerCreationDateFrom")),
new TagParameter("CurrentRequest",getObject("CurrentRequest")),
new TagParameter("Time",getObject("CustomerSearch:CustomerCreationDateFrom:Time")),
new TagParameter("Date",getObject("CustomerSearch:CustomerCreationDateFrom:Day"))}, 71); 
      out.write("</tr>\n<tr>");
 processOpenTag(response, pageContext, "customerfielddatetime", new TagParameter[] {
new TagParameter("Field",getObject("CustomerSearch:CustomerCreationDateTo")),
new TagParameter("CurrentRequest",getObject("CurrentRequest")),
new TagParameter("Time",getObject("CustomerSearch:CustomerCreationDateTo:Time")),
new TagParameter("Date",getObject("CustomerSearch:CustomerCreationDateTo:Day"))}, 78); 
      out.write("</tr> \n<tr>\n<td class=\"label_select nowrap\" width=\"1%\">\n<label class=\"label label_select label_light label_indent");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("CustomerSearch:CustomerStatus:Invalid"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",86,e);}if (_boolean_result) { 
      out.write(" label_error");
 } 
      out.write("\" for=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CustomerSearch:CustomerStatus:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {86}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText(context.getFormattedValue(context.getFormattedValue("customer.form.fields.labels.",null) + context.getFormattedValue(getObject("CustomerSearch:CustomerStatus:ID"),null),null),"",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label>\n</td>\n<td class=\"table_detail left\">\n<select class=\"select inputfield_en\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CustomerSearch:CustomerStatus:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {91}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" id=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CustomerSearch:CustomerStatus:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {91}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<option value=\"\">");
 {out.write(localizeISText("customers.list.status.any","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n<option value=\"0\"");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("CustomerSearch:CustomerStatus:Value"),null).equals(context.getFormattedValue("0",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",93,e);}if (_boolean_result) { 
      out.write(" selected=\"selected\"");
 } 
      out.write('>');
 {out.write(localizeISText("customers.list.status.disabled","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n<option value=\"1\"");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("CustomerSearch:CustomerStatus:Value"),null).equals(context.getFormattedValue("1",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",94,e);}if (_boolean_result) { 
      out.write(" selected=\"selected\"");
 } 
      out.write('>');
 {out.write(localizeISText("customers.list.status.enabled","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n</select>\n</td>\n</tr>\n<tr>\n<td align=\"right\" colspan=\"5\">\n<table cellspacing=\"2\" cellpadding=\"0\" border=\"0\">\n<tr>\n<td class=\"button\">\n<input type=\"submit\" name=\"advancedSearch\" value=\"");
 {out.write(localizeISText("customer.search.buttons.find","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" class=\"button\"/>\n</td>\n</tr>\n</table>\n</td>\n</tr>\n</table>\n<input type=\"hidden\" name=\"searchType\" value=\"");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("advancedSearch")))).booleanValue() || ((Boolean) (((!((Boolean) (disableErrorMessages().isDefined(getObject("search")))).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("searchType")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("searchType"),null).equals(context.getFormattedValue("advanced",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",110,e);}if (_boolean_result) { 
      out.write("advanced");
 } else { 
      out.write("simple");
 } 
      out.write("\"/>\n<script type=\"text/javascript\">\nvar simple = $('<a href=\"");
      out.print(context.getFormattedValue("#",null));
      out.write("\" class=\"switch_link js-searchbox-advancedSearch-show\">");
 {out.write(localizeISText("customer.search.advanced.toggle","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a>').click(function(ev) {\nev.preventDefault();\n$('.js-searchbox-simpleSearch :input').not(':button, :submit, :reset, :hidden').prop('disabled', 'disabled');\n$('.js-searchbox-simpleSearch').hide();\n$('.js-searchbox-advancedSearch').show();\n$('.js-searchbox-advancedSearch :input').removeProp('disabled');\n$('input[name=searchType]').val('advanced');\n$('.error_box.simple').hide();\n$('.error_box.advanced').show();\n});\nvar advanced = $('<a href=\"");
      out.print(context.getFormattedValue("#",null));
      out.write("\" class=\"switch_link js-searchbox-simpleSearch-show\">");
 {out.write(localizeISText("customer.search.simple.toggle","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a>').click(function(ev) {\nev.preventDefault();\n$('.js-searchbox-advancedSearch :input').not(':button, :submit, :reset, :hidden').prop('disabled', 'disabled');\n$('.js-searchbox-advancedSearch').hide();\n$('.js-searchbox-simpleSearch').show();\n$('.js-searchbox-simpleSearch :input').removeProp('disabled');\n$('input[name=searchType]').val('simple');\n$('.error_box.advanced').hide();\n$('.error_box.simple').show();\n});\n$('<td></td>', {'class' : 'right'}).append(simple).insertAfter($('td.js-searchbox-simpleSearch-title'));\n$('<td></td>', {'class' : 'right'}).append(advanced).insertAfter($('td.js-searchbox-advancedSearch-title'));\n");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("advancedSearch")))).booleanValue() || ((Boolean) (((!((Boolean) (disableErrorMessages().isDefined(getObject("search")))).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("searchType")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("searchType"),null).equals(context.getFormattedValue("advanced",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",136,e);}if (_boolean_result) { 
      out.write("\n$('.js-searchbox-simpleSearch :input').not(':button, :submit, :reset, :hidden').prop('disabled', 'disabled');\n$('.js-searchbox-simpleSearch').hide();\n");
 } else { 
      out.write("\n$('.js-searchbox-advancedSearch :input').not(':button, :submit, :reset, :hidden').prop('disabled', 'disabled');\n$('.js-searchbox-advancedSearch').hide();\n");
 } 
      out.write("\nfunction processNames(companyType) {\nif (companyType == 'PRIVATE') {\n$('.js-searchbox-advancedSearch tr.js-privateCntr :input').removeProp('disabled');\n$('.js-searchbox-advancedSearch tr.js-privateCntr').show();\n$('.js-searchbox-advancedSearch tr.js-smbCntr :input').not(':button, :submit, :reset, :hidden').prop('disabled', 'disabled');\n$('.js-searchbox-advancedSearch tr.js-smbCntr').hide();\n} else if (companyType == 'SMB') {\n$('.js-searchbox-advancedSearch tr.js-privateCntr :input').not(':button, :submit, :reset, :hidden').prop('disabled', 'disabled');\n$('.js-searchbox-advancedSearch tr.js-privateCntr').hide();\n$('.js-searchbox-advancedSearch tr.js-smbCntr :input').removeProp('disabled');\n$('.js-searchbox-advancedSearch tr.js-smbCntr').show();\n} else {\n$('.js-searchbox-advancedSearch tr.js-privateCntr :input').removeProp('disabled');\n$('.js-searchbox-advancedSearch tr.js-privateCntr').show();\n$('.js-searchbox-advancedSearch tr.js-smbCntr :input').removeProp('disabled');\n$('.js-searchbox-advancedSearch tr.js-smbCntr').show();\n");
      out.write("}\n}\n$(document).ready(function() {\nvar companyType = $('.js-searchbox-advancedSearch select.js-companyTypeList').val();\nprocessNames(companyType);\n}); \n$(document).delegate('.js-searchbox-advancedSearch select.js-companyTypeList', 'change keyup', function(ev) {\nif (ev.keyCode == 13 || ev.keyCode == 0 || ev.keyCode == undefined) {\nvar companyType = $(this).val();\nprocessNames(companyType);\n}\n}); \n</script>");
 } 
      out.write("</div>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
