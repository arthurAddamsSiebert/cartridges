<iscontent type="text/javascript" charset="UTF-8" compact="true" templatemarker="false">
<!--- get grid parameters from configuration --->
<isif condition="#isDefined(configuration) AND isDefined(currentapplication)#">
	<!--- get column names for this grid --->
	<isset scope="request" name="configColumns" value="#config.'.columns'#">
	<isset scope="request" name="columns" value="#"'".replace(currentapplication:Configuration:String(configColumns), " ", "', '")."'"#">
	<isif condition="#columns EQ '\'\''#"><isset scope="request" name="columns" value=""></isif>
</isif>

(function () {
	var allColumns = {
		<isif condition="#isDefined(params:UserPermissionForEdit)#">
			select: {
				type: 'select',
				dataKey: 'ID',
				single: true,
				selectedItemsName: 'SelectedCustomerObjectUUID',
				availableItemsName: 'CustomerObjectUUID'
			},
		</isif>
		type: {
			type: 'text',
			dataKey: 'type',
			sortable: false,
			width: 40,
			title: '<istext key="MoveUserCustomerListColumns_52.Type" encoding="off"/>'
		},
		name: {
			type: 'text',
			dataKey: 'name',
			title: '<istext key="MoveUserCustomerListColumns_52.Customer" encoding="off"/>',
			sortable: true
		},
		customerNo: {
			type: 'text',
			dataKey: 'customerID',
			title: '<istext key="MoveUserCustomerListColumns_52.ID" encoding="off"/>',
			sortable: true
		},
		disabledflag: {
			type: 'status',
			dataKey: 'isActive',
			sortable: true,
			title: '<istext key="MoveUserCustomerListColumns_52.Status" encoding="off"/>',
			width: 70,
			render: function(params) {
				var isActive = !!params.row.isActive, 
					src = isActive ? 'online.png' : 'offline.png',
					title = (isActive ? '<istext key="MoveUserCustomerListColumns_52.CustomerIsActivated" encoding="off"/>' : '<istext key="MoveUserCustomerListColumns_52.CustomerIsDeactivated" encoding="off"/>') +
							'.\n' +
							(isActive ? '<istext key="MoveUserCustomerListColumns_52.CanLogInDependingOnTheirStatus" encoding="off"/>' : '<istext key="MoveUserCustomerListColumns_52.CanTLogIn" encoding="off"/>');
	
				return '<img src="#WebRoot()#/images/' + src + '" alt="' + title + '" title="' + title + '" border="0" />&nbsp;';
			}
		},
		creationdate: {
			type: 'text',
			dataKey: 'creationDate',
			title: '<istext key="MoveUserCustomerListColumns_52.CreationDate" encoding="off"/>',
			sortable: true
		}
	},
	names = [<isprint encoding="off" value="#columns#">],
	columns = [],
	len = names.length,
	i, column;

	// only show specified columns
	for (i = 0; i < len; i++) {
		if (!allColumns.hasOwnProperty(names[i])) continue;
		column = allColumns[names[i]];
		// the column needs to know about its id
		column.id = names[i];
		columns.push(column);
	}

	// show all columns if no columns are specified	
	for (i in allColumns) {
		if (!allColumns.hasOwnProperty(i)) continue;
		column = allColumns[i];
		column.id = i;
		columns.push(column);
	}

	return columns;
})()