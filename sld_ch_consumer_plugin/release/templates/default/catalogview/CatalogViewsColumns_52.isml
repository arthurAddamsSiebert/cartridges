<!---isnoloc--->
<iscontent type="text/javascript" charset="UTF-8" compact="true" templatemarker="false">
<!--- get grid parameters from configuration --->
<isif condition="#isDefined(configuration) AND isDefined(currentapplication)#">
	<!--- get column names for this grid --->
	<isset scope="request" name="configColumns" value="#config.'.columns'#">
	<isset scope="request" name="columns" value="#"'".replace(currentapplication:Configuration:String(configColumns), " ", "', '")."'"#">
	<isif condition="#columns EQ '\'\''#"><isset scope="request" name="columns" value=""></isif>
</isif>

(function () {
	var allColumns = {
		<isif condition="#isDefined(params:UserPermissionForEdit)#">
		select: {
				type: 'select',
				dataKey: 'ID',
				selectedItemsName: 'SelectedObjectUUID',
				availableItemsName: 'ObjectUUID'
			},
		</isif>
		name: {
			type: 'text',
			dataKey: 'name',
			sortable: false,
			title: '<istext key="CatalogViewsColumns_52.Name" encoding="off"/>'
		},
		description: {
			type: 'text',
			dataKey: 'description',
			title: '<istext key="CatalogViewsColumns_52.Description" encoding="off"/>',
			sortable: false
		},
		status: {
			type: 'text',
			dataKey: 'status',
			sortable: false,
			title: '<istext key="CatalogViewsColumns_52.Status" encoding="off"/>'			    	
		}
	},
	names = [<isprint encoding="off" value="#columns#">],
	useAll = names.length === 0,
	columns = [],
	name, column;
	
	function indexOf(list, element) {
		if (list.indexOf) {
			return list.indexOf(element);
		}
		for (var i = 0, len = list.length; i < len; i++) {
			if (list[i] === element) {
				return i;
			}
		}
		return -1;
	}
	
	for (name in allColumns) {
		if (!allColumns.hasOwnProperty(name)) continue;
		
		var column = allColumns[name];
		column.id = name;
	
		// check if column configuration is provided
		if (useAll) {
			// no column configuration
			columns.push(column);
		} else {
			// check if column is needed
			if (indexOf(names, name) !== -1) {
				columns.push(column);
			}
		}
	}
	
	return columns;
})()

<!---/isnoloc--->
