<?xml version="1.0" encoding="UTF-8"?>
<query>
	<parameters>
		<parameter name="Domain"
			type="com.intershop.beehive.core.capi.domain.Domain" optional="false" />
		<parameter name="Locale"
			type="com.intershop.beehive.core.capi.localization.LocaleInformation"
			optional="true" />
		<parameter name="NameOrID"
			type="com.intershop.component.foundation.capi.search.SearchExpression"
			optional="true" />
	</parameters>
	<return-mappings>
		<return-mapping name="ShippingMethod" type="orm" class="com.intershop.component.shipping_data.internal.shippingmethod.ShippingMethodPO">
			<return-attribute name="ShippingMethodUUID"/>
		</return-mapping>
	</return-mappings>
	<processor name="OracleSQL">
	</processor>
	<template type="countedobjects">
		<sql-dialect name="Microsoft">
			SELECT	*, count (ShippingMethodUUID) OVER() as "ROWCOUNT" 
			FROM (
		</sql-dialect>
		SELECT DISTINCT(s.uuid) as ShippingMethodUUID,
		s.id AS sorting
		<sql-dialect name="Oracle">
			, COUNT(DISTINCT(s.uuid)) over() AS "ROWCOUNT"
		</sql-dialect>
		FROM ADVANCEDSHIPPINGMETHOD s
		<template-if condition="isDefined(NameOrID) AND (NameOrID NE '')">
			INNER JOIN ADVANCEDSHIPPINGMETH_AV sav ON (sav.ownerid = s.uuid)
		</template-if>
		where
		s.domainid=<template-variable value="Domain:UUID" />
		<template-if condition="isDefined(NameOrID) AND (NameOrID NE '')">
			AND 
			((<template-call name="inc/SearchExpression2Like">
				<call-parameter name="SearchExpression" value="NameOrID" />
				<call-parameter name="ColumnNames" value="&quot;s.id&quot;" />
				<call-parameter name="CaseInsensitive" value="true()" />
			</template-call>)
			
			OR 
			(sav.name=&apos;displayName&apos;
			<template-if condition="isDefined(Locale)">
				AND (sav.localeid =
				<template-variable value="Locale:LocaleID" />
				OR localizedflag=0)
			</template-if>
			AND
			<template-call name="inc/SearchExpression2Like">
				<call-parameter name="SearchExpression" value="NameOrID" />
				<call-parameter name="ColumnNames" value="&apos;sav.stringvalue&apos;" />
				<call-parameter name="CaseInsensitive" value="true()" />
			</template-call>))
		</template-if>
		<sql-dialect name="Microsoft">
			) outer_query
		</sql-dialect>
		ORDER BY
		<sql-dialect name="Microsoft">
			CASE
				WHEN sorting IS NULL THEN 1
				ELSE 0 
			END,
		</sql-dialect>
		sorting	ASC
		<sql-dialect name="Oracle">
			NULLS LAST
		</sql-dialect> 
	</template>
</query>
