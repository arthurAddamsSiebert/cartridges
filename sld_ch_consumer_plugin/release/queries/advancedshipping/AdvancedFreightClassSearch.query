<?xml version="1.0" encoding="UTF-8"?>
<query>
	<parameters>
		<parameter name="ID"
			type="com.intershop.component.foundation.capi.search.SearchExpression"
			optional="true" />
		<parameter name="Name"
			type="com.intershop.component.foundation.capi.search.SearchExpression"
			optional="true" />
		<parameter name="ActiveFlag" type="java.lang.String"
			optional="true" />
		<parameter name="ShippingMethodID" type="java.lang.String"
			optional="true" />
		<parameter name="RegionID" type="java.lang.String" optional="true" />
		<parameter name="Domain"
			type="com.intershop.beehive.core.capi.domain.Domain" optional="false" />
		<parameter name="Locale"
			type="com.intershop.beehive.core.capi.localization.LocaleInformation"
			optional="true" />
	</parameters>
	<return-mappings>
		<return-mapping name="FreightClass" type="orm"
			class="com.intershop.component.shipping.internal.freightclass.FreightClassPO">
			<return-attribute name="FreightClassUUID" />
		</return-mapping>
	</return-mappings>
	<processor name="OracleSQL">
	</processor>
	<template type="countedobjects" sqlDialect="Oracle">

		SELECT DISTINCT(f.uuid) as FreightClassUUID,
		f.id AS sorting,
		COUNT(DISTINCT(f.uuid)) over() AS "ROWCOUNT"
		FROM freightclass f
		<template-if condition="isDefined(Name)">
			JOIN FREIGHTCLASS_AV fav ON (fav.ownerid = f.uuid)
		</template-if>
		<template-if condition="(isDefined(ShippingMethodID) AND (ShippingMethodID NE &apos;&apos;)) OR (isDefined(RegionID) AND (RegionID NE &apos;&apos;))">
			JOIN shippingelig se ON (se.freightclassid = f.id)
			JOIN shippingeligass sea ON (sea.shippingeligibilityid =
			se.UUID)
		</template-if>
		WHERE
		f.domainid=
		<template-variable value="Domain:UUID" />

		<template-if condition="isDefined(Name)">
			AND fav.name=&apos;displayName&apos;
			<template-if condition="isDefined(Locale)">
				AND (fav.localeid =
				<template-variable value="Locale:LocaleID" />
				OR localizedflag=0)
			</template-if>
			AND
			<template-call name="inc/SearchExpression2Like">
				<call-parameter name="SearchExpression" value="Name" />
				<call-parameter name="ColumnNames" value="&apos;fav.stringvalue&apos;" />
				<call-parameter name="CaseInsensitive" value="true()" />
			</template-call>
		</template-if>
		<template-if condition="isDefined(ID)">
			AND
			<template-call name="inc/SearchExpression2Like">
				<call-parameter name="SearchExpression" value="ID" />
				<call-parameter name="ColumnNames" value="&quot;f.ID&quot;" />
				<call-parameter name="CaseInsensitive" value="true()" />
			</template-call>
		</template-if>
		<template-if condition="isDefined(ActiveFlag) AND (ActiveFlag NE &apos;&apos;)">
			AND f.activeflag =
			<template-variable value="ActiveFlag" />
		</template-if>
		<template-if condition="isDefined(ShippingMethodID) AND (ShippingMethodID NE &apos;&apos;)">
			AND sea.shippingmethodid=<template-variable value="ShippingMethodID" />
		</template-if>
		<template-if condition="isDefined(RegionID) AND (RegionID NE &apos;&apos;)">
			AND sea.regionid=<template-variable value="RegionID" />
		</template-if>
		ORDER BY sorting
		ASC NULLS LAST
		
	</template>
	<template type="countedobjects" sqlDialect="Microsoft">

		SELECT f.uuid as FreightClassUUID,
		f.id AS sorting,
		COUNT(f.uuid) over() AS "ROWCOUNT"
		FROM freightclass f
		<template-if condition="isDefined(Name)">
			JOIN FREIGHTCLASS_AV fav ON (fav.ownerid = f.uuid)
		</template-if>
		<template-if condition="(isDefined(ShippingMethodID) AND (ShippingMethodID NE &apos;&apos;)) OR (isDefined(RegionID) AND (RegionID NE &apos;&apos;))">
			JOIN shippingelig se ON (se.freightclassid = f.id)
			JOIN shippingeligass sea ON (sea.shippingeligibilityid =
			se.UUID)
		</template-if>
		WHERE
		f.domainid=
		<template-variable value="Domain:UUID" />

		<template-if condition="isDefined(Name)">
			AND fav.name=&apos;displayName&apos;
			<template-if condition="isDefined(Locale)">
				AND (fav.localeid =
				<template-variable value="Locale:LocaleID" />
				OR localizedflag=0)
			</template-if>
			AND
			<template-call name="inc/SearchExpression2Like">
				<call-parameter name="SearchExpression" value="Name" />
				<call-parameter name="ColumnNames" value="&apos;fav.stringvalue&apos;" />
				<call-parameter name="CaseInsensitive" value="true()" />
			</template-call>
		</template-if>
		<template-if condition="isDefined(ID)">
			AND
			<template-call name="inc/SearchExpression2Like">
				<call-parameter name="SearchExpression" value="ID" />
				<call-parameter name="ColumnNames" value="&quot;f.ID&quot;" />
				<call-parameter name="CaseInsensitive" value="true()" />
			</template-call>
		</template-if>
		<template-if condition="isDefined(ActiveFlag) AND (ActiveFlag NE &apos;&apos;)">
			AND f.activeflag =
			<template-variable value="ActiveFlag" />
		</template-if>
		<template-if condition="isDefined(ShippingMethodID) AND (ShippingMethodID NE &apos;&apos;)">
			AND sea.shippingmethodid=<template-variable value="ShippingMethodID" />
		</template-if>
		<template-if condition="isDefined(RegionID) AND (RegionID NE &apos;&apos;)">
			AND sea.regionid=<template-variable value="RegionID" />
		</template-if>
		ORDER BY
		CASE
			WHEN f.id IS NULL THEN 1
			ELSE 0
		END,
		sorting ASC		
	</template>
</query>
