<?xml version="1.0" encoding="UTF-8"?>
<query>
<parameters>
	<parameter name="NameOrID" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
	<parameter name="Domain" type="com.intershop.beehive.core.capi.domain.Domain" optional="false"/>
	<parameter name="Locale" type="com.intershop.beehive.core.capi.localization.LocaleInformation" optional="true"/>
</parameters>
<return-mappings>
	<return-mapping name="ShippingRule" type="orm" class="com.intershop.component.shipping.internal.shippingrule.ShippingRulePO">
		<return-attribute name="RuleUUID"/>
	</return-mapping>
</return-mappings>
<processor name="OracleSQL">
</processor>
<template type="countedobjects">
	<sql-dialect name="Microsoft">
		SELECT	*, count (RuleUUID) OVER() as "ROWCOUNT" 
		FROM (
	</sql-dialect>
	SELECT DISTINCT(r.uuid) as RuleUUID,
	r.id AS sorting
	<sql-dialect name="Oracle">
		,COUNT(DISTINCT(r.uuid)) over() AS "ROWCOUNT"
	</sql-dialect>
	FROM ShippingRule r
	<template-if condition="isDefined(NameOrID) AND (NameOrID NE &apos;&apos;)">
		INNER JOIN ShippingRule_av rav ON (rav.ownerid = r.uuid)
	</template-if>
	where r.domainid=
	<template-variable value="Domain:UUID"/>
	<template-if condition="isDefined(NameOrID) AND (NameOrID NE &apos;&apos;)">
		AND 
		(
			(
				<template-call name="inc/SearchExpression2Like">
					<call-parameter name="SearchExpression" value="NameOrID"/>
					<call-parameter name="ColumnNames" value="&quot;r.id&quot;"/>
					<call-parameter name="CaseInsensitive" value="true()"/>
				</template-call>
			)		
			OR 
			(rav.name=&apos;displayName&apos;
				<template-if condition="isDefined(Locale)">
					AND (rav.localeid =
					<template-variable value="Locale:LocaleID"/>
					OR rav.localizedflag=0)
				</template-if>
				AND
				<template-call name="inc/SearchExpression2Like">
					<call-parameter name="SearchExpression" value="NameOrID"/>
					<call-parameter name="ColumnNames" value="&apos;rav.stringvalue&apos;"/>
					<call-parameter name="CaseInsensitive" value="true()"/>
				</template-call>
			)
		)
	</template-if>
	<sql-dialect name="Microsoft">
		) outer_query
	</sql-dialect>
	ORDER BY 
	<sql-dialect name="Microsoft">
		CASE
			WHEN sorting IS NULL THEN 1
			ELSE 0 
		END,
	</sql-dialect>
	sorting	ASC
	<sql-dialect name="Oracle">
		NULLS LAST
	</sql-dialect> 
</template>
</query>