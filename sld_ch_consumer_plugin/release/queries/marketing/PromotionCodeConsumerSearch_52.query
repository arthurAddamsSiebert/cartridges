<?xml version="1.0" encoding="UTF-8"?>
<query description="Search promotion code consumers and users">
<parameters>
	<parameter name="Domain" type="com.intershop.beehive.core.capi.domain.Domain" optional="false"/>
	<parameter name="Code" type="java.lang.String" optional="false"/>
	<parameter name="SearchTerm" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
	<parameter name="SortBy" type="java.lang.String" optional="true"/>
	<parameter name="SortDirection" type="java.lang.String" optional="true"/>
</parameters>
<return-mappings>
	<return-mapping name="OrderUUID" type="rename">
		<return-attribute name="orderuuid"/>
	</return-mapping>
	<return-mapping name="OrderDocumentNo" type="rename" description="the document number of the order">
		<return-attribute name="orderdocumentno"/>
	</return-mapping>
	<return-mapping name="OrderExists" type="constructor" class="java.lang.Boolean">
		<return-attribute name="orderexists"/>
	</return-mapping>
	<return-mapping name="Redemptions" type="rename" description="number of redemptions">
		<return-attribute name="redemptions"/>
	</return-mapping>
</return-mappings>
<processor name="OracleSQL">
</processor>
<template type="countedobjects">
	select 
		count(*) over() as "rowcount",
		count(pcoa.orderuuid) as redemptions,
		pcoa.orderuuid as orderuuid,
		pcoa.orderdocumentno as orderdocumentno,
		case when o.uuid is null then 'false' else 'true' end as orderexists

	from promotioncodeorderassignment pcoa

	inner join promotioncode pc on
		pcoa.promotioncodeuuid = pc.uuid

	left outer join isorder o on
		pcoa.orderuuid = o.uuid

	where
		pc.code = <template-variable value="Code"/> and 
		pc.domainid = <template-variable value="Domain:DomainID"/>

	<template-if condition="isDefined(SearchTerm)">
		and (
			<template-call name="inc/SearchExpression2Like">
				<call-parameter name="SearchExpression" value="SearchTerm"/>
				<call-parameter name="ColumnNames" value="&quot;pcoa.orderdocumentno&quot;"/>
				<call-parameter name="CaseInsensitive" value="true()"/>
				<call-parameter name="FuzzyPhraseMode" value="FuzzyPhraseMode"/>
			</template-call>
		)
	</template-if>

	group by pcoa.orderuuid, pcoa.orderdocumentno, o.uuid

	<template-if condition="isDefined(SortDirection)">
		<template-variable value="orderBy('pcoa.orderdocumentno',direction(SortDirection),if(isAscending(SortDirection),nullsLast(),nullsLast()))" processing="text"/>
	</template-if>
</template>
</query>
