<%@  page buffer="none" import="java.util.*,java.io.*,com.intershop.beehive.core.internal.template.*,com.intershop.beehive.core.internal.template.isml.*,com.intershop.beehive.core.capi.log.*,com.intershop.beehive.core.capi.resource.*,com.intershop.beehive.core.capi.util.UUIDMgr,com.intershop.beehive.core.capi.util.XMLHelper,com.intershop.beehive.foundation.util.*,com.intershop.beehive.core.internal.url.*,com.intershop.beehive.core.internal.resource.*,com.intershop.beehive.core.internal.wsrp.*,com.intershop.beehive.core.capi.pipeline.PipelineDictionary,com.intershop.beehive.core.capi.naming.NamingMgr,com.intershop.beehive.core.capi.pagecache.PageCacheMgr,com.intershop.beehive.core.capi.request.SessionMgr,com.intershop.beehive.core.internal.request.SessionMgrImpl,com.intershop.beehive.core.pipelet.PipelineConstants" extends="com.intershop.beehive.core.internal.template.AbstractTemplate" %><% 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 %><% %><%@ page contentType="text/html;charset=utf-8" %><%setEncodingType("text/html"); %><% processOpenTag(response, pageContext, "createmap", new TagParameter[] {
new TagParameter("key1","ContractBaseBORepository"),
new TagParameter("key0","CustomerBO"),
new TagParameter("value1",getObject("ApplicationBO:Repository(\"ContractBaseBORepository\")")),
new TagParameter("value0",getObject("CustomerBO")),
new TagParameter("mapname","PipelineParameters")}, 3); %><% {try{executePipeline("ProcessContract-GetContractsByCustomer",((java.util.Map)(getObject("PipelineParameters"))),"dict");}catch(Exception e){Logger.error(this,"ISPIPELINE failed. Line: 7.",e);}} %><div class="section">
<h2><% {out.write(localizeISText("account.contract.widget.my_contracts.heading","",null,null,null,null,null,null,null,null,null,null,null));} %></h2><% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("dict:CustomerContracts")))).booleanValue() && ((Boolean) (hasLoopElements("dict:CustomerContracts") ? Boolean.TRUE : Boolean.FALSE)).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",13,e);}if (_boolean_result) { %><div class="list-header">
<div class="col-xs-12 col-sm-3 list-header-item"><% {out.write(localizeISText("account.contract.contracts.name","",null,null,null,null,null,null,null,null,null,null,null));} %></div>
<div class="col-xs-12 col-sm-3 list-header-item text-right"><% {out.write(localizeISText("account.contract.contracts.actualAmount","",null,null,null,null,null,null,null,null,null,null,null));} %></div>
<div class="col-xs-12 col-sm-3 list-header-item text-right"><% {out.write(localizeISText("account.contract.contracts.targetAmount","",null,null,null,null,null,null,null,null,null,null,null));} %></div>
<div class="col-xs-12 col-sm-3 list-header-item"><% {out.write(localizeISText("account.contract.contracts.progress","",null,null,null,null,null,null,null,null,null,null,null));} %></div> 
</div>
<div class="list-body"><% while (loop("dict:CustomerContracts","Contract","contractsCounter")) { %><% _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("contractsCounter")).doubleValue() >=((Number)(new Double(5))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",32,e);}if (_boolean_result) { %><% if (getLoopStack().isEmpty()) {Logger.error(this,"ISBREAK occured outside ISLOOP. Line: {}",32);}else{getLoopStack().pop();break;} %><% } %><div class="list-item-row">
<div class="col-xs-12 col-sm-3 list-item">
<a href="<%=context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewContracts-Show",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("ContractID",null),context.getFormattedValue(getObject("Contract:ID"),null)))),null)%>"><% {String value = null;try{value=context.getFormattedValue(getObject("Contract:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {36}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></a>
</div>
<div class="col-xs-12 col-sm-3 list-item text-right hidden-xs"><% {String value = null;try{value=context.getFormattedValue(getObject("Contract:SalesTarget:Actual"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {38}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></div> 
<div class="col-xs-12 col-sm-3 list-item text-right hidden-xs"><% {String value = null;try{value=context.getFormattedValue(getObject("Contract:SalesTarget:Target"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {39}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %></div> 
<div class="col-xs-12 col-sm-3 list-item"><% {Object temp_obj = ("0"); getPipelineDictionary().put("ContractProgress", temp_obj);} %><% _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("Contract:SalesTarget")))).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("Contract:SalesTarget:Actual")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",42,e);}if (_boolean_result) { %><% _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) ((new Double( ((Number) getObject("Contract:SalesTarget:Actual:Value")).doubleValue() / ((Number) getObject("Contract:SalesTarget:TargetAmount")).doubleValue() *((Number) new Double(100)).doubleValue())))).doubleValue() <((Number)(new Double(100))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",43,e);}if (_boolean_result) { %><% {Object temp_obj = (context.getFormattedValue(((new Double( ((Number) getObject("Contract:SalesTarget:Actual:Value")).doubleValue() / ((Number) getObject("Contract:SalesTarget:TargetAmount")).doubleValue() *((Number) new Double(100)).doubleValue()))),"0")); getPipelineDictionary().put("ContractProgress", temp_obj);} %><% } else { %><% {Object temp_obj = ("100"); getPipelineDictionary().put("ContractProgress", temp_obj);} %><% } %><% } %><% processOpenTag(response, pageContext, "progressbar", new TagParameter[] {
new TagParameter("value",getObject("ContractProgress"))}, 50); %></div> 
</div><% } %></div>
<a href="<%=context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewContracts-Start",null)))),null)%>" data-testing-linkid="account_contracts_viewall"><% {out.write(localizeISText("account.contract.widget.view_all.link","",null,null,null,null,null,null,null,null,null,null,null));} %></a><% } else { %><p><% {out.write(localizeISText("account.contract.contracts.noItems.text","",null,null,null,null,null,null,null,null,null,null,null));} %></p><% } %> 
</div><% printFooter(out); %>