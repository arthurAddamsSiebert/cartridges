/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-16 22:40:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fsf_005fresponsive_005fb2b.default_.account;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class NewUser_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"modules/common/Modules", null, "2");} 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"modules/account/Modules", null, "3");} 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"account/inc/Modules", null, "5");} 
      out.write("<div class=\"breadcrumbs row\">");
 processOpenTag(response, pageContext, "accountbreadcrumb", new TagParameter[] {
new TagParameter("link",url(true,(new URLPipelineAction(context.getFormattedValue("ViewUsers-Start",null))))),
new TagParameter("trailtext",localizeText(context.getFormattedValue("account.newuser.link",null))),
new TagParameter("text",localizeText(context.getFormattedValue("account.users.link",null)))}, 8); 
      out.write("</div>\n<div class=\"marketing-area\">");
 processOpenTag(response, pageContext, "marketingslot", new TagParameter[] {
new TagParameter("id","baseMarketing")}, 13); 
      out.write("</div>\n<div class=\"account-wrapper\" data-testing-id=\"create-user-page\">\n<div class=\"row account-main\">\n<div class=\"col-md-3 account-nav-box\">");
 processOpenTag(response, pageContext, "accountnavigation", new TagParameter[] {
new TagParameter("selecteditem","USERS")}, 21); 
      out.write("</div>\n<div class=\"col-md-9\">\n<div class=\"marketing-area\">");
 processOpenTag(response, pageContext, "marketingslot", new TagParameter[] {
new TagParameter("id","contentMarketing")}, 27); 
      out.write("</div>");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (disableErrorMessages().isDefined(getObject("tabindexoffset")))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",30,e);}if (_boolean_result) { 
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("tabindexoffset", temp_obj);} 
 } 
      out.write("<h1>");
 {out.write(localizeISText("account.user.new.heading","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</h1>\n<p class=\"indicates-required\"><span class=\"required\">*</span> ");
 {out.write(localizeISText("account.required_field.message","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>");
 URLPipelineAction action14 = new URLPipelineAction(context.getFormattedValue(url(true,context.getFormattedValue(getObject("SecureURL"),null), context.getFormattedValue("",null), (new URLPipelineAction(context.getFormattedValue("ViewUser-Create",null)))),null));String site14 = null;String serverGroup14 = null;String actionValue14 = context.getFormattedValue(url(true,context.getFormattedValue(getObject("SecureURL"),null), context.getFormattedValue("",null), (new URLPipelineAction(context.getFormattedValue("ViewUser-Create",null)))),null);if (site14 == null){  site14 = action14.getDomain();  if (site14 == null)  {      site14 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getDomainName();  }}if (serverGroup14 == null){  serverGroup14 = action14.getServerGroup();  if (serverGroup14 == null)  {      serverGroup14 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getServerGroup();  }}out.print("<form");out.print(" method=\"");out.print("post");out.print("\"");out.print(" action=\"");out.print(context.getFormattedValue(url(true,context.getFormattedValue(getObject("SecureURL"),null), context.getFormattedValue("",null), (new URLPipelineAction(context.getFormattedValue("ViewUser-Create",null)))),null));out.print("\"");out.print(" name=\"");out.print("CreateUserForm");out.print("\"");out.print(" class=\"");out.print("form-horizontal bv-form");out.print("\"");out.print(" data-bv-feedbackicons-valid=\"");out.print("glyphicon glyphicon-ok");out.print("\"");out.print(" data-bv-feedbackicons-invalid=\"");out.print("glyphicon glyphicon-remove");out.print("\"");out.print(" data-bv-feedbackicons-validating=\"");out.print("glyphicon glyphicon-refresh");out.print("\"");out.print(">");out.print(context.prepareWACSRFTag(actionValue14, site14, serverGroup14,true)); 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_User")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("ERROR_User"),null).equals(context.getFormattedValue("LoginAlreadyInUse",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",42,e);}if (_boolean_result) { 
      out.write("<div role=\"alert\" class=\"alert alert-danger\">");
 {out.write(localizeISText("account.user.new.login.already_exist.error","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</div>");
 } 
      out.write("<fieldset>\n<div class=\"form-group\">\n<label class=\"control-label col-sm-4\" for=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Title:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {50}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("account.update_profile.salutation.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label>\n<div class=\"col-sm-8\">");
 processOpenTag(response, pageContext, "salutationselectbox", new TagParameter[] {
new TagParameter("formparameter",getObject("CreateUserForm:Title:QualifiedName")),
new TagParameter("salutation_enumeration_provider",getObject("SalutationEnumerationKeyProvider")),
new TagParameter("salutation",getObject("CreateUserForm:Title:Value"))}, 52); 
      out.write("</div>\n</div>\n<div class=\"form-group\">\n<label class=\"control-label col-sm-4\" for=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:FirstName:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {59}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("account.update_profile.firstname.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("<span class=\"required\">*</span></label>\n<div class=\"col-sm-8\">\n<input maxlength=\"35\" \ntype=\"text\"\nclass=\"form-control");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("CreateUserForm:FirstName:isInvalid"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",63,e);}if (_boolean_result) { 
      out.write(" error");
 } 
      out.write("\"\nname=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:FirstName:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {64}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nid=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:FirstName:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {65}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:FirstName:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {66}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\naria-required=\"true\"\ndata-bv-notempty=\"true\" \nrequired \ndata-bv-notempty-message=\"");
 {out.write(localizeISText("account.user.new.firstname.error.required","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" \nforbiddensymbols=\"\"\ndata-bv-forbiddensymbols-message=\"");
 {out.write(localizeISText("error.forbiddensymbols","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\"\n/>\n</div>\n</div>\n<div class=\"form-group\">\n<label class=\"control-label col-sm-4\" for=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:LastName:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {77}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("account.update_profile.lastname.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("<span class=\"required\">*</span></label>\n<div class=\"col-sm-8\">\n<input maxlength=\"35\"\ntype=\"text\"\nclass=\"form-control");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("CreateUserForm:LastName:Invalid"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",81,e);}if (_boolean_result) { 
      out.write(" error");
 } 
      out.write("\"\nname=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:LastName:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {82}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nid=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:LastName:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {83}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:LastName:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {84}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\ndata-bv-notempty=\"true\" \nrequired \ndata-bv-notempty-message=\"");
 {out.write(localizeISText("account.user.new.lastname.error.required","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" \nforbiddensymbols=\"\"\ndata-bv-forbiddensymbols-message=\"");
 {out.write(localizeISText("error.forbiddensymbols","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\"\n/>\n</div>\n</div>\n</fieldset>\n<fieldset>\n<div class=\"form-group\">\n<label class=\"control-label col-sm-4\" for=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Login:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {97}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("account.user.new.login.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("<span class=\"required\">*</span></label>\n<div class=\"col-sm-8\">\n<input maxlength=\"256\"\ntype=\"text\"\nclass=\"form-control");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("CreateUserForm:Login:Invalid"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",101,e);}if (_boolean_result) { 
      out.write(" error");
 } 
      out.write("\"\nname=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Login:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {102}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nid=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Login:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {103}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Login:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {104}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\ndata-bv-notempty=\"true\" required data-bv-notempty-message=\"");
 {out.write(localizeISText("account.user.new.login.error.required","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" data-bv-emailaddress=\"true\" data-bv-emailaddress-message=\"");
 {out.write(localizeISText("account.user.new.email.error.valid","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\"\n/>\n</div>\n</div>\n<div class=\"form-group");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("CreateUserForm:Email:isInvalid"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",110,e);}if (_boolean_result) { 
      out.write(" has-error");
 } 
      out.write("\">\n<label class=\"control-label col-sm-4\" for=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Email:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {111}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("account.user.new.email.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("<span class=\"required\">*</span></label>\n<div class=\"col-sm-8\">\n<input maxlength=\"256\"\ntype=\"text\"\nclass=\"form-control");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("CreateUserForm:Email:Invalid"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",115,e);}if (_boolean_result) { 
      out.write(" error");
 } 
      out.write("\"\nname=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Email:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {116}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nid=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Email:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {117}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\ndata-error-position=\"placeholder\"\nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Email:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {119}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" data-bv-notempty=\"true\"\ndata-bv-notempty-message=\"");
 {out.write(localizeISText("account.user.new.email.error.required","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" data-bv-emailaddress=\"true\" data-bv-emailaddress-message=\"");
 {out.write(localizeISText("account.user.new.email.error.valid","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" data-bv-emailaddress=\"true\"\n/>\n</div>\n</div>\n</fieldset>\n<fieldset>");
 {Object temp_obj = (getObject("CustomerBO:Extension(\"CompanyCustomer\")")); getPipelineDictionary().put("CompanyCustomer", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("CompanyCustomer"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",129,e);}if (_boolean_result) { 
      out.write("<div class=\"form-group\">\n<label class=\"control-label col-sm-4\" for=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Department:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {131}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("account.update_profile.department.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label>\n<div class=\"col-sm-8\">\n<input maxlength=\"60\"\ntype=\"text\"\nclass=\"form-control\"\nname=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Department:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {136}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Department:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {137}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n/>\n</div>\n</div>");
 } 
      out.write("<div class=\"form-group\">\n<div class=\"col-sm-offset-4 col-sm-4\">\n<div class=\"checkbox\">\n<label for=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Active:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {146}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<input type=\"checkbox\"\nid=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Active:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {148}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nname=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Active:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {149}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\ntitle=\"");
 {out.write(localizeISText("account.user.new.active.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\"\nvalue=\"true\"\nchecked=\"checked\"\n/>");
 {out.write(localizeISText("account.user.new.active.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label>\n</div>\n</div>\n</div>\n<div class=\"form-group\">\n<label class=\"control-label col-sm-4\" for=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Phone:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {161}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("account.update_profile.phone.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label>\n<div class=\"col-sm-8\">\n<input maxlength=\"20\"\ntype=\"text\"\nclass=\"form-control\"\nname=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Phone:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {166}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Phone:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {167}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\ndata-bv-regexp=\"true\" data-bv-regexp-regexp=\"^[0-9\\-]+$\"\ndata-bv-regexp-message=\"");
 {out.write(localizeISText("account.user.new.phone.error.valid","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\"\n/>\n</div>\n</div> \n<div class=\"form-group\">\n<label class=\"control-label col-sm-4\" for=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Fax:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {175}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("account.update_profile.fax.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label>\n<div class=\"col-sm-8\">\n<input maxlength=\"20\"\ntype=\"text\"\nclass=\"form-control\"\nname=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Fax:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {180}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Fax:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {181}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\ndata-bv-regexp=\"true\" data-bv-regexp-regexp=\"^[0-9\\-]+$\"\ndata-bv-regexp-message=\"");
 {out.write(localizeISText("account.user.new.fax.error.valid","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\"\n/>\n</div>\n</div>\n<div class=\"form-group\">\n<label class=\"control-label col-sm-4\" for=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Birthday:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {189}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("account.default_address.birthday.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label>\n<div class=\"col-sm-8\">");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("CreateUserForm:Birthday:Month:isInvalid")).booleanValue() || ((Boolean) getObject("CreateUserForm:Birthday:Day:isInvalid")).booleanValue() || ((Boolean) getObject("CreateUserForm:Birthday:Year:isInvalid")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",191,e);}if (_boolean_result) { 
 processOpenTag(response, pageContext, "birthdayinput", new TagParameter[] {
new TagParameter("formparameter",getObject("CreateUserForm:Birthday")),
new TagParameter("type","select"),
new TagParameter("class","error"),
new TagParameter("required","false")}, 192); 
 } else { 
 processOpenTag(response, pageContext, "birthdayinput", new TagParameter[] {
new TagParameter("formparameter",getObject("CreateUserForm:Birthday")),
new TagParameter("type","select"),
new TagParameter("required","false")}, 197); 
 } 
      out.write("</div>\n</div>\n<div class=\"form-group\">\n<label class=\"control-label col-sm-4\" for=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:LocaleID:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {205}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("account.update_profile.preferred_language.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("<span class=\"required\">*</span></label>\n<div class=\"col-sm-8\">");
 processOpenTag(response, pageContext, "preferredlocaleselectbox", new TagParameter[] {
new TagParameter("currentlocale",getObject("CurrentSession:Locale")),
new TagParameter("parametername",getObject("CreateUserForm:LocaleID:QualifiedName")),
new TagParameter("selected",getObject("CreateUserForm:LocaleID:Value"))}, 207); 
      out.write("</div>\n</div>\n</fieldset>");
 processOpenTag(response, pageContext, "roleselection", new TagParameter[] {
new TagParameter("AssignableRoles",getObject("CustomerBO:Extension(\"CustomerBOSecurityExtension\"):AssignableRoles")),
new TagParameter("CurrentUser",getObject("CurrentUser")),
new TagParameter("Language",getObject("CurrentSession:Locale:Language")),
new TagParameter("ImplicitlyAssignedRoles",getObject("CustomerBO:Extension(\"CustomerBOSecurityExtension\"):ImplicitlyAssignedRoles")),
new TagParameter("SelectedUser",getObject("SelectedUser"))}, 214); 
      out.write("<fieldset>\n<div class=\"form-group\">\n<label class=\"control-label col-sm-4\" for=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:OrderLimit:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {226}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("account.user.new.order_spend_limit.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label>\n<input type=\"hidden\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:OrderLimit:Currency:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {227}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CurrentRequest:CurrencyCode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {227}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n<div class=\"col-sm-8\">\n<div class=\"input-group\"> \n<span class=\"input-group-addon\">");
 {String value = null;try{value=context.getFormattedValue(getObject("CurrentRequest:CurrencyCode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {231}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</span>\n<input\ntype=\"text\"\nid=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:OrderLimit:MoneyValue:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {235}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nsize=\"18\"\nmaxlength=\"256\"\nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:OrderLimit:Value:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {238}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nname=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:OrderLimit:MoneyValue:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {239}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nclass=\"form-control");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("CreateUserForm:OrderLimit:MoneyValue:Errors") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",240,e);}if (_boolean_result) { 
      out.write(" has-error");
 } 
      out.write("\"\ndata-bv-regexp=\"true\" data-bv-regexp-regexp=\"^[0-9.]+$\"\ndata-bv-regexp-message=\"");
 {out.write(localizeISText("account.user.new.OrderLimit.error.valid","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\"\n/>\n</div>\n</div>\n</div>\n<div class=\"form-group\">\n<label class=\"control-label col-sm-4\" for=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Budget:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {250}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("account.user.new.budget.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label>\n<input type=\"hidden\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Budget:Currency:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {251}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CurrentRequest:CurrencyCode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {251}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n<div class=\"col-sm-8\">\n<div class=\"row\">\n<div class=\"col-sm-6 form-vertical-space\">\n<div class=\"input-group\"> \n<span class=\"input-group-addon\">");
 {String value = null;try{value=context.getFormattedValue(getObject("CurrentRequest:CurrencyCode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {257}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</span>\n<input type=\"text\"\nid=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Budget:MoneyValue:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {260}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nsize=\"18\"\nmaxlength=\"256\"\nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Budget:Value:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {263}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nname=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Budget:MoneyValue:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {264}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nclass=\"form-control");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("CreateUserForm:Budget:MoneyValue:Errors") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",265,e);}if (_boolean_result) { 
      out.write(" has-error");
 } 
      out.write("\"\ndata-bv-regexp=\"true\" data-bv-regexp-regexp=\"^[0-9.]+$\"\ndata-bv-regexp-message=\"");
 {out.write(localizeISText("account.user.new.Budget.error.valid","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\"\n/>\n</div>\n</div>\n<div class=\"col-sm-6\">\n<select\nclass=\"form-control\" \nname=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("CreateUserForm:Period:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {276}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\n>\n<option value=\"weekly\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("CreateUserForm:Period:Value"),null).equals(context.getFormattedValue("weekly",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",278,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write('>');
 {out.write(localizeISText("account.user.new.budget.period.value.weekly","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n<option value=\"monthly\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("CreateUserForm:Period:Value"),null).equals(context.getFormattedValue("monthly",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",279,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write('>');
 {out.write(localizeISText("account.user.new.budget.period.value.monthly","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n<option value=\"quarterly\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("CreateUserForm:Period:Value"),null).equals(context.getFormattedValue("quarterly",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",280,e);}if (_boolean_result) { 
      out.write("selected=\"selected\"");
 } 
      out.write('>');
 {out.write(localizeISText("account.user.new.budget.period.value.quarterly","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</option>\n</select>\n</div>\n</div>\n</div>\n</div>\n</fieldset>\n<div class=\"form-group\">\n<div class=\"col-sm-offset-4 col-sm-8\">\n<button class=\"btn btn-primary\" type=\"submit\" value=\"");
 {out.write(localizeISText("account.user.new.button.create.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" name=\"Create\" >");
 {out.write(localizeISText("account.user.new.button.create.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</button>\n<a class=\"btn btn-default\" href=\"");
 {String value = null;try{value=context.getFormattedValue(url(true,context.getFormattedValue(getObject("SecureURL"),null), context.getFormattedValue("",null), (new URLPipelineAction(context.getFormattedValue("ViewUsers-Start",null)))),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {291}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write(' ');
      out.write('>');
 {out.write(localizeISText("account.cancel.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a> \n</div>\n</div>");
 out.print("</form>"); 
      out.write("</div>\n</div>\n</div>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
