/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-16 22:40:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fsf_005fresponsive_005fb2b.default_.account.inc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class RoleSelection_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
      out.write('\n');
 
setEncodingType("text/html"); 
 {Object temp_obj = (getObject("SelectedUser:Extension(\"UserBORoleExtension\")")); getPipelineDictionary().put("SelectedUserRoleExtension", temp_obj);} 
 {Object temp_obj = ((((context.getFormattedValue(getObject("SelectedUserRoleExtension:hasRole(\"APP_B2B_OCI_USER\")"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE)); getPipelineDictionary().put("EditingOCIUser", temp_obj);} 
 {Object temp_obj = ((((context.getFormattedValue(getObject("CurrentUser:Profile:UUID"),null).equals(context.getFormattedValue(getObject("SelectedUser:ID"),null)))) ? Boolean.TRUE : Boolean.FALSE)); getPipelineDictionary().put("EditingCurrentUser", temp_obj);} 
      out.write("<fieldset>\n<div class=\"form-group\">\n<span class=\"control-label col-sm-4\">");
 {out.write(localizeISText("account.user.new.role.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</span>\n<div class=\"col-sm-8\" id=\"user-roles-container\">\n<div class=\"row\">");
 while (loop("ImplicitlyAssignedRoles","Role",null)) { 
      out.write("<div class=\"col-md-6\">\n<div class=\"checkbox\">\n<label for=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Role:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {18}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<input type=\"checkbox\" \ndisabled=\"disabled\" \n");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) getObject("EditingOCIUser")).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",22,e);}if (_boolean_result) { 
      out.write("\nchecked=\"checked\" \n");
 } 
      out.write('\n');
      out.write('/');
      out.write('>');
 {String value = null;try{value=context.getFormattedValue(getObject("Role:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {26}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</label>\n</div>\n</div>");
 } 
 while (loop("AssignableRoles","Role",null)) { 
      out.write("<div class=\"col-md-6\">\n<div class=\"checkbox\">\n<label for=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Role:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {35}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<input type=\"checkbox\"\nid=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Role:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {37}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nname=\"SelectedUserRolesUUID\"\nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Role:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {39}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('\n');
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("SelectedUserRoleExtension:hasRole(Role:ID)"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",43,e);}if (_boolean_result) { 
      out.write(" checked=\"checked\"\n");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (((((Boolean) ((((context.getFormattedValue(getObject("Role:ID"),null).equals(context.getFormattedValue("APP_B2B_ACCOUNT_OWNER",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("CurrentUser:Profile:UUID"),null).equals(context.getFormattedValue(getObject("SelectedUser:ID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) getObject("EditingOCIUser")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",44,e);}if (_boolean_result) { 
      out.write(" disabled=\"disabled\"\n");
 } 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("EditingOCIUser")).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("Role:ID"),null).equals(context.getFormattedValue("APP_B2B_OCI_USER",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",47,e);}if (_boolean_result) { 
      out.write(" disabled=\"disabled\" \n");
 }} 
      out.write('\n');
      out.write('/');
      out.write('>');
 {String value = null;try{value=context.getFormattedValue(getObject("Role:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {50}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</label>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("Role:ID"),null).equals(context.getFormattedValue("APP_B2B_ACCOUNT_OWNER",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) getObject("SelectedUserRoleExtension:hasRole(Role:ID)")).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("CurrentUser:Profile:UUID"),null).equals(context.getFormattedValue(getObject("SelectedUser:ID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",52,e);}if (_boolean_result) { 
      out.write("<input type=\"hidden\" name=\"SelectedUserRolesUUID\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Role:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {54}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" />");
 } 
      out.write("</div>\n</div>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("EditingOCIUser"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",60,e);}if (_boolean_result) { 
      out.write("<input type=\"hidden\" name=\"SelectedUserRolesUUID\" value=\"APP_B2B_OCI_USER\">");
 } 
      out.write("</div>\n</div>\n</div>\n<div class=\"form-group\">\n<span class=\"control-label col-sm-4\">");
 {out.write(localizeISText("account.user.new.permissions.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</span>\n<div class=\"col-sm-8\" id=\"selected-permissions\"></div>\n<div class=\"col-sm-8 hidden\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("ImplicitlyAssignedRoles") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",71,e);}if (_boolean_result) { 
      out.write("<ul>");
 while (loop("ImplicitlyAssignedRoles","Role",null)) { 
      out.write("<li id=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue(getObject("Role:ID"),null) + context.getFormattedValue("_permissions",null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {74}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" class=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Role:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {74}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(" text-left\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("Role:RolePermissionAssignments") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",75,e);}if (_boolean_result) { 
      out.write("<ul>");
 while (loop("Role:RolePermissionAssignments","Assignment",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("Assignment:Permission:Name")))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("Assignment:Permission:Name"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",78,e);}if (_boolean_result) { 
      out.write("<li>");
 {String value = null;try{value=context.getFormattedValue(getObject("Assignment:Permission:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {79}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</li>");
 } 
 } 
      out.write("</ul>");
 } 
      out.write("</li>");
 } 
      out.write("</ul>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("AssignableRoles") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",88,e);}if (_boolean_result) { 
      out.write("<ul>");
 while (loop("AssignableRoles","Role",null)) { 
      out.write("<li\n");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (getObject("SelectedUserRoleExtension:hasRole(Role:ID)"))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",92,e);}if (_boolean_result) { 
      out.write(" style=\"display:none\"");
 } 
      out.write(" \nid=\"");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue(getObject("Role:ID"),null) + context.getFormattedValue("_permissions",null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {93}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" class=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Role:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {93}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(" text-left\" \n>");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("Role:RolePermissionAssignments") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",95,e);}if (_boolean_result) { 
      out.write("<ul>");
 while (loop("Role:RolePermissionAssignments","Assignment",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("Assignment:Permission:Name")))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("Assignment:Permission:Name"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",98,e);}if (_boolean_result) { 
      out.write("<li>");
 {String value = null;try{value=context.getFormattedValue(getObject("Assignment:Permission:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {99}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</li>");
 } 
 } 
      out.write("</ul>");
 } 
      out.write("</li>");
 } 
      out.write("</ul>");
 } 
      out.write("</div>\n</div>\n<script>\n$(document).ready(function () {\n$.fn.showUniquePermissions = function() {\nvar permissionsList = [];\nvar name;\nvar roleID;\n// Collect permissions\n$(\"");
      out.print(context.getFormattedValue("#",null));
      out.write("user-roles-container\").find(\"input[type='checkbox']\").each(function () {\n$label = $(this).closest(\"label\");\nroleID = $label.attr(\"for\");\nif (roleID && $(this).is(\":checked\")) {\n$(\"");
      out.print(context.getFormattedValue("#",null));
      out.write("\" + roleID + \"_permissions\").find(\"li\").each(function () {\nname = $(this).text();\nif ($.inArray(name, permissionsList) == -1) {\npermissionsList.push(name);\n}\n});\n}\n});\n// Sort permissions alphabetically\npermissionsList.sort(function(a, b) {\nreturn a.localeCompare(b, '");
 {String value = null;try{value=context.getFormattedValue(getObject("Language"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {131}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("', {'sensitivity': 'base'});\n});\n// Display permissions as list items\n$ul = $(\"<dl>\").append($.map(permissionsList, function(permission){ return $(\"<dd>\").text(permission); }));\n$(\"");
      out.print(context.getFormattedValue("#",null));
      out.write("selected-permissions\" ).html($ul);\n};\n$(this).showUniquePermissions();\n$(\"");
      out.print(context.getFormattedValue("#",null));
      out.write("user-roles-container\").find('input[name=\"SelectedUserRolesUUID\"]').on(\"change\", function () {$(this).showUniquePermissions();});\n});\n</script>\n</fieldset>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
