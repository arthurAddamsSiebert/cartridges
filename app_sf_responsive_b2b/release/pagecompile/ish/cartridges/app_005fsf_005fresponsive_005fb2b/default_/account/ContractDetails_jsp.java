/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-16 22:40:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fsf_005fresponsive_005fb2b.default_.account;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;
import com.intershop.component.customer.capi.CustomerBO;
import com.intershop.beehive.core.capi.app.AppContextUtil;
import com.intershop.component.contract.capi.ContractBaseBO;
import com.intershop.component.application.capi.ApplicationBO;

public final class ContractDetails_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
      out.write("\n\n\n\n\n");
 
setEncodingType("text/html"); 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"modules/B2BModules", null, "7");} 
      out.write("<div class=\"breadcrumbs row\">");
 processOpenTag(response, pageContext, "accountbreadcrumb", new TagParameter[] {
new TagParameter("link",url(true,(new URLPipelineAction(context.getFormattedValue("ViewContracts-Start",null))))),
new TagParameter("trailtext",getObject("ContractBaseBO:Name")),
new TagParameter("text",localizeText(context.getFormattedValue("account.contract.contracts.breadcrumb.title",null)))}, 10); 
      out.write("</div>\n<div class=\"marketing-area\">");
 processOpenTag(response, pageContext, "marketingslot", new TagParameter[] {
new TagParameter("id","baseMarketing")}, 15); 
      out.write("</div>\n<div class=\"account-wrapper\" data-testing-id=\"b2b-account-contract-details\">\n<div class=\"row account-main\">\n<div class=\"col-md-3 account-nav-box\">");
 processOpenTag(response, pageContext, "accountnavigation", new TagParameter[] {
new TagParameter("selecteditem","CONTRACTS")}, 24); 
      out.write("</div>\n<div class=\"col-md-9\">");
 processOpenTag(response, pageContext, "createmap", new TagParameter[] {
new TagParameter("key0","CustomerBO"),
new TagParameter("value0",getObject("CustomerBO")),
new TagParameter("mapname","PipelineParameters")}, 29); 
 {try{executePipeline("ViewUsers-TemplateCallback",((java.util.Map)(getObject("PipelineParameters"))),"Result");}catch(Exception e){Logger.error(this,"ISPIPELINE failed. Line: 30.",e);}} 
 processOpenTag(response, pageContext, "populatedictionary", new TagParameter[] {
new TagParameter("map",getObject("Result"))}, 31); 
      out.write("<div class=\"marketing-area\">");
 processOpenTag(response, pageContext, "marketingslot", new TagParameter[] {
new TagParameter("id","contentMarketing")}, 35); 
      out.write("</div>\n<h1>");
 {String value = null;try{value=context.getFormattedValue(getObject("ContractBaseBO:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {38}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</h1>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ContractBaseBO"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",40,e);}if (_boolean_result) { 
      out.write("<div class=\"section section-separator-xs\">\n<dl class=\"dl-horizontal dl-horizontal-inline dl-separator\">\n<dt>");
 {out.write(localizeISText("account.contract.contractDetails.contractID","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</dt>\n<dd>");
 {String value = null;try{value=context.getFormattedValue(getObject("ContractBaseBO:ContractID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {45}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</dd>\n<dt>");
 {out.write(localizeISText("account.contract.contractDetails.type","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</dt>\n<dd>");
 {out.write(localizeISText(context.getFormattedValue(context.getFormattedValue("account.contract.type.",null) + context.getFormattedValue(getObject("ContractBaseBO:TypeCode"),null),null),"",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</dd>\n<dt>");
 {out.write(localizeISText("account.contract.contractDetails.contractDescription","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</dt>\n<dd>");
 {String value = null;try{value=context.getFormattedValue(getObject("ContractBaseBO:Description"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {53}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</dd>\n<dt>");
 {out.write(localizeISText("account.contract.contractDetails.period","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</dt>\n<dd>");
 {String value = null;try{value=context.getFormattedValue(getObject("ContractBaseBO:StartDate"),new Integer(DATE_SHORT),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {57}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(' ');
      out.write('-');
      out.write(' ');
 {String value = null;try{value=context.getFormattedValue(getObject("ContractBaseBO:EndDate"),new Integer(DATE_SHORT),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {57}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</dd>\n<dt>");
 {out.write(localizeISText("account.contract.contractDetails.actualAmount","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</dt>\n<dd data-testing-id=\"b2b-account-contract-details-current-revenue\">");
 {String value = null;try{value=context.getFormattedValue(getObject("ContractBaseBO:SalesTarget:Actual"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {61}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</dd>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("ContractBaseBO:SalesTarget:Target")))).booleanValue() && ((Boolean) ((( ((Number) getObject("ContractBaseBO:SalesTarget:TargetAmount")).doubleValue() >((Number)(new Double(0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",63,e);}if (_boolean_result) { 
      out.write("<dt>");
 {out.write(localizeISText("account.contract.contractDetails.targetAmount","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</dt>\n<dd>");
 {String value = null;try{value=context.getFormattedValue(getObject("ContractBaseBO:SalesTarget:Target"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {66}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</dd>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("ContractBaseBO:SalesTarget")))).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("ContractBaseBO:SalesTarget:Completeness")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",68,e);}if (_boolean_result) { 
      out.write("<dd class=\"hidden-xs\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) ((new Double( ((Number) getObject("ContractBaseBO:SalesTarget:Completeness")).doubleValue() *((Number) new Double(100)).doubleValue())))).doubleValue() >((Number)(new Double(100))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",70,e);}if (_boolean_result) { 
 {Object temp_obj = (new Double(100)); getPipelineDictionary().put("ContractProgress", temp_obj);} 
 } else { 
 {Object temp_obj = (context.getFormattedValue(((new Double( ((Number) getObject("ContractBaseBO:SalesTarget:Completeness")).doubleValue() *((Number) new Double(100)).doubleValue()))),"0")); getPipelineDictionary().put("ContractProgress", temp_obj);} 
 } 
 processOpenTag(response, pageContext, "progressbar", new TagParameter[] {
new TagParameter("value",getObject("ContractProgress"))}, 75); 
      out.write("</dd>");
 } 
 } 
      out.write("</dl>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("ContractBaseBO:SalesTarget")))).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("ContractBaseBO:SalesTarget:Completeness")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",80,e);}if (_boolean_result) { 
      out.write("<div class=\"visible-xs\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) ((new Double( ((Number) getObject("ContractBaseBO:SalesTarget:Completeness")).doubleValue() *((Number) new Double(100)).doubleValue())))).doubleValue() >((Number)(new Double(100))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",82,e);}if (_boolean_result) { 
 {Object temp_obj = (new Double(100)); getPipelineDictionary().put("ContractProgress", temp_obj);} 
 } else { 
 {Object temp_obj = (context.getFormattedValue(((new Double( ((Number) getObject("ContractBaseBO:SalesTarget:Completeness")).doubleValue() *((Number) new Double(100)).doubleValue()))),"0")); getPipelineDictionary().put("ContractProgress", temp_obj);} 
 } 
 processOpenTag(response, pageContext, "progressbar", new TagParameter[] {
new TagParameter("value",getObject("ContractProgress"))}, 87); 
      out.write("</div>");
 } 
      out.write("</div>\n<h3>");
 {out.write(localizeISText("account.contract.contractDetails.orderHistory","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</h3>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("ContractOrders")))).booleanValue() && ((Boolean) (hasLoopElements("ContractOrders") ? Boolean.TRUE : Boolean.FALSE)).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",95,e);}if (_boolean_result) { 
      out.write("<div class=\"table-responsive\" data-testing-id=\"b2b-account-contract-details-orders\">\n<table class=\"table\">\n<thead>\n<th>");
 {out.write(localizeISText("account.orderlist.table.date_of_order","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n<th>");
 {out.write(localizeISText("account.orderlist.table.details_of_order","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n<th>");
 {out.write(localizeISText("account.orderlist.table.order_status","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n<th class=\"text-right\">");
 {out.write(localizeISText("account.contract.contractDetails.orderHistory.table.contractRevenue","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n<th class=\"text-right\">");
 {out.write(localizeISText("account.orderlist.table.order_total","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n</thead>\n<tbody>");
 while (loop("ContractOrders","ContractOrder",null)) { 
 {Object temp_obj = (getObject("ContractOrder:OrderBO")); getPipelineDictionary().put("OrderBO", temp_obj);} 
      out.write("<tr>\n<td>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ContractOrder:OrderExists"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",121,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(getObject("OrderBO:CreationDate"),new Integer(DATE_LONG),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {122}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
      out.write('\n');
      out.write('-');
      out.write('\n');
 } 
      out.write("</td>\n<td>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ContractOrder:OrderExists"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",130,e);}if (_boolean_result) { 
 {out.write(localizeISText("account.orderlist.orderDetails.orderNo.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(" <a href=\"");
      out.print(context.getFormattedValue(url(true,context.getFormattedValue(getObject("SecureURL"),null), context.getFormattedValue("",null), (new URLPipelineAction(context.getFormattedValue("ViewOrders-Detail",null))), (new URLParameterSet().addURLParameter(context.getFormattedValue("OrderID",null),context.getFormattedValue(getObject("OrderBO:ID"),null)))),null));
      out.write('"');
      out.write('>');
 {String value = null;try{value=context.getFormattedValue(getObject("OrderBO:DocumentNo"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {131}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</a><br/>");
 {out.write(localizeISText("account.orderlist.orderDetails.line_items.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(' ');
 {String value = null;try{value=context.getFormattedValue(getObject("OrderBO:TotalProductQuantity"),new Integer(QUANTITY_SHORT),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {132}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("<br/>");
 {out.write(localizeISText("account.orderlist.orderDetails.purchaser.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(' ');
 {String value = null;try{value=context.getFormattedValue(getObject("OrderBO:BuyerFirstName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {133}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(' ');
 {String value = null;try{value=context.getFormattedValue(getObject("OrderBO:BuyerLastName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {133}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("<br/>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("OrderBO:ExtensibleObject:AttributeValue(\"orderReferenceID\"):StringValue"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",134,e);}if (_boolean_result) { 
 {out.write(localizeISText("account.orderlist.orderDetails.orderReferenceID.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(' ');
 {String value = null;try{value=context.getFormattedValue(getObject("OrderBO:ExtensibleObject:AttributeValue(\"orderReferenceID\"):StringValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {135}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("<br/>");
 } 
 } else { 
 {out.write(localizeISText("account.orderlist.orderDetails.orderNo.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(' ');
 {String value = null;try{value=context.getFormattedValue(getObject("ContractOrder:DocumentNo"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {138}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } 
      out.write("</td>\n<td>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ContractOrder:OrderExists"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",144,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(getObject("OrderBO:StatusDisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {145}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
      out.write('\n');
      out.write('-');
      out.write('\n');
 } 
      out.write("</td>\n<td class=\"text-right\">");
 {String value = null;try{value=context.getFormattedValue(getObject("ContractOrder:Revenue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {153}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n<td class=\"text-right\">");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ContractOrder:OrderExists"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",158,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(getObject("OrderBO:BasketTotalPriceMinusLimitedTenderGross"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {159}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
      out.write('\n');
      out.write('-');
      out.write('\n');
 } 
      out.write("</td>\n</tr>");
 } 
      out.write("</tbody>\n</table>\n</div>");
 } else { 
      out.write("<p data-testing-id=\"No_Contract_Orders\">");
 {out.write(localizeISText("account.contract.contractDetails.noOrdersFound","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>");
 } 
 } else { 
      out.write('<');
      out.write('p');
      out.write('>');
 {out.write(localizeISText("account.contract.contractDetails.notFound","",null,getObject("ContractID"),null,null,null,null,null,null,null,null,null));} 
      out.write("</p>");
 } 
      out.write("<p>\n<a href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewContracts-Start",null)))),null));
      out.write('"');
      out.write('>');
 {out.write(localizeISText("account.contract.contractDetails.back.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a>\n</p>\n</div>\n</div>\n</div>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
