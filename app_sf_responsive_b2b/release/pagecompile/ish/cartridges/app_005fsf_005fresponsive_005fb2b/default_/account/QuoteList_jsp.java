/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-16 22:40:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fsf_005fresponsive_005fb2b.default_.account;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;

public final class QuoteList_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
      out.write('\n');
 
setEncodingType("text/html"); 
 context.setCustomTagTemplateName("quotestate","quote/QuoteState",false,new String[]{"quote","displaymode"},null); 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"modules/B2BModules", null, "9");} 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"inc/CSRFGuardJSToken", null, "11");} 
      out.write("<div class=\"breadcrumbs row\">");
 processOpenTag(response, pageContext, "accountbreadcrumb", new TagParameter[] {
new TagParameter("trailtext",localizeText(context.getFormattedValue("quote.quotes.link",null)))}, 14); 
      out.write("</div>\n<div class=\"marketing-area\">");
 processOpenTag(response, pageContext, "marketingslot", new TagParameter[] {
new TagParameter("id","baseMarketing")}, 19); 
      out.write("</div>\n<div class=\"account-wrapper\">\n<div class=\"row account-main\">\n<div class=\"col-md-3 account-nav-box\">");
 processOpenTag(response, pageContext, "accountnavigation", new TagParameter[] {
new TagParameter("selecteditem","QUOTES")}, 26); 
      out.write("</div>\n<div class=\"col-md-9\">\n<div class=\"marketing-area\">");
 processOpenTag(response, pageContext, "marketingslot", new TagParameter[] {
new TagParameter("id","contentMarketing")}, 31); 
      out.write("</div>\n<h1>");
 {out.write(localizeISText("quote.list.heading","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</h1>");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("Quotes") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",36,e);}if (_boolean_result) { 
      out.write("<div class=\"table-responsive\">\n<table class=\"table\">\n<thead>\n<tr>\n<th>");
 {out.write(localizeISText("quote.list.table.quote_no","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n<th>");
 {out.write(localizeISText("quote.list.table.name","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n<th>");
 {out.write(localizeISText("quote.list.table.line_items","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n<th>");
 {out.write(localizeISText("quote.list.table.creation_date","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n<th>");
 {out.write(localizeISText("quote.list.table.expiration_date","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n<th>");
 {out.write(localizeISText("quote.list.table.status","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n<th></th>\n</tr>\n</thead>");
 while (loop("Quotes","Quote",null)) { 
      out.write("<tr>\n<td>\n<a href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewQuote-Edit",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("QuoteUUID",null),context.getFormattedValue(getObject("Quote:UUID"),null))).addURLParameter(context.getFormattedValue("PageNumber",null),context.getFormattedValue(getObject("Quotes:Page"),null))),null));
      out.write('"');
      out.write(' ');
      out.write('>');
 {String value = null;try{value=context.getFormattedValue(getObject("Quote:DocumentNo"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {53}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</a>\n</td>\n<td>\n<a href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewQuote-Edit",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("QuoteUUID",null),context.getFormattedValue(getObject("Quote:UUID"),null))).addURLParameter(context.getFormattedValue("PageNumber",null),context.getFormattedValue(getObject("Quotes:Page"),null))),null));
      out.write('"');
      out.write(' ');
      out.write('>');
 {String value = null;try{value=context.getFormattedValue(getObject("Quote:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {56}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</a>\n</td>\n<td>");
 {String value = null;try{value=context.getFormattedValue(getObject("Quote:IndependentItemsCount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {59}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n<td>");
 {String value = null;try{value=context.getFormattedValue(getObject("Quote:ProductListEventByType(\"CreatedByBuyer\"):EventDate"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {62}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n<td>");
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("Quote:State")).doubleValue() <((Number)(new Double(4))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",65,e);}if (_boolean_result) { 
      out.write('\n');
      out.write('-');
      out.write('\n');
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) (getObject("Quote:ValidTo:Time"))).doubleValue() <((Number)((getObject("CurrentDate:Time")))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",69,e);}if (_boolean_result) { 
      out.write("<span class=\"text-danger\">");
 {out.write(localizeISText("quote.edit.submitted.your_quote_expired.text","",null,context.getFormattedValue(getObject("Quote:ValidTo"),new Integer(DATE_INPUT)),context.getFormattedValue(getObject("Quote:ValidTo"),new Integer(DATE_TIME)),getObject("QuoteLifeTime"),null,null,null,null,null,null,null));} 
      out.write("</span>");
 } else { 
 {String value = null;try{value=context.getFormattedValue(getObject("Quote:ValidTo"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {74}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } 
 } 
      out.write("</td>\n<td align=\"left\" nowrap=\"nowrap\">");
 processOpenTag(response, pageContext, "quotestate", new TagParameter[] {
new TagParameter("quote",getObject("Quote")),
new TagParameter("currentdate",getObject("CurrentDate")),
new TagParameter("displaymode","quoter")}, 81); 
      out.write("</td>\n<td class=\"text-right\">\n<a class=\"btn-tool\" data-toggle=\"modal\" href=\"");
      out.print(context.getFormattedValue(replace(context.getFormattedValue(context.getFormattedValue("#basicModal_",null) + context.getFormattedValue(getObject("Quote:UUID"),null),null),(String)("\\."),(String)("")),null));
      out.write("\" title=\"");
 {out.write(localizeISText("quote.list.delete.button.delete.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\"><span class=\"glyphicon glyphicon-trash\"></span></a>\n</td>\n</tr>\n<div class=\"modal fade\" id=\"");
      out.print(context.getFormattedValue(replace(context.getFormattedValue(context.getFormattedValue("basicModal_",null) + context.getFormattedValue(getObject("Quote:UUID"),null),null),(String)("\\."),(String)("")),null));
      out.write("\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"basicModal\" aria-hidden=\"true\">\n<div class=\"modal-dialog\">\n<div class=\"modal-content\">\n<div class=\"modal-header\">\n<button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">");
 {out.write(localizeISText("modal.close","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</span></button>\n<h2 class=\"modal-title\" id=\"myModalLabel\">");
 {out.write(localizeISText("quote.list.modaldialog.title","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</h2>\n</div>\n<div class=\"modal-body\">\n<p>");
 {out.write(localizeISText("quote.list.delete.heading","",null,getObject("Quote:DisplayName"),null,null,null,null,null,null,null,null,null));} 
      out.write("</p>\n<p>");
 {out.write(localizeISText("quote.list.delete.do_you_really_want_to_delete.text","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>\n</div>\n<div class=\"modal-footer\">\n<a data-csrf-guarded class='btn btn-primary' href='");
 {String value = null;try{value=context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewQuote-Delete",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("QuoteUUID",null),context.getFormattedValue(getObject("Quote:UUID"),null)))),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {101}",e);}if (value==null) value="";value = encodeString(value,"javascript");out.write(value);} 
      out.write('\'');
      out.write('>');
 {out.write(localizeISText("quote.list.delete.button.yes.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a>\n<a href=\"");
      out.print(context.getFormattedValue("#",null));
      out.write("\" class='btn btn-default' data-dismiss='modal'>");
 {out.write(localizeISText("quote.list.delete.button.no.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a>\n</div>\n</div>\n</div>\n</div>");
 } 
      out.write("</table>\n</div>");
 processOpenTag(response, pageContext, "mappagination", new TagParameter[] {
new TagParameter("pipeline","ViewQuoteList-Paging"),
new TagParameter("pagecount",getObject("Quotes:PageCount")),
new TagParameter("itemcount",getObject("Quotes:ElementCount")),
new TagParameter("currentpage",getObject("Quotes:Page")),
new TagParameter("params","")}, 111); 
 } else { 
 {out.write(localizeISText("quote.list.empty","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
      out.write("</div>\n</div>\n</div>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
