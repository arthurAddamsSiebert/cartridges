/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-16 22:40:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fsf_005fresponsive_005fb2b.default_.account;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class Users_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
 {try{String currentCacheTime = (String)((com.intershop.beehive.core.capi.request.ServletResponse)response).getHeaderValue(TemplateConstants.PAGECACHE_HEADER);if (currentCacheTime!=null && !"00".equals(currentCacheTime)) {Logger.debug(this, "ISCACHE 'forbidden' overwrites prior caching declaration.");}response.setHeader(TemplateConstants.PAGECACHE_HEADER, "00");}catch(Exception e){Logger.error(this,"ISCACHE failed. Line: {2}",e);}} 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"modules/B2BModules", null, "3");} 
      out.write("<div class=\"breadcrumbs row\">");
 processOpenTag(response, pageContext, "accountbreadcrumb", new TagParameter[] {
new TagParameter("trailtext",localizeText(context.getFormattedValue("account.users.link",null)))}, 6); 
      out.write("</div>\n<div class=\"marketing-area\">");
 processOpenTag(response, pageContext, "marketingslot", new TagParameter[] {
new TagParameter("id","baseMarketing")}, 11); 
      out.write("</div>\n<div class=\"account-wrapper\" data-testing-id=\"users-page\">\n<div class=\"row account-main\">\n<div class=\"col-md-3 account-nav-box\">");
 processOpenTag(response, pageContext, "accountnavigation", new TagParameter[] {
new TagParameter("selecteditem","USERS")}, 20); 
      out.write("</div>\n<div class=\"col-md-9\">\n<div class=\"marketing-area\">");
 processOpenTag(response, pageContext, "marketingslot", new TagParameter[] {
new TagParameter("id","contentMarketing")}, 26); 
      out.write("</div>");
 processOpenTag(response, pageContext, "createmap", new TagParameter[] {
new TagParameter("key0","CustomerBO"),
new TagParameter("value0",getObject("CustomerBO")),
new TagParameter("mapname","PipelineParameters")}, 29); 
 {try{executePipeline("ViewUsers-TemplateCallback",((java.util.Map)(getObject("PipelineParameters"))),"Result");}catch(Exception e){Logger.error(this,"ISPIPELINE failed. Line: 30.",e);}} 
 processOpenTag(response, pageContext, "populatedictionary", new TagParameter[] {
new TagParameter("map",getObject("Result"))}, 31); 
      out.write("<h1>");
 {out.write(localizeISText("account.user.list.heading","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("<a href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewUser-New",null)))),null));
      out.write("\" class=\"btn btn-default\">");
 {out.write(localizeISText("account.user.list.link.add_user","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a>\n</h1>\n<div class=\"section\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("Users") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",40,e);}if (_boolean_result) { 
      out.write("<div class=\"list-header hidden-xs\">\n<div class=\"col-sm-3 list-header-item\">");
 {out.write(localizeISText("account.user.list.table.user","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</div>\n<div class=\"col-sm-4 list-header-item\">");
 {out.write(localizeISText("account.user.list.table.budget","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</div>\n<div class=\"col-sm-2 list-header-item\">");
 {out.write(localizeISText("account.user.list.table.pending_orders","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</div> \n<div class=\"col-sm-2 list-header-item\">");
 {out.write(localizeISText("account.user.list.table.role","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</div>\n</div>\n<div class=\"list-body\" data-testing-id=\"users-list\">");
 while (loop("Users","User","Counter")) { 
      out.write("<div class=\"list-item-row\">\n<div class=\"col-sm-3 list-item\">\n<a ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("User:Disabled"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",62,e);}if (_boolean_result) { 
      out.write("class=\"disabled\"");
 } 
      out.write(" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewUser-Start",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("UserID",null),context.getFormattedValue(getObject("User:ID"),null)))),null));
      out.write('"');
      out.write('>');
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue(getObject("User:FirstName"),null) + context.getFormattedValue(" ",null) + context.getFormattedValue(getObject("User:LastName"),null),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {63}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</a>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("User:Disabled"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",65,e);}if (_boolean_result) { 
      out.write("<p class=\"help-block\">(");
 {out.write(localizeISText("account.user.list.status.inactive",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(")</p>");
 } 
      out.write("</div>");
 {Object temp_obj = (getObject("User:Extension(\"UserBOOrderApprovalExtension\")")); getPipelineDictionary().put("OrderApprovalExtension", temp_obj);} 
      out.write("<div class=\"col-sm-4 list-item\">\n<dl>\n<dt>");
 {out.write(localizeISText("account.user.widget.order_spend_limit.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</dt>\n<dd>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("OrderApprovalExtension:SingleOrderThresholdAmount:Available"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",76,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(getObject("OrderApprovalExtension:SingleOrderThresholdAmount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {77}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
 {out.write(localizeISText("approval.details.threshold.unlimited","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
      out.write("</dd>\n</dl>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("OrderApprovalExtension:Budget(OrderApprovalExtension:BudgetType):Available"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",83,e);}if (_boolean_result) { 
      out.write("<dl>\n<dt>");
 {out.write(localizeISText("account.budget.common.per_type","",null,(context.getFormattedValue(getObject("OrderApprovalExtension:BudgetType"),null).toLowerCase()),null,null,null,null,null,null,null,null,null));} 
      out.write("</dt>\n<dd>");
 {String value = null;try{value=context.getFormattedValue(getObject("OrderApprovalExtension:Budget(OrderApprovalExtension:BudgetType)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {89}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</dd>\n<dd>");
 processOpenTag(response, pageContext, "userbudgetcalculator", new TagParameter[] {
new TagParameter("UserBudgetCalculator","UserBudgetCalculator"),
new TagParameter("User",getObject("User"))}, 93); 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("OrderApprovalExtension:Budget(OrderApprovalExtension:BudgetType):Available"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",94,e);}if (_boolean_result) { 
      out.write("<div data-toggle=\"popover\" data-container=\"body\" data-html=\"true\" data-placement=\"top\" class=\"progress\" data-content=\"\n<div class='row col-md-12'>\n<div class='col-md-6'><label>");
 {out.write(localizeISText(context.getFormattedValue(context.getFormattedValue("orders.widget.",null) + context.getFormattedValue((context.getFormattedValue(getObject("OrderApprovalExtension:BudgetType"),null).toLowerCase()),null) + context.getFormattedValue("_spend_limit.label",null),null),"",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label></div>\n<div class='col-md-6 text-right'>");
 {String value = null;try{value=context.getFormattedValue(getObject("UserBudgetCalculator:Budget:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {99}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</div>\n</div>\n<div class='row col-md-12'>\n<div class='col-md-6'><label>");
 {out.write(localizeISText("account.user.list.spent.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label></div>\n<div class='col-md-6 text-right'>");
 {String value = null;try{value=context.getFormattedValue(getObject("UserBudgetCalculator:SpentBudget:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {103}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(' ');
      out.write('(');
 {String value = null;try{value=context.getFormattedValue(getObject("UserBudgetCalculator:SpentBudgetPercentage"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {103}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("%)</div>\n</div>\n<div class='row col-md-12'>\n<div class='col-md-6'><label>");
 {out.write(localizeISText("account.user.list.left.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label></div>\n<div class='col-md-6 text-right'>");
 {String value = null;try{value=context.getFormattedValue(getObject("UserBudgetCalculator:RemainingBudget:Value"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {107}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(' ');
      out.write('(');
 {String value = null;try{value=context.getFormattedValue(getObject("UserBudgetCalculator:RemainingBudgetPercentage"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {107}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("%)</div>\n</div>\n\">\n<div class=\"progress-bar ");
 _boolean_result=false;try {_boolean_result=((Boolean)(((( ((Number) getObject("UserBudgetCalculator:SpentBudgetPercentage")).doubleValue() >=((Number)(new Double(90.0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",110,e);}if (_boolean_result) { 
      out.write(" progress-bar-danger");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(((( ((Number) getObject("UserBudgetCalculator:SpentBudgetPercentage")).doubleValue() >=((Number)(new Double(70.0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",110,e);}if (_boolean_result) { 
      out.write(" progress-bar-warning");
 }} 
      out.write("\" role=\"progressbar\" aria-valuenow=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("UserBudgetCalculator:SpentBudgetPercentage"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {110}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: ");
 {String value = null;try{value=context.getFormattedValue(getObject("UserBudgetCalculator:SpentBudgetPercentage"),null,"DecimalSeparator=.");}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {110}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("%;\">\n<span class=\"progress-display\">");
 {String value = null;try{value=context.getFormattedValue(getObject("UserBudgetCalculator:SpentBudgetPercentage"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {111}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("%</span>\n</div>\n</div>");
 } 
      out.write("</dd>\n</dl>");
 } else { 
      out.write('<');
      out.write('p');
      out.write('>');
 {out.write(localizeISText("account.budget.common.undefined","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>");
 } 
      out.write("</div>");
 processOpenTag(response, pageContext, "createmap", new TagParameter[] {
new TagParameter("key1","UserBO"),
new TagParameter("key2","BasketDomain"),
new TagParameter("key0","CustomerBO"),
new TagParameter("value2",getObject("CurrentOrganization:Domain")),
new TagParameter("value1",getObject("User")),
new TagParameter("value0",getObject("CustomerBO")),
new TagParameter("mapname","Parameters")}, 125); 
 {try{executePipeline("ViewUsers-GetPendingOrdersCount",((java.util.Map)(getObject("Parameters"))),"Result");}catch(Exception e){Logger.error(this,"ISPIPELINE failed. Line: 130.",e);}} 
      out.write("<div class=\"col-sm-2 list-item\">\n<strong class=\"visible-xs\">");
 {out.write(localizeISText("account.user.list.table.pending_orders",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</strong>");
 {out.write(localizeISText("account.user.list.table.pending_orders.count","",null,getObject("Result:PendingOrdersCount"),null,null,null,null,null,null,null,null,null));} 
      out.write("</div>\n<div class=\"col-sm-2 list-item\">\n<dl>\n<dt class=\"visible-xs\">");
 {out.write(localizeISText("account.user.list.table.role",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</dt>");
 {Object temp_obj = (getObject("CustomerBO:Extension(\"GroupCustomer\"):UserBOByID(User:ID)")); getPipelineDictionary().put("SelectedUser", temp_obj);} 
 {Object temp_obj = (getObject("SelectedUser:Extension(\"UserBORoleExtension\"):RoleIDs")); getPipelineDictionary().put("SelectedUserRoleIDs", temp_obj);} 
 while (loop("SelectedUserRoleIDs","RoleID",null)) { 
 {Object temp_obj = (getObject("CustomerBO:Extension(\"CustomerBOSecurityExtension\"):RoleByID(RoleID)")); getPipelineDictionary().put("UserRole", temp_obj);} 
      out.write("<dd>");
 {String value = null;try{value=context.getFormattedValue(getObject("UserRole:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {147}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</dd>");
 } 
      out.write("</dl>\n</div>\n<div class=\"col-sm-1 list-item text-right\">\n<a class=\"btn-tool\" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewUser-Start",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("UserID",null),context.getFormattedValue(getObject("User:ID"),null)))),null));
      out.write("\">\n<span class=\"glyphicon glyphicon-pencil\" title=\"");
 {out.write(localizeISText("account.user.list.link.edit","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\"></span>\n</a>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue(getObject("User:ID"),null).equals(context.getFormattedValue(getObject("UserBO:ID"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",157,e);}if (_boolean_result) { 
      out.write("<a data-testing-id=\"user-delete-");
      out.print(context.getFormattedValue(getObject("User:ID"),null));
      out.write("\" class=\"btn-tool\" data-dialog href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewAjax-Start",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("TargetPipeline",null),context.getFormattedValue("ViewUsers-ShowDeleteUserDialog",null))).addURLParameter(context.getFormattedValue("UserID",null),context.getFormattedValue(getObject("User:ID"),null))),null));
      out.write('"');
      out.write('>');
 } else { 
      out.write("<a class=\"btn-tool\" class=\"disabled\" href=\"");
      out.print(context.getFormattedValue("#",null));
      out.write('"');
      out.write('>');
 } 
      out.write("<span class=\"glyphicon glyphicon-trash\" title=\"");
 {out.write(localizeISText("account.user.list.link.remove","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\"></span>\n</a>\n</div>\n</div>");
 } 
      out.write("</div>");
 } else { 
      out.write('<');
      out.write('p');
      out.write('>');
 {out.write(localizeISText("account.user.list.no_users.text","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>");
 } 
      out.write("</div>");
 processOpenTag(response, pageContext, "continueshoppinglink", new TagParameter[] {
new TagParameter("isDisplayed",getObject("ContinueShopping"))}, 176); 
      out.write("</div>\n</div>\n</div>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
