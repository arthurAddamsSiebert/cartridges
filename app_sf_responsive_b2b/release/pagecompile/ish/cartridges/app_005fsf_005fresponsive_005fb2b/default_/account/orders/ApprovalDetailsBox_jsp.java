/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-16 22:40:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fsf_005fresponsive_005fb2b.default_.account.orders;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class ApprovalDetailsBox_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
 {Object temp_obj = (getObject("OrderBO:UserBO:Extension(\"UserBOOrderApprovalExtension\")")); getPipelineDictionary().put("UserApproval", temp_obj);} 
 {Object temp_obj = (getObject("OrderBO:Extension(\"OrderBOOrderApprovalExtension\")")); getPipelineDictionary().put("OrderApproval", temp_obj);} 
      out.write("<div class=\"col-sm-12\">\n<div class=\"infobox\">\n<h3>");
 {out.write(localizeISText("approval.order_details.approval_details.heading","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</h3>\n<div class=\"row\">\n<div class=\"col-xs-6 col-sm-3\">\n<strong>");
 {out.write(localizeISText("approval.order_details.purchaser.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</strong>\n</div>\n<div class=\"col-xs-6 col-sm-9\">");
 {String value = null;try{value=context.getFormattedValue(getObject("OrderBO:BuyerFirstName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {15}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(' ');
 {String value = null;try{value=context.getFormattedValue(getObject("OrderBO:BuyerLastName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {15}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("<br/>\n</div>\n<div class=\"col-xs-6 col-sm-3\">\n<strong>");
 {out.write(localizeISText("approval.order_details.order_total.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</strong>\n</div>\n<div class=\"col-xs-6 col-sm-9\">");
 {String value = null;try{value=context.getFormattedValue(getObject("OrderBO:GrandTotalGross"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {22}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("<br/>\n</div>\n<div class=\"col-xs-6 col-sm-3\">\n<strong>");
 {out.write(localizeISText("approval.order_details.order_spend_limit.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</strong>\n</div>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("UserApproval:SingleOrderThresholdAmount:Available"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",28,e);}if (_boolean_result) { 
      out.write("<div class=\"col-xs-6 col-sm-3\">");
 {String value = null;try{value=context.getFormattedValue(getObject("UserApproval:SingleOrderThresholdAmount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {30}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
      out.write("<div class=\"col-xs-6 col-sm-9\">\n<strong>");
 {out.write(localizeISText("approval.details.threshold.unlimited","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</strong>");
 } 
      out.write("<br/>\n</div>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("UserApproval:Budget(UserApproval:BudgetType):Available"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",36,e);}if (_boolean_result) { 
      out.write("<div class=\"col-sm-6\">");
 processOpenTag(response, pageContext, "userbudgetcalculator", new TagParameter[] {
new TagParameter("UserBudgetCalculator","UserBudgetCalculator"),
new TagParameter("User",getObject("OrderBO:UserBO"))}, 38); 
      out.write("<div data-toggle=\"popover\" data-html=\"true\" data-placement=\"top\" class=\"progress\" data-content=\"\n<div class='row'>\n<div class='col-md-6'><label>");
 {out.write(localizeISText(context.getFormattedValue(context.getFormattedValue("orders.widget.",null) + context.getFormattedValue((context.getFormattedValue(getObject("UserApproval:BudgetType"),null).toLowerCase()),null) + context.getFormattedValue("_budget_left.label",null),null),"",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label></div>\n<div class='col-md-6 text-nowrap text-right'>");
 {String value = null;try{value=context.getFormattedValue(getObject("UserBudgetCalculator:RemainingBudget"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {43}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</div>\n</div>\n<div class='row'>\n<div class='col-md-6'><label>");
 {out.write(localizeISText(context.getFormattedValue(context.getFormattedValue("orders.widget.",null) + context.getFormattedValue((context.getFormattedValue(getObject("UserApproval:BudgetType"),null).toLowerCase()),null) + context.getFormattedValue("_spend_limit.label",null),null),"",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label></div>\n<div class='col-md-6 text-nowrap text-right'>");
 {String value = null;try{value=context.getFormattedValue(getObject("UserBudgetCalculator:Budget"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {47}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</div>\n</div>\n<div class='row'>\n<div class='col-md-6'><label>");
 {out.write(localizeISText("account.progress_bar.order_spend_limit.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label></div>\n<div class='col-md-6 text-nowrap text-right'>");
 {String value = null;try{value=context.getFormattedValue(getObject("UserBudgetCalculator:OrderSpendLimit"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {51}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</div>\n</div>\n\">\n<div \nclass=\"progress-bar");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((( ((Number) getObject("UserBudgetCalculator:RemainingBudgetPercentage")).doubleValue() <=((Number)(new Double(30.0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) ((( ((Number) getObject("UserBudgetCalculator:RemainingBudgetPercentage")).doubleValue() >((Number)(new Double(10.0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",55,e);}if (_boolean_result) { 
      out.write(" progress-bar-warning");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("UserBudgetCalculator:RemainingBudgetPercentage")).doubleValue() <=((Number)(new Double(10.0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",55,e);}if (_boolean_result) { 
      out.write(" progress-bar-danger");
 }} 
      out.write("\" \nrole=\"progressbar\" \naria-valuenow=\"");
 {String value = null;try{value=context.getFormattedValue(((new Double( ((Number) getObject("UserBudgetCalculator:SpentBudgetPercentage")).doubleValue() *((Number) new Double(100)).doubleValue()))),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {57}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\naria-valuemin=\"0\" \naria-valuemax=\"100\" \nstyle=\"width: ");
 {String value = null;try{value=context.getFormattedValue(getObject("UserBudgetCalculator:SpentBudgetPercentage"),null,"DecimalSeparator=.");}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {60}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("%;\"\n>\n<span class=\"progress-display\">");
 {String value = null;try{value=context.getFormattedValue(getObject("UserBudgetCalculator:SpentBudgetPercentage"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {62}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("%</span>\n</div>\n</div>\n</div>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (((!(context.getFormattedValue(getObject("OrderApproval:ApproverFirstName"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) (((!(context.getFormattedValue(getObject("OrderApproval:ApproverLastName"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",67,e);}if (_boolean_result) { 
      out.write("<div class=\"col-xs-6 col-sm-3\">\n<strong>");
 {out.write(localizeISText("approval.order_details.approver","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</strong>\n</div>\n<div class=\"col-xs-6 col-sm-9\">");
 {String value = null;try{value=context.getFormattedValue(getObject("OrderApproval:ApproverFirstName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {72}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;");
 {String value = null;try{value=context.getFormattedValue(getObject("OrderApproval:ApproverLastName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {72}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</div>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("OrderApproval:ApprovalDate"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",75,e);}if (_boolean_result) { 
      out.write("<div class=\"col-xs-6 col-sm-3\">\n<strong>");
 {out.write(localizeISText("approval.detailspage.approval_date.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</strong>\n</div>\n<div class=\"col-xs-6 col-sm-9\">");
 {String value = null;try{value=context.getFormattedValue(context.getFormattedValue(getObject("OrderApproval:ApprovalDate"),new Integer(DATE_SHORT)),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {80}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</div>");
 } 
      out.write("</div>\n</div>\n</div> ");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
