/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-16 22:40:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fsf_005fresponsive_005fb2b.default_.account;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class User_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
 {try{String currentCacheTime = (String)((com.intershop.beehive.core.capi.request.ServletResponse)response).getHeaderValue(TemplateConstants.PAGECACHE_HEADER);if (currentCacheTime!=null && !"00".equals(currentCacheTime)) {Logger.debug(this, "ISCACHE 'forbidden' overwrites prior caching declaration.");}response.setHeader(TemplateConstants.PAGECACHE_HEADER, "00");}catch(Exception e){Logger.error(this,"ISCACHE failed. Line: {2}",e);}} 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"modules/B2BModules", null, "3");} 
 {Object temp_obj = (getObject("CustomerBO:Extension(\"GroupCustomer\"):UserBOByID(UserID)")); getPipelineDictionary().put("SelectedUser", temp_obj);} 
 {Object temp_obj = (getObject("SelectedUser:Extension(\"UserBOOrderApprovalExtension\")")); getPipelineDictionary().put("OrderApprovalExtension", temp_obj);} 
 {Object temp_obj = (getObject("SelectedUser:Extension(\"UserBORoleExtension\"):RoleIDs")); getPipelineDictionary().put("SelectedUserRoleIDs", temp_obj);} 
 processOpenTag(response, pageContext, "userpermissions", new TagParameter[] {
new TagParameter("permissions","SelectedUserPermissions"),
new TagParameter("user",getObject("SelectedUser"))}, 11); 
      out.write("<div class=\"breadcrumbs row\">");
 processOpenTag(response, pageContext, "accountbreadcrumb", new TagParameter[] {
new TagParameter("link",url(true,(new URLPipelineAction(context.getFormattedValue("ViewUsers-Start",null))))),
new TagParameter("trailtext",context.getFormattedValue(getObject("SelectedUser:FirstName"),null) + context.getFormattedValue(" ",null) + context.getFormattedValue(getObject("SelectedUser:LastName"),null)),
new TagParameter("text",localizeText(context.getFormattedValue("account.users.link",null)))}, 15); 
      out.write("</div>\n<div class=\"marketing-area\">");
 processOpenTag(response, pageContext, "marketingslot", new TagParameter[] {
new TagParameter("id","baseMarketing")}, 20); 
      out.write("</div>\n<div class=\"account-wrapper\" data-testing-id=\"user-details-page\">\n<div class=\"row account-main\">\n<div class=\"col-md-3 account-nav-box\">");
 processOpenTag(response, pageContext, "accountnavigation", new TagParameter[] {
new TagParameter("selecteditem","USERS")}, 29); 
      out.write("</div>\n<div class=\"col-md-9\">\n<div class=\"marketing-area\">");
 processOpenTag(response, pageContext, "marketingslot", new TagParameter[] {
new TagParameter("id","contentMarketing")}, 34); 
      out.write("</div>\n<h1>");
 {out.write(localizeISText("account.user.details.heading","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</h1>\n<div class=\"row section\">\n<div class=\"col-md-4 pull-right col-xs-2\">\n<a data-testing-id=\"edit-profile-button\" class=\"btn-tool\" title=\"");
 {out.write(localizeISText("account.profile.update.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" href=\"");
      out.print(context.getFormattedValue(url(true,context.getFormattedValue(getObject("SecureURL"),null), context.getFormattedValue("",null), (new URLPipelineAction(context.getFormattedValue("ViewUserProfile-View",null))), (new URLParameterSet().addURLParameter(context.getFormattedValue("UserID",null),context.getFormattedValue(getObject("SelectedUser:ID"),null)))),null));
      out.write("\">\n<span class=\"glyphicon glyphicon-pencil\"></span>\n</a>\n</div>\n<div class=\"col-md-8 col-xs-10\">\n<h3>");
 {out.write(localizeISText("account.user.details.profile.heading","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</h3>\n<div class=\"row\">\n<div class=\"col-sm-12\">\n<dl class=\"dl-horizontal dl-separator\">\n<dt>");
 {out.write(localizeISText("account.profile.name.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</dt>\n<dd>");
 _boolean_result=false;try {_boolean_result=((Boolean)((((((Boolean) (disableErrorMessages().isDefined(getObject("SelectedUser:Title")))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("SelectedUser:Title"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE)))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",55,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(getObject("SelectedUser:Title"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {55}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;");
 } 
 {String value = null;try{value=context.getFormattedValue(getObject("SelectedUser:FirstName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {55}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(' ');
 {String value = null;try{value=context.getFormattedValue(getObject("SelectedUser:LastName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {55}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</dd>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("SelectedUser:Department")))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("SelectedUser:Department"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",58,e);}if (_boolean_result) { 
      out.write("<dt>");
 {out.write(localizeISText("account.profile.department.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</dt>\n<dd>");
 {String value = null;try{value=context.getFormattedValue(getObject("SelectedUser:Department"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {60}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</dd>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("SelectedUser:PhoneBusiness")))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("SelectedUser:PhoneBusiness"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",63,e);}if (_boolean_result) { 
      out.write("<dt>");
 {out.write(localizeISText("account.profile.phone.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</dt>\n<dd>");
 {String value = null;try{value=context.getFormattedValue(getObject("SelectedUser:PhoneBusiness"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {65}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</dd>");
 } 
      out.write("<dt>");
 {out.write(localizeISText("account.profile.email.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</dt>\n<dd>");
 {String value = null;try{value=context.getFormattedValue(getObject("SelectedUser:Email"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {69}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</dd>\n</dl>\n</div>\n</div>\n</div>\n</div>\n<div class=\"row section\">\n<div class=\"col-md-4 pull-right col-xs-2\">\n<a class=\"btn-tool\" title=\"");
 {out.write(localizeISText("account.profile.update.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" href=\"");
      out.print(context.getFormattedValue(url(true,context.getFormattedValue(getObject("SecureURL"),null), context.getFormattedValue("",null), (new URLPipelineAction(context.getFormattedValue("ViewUserRole-View",null))), (new URLParameterSet().addURLParameter(context.getFormattedValue("UserID",null),context.getFormattedValue(getObject("SelectedUser:ID"),null)))),null));
      out.write("\">\n<span class=\"glyphicon glyphicon-pencil\"></span>\n</a>\n</div>\n<div class=\"col-md-8 col-xs-10\">\n<h3>");
 {out.write(localizeISText("account.user.details.profile.role_and_budget_limits.heading","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</h3>\n<div class=\"row\">\n<div class=\"col-sm-12\">\n<dl class=\"dl-horizontal dl-separator\">\n<dt>");
 {out.write(localizeISText("account.user.new.role.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</dt>\n<dd>");
 while (loop("SelectedUserRoleIDs","RoleID",null)) { 
 {Object temp_obj = (getObject("CustomerBO:Extension(\"CustomerBOSecurityExtension\"):RoleByID(RoleID)")); getPipelineDictionary().put("UserRole", temp_obj);} 
 {String value = null;try{value=context.getFormattedValue(getObject("UserRole:Name"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {93}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((hasNext("RoleID") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",94,e);}if (_boolean_result) { 
      out.write(',');
      out.write(' ');
 } 
 } 
      out.write("</dd>\n<dt>");
 {out.write(localizeISText("account.user.new.permissions.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</dt>\n<dd>");
 while (loop("SelectedUserPermissions","Permission",null)) { 
 {String value = null;try{value=context.getFormattedValue(getObject("Permission"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {101}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((hasNext("Permission") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",101,e);}if (_boolean_result) { 
      out.write("<br/>");
 } 
 } 
      out.write("</dd>\n</dl>\n<dl class=\"dl-horizontal dl-separator\">\n<dt>");
 {out.write(localizeISText("account.user.new.order_spend_limit.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</dt>\n<dd>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("OrderApprovalExtension:SingleOrderThresholdAmount:Available"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",108,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(getObject("OrderApprovalExtension:SingleOrderThresholdAmount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {109}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
 {out.write(localizeISText("approval.details.threshold.unlimited","",null,null,null,null,null,null,null,null,null,null,null));} 
 } 
      out.write("</dd>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("OrderApprovalExtension:Budget(OrderApprovalExtension:BudgetType):Available"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",115,e);}if (_boolean_result) { 
      out.write("<dt>");
 {out.write(localizeISText("account.budget.common.per_type","",null,(context.getFormattedValue(getObject("OrderApprovalExtension:BudgetType"),null).toLowerCase()),null,null,null,null,null,null,null,null,null));} 
      out.write("</dt>\n<dd>");
 {String value = null;try{value=context.getFormattedValue(getObject("OrderApprovalExtension:Budget(OrderApprovalExtension:BudgetType)"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {120}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</dd>");
 } else { 
      out.write("<dt>");
 {out.write(localizeISText("account.user.budget.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</dt>\n<dd>");
 {out.write(localizeISText("account.budget.common.undefined","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</dd>");
 } 
      out.write("</dl>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
