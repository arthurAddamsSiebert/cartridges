/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-16 22:40:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fsf_005fresponsive_005fb2b.default_.modules.product;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;
import java.math.BigDecimal;

public final class ProductPrice_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
response.setHeader(TemplateConstants.PERSONALIZED_HEADER, "1");setEncodingType("text/html"); 
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (getObject("ProductBO:isEndOfLife"))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",3,e);}if (_boolean_result) { 
 processOpenTag(response, pageContext, "currentcustomerbo", new TagParameter[] {
new TagParameter("currentcustomerbo","CustomerBO")}, 5); 
 processOpenTag(response, pageContext, "getproductpricecontext", new TagParameter[] {
new TagParameter("CustomerBO",getObject("CustomerBO")),
new TagParameter("ProductPriceContext","ProductPriceContext")}, 6); 
 {Object temp_obj = (getObject("ProductBO:Extension(\"Pricing\")")); getPipelineDictionary().put("ProductPrice", temp_obj);} 
 {Object temp_obj = (getObject("ProductPrice:Price(\"SalePrice\",Currency,ProductPriceContext)")); getPipelineDictionary().put("SalePrice", temp_obj);} 
 {Object temp_obj = (getObject("ProductPrice:Price(\"ListPrice\",Currency,ProductPriceContext)")); getPipelineDictionary().put("ListPrice", temp_obj);} 
 {Object temp_obj = (new Double(1)); getPipelineDictionary().put("finalPrice", temp_obj);} 
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("greaterPrice", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ShowInformationalPrice"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",26,e);}if (_boolean_result) { 
 {Object temp_obj = (new Double(1)); getPipelineDictionary().put("greaterPrice", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ListPrice:Price:Available"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",28,e);}if (_boolean_result) { 
      out.write(' ');
      out.write('\n');
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ListPrice:PriceGreaterThan(SalePrice)"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",29,e);}if (_boolean_result) { 
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("finalPrice", temp_obj);} 
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("greaterPrice", temp_obj);} 
 } else { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) getObject("SalePrice:PriceGreaterThan(ListPrice)")).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",33,e);}if (_boolean_result) { 
      out.write(" <!-- Determines if the SalePrice is equal to the Comparable Price Type -->");
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("greaterPrice", temp_obj);} 
 } 
 } 
 } 
 } 
      out.write("<div class=\"current-price ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("finalPrice"),null).equals(context.getFormattedValue(new Double(0),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",40,e);}if (_boolean_result) { 
      out.write(" sale-price");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("greaterPrice"),null).equals(context.getFormattedValue(new Double(1),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",40,e);}if (_boolean_result) { 
      out.write(" sale-price-higher");
 }} 
      out.write('"');
      out.write('>');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (getObject("SalePrice:Range"))).booleanValue() && !((Boolean) (getObject("SalePrice:PriceRange:MinimumPrice:Equal(SalePrice:PriceRange:MaximumPrice)"))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",41,e);}if (_boolean_result) { 
 {out.write(localizeISText("product.price.salePriceMinMax.text","",null,context.getFormattedValue(getObject("SalePrice:PriceRange:MinimumPrice"),null),context.getFormattedValue(getObject("SalePrice:PriceRange:MaximumPrice"),null),null,null,null,null,null,null,null,null));} 
      out.write(' ');
      out.write('\n');
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("SalePrice:Price:Available")).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("finalPrice"),null).equals(context.getFormattedValue(new Double(0),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",43,e);}if (_boolean_result) { 
 {out.write(localizeISText("product.price.salePricePrefix.text","",null,context.getFormattedValue(getObject("SalePrice:Price"),null),null,null,null,null,null,null,null,null,null));} 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(getObject("SalePrice:Price:Available"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",45,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ProductBO:isProductMaster"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",46,e);}if (_boolean_result) { 
 {out.write(localizeISText("product.price.salePriceFallback.text","",null,context.getFormattedValue(getObject("SalePrice:PriceRange:MinimumPrice"),null),null,null,null,null,null,null,null,null,null));} 
 } else { 
 {out.write(localizeISText("product.price.salePriceFallback.text","",null,context.getFormattedValue(getObject("SalePrice:Price"),null),null,null,null,null,null,null,null,null,null));} 
 } 
 } else { 
 {out.write(localizeISText("product.price.na.text","",null,null,null,null,null,null,null,null,null,null,null));} 
 }}} 
 processOpenTag(response, pageContext, "productpriceadditionaltext", new TagParameter[] {
new TagParameter("ProductBO",getObject("ProductBO"))}, 54); 
      out.write("</div>");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("ShowInformationalPrice"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",59,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ListPrice:Price:Available"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",60,e);}if (_boolean_result) { 
 {Object temp_obj = ("true"); getPipelineDictionary().put("displayCondition", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("SalePrice:Price:Available"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",63,e);}if (_boolean_result) { 
      out.write(' ');
      out.write('\n');
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) getObject("ListPrice:PriceGreaterThan(SalePrice)")).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",64,e);}if (_boolean_result) { 
 {Object temp_obj = ("false"); getPipelineDictionary().put("displayCondition", temp_obj);} 
 } 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("displayCondition"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",68,e);}if (_boolean_result) { 
      out.write("<div class=\"old-price\">");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ListPrice:Range"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",70,e);}if (_boolean_result) { 
 {out.write(localizeISText("product.price.listPriceMinMax.text","",null,context.getFormattedValue(getObject("ListPrice:PriceRange:MinimumPrice"),null),context.getFormattedValue(getObject("ListPrice:PriceRange:MaximumPrice"),null),null,null,null,null,null,null,null,null));} 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(getObject("ListPrice:Price:Available"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",72,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("ProductBO:isProductMaster"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",73,e);}if (_boolean_result) { 
 {out.write(localizeISText("product.price.listPriceFallback.text","",null,context.getFormattedValue(getObject("ListPrice:PriceRange:MinimumPrice"),null),null,null,null,null,null,null,null,null,null));} 
 } else { 
 {out.write(localizeISText("product.price.listPriceFallback.text","",null,context.getFormattedValue(getObject("ListPrice:Price"),null),null,null,null,null,null,null,null,null,null));} 
 } 
 } else { 
 {out.write(localizeISText("product.price.na.text","",null,null,null,null,null,null,null,null,null,null,null));} 
 }} 
      out.write("</div>");
 } 
 } 
 } 
      out.write("<div>");
 while (loop("SalePrice:ScaledPrices","Scale",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("Scale:Quantity:Value")).doubleValue() >((Number)(new Double(1))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",87,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PreviousScale"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",88,e);}if (_boolean_result) { 

					BigDecimal limit = ((BigDecimal)getObject("Scale:Quantity:Value"));
					int upperBound = limit.subtract(new BigDecimal("1")).intValue();
					int lowerBound = ((BigDecimal)getObject("PreviousScale:Quantity:Value")).intValue();
					
 _boolean_result=false;try {_boolean_result=((Boolean)(((!(context.getFormattedValue( 
 lowerBound 
 ,null).equals(context.getFormattedValue( 
 upperBound 
 ,null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",95,e);}if (_boolean_result) { 
 {out.write(localizeISText("product.price.scalePrice","",null,context.getFormattedValue( 
 lowerBound 
 ,null) + context.getFormattedValue("-",null) + context.getFormattedValue( 
 upperBound 
 ,null),context.getFormattedValue(getObject("PreviousScale:Price"),null),null,null,null,null,null,null,null,null));} 
      out.write("<br />");
 } else { 
 {out.write(localizeISText("product.price.scalePrice","",null, 
 lowerBound 
 ,context.getFormattedValue(getObject("PreviousScale:Price"),null),null,null,null,null,null,null,null,null));} 
      out.write("<br />");
 } 
 } else { 
      out.write("<h4>");
 {out.write(localizeISText("product.price.scalePrice.heading","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</h4>");
 } 
 {Object temp_obj = (getObject("Scale")); getPipelineDictionary().put("PreviousScale", temp_obj);} 
 } 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PreviousScale"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",112,e);}if (_boolean_result) { 

				int lowerBound = ((BigDecimal)getObject("PreviousScale:Quantity:Value")).intValue();
			
 {out.write(localizeISText("product.price.scalePrice","",null,context.getFormattedValue( 
 lowerBound 
 ,null) + context.getFormattedValue("+",null),context.getFormattedValue(getObject("PreviousScale:Price"),null),null,null,null,null,null,null,null,null));} 
      out.write("<br />");
 } 
      out.write("</div>");
 } 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
