/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-16 22:40:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fsf_005fresponsive_005fb2b.default_.modules.approval;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;
import com.intershop.component.basket.capi.BasketBORepository;

public final class ApprovalListTable_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
      out.write('\n');
 
setEncodingType("text/html"); 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"modules/approval/Modules", null, "4");} 
 {Object temp_obj = (((((Boolean) ((((context.getFormattedValue(getObject("ListCase"),null).equals(context.getFormattedValue("AllApproved",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("ListCase"),null).equals(context.getFormattedValue("MyApproved",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE)); getPipelineDictionary().put("IsApprovedItemsList", temp_obj);} 
 {Object temp_obj = (((((Boolean) ((((context.getFormattedValue(getObject("ListCase"),null).equals(context.getFormattedValue("AllRejected",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() || ((Boolean) ((((context.getFormattedValue(getObject("ListCase"),null).equals(context.getFormattedValue("MyRejected",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE)); getPipelineDictionary().put("IsRejectedItemsList", temp_obj);} 
      out.write("<div class=\"table-responsive\">\n<table class=\"table\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("DataTestingID"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",10,e);}if (_boolean_result) { 
      out.write("data-testing-id=\"");
      out.print(context.getFormattedValue(getObject("DataTestingID"),null));
      out.write('"');
 } 
      out.write(">\n<thead class=\"hidden-xs\">\n<th data-column-id=\"order-id\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("IsRecurring"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",13,e);}if (_boolean_result) { 
 {Object temp_obj = ("account.subscription.details.label.subscription_number"); getPipelineDictionary().put("ApprovalItemLabelKey", temp_obj);} 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("IsApprovedItemsList"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",15,e);}if (_boolean_result) { 
 {Object temp_obj = ("account.approvallist.table.no_of_order"); getPipelineDictionary().put("ApprovalItemLabelKey", temp_obj);} 
 } else { 
 {Object temp_obj = ("account.approvallist.table.id_of_order"); getPipelineDictionary().put("ApprovalItemLabelKey", temp_obj);} 
 }} 
 {out.write(localizeISText(context.getFormattedValue(getObject("ApprovalItemLabelKey"),null),"",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n<th data-column-id=\"order-date\">");
 {out.write(localizeISText("account.approvallist.table.date_of_order","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("DisplayPurchaser"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",27,e);}if (_boolean_result) { 
      out.write("<th data-column-id=\"order-buyer\">");
 {out.write(localizeISText("account.approvallist.table.purchaser","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("DisplayApprover"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",33,e);}if (_boolean_result) { 
      out.write("<th>");
 {out.write(localizeISText("account.approvallist.table.approver","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("DisplayApprovalDate"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",38,e);}if (_boolean_result) { 
      out.write("<th>");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("IsRejectedItemsList"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",40,e);}if (_boolean_result) { 
 {Object temp_obj = ("account.approvallist.table.reject_date"); getPipelineDictionary().put("ApprovalDateLabelKey", temp_obj);} 
 } else { 
 {Object temp_obj = ("account.approvallist.table.approval_date"); getPipelineDictionary().put("ApprovalDateLabelKey", temp_obj);} 
 } 
 {out.write(localizeISText(context.getFormattedValue(getObject("ApprovalDateLabelKey"),null),"",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("IsRecurring"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",48,e);}if (_boolean_result) { 
      out.write("<th data-column-id=\"order-recurrence\">");
 {out.write(localizeISText("account.subscription.details.label.recurrence","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>");
 } 
      out.write("<th data-column-id=\"order-items\">");
 {out.write(localizeISText("account.approvallist.table.line_items","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n<th class=\"text-right\" data-column-id=\"order-total\">");
 {out.write(localizeISText("account.approvallist.table.line_item_total","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</th>\n<th>\n&nbsp;\n</th>\n</thead>\n<tbody>\n<!-- AllApproved displayes orders, not baskets -->");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((((context.getFormattedValue(getObject("IsApprovedItemsList"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("IsRecurring"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",67,e);}if (_boolean_result) { 
 while (loop("Approvals","OrderBO",null)) { 
      out.write("<!-- TODO this should be the creation date of the basket -->");
 {Object temp_obj = (getObject("OrderBO:CreationDate")); getPipelineDictionary().put("CreationDate", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("DisplayPurchaser"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",72,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("OrderBO:User:Profile:DataSheet:FirstName")); getPipelineDictionary().put("PurchaserFirstName", temp_obj);} 
 {Object temp_obj = (getObject("OrderBO:User:Profile:DataSheet:LastName")); getPipelineDictionary().put("PurchaserLastName", temp_obj);} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("DisplayApprover"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",76,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("OrderBO:Extension(\"OrderBOOrderApprovalExtension\")")); getPipelineDictionary().put("OrderApproval", temp_obj);} 
 {Object temp_obj = (getObject("OrderApproval:ApproverFirstName")); getPipelineDictionary().put("ApproverFirstName", temp_obj);} 
 {Object temp_obj = (getObject("OrderApproval:ApproverLastName")); getPipelineDictionary().put("ApproverLastName", temp_obj);} 
 } 
 processOpenTag(response, pageContext, "approvallisttablerow", new TagParameter[] {
new TagParameter("CreationDate",getObject("CreationDate")),
new TagParameter("ApproverLastName",getObject("ApproverLastName")),
new TagParameter("ApprovalDateLabelKey",getObject("ApprovalDateLabelKey")),
new TagParameter("DisplayPurchaser",getObject("DisplayPurchaser")),
new TagParameter("ApproverFirstName",getObject("ApproverFirstName")),
new TagParameter("ApprovalItemLabelKey",getObject("ApprovalItemLabelKey")),
new TagParameter("PurchaserFirstName",getObject("PurchaserFirstName")),
new TagParameter("DisplayApprovalDate",getObject("DisplayApprovalDate")),
new TagParameter("ApprovalDate",getObject("CreationDate")),
new TagParameter("IsRecurring",getObject("IsRecurring")),
new TagParameter("DetailsHref",url(true,context.getFormattedValue(getObject("SecureURL"),null), context.getFormattedValue("",null), (new URLPipelineAction(context.getFormattedValue("ViewApprovals-DetailApproved",null))), (new URLParameterSet().addURLParameter(context.getFormattedValue("OrderID",null),context.getFormattedValue(getObject("OrderBO:ID"),null))).addURLParameter(context.getFormattedValue("ListCase",null),context.getFormattedValue(getObject("ListCase"),null)))),
new TagParameter("ApprovalItemNumber",getObject("OrderBO:DocumentNo")),
new TagParameter("GrandTotal",getObject("OrderBO:GrandTotalGross")),
new TagParameter("ItemCount",getObject("OrderBO:AllProductLineItemBOs:Size")),
new TagParameter("DisplayApprover",getObject("DisplayApprover")),
new TagParameter("PurchaserLastName",getObject("PurchaserLastName"))}, 83); 
 {Object temp_obj = (getObject("null")); getPipelineDictionary().put("CreationDate", temp_obj);} 
 {Object temp_obj = (getObject("null")); getPipelineDictionary().put("PurchaserFirstName", temp_obj);} 
 {Object temp_obj = (getObject("null")); getPipelineDictionary().put("PurchaserLastName", temp_obj);} 
 {Object temp_obj = (getObject("null")); getPipelineDictionary().put("OrderApproval", temp_obj);} 
 {Object temp_obj = (getObject("null")); getPipelineDictionary().put("ApproverFirstName", temp_obj);} 
 {Object temp_obj = (getObject("null")); getPipelineDictionary().put("ApproverLastName", temp_obj);} 
 } 
 } else { 
 while (loop("Approvals","BasketPO",null)) { 
 {Object temp_obj = (getObject("BasketPO:UUID")); getPipelineDictionary().put("BasketUUID", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("BasketUUID"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",114,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("BasketPO:ID")); getPipelineDictionary().put("BasketUUID", temp_obj);} 
 } 
      out.write("<!-- TODO this is replacing a proper BO mapping in the queries -->");

					String basketUUID = getPipelineDictionary().get("BasketUUID");
					BasketBORepository basketBORepository = getPipelineDictionary().get("BasketBORepository");

					getPipelineDictionary().put("BasketBO", basketBORepository.getBasketBO(basketUUID));
					
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("IsRecurring"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",128,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("BasketBO:RecurringOrderDocumentNo")); getPipelineDictionary().put("ApprovalItemNumber", temp_obj);} 
 } else { 
 {Object temp_obj = (getObject("BasketBO:RequisitionDocumentNo")); getPipelineDictionary().put("ApprovalItemNumber", temp_obj);} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("DisplayPurchaser"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",134,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("BasketPO:User:Profile:DataSheet:FirstName")); getPipelineDictionary().put("PurchaserFirstName", temp_obj);} 
 {Object temp_obj = (getObject("BasketPO:User:Profile:DataSheet:LastName")); getPipelineDictionary().put("PurchaserLastName", temp_obj);} 
 } 
 {Object temp_obj = (getObject("BasketBO:Extension(\"BasketBOOrderApprovalExtension\")")); getPipelineDictionary().put("OrderApproval", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("DisplayApprover"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",141,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("OrderApproval:ApproverFirstName")); getPipelineDictionary().put("ApproverFirstName", temp_obj);} 
 {Object temp_obj = (getObject("OrderApproval:ApproverLastName")); getPipelineDictionary().put("ApproverLastName", temp_obj);} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("DisplayApprovalDate"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",145,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("OrderApproval:ApprovalDate")); getPipelineDictionary().put("ApprovalDate", temp_obj);} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("IsRecurring"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",148,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("BasketBO:Extension(\"RecurringBasket\")")); getPipelineDictionary().put("RecurringBasket", temp_obj);} 
 } 
 processOpenTag(response, pageContext, "approvallisttablerow", new TagParameter[] {
new TagParameter("CreationDate",getObject("BasketBO:PersistentObject:LastModified")),
new TagParameter("ApproverLastName",getObject("ApproverLastName")),
new TagParameter("ApprovalDateLabelKey",getObject("ApprovalDateLabelKey")),
new TagParameter("DisplayPurchaser",getObject("DisplayPurchaser")),
new TagParameter("ApproverFirstName",getObject("ApproverFirstName")),
new TagParameter("ApprovalItemLabelKey",getObject("ApprovalItemLabelKey")),
new TagParameter("RecurrencePeriod",getObject("RecurringBasket:RecurrenceInformation:Interval")),
new TagParameter("PurchaserFirstName",getObject("PurchaserFirstName")),
new TagParameter("DisplayApprovalDate",getObject("DisplayApprovalDate")),
new TagParameter("ApprovalDate",getObject("ApprovalDate")),
new TagParameter("IsRecurring",getObject("IsRecurring")),
new TagParameter("DetailsHref",url(true,context.getFormattedValue(getObject("SecureURL"),null), context.getFormattedValue("",null), (new URLPipelineAction(context.getFormattedValue("ViewApprovals-Details",null))), (new URLParameterSet().addURLParameter(context.getFormattedValue("BasketID",null),context.getFormattedValue(getObject("BasketUUID"),null))).addURLParameter(context.getFormattedValue("ListCase",null),context.getFormattedValue(getObject("ListCase"),null)))),
new TagParameter("ApprovalItemNumber",getObject("ApprovalItemNumber")),
new TagParameter("GrandTotal",getObject("BasketBO:GrandTotalGross")),
new TagParameter("ItemCount",getObject("BasketBO:ProductLineItemsCount")),
new TagParameter("DisplayApprover",getObject("DisplayApprover")),
new TagParameter("PurchaserLastName",getObject("PurchaserLastName"))}, 152); 
 {Object temp_obj = (getObject("null")); getPipelineDictionary().put("ApprovalItemNumber", temp_obj);} 
 {Object temp_obj = (getObject("null")); getPipelineDictionary().put("PurchaserFirstName", temp_obj);} 
 {Object temp_obj = (getObject("null")); getPipelineDictionary().put("PurchaserLastName", temp_obj);} 
 {Object temp_obj = (getObject("null")); getPipelineDictionary().put("OrderApproval", temp_obj);} 
 {Object temp_obj = (getObject("null")); getPipelineDictionary().put("ApproverFirstName", temp_obj);} 
 {Object temp_obj = (getObject("null")); getPipelineDictionary().put("ApproverLastName", temp_obj);} 
 {Object temp_obj = (getObject("null")); getPipelineDictionary().put("ApprovalDate", temp_obj);} 
 {Object temp_obj = (getObject("null")); getPipelineDictionary().put("RecurringBasket", temp_obj);} 
 } 
 } 
      out.write("</tbody>\n</table>\n</div>");
 _boolean_result=false;try {_boolean_result=((Boolean)((( ((Number) getObject("ListNavigationVO:PageCount")).doubleValue() >((Number)(new Double(1))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",186,e);}if (_boolean_result) { 
      out.write("<div class=\"row\">\n<div class=\"pagination clearfix col-xs-10\">");
 processOpenTag(response, pageContext, "mappagination", new TagParameter[] {
new TagParameter("pipeline",getObject("ListNavigationVO:HandlerPipeline")),
new TagParameter("pagecount",getObject("ListNavigationVO:PageCount")),
new TagParameter("itemcount",getObject("ListNavigationVO:ElementCount")),
new TagParameter("currentpage",getObject("ListNavigationVO:CurrentPage")),
new TagParameter("params",getObject("ListNavigationVO:GenericHandlerPipelineParams"))}, 189); 
      out.write("</div>\n</div>");
 } 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
