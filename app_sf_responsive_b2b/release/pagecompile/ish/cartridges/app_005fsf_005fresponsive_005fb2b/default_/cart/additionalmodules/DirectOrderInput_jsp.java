/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-16 22:40:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.app_005fsf_005fresponsive_005fb2b.default_.cart.additionalmodules;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class DirectOrderInput_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
response.setHeader(TemplateConstants.PERSONALIZED_HEADER, "1");setEncodingType("text/html"); 
 {try{executePipeline("ViewCart-GetApplicationBasketMaxItemQuantity",java.util.Collections.emptyMap(),"dict");}catch(Exception e){Logger.error(this,"ISPIPELINE failed. Line: 4.",e);}} 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((disableErrorMessages().isDefined(getObject("dict:BasketMaxItemQuantity"))))).booleanValue() && ((Boolean) ((( ((Number) getObject("dict:BasketMaxItemQuantity")).doubleValue() >((Number)(new Double(0))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",5,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("dict:BasketMaxItemQuantity")); getPipelineDictionary().put("maxQuantity", temp_obj);} 
 } else { 
 {Object temp_obj = ("9999999999"); getPipelineDictionary().put("maxQuantity", temp_obj);} 
 } 
      out.write("<input type=\"hidden\" id=\"data-checkSKU-URL\" target-url=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewQuickorder-GetProductAvailabilityStatus",null)))),null));
      out.write("\" />\n<div class=\"section list-body quick-order-rows-container\">\n<h3>");
 {out.write(localizeISText("shopping_cart.direct_order.heading","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</h3>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ERROR_DirectOrderInput"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",17,e);}if (_boolean_result) { 
      out.write("<div class=\"alert alert-danger\">");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((!((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_NoQuantity")))).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_NoSKU")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",21,e);}if (_boolean_result) { 
 {out.write(localizeISText("shopping_cart.direct_order.error.quantitywithoutsku","",null,null,null,null,null,null,null,null,null,null,null));} 
 {Object temp_obj = ("true"); getPipelineDictionary().put("UseNewLine", temp_obj);} 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(((!((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_NoSKU")))).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_NoQuantity")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",24,e);}if (_boolean_result) { 
 {out.write(localizeISText("shopping_cart.direct_order.error.skuwithoutquantity","",null,null,null,null,null,null,null,null,null,null,null));} 
 {Object temp_obj = ("true"); getPipelineDictionary().put("UseNewLine", temp_obj);} 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_NoQuantity")))).booleanValue() && ((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_NoSKU")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",27,e);}if (_boolean_result) { 
 {out.write(localizeISText("shopping_cart.direct_order.error.noquantitynosku","",null,null,null,null,null,null,null,null,null,null,null));} 
 }}} 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ERROR_InvalidQuantity"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",31,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("UseNewLine"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",32,e);}if (_boolean_result) { 
      out.write("<br />");
 } 
 {out.write(localizeISText("shopping_cart.direct_order.error.invalidquantity","",null,null,null,null,null,null,null,null,null,null,null));} 
 {Object temp_obj = ("true"); getPipelineDictionary().put("UseNewLine", temp_obj);} 
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ERROR_ProductNotFound"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",36,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("UseNewLine"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",37,e);}if (_boolean_result) { 
      out.write("<br />");
 } 
 {out.write(localizeISText("shopping_cart.direct_order.error.productnotfound","",null,null,null,null,null,null,null,null,null,null,null));} 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ERROR_NeeedsQuotation"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",39,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("UseNewLine"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",40,e);}if (_boolean_result) { 
      out.write("<br />");
 } 
 {out.write(localizeISText("shopping_cart.direct_order.error.needsquotation","",null,null,null,null,null,null,null,null,null,null,null));} 
 }} 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ERROR_DirectOrderInput"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",44,e);}if (_boolean_result) { 
      out.write("</div>");
 } 
      out.write("<div class=\"list-item-row\">\n<div class=\"col-sm-6 search-container list-item\">\n<div class=\"form-group\">\n<label class=\"sr-only\" for=\"productSKU\">!!!!</label>\n<div class=\"quickorder-search-container\">\n<input id=\"productSKU\" \nclass=\"form-control search-productId\" \nautocomplete=\"off\" \ntype=\"text\" \nmaxlength=\"128\" \nname=\"SKU\"\nsize=\"30\"\nplaceholder=\"");
 {out.write(localizeISText("shopping_cart.direct_order.item_placeholder","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write('"');
      out.write(' ');
      out.write('\n');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("SKU")))).booleanValue() && ((Boolean) (((((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_NoQuantity")))).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_InvalidQuantity")))).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_NoSKU")))).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_ProductNotFound")))).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_NeeedsQuotation")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",63,e);}if (_boolean_result) { 
      out.write("value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("SKU"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {63}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
 } 
      out.write(" \ndata-suggestURL=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewSuggestSearch-SuggestSKU",null))),(new URLParameterSet().addURLParameter(context.getFormattedValue("MaxAutoSuggestResults",null),context.getFormattedValue("10",null)))),null));
      out.write("\"\n/>\n<ul class=\"search-suggest-results\"></ul>\n<small class=\"help-block\" id=\"availability-SKU\"> </small>\n</div> \n</div>\n</div>\n<div class=\"col-sm-3 list-item\">\n<div class=\"form-group\">\n<label class=\"sr-only\" for=\"itemQuantity\">!!!!</label>\n<input id=\"itemQuantity\" \nclass=\"form-control quantity\"\ntype=\"number\"\nmin=\"1\"\nmax=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("maxQuantity"),"0",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {78}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nstep=\"1\" \nname=\"Quantity\"\nplaceholder=\"");
 {out.write(localizeISText("product.quantity.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\"\nvalue=\"");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ERROR_NoQuantity"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",82,e);}if (_boolean_result) { 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_InvalidQuantity")))).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_NoSKU")))).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_ProductNotFound")))).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_NeeedsQuotation")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",82,e);}if (_boolean_result) { 
 {String value = null;try{value=context.getFormattedValue(getObject("Quantity"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {82}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } else { 
      out.write('1');
 }} 
      out.write("\" \n/>\n</div>\n</div>\n<div class=\"col-sm-3 list-item\">\n<button type=\"submit\" class=\"btn btn-default js-quickorder-productvalidation\" name=\"directOrderAddProduct\">");
 {out.write(localizeISText("shopping_cart.direct_order.apply.button.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</button>\n</div>\n</div>\n<a class=\"btn btn-link\" name=\"quickOrderAddButton\" href=\"");
      out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ViewQuickorder-Start",null)))),null));
      out.write('"');
      out.write('>');
 {out.write(localizeISText("shopping_cart.direct_order.link.multipleItems","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a>\n</div>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_NoSKU")))).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_ProductNotFound")))).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_NeeedsQuotation")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",94,e);}if (_boolean_result) { 
      out.write("<script type=\"text/javascript\">\nsetTimeout(function(){\n$('.search-productId').closest('.form-group').addClass('has-error');\n}, 100);\n</script>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_NoQuantity")))).booleanValue() || ((Boolean) (disableErrorMessages().isDefined(getObject("ERROR_InvalidQuantity")))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",102,e);}if (_boolean_result) { 
      out.write("<script type=\"text/javascript\">\nsetTimeout(function(){\n$(\"");
      out.print(context.getFormattedValue("#",null));
      out.write("itemQuantity\").closest('.form-group').addClass('has-error');\n}, 100);\n</script>");
 } 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
