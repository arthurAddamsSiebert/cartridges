/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-07 18:11:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.pf_005faxis2.default_;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;
import org.apache.axis2.Constants;
import org.apache.axis2.description.AxisOperation;
import org.apache.axis2.description.AxisService;
import java.util.Hashtable;
import java.util.Iterator;

public final class listFaultyService_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
      out.write("\n\n\n\n\n\n<html>\n<head>");
 insertIntershopSignature(request,(com.intershop.beehive.core.capi.request.ServletResponse)response); 
      out.write("<title>");
 {out.write(localizeISText("templates.listFaultyService.ListSingleService.title","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</title>\n</head>\n<body>\n");

            String isFault = (String)request.getSession().getAttribute(Constants.IS_FAULTY);
            String servicName = request.getParameter("serviceName");
            if(Constants.IS_FAULTY.equals(isFault)){
                Hashtable errornessservices =(Hashtable)request.getSession().getAttribute(Constants.ERROR_SERVICE_MAP);
                
      out.write("\n                    <h3>");
 {out.write(localizeISText("templates.listFaultyService.ThisWebAxisServiceHasDeploymentFaults","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</h3>");

                     
      out.write("<font color=\"red\" >");
      out.print((String)errornessservices.get(servicName) );
      out.write("</font>\n                ");


                    }else {

                    AxisService axisService =
                            (AxisService) request.getSession().getAttribute(Constants.SINGLE_SERVICE);
                    if(axisService!=null){
           Iterator opItr = axisService.getOperations();
            //operationsList = operations.values();
          String  serviceName = axisService.getName();
            
      out.write("<h2><font color=\"blue\"><a href=\"");
      out.print(axisService.getName());
      out.write("?wsdl\">");
      out.print(serviceName);
      out.write("</a></font></h2>\n           <font color=\"blue\">");
 {out.write(localizeISText("templates.listFaultyService.ServiceEPR","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(" </font><font color=\"black\">");
      out.print(axisService.getName());
      out.write("</font><br>\n           <h4>");
 {out.write(localizeISText("templates.listFaultyService.ServiceDescription","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(" <font color=\"black\">");
      out.print(axisService.getDocumentation());
      out.write("</font></h4>\n           <i><font color=\"blue\">");
 {out.write(localizeISText("templates.listFaultyService.ServiceStatus","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(' ');
      out.print(axisService.isActive()?"Active":"InActive");
      out.write("</font></i><br>\n           ");

            if (opItr.hasNext()) {
                
      out.write('<');
      out.write('i');
      out.write('>');
 {out.write(localizeISText("templates.listFaultyService.AvailableOperations","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</i>");

            } else {
                
      out.write("<i> ");
 {out.write(localizeISText("templates.listFaultyService.ThereAreNoOperationsSpecified","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</i>");

            }
               opItr = axisService.getOperations();
           
      out.write("<ul>");

            while (opItr.hasNext()) {
                AxisOperation axisOperation = (AxisOperation) opItr.next();
                
      out.write("<li>");
      out.print(axisOperation.getName().getLocalPart());
      out.write("</li>\n                ");

            }
           
      out.write("</ul>\n           ");

                    } else{
                           
      out.write("\n                <h3><font color=\"red\" >");
 {out.write(localizeISText("templates.listFaultyService.NoServicesFoundInThisLocation","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</font></h3>\n ");

                    }

            }
        
      out.write("\n</body>\n</html>\n");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
