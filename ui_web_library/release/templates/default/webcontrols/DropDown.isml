<!---isnoloc--->
<isplacement placeholderid="CSSWebLibraries">jquery-ui-1.10.3/jquery-ui.css</isplacement>
<isplacement placeholderid="CSSWebLibraries">jquery-ui-1.10.3/themes/base/jquery.ui.theme.css</isplacement>
<isplacement placeholderid="CSSWebLibraries">jquery-ui-1.10.3/themes/backoffice/jquery.ui.theme.css</isplacement>
<isplacement placeholderid="CSSWebLibraries">jquery/dropdown/jquery.dropdown.css</isplacement>

<isplacement placeholderid="JSWebLibraries">jquery.js</isplacement>
<isplacement placeholderid="JSWebLibraries">jquery-migrate-1.2.1.js</isplacement>
<isplacement placeholderid="JSWebLibraries">jquery-ui-1.10.3.js</isplacement>
<isplacement placeholderid="JSWebLibraries">jquery/dropdown/jquery.dropdown.js</isplacement>

<isif condition="#isDefined(filter) AND (filter EQ 'search')#">
	<isplacement placeholderid="CSSWebLibraries">jquery/dropdown/jquery.dropdown.filter.css</isplacement>
	<isplacement placeholderid="JSWebLibraries">jquery/dropdown/jquery.dropdown.filter.js</isplacement>
<iselseif condition="#isDefined(filter) AND (filter EQ 'toggle')#">
	<isplacement placeholderid="CSSWebLibraries">jquery/dropdown/jquery.dropdown.toggle.css</isplacement>
	<isplacement placeholderid="JSWebLibraries">jquery/dropdown/jquery.dropdown.toggle.js</isplacement>
</isif>

<isset scope="request" name="selector" value="#'#'.id#">

<isplacement placeholderid="JSWebControls">
	$("<isprint encoding="javascript" value="#selector#">").dropdown({
		<isif condition="#isDefined(autoopen) AND (autoopen EQ 'true')#">
			autoOpen: true
		<iselse>
			autoOpen: false
		</isif>
		<isif condition="#isDefined(checkalltext)#">
			,
			checkAllText: "<isprint encoding="javascript" value="#checkalltext#">"
		</isif>
		<isif condition="#isDefined(classes)#">
			,
			<isif condition="#isDefined(multiple) AND (multiple EQ 'true')#">
				<isif condition="#isDefined(filter) AND (filter EQ 'search')#">
					<isset name="multifilterclasses" value=" ui-dropdown-multisearch" scope="request"/>
				<iselseif condition="#isDefined(filter) AND (filter EQ 'toggle')#"/>
					<isset name="multifilterclasses" value=" ui-dropdown-multitoggle" scope="request"/>
				</isif>
			</isif>
			classes: "<isprint encoding="javascript" value="#classes#"><isprint encoding="javascript" value="#multifilterclasses#"/>"
		</isif>
		<isif condition="#isDefined(filter) AND NOT(filter EQ "none")#">
			,
			header: true
		<iselse>
			,
			header: false
		</isif>
		<isif condition="#isDefined(height)#">
			,
			height: <isprint encoding="javascript" value="#height#">
		</isif>
		<isif condition="#isDefined(hide)#">
			,
			hide: "<isprint encoding="javascript" value="#hide#">"
		</isif>
		<isif condition="#isDefined(minwidth)#">
			,
			minWidth: <isprint encoding="javascript" value="#minwidth#">
		</isif>
		<isif condition="#isDefined(multiple) AND (multiple EQ 'true')#">
			,
			multiple: true
		<iselse>
			,
			multiple: false
		</isif>

       	,
       	checkAllText: '<isprint encoding="javascript" value="#localizeText('webcontrols.DropDown.CheckAll')#"/>'
       	,
       	uncheckAllText: '<isprint encoding="javascript" value="#localizeText('webcontrols.DropDown.UncheckAll')#"/>'
       	,
        selectedText: '<isprint encoding="javascript" value="#localizeText('webcontrols.DropDown.Selected')#"/>'

		<isif condition="#isDefined(noneselectedtext)#">
			,
			noneSelectedText: '<isprint encoding="javascript" value="#noneselectedtext#">'
		<iselse>
			,
		    noneSelectedText: '<isprint encoding="javascript" value="#localizeText('webcontrols.DropDown.SelectOptions')#"/>'
		</isif>
		<isif condition="#isDefined(position) AND (position EQ 'above')#">
			,
			position: {
				my: "left bottom",
				at: "left top",
				<isif condition="#isDefined(collision)#">
					collision: "<isprint encoding="javascript" value="#collision#">"
				<iselse>
					collision: "flip"
				</isif>
			}
		<iselseif condition="#isDefined(position) AND (position EQ 'centered')#">
			,
			position: {
				my: "center",
				at: "center",
				<isif condition="#isDefined(collision)#">
					collision: "<isprint encoding="javascript" value="#collision#">"
				<iselse>
					collision: "flip"
				</isif>
			}
		<iselseif condition="#isDefined(position) AND (position EQ 'below')#">
			,
			position: {
				my: "left top",
				at: "left bottom",
				<isif condition="#isDefined(collision)#">
					collision: "<isprint encoding="javascript" value="#collision#">"
				<iselse>
					collision: "flip"
				</isif>
			}
		</isif>
		<isif condition="#isDefined(selectedlist)#">
			,
			selectedList: <isprint encoding="javascript" value="#selectedlist#">
		<iselse>
			,
			selectedList: 0
		</isif>
		<isif condition="#isDefined(selectedtext)#">
			,
			selectedText: "<isprint encoding="javascript" value="#selectedtext#">"
		</isif>
		<isif condition="#isDefined(show)#">
			,
			show: "<isprint encoding="javascript" value="#show#">"
		</isif>
		<isif condition="#isDefined(uncheckalltext)#">
			,
			uncheckAllText: "<isprint encoding="javascript" value="#uncheckalltext#">"
		</isif>
	})
<isif condition="#isDefined(filter) AND (filter EQ 'search')#">
	.dropdownfilter({
		<isif condition="#isDefined(filterautoreset) AND (filterautoreset EQ 'true')#">
			autoReset: true
		<iselse>
			autoReset: false
		</isif>
		<isif condition="#isDefined(filterlabel)#">
			,
			label: "<isprint encoding="javascript" value="#filterlabel#">"
		</isif>
		<isif condition="#isDefined(filterplaceholder)#">
			,
			placeholder: "<isprint encoding="javascript" value="#filterplaceholder#">"
		</isif>
	})
<iselseif condition="#isDefined(filter) AND (filter EQ 'toggle')#">
	.dropdowntoggle({
		<isif condition="#isDefined(filterautoreset) AND (filterautoreset EQ 'true')#">
			autoReset: true
		<iselse>
			autoReset: false
		</isif>
		<isif condition="#isDefined(filterlabel)#">
			,
			label: "<isprint encoding="javascript" value="#filterlabel#">"
		</isif>
		<isif condition="#isDefined(filteroncreate) AND (filteroncreate EQ 'false')#">
			,
			filterOnCreate: false
		<iselse>
			,
			filterOnCreate: true
		</isif>
		<isif condition="#isDefined(togglename)#">
			,
			toggleName: "<isprint encoding="javascript" value="#togglename#">"
		</isif>
	})
</isif>
;
</isplacement>

<isif condition="#isDefined(uitemplate)#">
	<isinclude template="#uitemplate#">
</isif>

<isif condition="#isDefined(scripttemplate)#">
	<isinclude template="#scripttemplate#">
</isif>
<!---/isnoloc--->