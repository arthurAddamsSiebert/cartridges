<?xml version="1.0" encoding="UTF-8"?>
<query>
<parameters>
	<parameter name="ProductDomain" type="com.intershop.beehive.core.capi.domain.Domain" optional="false"/>
	<parameter name="LocaleInformation" type="com.intershop.beehive.core.capi.localization.LocaleInformation" optional="false"/>
	<parameter name="NameOrID" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
	<parameter name="SortDirection" type="java.lang.String" optional="true"/>
	<parameter name="SortBy" type="java.lang.String" optional="true"/>
	<parameter name="Filters" type="java.util.Iterator" optional="true"/>
	<parameter name="Currency" type="java.lang.String" optional="true"/>
	<parameter name="CatalogCategory" type="com.intershop.beehive.xcs.capi.catalog.CatalogCategory" optional="true" description="A catalog category to restrict the search for."/>
</parameters>
<return-mappings>
	<return-mapping name="ProductBO" type="bo-provider" class="ProductViewProvider" mapperclass="ProductPOToProductBOMapper">
		<return-attribute name="UUID"/>
    	<return-attribute name="DOMAINID"/>
	</return-mapping>
</return-mappings>
<processor name="OracleSQL">
</processor>
<template type="countedobjects">
	SELECT
	    uuid,
	    <template-variable value="ProductDomain:UUID"/> AS DOMAINID,
	    COUNT(p.UUID) OVER() AS "ROWCOUNT",
	    sorting
	FROM
	(
	<template-call name="product/GetProductsByAdvancedSearch">
		<call-parameter name="ProductDomain" value="ProductDomain" />
		<call-parameter name="LocaleInformation" value="LocaleInformation" />
		<call-parameter name="NameOrID" value="NameOrID" />
		<call-parameter name="SortAttribute" value="SortBy" />
		<call-parameter name="Currency" value="Currency" />
		<call-parameter name="Filters" value="Filters" />
		<call-parameter name="CatalogCategory" value="CatalogCategory" />
	</template-call>
	) p
	
	<template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ &apos;D&apos;">
	<sql-dialect name="Oracle">
	   ORDER BY SORTING  DESC NULLS FIRST
	</sql-dialect>
	<sql-dialect name="Microsoft">
	    ORDER BY
	    CASE
	    	WHEN sorting is null THEN 1
	    	ELSE 0
	    END
	</sql-dialect>	
		    <if-else/>
			<sql-dialect name="Oracle">
	  ORDER BY SORTING ASC NULLS LAST
	</sql-dialect>
	<sql-dialect name="Microsoft">
	ORDER BY SORTING ASC 
	</sql-dialect>	
	
		    
	</template-if>
</template>
</query>
