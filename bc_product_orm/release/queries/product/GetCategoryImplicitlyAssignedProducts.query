<?xml version="1.0" encoding="UTF-8"?>
<query>
<parameters>
    <parameter name="ProductDomain" type="com.intershop.beehive.core.capi.domain.Domain" optional="false"/>
    <parameter name="LocaleInformation" type="com.intershop.beehive.core.capi.localization.LocaleInformation" optional="true"/>
    <parameter name="Online" type="java.lang.Integer" optional="true"/>
    <parameter name="CatalogCategory" type="com.intershop.beehive.xcs.capi.catalog.CatalogCategory" optional="false"/>
    <parameter name="SortAttribute" type="java.lang.String" optional="true"/>
    <parameter name="SortDirection" type="java.lang.String" optional="true"/>
    <parameter name="SortAttributeType" type="java.lang.String" optional="true"/>
    <parameter name="SortAttributeLocalizedFlag" type="java.lang.Integer" optional="true"/>
    <parameter name="Currency" type="java.lang.String" optional="true"/>
    <parameter name="Filters" type="java.util.Iterator" optional="true"/>
    <parameter name="NameOrID" type="com.intershop.component.foundation.capi.search.SearchExpression" optional="true"/>
    <parameter name="IgnorePosition" type="java.lang.Boolean" optional="true" description="Indicates whether assigned products should be sorted by their category position"/>
</parameters>
<return-mappings>
    <return-mapping name="ProductBO" type="bo-provider" class="ProductViewProvider" mapperclass="ProductPOToProductBOMapper">
        <return-attribute name="UUID"/>
        <return-attribute name="DOMAINID"/>
    </return-mapping>
</return-mappings>
<processor name="OracleSQL">
	<processor-preprocessing output="Sharing" input="ProductDomain" processing="ProductSharingHelper"/>
</processor>
<template type="countedobjects">
	<sql-dialect name="Microsoft">
		WITH ipcas AS (
			SELECT /*+ inline - to avoid massive not released temporary tablespace data */
		        ipca.categoryid,
		        ipca.productid,
		        ipca.productdomainid,
		        ipca.productbindingattribute,
		        ipca.position as position
		    FROM
		        iproductcategoryassignment ipca
		WHERE EXISTS
		    (SELECT cat_data.*, d.siteid as site_id, sqd.domainid as sqd_domain_UUID
		     FROM (SELECT cat_dom.*, r.repositorydomainid AS repo_domain_uuid, r.domainid AS org_domain_uuid
		        FROM (
		          SELECT cc.uuid AS category_uuid, cc.searchquerydefinitionname as sqd_name, c.domainid AS catalog_domain_uuid
		          FROM catalogcategory cc, catalog c
		          WHERE cc.domainid = c.catalogdomainid
		          AND cc.searchquerydefinitionname IS NOT NULL) cat_dom
		       JOIN repository r
		          ON r.repositorydomainid = cat_dom.catalog_domain_uuid
		            OR (r.typecode = 21 AND r.domainid = cat_dom.catalog_domain_uuid )
		      ) cat_data
		     JOIN domain d
		        ON repo_domain_uuid = d.uuid
		     JOIN SearchQueryDefinition sqd
		        ON sqd.name = sqd_name
		          AND (
		           sqd.domainid = d.siteid
		              OR
		           sqd.domainid IN (SELECT d.siteid FROM domain d WHERE d.uuid = org_domain_uuid)
		          )
		     WHERE ipca.categoryid = category_uuid
		        AND ipca.productdomainid = repo_domain_uuid
		    )
		)
		<template-if condition="Sharing:Enabled">
		, c_pcas AS (
			    SELECT /*+ inline - to avoid massive not released temporary tablespace data */ *
			    FROM
			        ipcas
			    WHERE
			        categoryid = <template-variable value="CatalogCategory:UUID"/>
			    AND
			        productdomainid = <template-variable value="ProductDomain:UUID"/>
			)
		</template-if>
	</sql-dialect>
	
    SELECT
        p.uuid AS UUID, 
        <template-variable value="ProductDomain:UUID"/> as DOMAINID, 
        count(*) over() as "ROWCOUNT",
        p.sorting AS SORTING
    FROM 
    (
        <template-call name="product/GetProductsByAdvancedSearch">
            <call-parameter name="ProductDomain" value="ProductDomain"/>
            <call-parameter name="LocaleInformation" value="LocaleInformation"/>
            <call-parameter name="NameOrID"  value="NameOrID"/>
            <call-parameter name="Online" value="Online"/>
            <call-parameter name="Currency" value="Currency"/>
            <call-parameter name="SortAttribute" value="SortAttribute"/>
            <call-parameter name="SortAttributeType" value="SortAttributeType"/>
            <call-parameter name="SortAttributeLocalizedFlag" value="SortAttributeLocalizedFlag"/>
            <call-parameter name="Filters" value="Filters"/>
        </template-call>
    ) p
    JOIN
    (
		<sql-dialect name="Oracle">
			<template-call name="product/GetImplicitProductCategoryAssignmentsByCategoryID">
				<call-parameter name="ProductDomain" value="ProductDomain"/>
				<call-parameter name="CatalogCategory" value="CatalogCategory"/>
			</template-call>
		</sql-dialect>
		<sql-dialect name="Microsoft">
			<template-if condition="Sharing:Enabled">
				SELECT * FROM c_pcas
				UNION ALL
				SELECT *
				FROM
				    ipcas
				WHERE
				    ipcas.categoryid = <template-variable value="CatalogCategory:UUID"/>
				AND
					ipcas.productdomainid IN (
					    SELECT ps.domainid
					    FROM
					        productsetdomainassignment psda
					    JOIN
					        productset ps ON (ps.uuid = psda.productsetuuid)
					    WHERE
					        psda.domainid = <template-variable value="ProductDomain:UUID"/>
					)
				AND
				    NOT EXISTS (
				        SELECT 1
				        FROM c_pcas
				        WHERE c_pcas.categoryid = <template-variable value="CatalogCategory:UUID"/>
				        AND c_pcas.productdomainid = <template-variable value="ProductDomain:UUID"/>
				        AND c_pcas.productid=ipcas.productid
				    )
				<if-else/>
					SELECT *
					FROM
					    ipcas
					WHERE
					    categoryid = <template-variable value="CatalogCategory:UUID"/>
					AND
					    productdomainid = <template-variable value="ProductDomain:UUID"/>
			</template-if>
		</sql-dialect>
    ) pca ON (p.uuid = pca.productid)
    ORDER BY
    <template-if condition="(NOT isDefined(IgnorePosition) OR NOT IgnorePosition)">
    	CASE WHEN pca.position IS NULL THEN 0 ELSE 1 END DESC, pca.position asc,
    </template-if>
    CASE WHEN SORTING IS NULL THEN 0 ELSE 1 END DESC, SORTING 
    <template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ &apos;D&apos;">
        DESC
    <if-else/>
        ASC
    </template-if>
    , p.uuid
    <template-if condition="isDefined(SortDirection) AND ucase(pad(SortDirection,1)) EQ &apos;D&apos;">
        DESC
    <if-else/>
        ASC
    </template-if>
</template>
</query>