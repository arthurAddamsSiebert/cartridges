import "enfinity:/btc/edl/com/intershop/beehive/btc/internal/tax/BasicTaxClassPO.edl";
import "enfinity:/btc/edl/com/intershop/beehive/btc/internal/tax/TaxJurisdictionPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

external TaxRateConstants type "com.intershop.beehive.btc.internal.tax.TaxRateConstants";

namespace com.intershop.beehive.btc.internal.tax
{
    /*
     * Represents a tax rate for a TaxClass and TaxJurisdiction.<br>
     * 
     * @see com.intershop.beehive.bts.service.tax.TaxClass
     * @see com.intershop.beehive.bts.service.tax.TaxJurisdiction
     */
    oca timestamp orm class TaxRatePO implements TaxRateConstants
    {
        primary key(taxClassID, taxJurisdictionID);

        index(taxClassID);

        index(taxJurisdictionID);

        /*
         * The tax rate (percent). Null values not allowed
         */
        attribute rate : decimal required;

        /*
         * The tax rate until the current rate became valid
         */
        attribute previousRate : decimal;

        /*
         * The date when the "current rate" becomes valid.
         */
        attribute validFrom : datetime;

        /*
         * The UUID of the TaxClass the TaxRate is assigned to.
         */
        attribute taxClassID : uuid required;

        /*
         * The UUID of the TaxJurisdiction the TaxRate is assigned to.
         */
        attribute taxJurisdictionID : uuid required;

        dependency taxJurisdiction : TaxJurisdictionPO
        {
            foreign key(taxJurisdictionID);
        }

        dependency taxClass : BasicTaxClassPO
        {
            foreign key(taxClassID);
        }
    }
}
