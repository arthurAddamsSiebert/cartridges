import "enfinity:/btc/edl/com/intershop/beehive/btc/internal/tax/TaxJurisdictionConfigPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObjectPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.beehive.btc.internal.tax
{
    /*
     * TaxJurisdiction represents a jurisdiction into which a buyer falls.<br>
     * A Tax service is responsible for providing the tax jurisdictions it recognizes, which are assigned to buyers during registration process.<br>
     * The TaxJurisdiction is used by the tax service to calculate the appropriate tax amount for a product / service.
     * 
     * @see com.intershop.beehive.bts.service.tax.ITaxService
     */
    orm class TaxJurisdictionPO extends ExtensibleObjectPO
    {
        index(configurationID);

        index(code);

        /*
         * The name of the TaxJurisdiction.
         */
        attribute name : string<256>;

        /*
         * The code of the TaxJurisdiction.<br>
         * Note: The code is unique.
         */
        attribute code : string<256> required searchable;

        /*
         * The UUID of the BasicTaxServiceConfig the TaxJurisdiction is assigned to.
         */
        attribute configurationID : uuid;

        relation configuration : TaxJurisdictionConfigPO[1..1] inverse taxJurisdictions
        {
            foreign key(configurationID) -> (UUID);
        }
    }
}
