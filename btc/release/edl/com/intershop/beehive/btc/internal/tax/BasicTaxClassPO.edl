import "enfinity:/btc/edl/com/intershop/beehive/btc/internal/tax/BasicTaxClassConfigPO.edl";
import "enfinity:/bts/edl/com/intershop/beehive/bts/capi/tax/TaxClass.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObjectPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.beehive.btc.internal.tax
{
    /*
     * A TaxClass represents a tax class into which a product or service falls.<br>
     * A tax service is responsible for providing the tax classes it recognizes, which are assigned to products / services by the Seller.<br>
     * The TaxClass is used by the tax service to calculate the appropriate tax amount for the product / service.
     * 
     * @see com.intershop.beehive.bts.service.tax.ITaxService
     */
    orm class BasicTaxClassPO extends ExtensibleObjectPO implements TaxClass
    {
        index(configurationID);

        index(taxCode);

        /*
         * The taxcode of the TaxClass.<br>
         * 
         * Note: The taxcode is a unique identifier for the TaxClass. This is the identifier that is used (similar to a product reference) to identify a tax class asignment between the catalog and transaction servers.
         */
        attribute taxCode : string<256> required searchable;

        /*
         * The name of the TaxClass.
         */
        attribute name : string<256>;

        /*
         * The description of the TaxClass.
         */
        attribute description : string<256>;

        /*
         * The UUID of the BasicTaxServiceConfig the TaxClass is assigned to.
         */
        attribute configurationID : uuid;

        relation configuration : BasicTaxClassConfigPO[1..1] inverse taxClasses
        {
            foreign key(configurationID) -> (UUID);
        }
    }
}
