/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-07 18:11:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.core.default_;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;
import com.intershop.beehive.core.capi.request.Request;
import com.intershop.beehive.core.capi.log.Logger;
import com.intershop.beehive.core.capi.log.LogScope;
import com.intershop.beehive.core.internal.webservice.WebServiceMgrImpl;
import com.intershop.beehive.core.internal.webservice.WebServiceMgr;
import com.intershop.beehive.core.internal.webservice.WebServiceRequestWrapper;
import com.intershop.beehive.core.internal.webservice.WebServiceServlet;
import com.intershop.beehive.core.internal.webservice.configuration.WebServiceEngineConfiguration;
import org.apache.axis.AxisEngine;
import org.apache.axis.description.OperationDesc;
import org.apache.axis.description.ServiceDesc;
import java.util.Iterator;
import java.util.ArrayList;
import java.io.IOException;

public final class WebServiceList_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {


	/**
	 * This template is included from the WebService servlet to display a list 
	 * of available webservices for a domain.
	 */
	 
	public String getBaseURL(HttpServletRequest request)
	{
		String baseURL = null;
		
		String scheme = request.getScheme();
		String host = request.getServerName();
		int port = request.getServerPort();
		String uri = request.getRequestURI();
		String serverPort = null;
		if (("http".equals(scheme) && (port == 80)) ||
				("https".equals(scheme) && (port == 443)))
		{
				serverPort = "";
		}
		else
		{
				serverPort = ":" + port;
		}
		
		if (host.endsWith(serverPort))
		{
				baseURL = scheme + "://" + host + uri + "/";
		}
		else 
		{
				baseURL = scheme + "://" + host + serverPort + uri + "/";
		}

		return baseURL; 
	}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
      out.write('\n');
      out.write('\n');
      out.write("\n\n<html>\n\t<head>");
 insertIntershopSignature(request,(com.intershop.beehive.core.capi.request.ServletResponse)response); 
      out.write("\n\t\t<title>");
 {out.write(localizeISText("templates.WebServiceList.Intershop7WebServices.title","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</title>\n\t</head>\n\t<body>\n\t\t<h2>");
 {out.write(localizeISText("templates.WebServiceList.Intershop7WebServices","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</h2>\n\n");

    WebServiceRequestWrapper requestWrapper = WebServiceServlet.getCurrentRequest();
    
    String baseURL = getBaseURL(requestWrapper);
    String domainName = requestWrapper.getDomainName();
    
    // get iterator of deployed services
    Iterator it = null; 
        
    try
    {
        WebServiceMgr webServiceMgr = WebServiceMgrImpl.getInstance(); 
        WebServiceEngineConfiguration engConf = webServiceMgr.getEngineConfiguration(); 
        if (engConf != null)
        {
            it = engConf.getDeployedServices(domainName); 
        }
    }
    catch (Exception ex)
    {
        Logger.log(LogScope.ERROR, "webservice", this, "ISH-CORE-1574", "Couldn't get list of deployed web services.");
            
        Logger.log(LogScope.ERROR, "webservice", this, "ISH-CORE-1575", ex);
    }
    
    if (it != null && it.hasNext()) 
    {

      out.write("\n    \n");
 {out.write(localizeISText("templates.WebServiceList.AvailableWebServicesForTheDomain","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(' ');
      out.print( domainName );
      out.write(":<br>\n\n<ul>\n");

        while (it.hasNext())
        {
            ServiceDesc sd = (ServiceDesc) it.next();

      out.write("\n    <li>");
      out.print( sd.getName() );
      out.write(" <a href=\"");
      out.print( baseURL );
      out.print( sd.getName() );
      out.write("?WSDL\"><i>");
 {out.write(localizeISText("templates.WebServiceList.WSDL","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</i></a></li>\n\n");
    
            ArrayList operations = sd.getOperations();
            if (!operations.isEmpty())
            {

      out.write("        \n    <ul>\n");

                for (int i = 0; i < operations.size(); i++)
                {
                    OperationDesc desc = (OperationDesc) operations.get(i);

      out.write("\n        <li>");
      out.print( desc.getName() );
      out.write("</li>\n");

                }

      out.write("            \n    </ul>\n");

            }
        }

      out.write("\n</ul>\n");
        
    }
    else
    {

      out.write("    \n");
 {out.write(localizeISText("templates.WebServiceList.ThereAreNoWebServicesAvailable","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write('\n');

    }

      out.write("\n\n</body>\n</html>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
