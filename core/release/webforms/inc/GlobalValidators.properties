#Localizable properties associated with GlobalValidators.webform
#Thu Aug 01 16:31:34 EEST 2013
FormatterParameter.date.ignoreTimeZonePreference.description=There're two preferences for the timezone (and date format) one that could be set by the user itself and one that could be set to the application. If ticked this binding will force the date validation to be performed in system default timezone.
ValidatorParameter.bigdecimal.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.date.datePattern.description=Specifies a pattern different to the standard patterns (defined in the regional settings).
ValidatorParameter.date.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.dateafter.allowEqual.description=If set to true then the validator also accepts if both values are equal.
ValidatorParameter.dateafter.date.description=The name of the form parameter of the date to compare.
ValidatorParameter.dateafter.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.datemax.datePattern.description=Specifies a pattern different to the standard patterns (defined in the regional settings).
ValidatorParameter.datemax.maxDate.description=The maximum date.
ValidatorParameter.datemax.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.datemin.datePattern.description=Specifies a pattern different to the standard patterns (defined in the regional settings).
ValidatorParameter.datemin.minDate.description=The minimum date.
ValidatorParameter.datemin.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.daterange.maxDate.description=The date of the range maximum.
ValidatorParameter.daterange.maxHour.description=The hours of the range maximum.
ValidatorParameter.daterange.maxMinute.description=The minutes of the range maximum.
ValidatorParameter.daterange.maxMonth.description=The months of the range maximum.
ValidatorParameter.daterange.maxSecond.description=The seconds of the range maximum.
ValidatorParameter.daterange.maxYear.description=The year of the range maximum.
ValidatorParameter.daterange.minDate.description=The date of the range minimum.
ValidatorParameter.daterange.minHour.description=The hours of the range minimum.
ValidatorParameter.daterange.minMinute.description=The minutes of the range minimum.
ValidatorParameter.daterange.minMonth.description=The months of the range minimum.
ValidatorParameter.daterange.minSecond.description=The secands of the range minimum.
ValidatorParameter.daterange.minYear.description=The year of the range minimum.
ValidatorParameter.daterange.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.datetime.dateTimePattern.description=Specifies a pattern different to the standard patterns (defined in the regional settings).
ValidatorParameter.datetime.day.description=The name of the form field which contains the day part of the resulting date.
ValidatorParameter.datetime.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.datetime.time.description=The name of the form field which contains the time of the date.
ValidatorParameter.defaultvaluedefinition.value.description=The value to be set as default value, when the form field has a value which is null or an empty string or an empty collection.
ValidatorParameter.dependency.paramName.description=The name of the dependency parameter. 
ValidatorParameter.dependency.paramValue.description=The dependency parameter value.
ValidatorParameter.double.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.doublerange.max.description=The maximum of the range.
ValidatorParameter.doublerange.min.description=The minimum of the range.
ValidatorParameter.doublerange.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.email.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.float.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.floatrange.max.description=The maximum of the range.
ValidatorParameter.floatrange.min.description=The minimum of the range.
ValidatorParameter.floatrange.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.integer.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.intrange.max.description=The maximum of the range.
ValidatorParameter.intrange.min.description=The minimum of the range.
ValidatorParameter.intrange.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.long.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.longrange.max.description=The maximum of the range.
ValidatorParameter.longrange.min.description=The minimum of the range.
ValidatorParameter.longrange.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.maxlength.maxLength.description=The maximum length.
ValidatorParameter.maxlength.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.minlength.minLength.description=The minimum length.
ValidatorParameter.minlength.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.money.currency.description=The name of the form field which contains the currency of the money.
ValidatorParameter.money.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.money.value.description=The name of the form field which contains the amount of the money.
ValidatorParameter.moneyrange.currency.description=The name of the form field which contains the currency of the money.
ValidatorParameter.moneyrange.max.description=The maximum of the range.
ValidatorParameter.moneyrange.min.description=The minimum of the range.
ValidatorParameter.moneyrange.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.moneyrange.value.description=The name of the form field which contains the amount of the money.
ValidatorParameter.percentage.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.quantity.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.quantity.unit.description=The name of the form field which contains the unit of the quantity.
ValidatorParameter.quantity.value.description=The name of the form field which contains the amount of the quantity.
ValidatorParameter.regexp.regExp.description=The regular expression to check.
ValidatorParameter.regexp.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.short.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.string.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.stringcompare.StringToCompare.description=The name of the form parameter to compare with.
ValidatorParameter.stringcompare.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.urlstring.stopOnFailure.description=Controls whether the validation process stops if this validator fails. Possible values are true and false. If the parameter is not set, then the validation process stops on failure.
ValidatorParameter.xss.behavior.description=This property defines how the XSS protection should act. Its value may be either BLOCK, i.e. the form value gets rejected, or FILTER, i.e. the form value will be sanitized.
ValidatorParameter.xss.policy.description=This property becomes
ValidatorParameter.xss.policyFactoryClass.description=This parameter allows to plug in custom policies to sanitize form parameter values by specifiying the full class path of its factory class. The class must be a sub type of org.owasp.html.PolicyFactory.
