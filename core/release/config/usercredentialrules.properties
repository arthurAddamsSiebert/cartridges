# 
# This file contains the rules for handling user credentials
#
# 
# This file contains the rules which will be used during user creation
#
# Syntax : 
# <domain name>.ParentRuleOwner = <domain name>
# <domain name>.PasswordValidators = validator1,validator2...
#
# <domain name>.PasswordExpirationNotificationPeriod = <number of days for notification before a password expires>
# <domain name>.PasswordExpirationPeriod = <number of days until a password expires or 0 for disabling password expiration>
#
# <domain name>.LoginFailureLockoutCount = <number of login attempts on that the account is temporarily locked or 0 for disabling account loccking>
# <domain name>.LoginFailureLockoutDuration = <number of minutes for lockout after multiple login failures>
#
# <domain name>.UserLoginExpression = <minimum length>,<maximum length>,<regular expression>
# <domain name>.UserLoginDescription(_Locale) = description
#
# <domain name>.PasswordLoginExpression = <minimum length>,<maximum length>,<regular expression>
# <domain name>.PasswordLoginDescription(_Locale) = description
#
# <domain name>.PasswordRepeatPreventionCount = <number of already used passwords>
# <domain name>.PasswordRepeatPreventionDescription(_Locale) = description
#
#
# ParentRuleOwner alternative domain to search for rules 
# if no rules found for domain in which user will be created 
# by default rules will be searched in system domain 
# 
#
#
# To get reference about regular expressions please visit:  
# http://java.sun.com/j2se/1.4.2/docs/api/java/util/regex/Pattern.html
#
# example: ^\\S+$
# accepts values with any char, but without (white)spaces
# result:
# "%&abOv17" ==> true
# "h a l l o" ==> false

# example: ^((\\S*\\p{Alpha}\\S*\\d\S*)|(\\S*\\d\\S*\p{Alpha}\\S*))$
# accepts values with at least 2 characters, but no whitespaces and 
# the values must contain at least one alphabetic character and one decimal digit
# result:
# "asd3kjdh" ==> true
# "00S" ==> true
# "--a++" ==> false
#
# 
# ParentRuleOwner domain in which rules will be searched if no rules found for specified domain 
# by default rules will be searched in system domain 
# PasswordValidators is a rule for possible validators that will be used to validate the password
# full path class names delimited by comma
#
# Example:
# 
# PrimeTech-CorporateLarge-Anonymous.UserLoginExpression = 4,256,^\\S+$
# PrimeTech-CorporateLarge-Anonymous.PasswordLoginExpression = 8,256,^\\S+$
# PrimeTech-CorporateLarge-Anonymous.UserLoginDescription = The login name must be between 4 and 256 characters long and can contain any characters with the exception of whitespace characters.
# PrimeTech-CorporateLarge-Anonymous.PasswordLoginDescription = The password must be between 8 and 256 characters long and can contain any characters with the exception of whitespace characters.
# 
# AgroNet.ParentRuleOwner = PrimeTech-CorporateLarge-Anonymous
# BioTech.ParentRuleOwner = PrimeTech-CorporateLarge-Anonymous
# CapitalGroup.ParentRuleOwner = PrimeTech-CorporateLarge-Anonymous
# CarPort.ParentRuleOwner = PrimeTech-CorporateLarge-Anonymous
# OilCorp.ParentRuleOwner = PrimeTech-CorporateLarge-Anonymous
# 
# PrimeTech-PrimeTechSpecials-Anonymous.PasswordValidators = PasswordExpressionValidator
# 
# 
# 
# Initial system domain settings:
# 

usercredentials.PasswordValidators = PasswordExpressionValidator,PasswordHistoryValidator

# user interaction preferences
usercredentials.PasswordExpirationNotificationPeriod = 5
usercredentials.PasswordExpirationPeriod = 90

usercredentials.LoginFailureLockoutCount = 6
usercredentials.LoginFailureLockoutDuration = 30

# Preferences for the PasswordExpressionValidator 
usercredentials.UserLoginExpression = 1,256,^\\S+$
usercredentials.PasswordLoginExpression = 7,256,^(?=[^\\s]*[a-zA-Z])(?=[^\\s]*[\\d])[^\\s]*$


# Preferences for the PasswordHistoryValidator 
usercredentials.PasswordRepeatPreventionCount = 4


