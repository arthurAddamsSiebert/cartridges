import "enfinity:/core/edl/com/intershop/beehive/core/common/DObject.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.beehive.core.rapi.common
{
    /*
     * <P>A DRange is used to express ranges of values in remote interface query objects such as DBuyerQuery and DOrderQuery. The range specified may be one of:
     * <BR>A range of Strings
     * <BR>A range of Dates
     * <BR>A range of DMoney instances.
     * <BR>A constructor exists for each of these types, note the type used depends upon the context, for example it makes sense to specify a date range when specifying an order query to select orders within a date range.
     * 
     * <P>Note every range may be open-ended start or end poiunt. For example if a range is specified with a start point and a <code>null</code> end point, the range has is open-ended.
     * 
     * @see com.intershop.beehive.ri.order.DOrderQuery
     * @see com.intershop.beehive.ri.buyer.DBuyerQuery
     */
    xml class DRange extends DObject
    {
        /*
         * <P>The start-point of a string range.
         */
        attribute fromString : string tag "from" type attribute;

        /*
         * <P>The end-point of a string range.
         */
        attribute toString : string tag "to" type attribute;

        /*
         * <P>The start-point of a date range.
         */
        attribute fromDate : datetime tag "from-date" type attribute pattern "yyyy-MM-dd HH:mm:ss";

        /*
         * <P>The end-point of a date range.
         */
        attribute toDate : datetime tag "to-date" type attribute pattern "yyyy-MM-dd HH:mm:ss";

        attribute fromMoney : Money tag "from-money" type element;

        attribute toMoney : Money tag "to-money" type element;
    }
}
