import "enfinity:/core/edl/com/intershop/beehive/core/capi/security/Role.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/internal/security/PermissionTypePO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/internal/security/RoleInformationPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/internal/security/RolePermissionAssignmentPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.beehive.core.internal.security
{
    oca timestamp orm class RolePO implements Role
    {
        primary key(ID);

        index(permissionTypeID);

        attribute ID : string<256> required searchable;

        attribute permissionTypeID : string<256> searchable;

        /*
         * Clients can use this flag to deny that a user removes some of the standard roles.
         */
        attribute fix : boolean;

        relation roleInformation : RoleInformationPO[0..1] inverse role;

        relation permissionType : PermissionTypePO[1..1] inverse roles
        {
            foreign key(permissionTypeID) -> (ID);
        }

        relation rolePermissionAssignments : RolePermissionAssignmentPO[0..n] inverse role;
    }
}
