import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObjectPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/internal/preference/ApplicationPreferencePO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/preference/PreferenceDefinition.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/internal/preference/PreferenceGroupPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/internal/preference/PreferencePO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/preference/ApplicationPreference.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.beehive.core.internal.preference
{
    /*
     * Stores general information about a preference.
     * 
     * @see com.intershop.beehive.core.capi.common.preference.Preference
     * @see com.intershop.beehive.core.capi.common.preference.PreferenceGroup
     */
    orm class PreferenceDefinitionPO extends ExtensibleObjectPO implements PreferenceDefinition
    {
        index(preferenceGroupID);
        
        alternate key(preferenceName);

        /*
         * The lookup name for this kind of preference definition.
         */
        attribute preferenceName : string<256> readonly required;

        /*
         * the localizable display name of this kind of preference.
         */
        attribute displayName : string localized;

        /*
         * the localizable description of this kind of preference
         */
        attribute description : string localized;

        /*
         * The value type defines if associated preference values are of type integer, double or String.
         */
        attribute valueType : int;

        /*
         * A semicolon separated list of possible values this preference may take.
         */
        attribute valueSet : string mapped;

        /*
         * foreign key to the PreferenceGroup to which this kind of preference belongs.
         */
        attribute preferenceGroupID : uuid;

        /*
         * By setting this flag a hint can be given to any kind of User Interface whether this preference should be visible or not.
         */
        attribute visible : boolean;

        /*
         * By setting this flag the according preferences are updated in the target system during the replication process.
         */
        attribute replicatable : boolean;

        /*
         * The optional default value for all preferences of a specific definition. Values of type int or double are stored in its string representation (signed decimal).
         */
        attribute defaultValue : string<4000>;

        relation preferenceGroupPO : PreferenceGroupPO[0..1] inverse preferenceDefinitionPOs 
        {
            foreign key(preferenceGroupID) -> (UUID);
        }

        relation preferencePOs : PreferencePO[0..n] inverse preferenceDefinitionPO implements domainPreferences;
        
        relation applicationPreferencePOs : ApplicationPreferencePO[0..n] inverse prefDefinitionPO implements applicationPreferences;
    }
}
