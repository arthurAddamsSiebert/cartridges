import "enfinity:/core/edl/com/intershop/beehive/core/capi/businessevent/BusinessEventPipelineInfo.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/Domain.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/internal/businessevent/BusinessEventDefinitionPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.beehive.core.internal.businessevent
{
    /*
     * See BusinessEventDefinition class documentation
     */
    oca orm class BusinessEventPipelineInfoPO implements BusinessEventPipelineInfo table "BusinessEventPipelineInfo"
    {
    	
    	/*
    	 * @mssql-hint(NONCLUSTERED)
    	 */
        primary key(eventClass, eventTarget, eventName, domainID);

        /*
         * The name of the subclass of class BusinessEvent which is to be triggered, eg OrderEvent or ProductLineItemEvent
         */
        attribute eventClass : string<256>;

        /*
         * The name identifying the kind of target object for the event, eg SellerOrder, SupplierOrder...
         */
        attribute eventTarget : string<256>;

        /*
         * The name of the business event, eg OrderStatus-CANCELLED or OrderShippingStatus-PARTSHIPPED.
         */
        attribute eventName : string<256>;

        attribute domainID : uuid;

        attribute pipelineName : string<256>;

        attribute startNode : string<256>;

        relation businessEventDefinitionPO : BusinessEventDefinitionPO[1..1] inverse businessEventPipelineInfoPOs
        {
            foreign key(eventClass, eventTarget, eventName) -> (eventClass, eventTarget, eventName);
        }

        dependency domain : Domain handler "com.intershop.beehive.core.capi.domain.DomainMgr"
        {
            foreign key(domainID);
        }
    }
}
