import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/RelationDefinition.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/internal/domain/RelationDefinitionInformationPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/internal/domain/RelationPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.beehive.core.internal.domain
{
    /*
     * This class is used for managing persistent domain relation definitions. Before an actual domain relation can be created, a corresponding relation definition must exist. The purpose of a relation definition is a) to provide data common to all relations of this kind such as the source and target role name and b) to define the cardinalities constraint that must be obeyed by all concrete relations.
     * 
     * @see Relation
     */
    oca timestamp orm class RelationDefinitionPO implements RelationDefinition table "RelationDefinition"
    {
        primary key(name);

        /*
         * A unique name which can be used to identify this relation definition.
         */
        attribute name : string<256> required;

        /*
         * The cardinalities of domain relations based on this RelationDefinition.
         * @see DomainConstants#RELATION_CARDINALITIES_ONE_TO_ONE
         * @see DomainConstants#RELATION_CARDINALITIES_ONE_TO_MANY
         * @see DomainConstants#RELATION_CARDINALITIES_MANY_TO_ONE
         * @see DomainConstants#RELATION_CARDINALITIES_MANY_TO_MANY
         */
        attribute cardinalities : int;

        relation relationDefinitionInformationPO : RelationDefinitionInformationPO[0..1] inverse relationDefinitionPO;

        relation relationsPO : RelationPO[0..n] inverse relationDefinitionPO;
    }
}
