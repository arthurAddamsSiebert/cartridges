import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/Domain.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/RelationDefinition.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

external SystemException type "com.intershop.beehive.core.capi.common.SystemException";

namespace com.intershop.beehive.core.capi.domain
{
    /*
     * Represents a concrete relation between two domains. The semantics of the
     * relation is provided by the underlying relation definition.
     */
    cartridge interface Relation
    {
        /*
         * The UUID of the first domain participating in this relation.
         */
        attribute domain1_ID : string readonly required;

        /*
         * The UUID of the second domain participating in this relation.
         */
        attribute domain2_ID : string readonly required;

        /*
         * The name of the relation definition associated with this relation.
         */
        attribute relationDefinitionName : string readonly required;

        relation relationDefinition : RelationDefinition[0..1] readonly;

        relation domain1 : Domain[0..1] readonly;

        relation domain2 : Domain[0..1] readonly;

        /*
         * Returns the value of attribute 'lastModified'.<p>
         * 
         * This field contains the timestamp the objects was written to the
         * database.
         * 
         * @return      the value of the attribute 'lastModified'
         * @isattribute LastModified
         */
        operation getLastModified() : datetime throws SystemException;

        /*
         * Sets the value of the attribute 'lastModified'.<p>
         * 
         * This field contains the timestamp the objects was written to the
         * database.
         * 
         * @param       aValue        the new value of the attribute
         */
        operation setLastModified(aValue : datetime) : void throws SystemException;

        /*
         * Checks whether the value of the attribute 'lastModified' is null.<p>
         * 
         * This field contains the timestamp the objects was written to the
         * database.
         * 
         * @return      true if the value of attribute 'lastModified' is null,
         * false otherwise
         * @isattribute LastModifiedNull
         */
        operation getLastModifiedNull() : boolean throws SystemException;

        /*
         * Sets the value of the attribute 'lastModified' to null.<p>
         * 
         * This field contains the timestamp the objects was written to the
         * database.
         * 
         * @param       aFlag       meaningless
         */
        operation setLastModifiedNull(aFlag : boolean) : void throws SystemException;

        /*
         * Returns the Home interface name of this Bean.
         * 
         * @return  the Home interface name
         * @hide
         */
        operation getFactoryName() : string throws SystemException;
    }
}
