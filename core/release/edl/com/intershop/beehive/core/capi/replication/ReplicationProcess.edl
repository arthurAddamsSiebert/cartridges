import "enfinity:/core/edl/com/intershop/beehive/core/capi/locking/Process.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/staging/TargetCluster.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/replication/ReplicationTask.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/staging/process/StagingContentProvider.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

external Process type "com.intershop.beehive.core.capi.locking.Process";

namespace com.intershop.beehive.core.capi.replication
{
    /*
     * Represents a replication process.
     */
    cartridge interface ReplicationProcess extends Process, StagingContentProvider
    {
        /*
         * Contains the name of target cluster.
         */
        relation targetCluster : TargetCluster[0..1];

        /*
         * Contains the date the replication process should be started.
         */
        attribute scheduledAt : datetime required;

        /*
         * The of date of scheduled publication process.
         */
        attribute publicationScheduleDate : datetime required;

        /*
         * Contains the identifier of replication task.
         */
        attribute replicationProcessID : string required;

        /*
         * Contains the process used by locking framework.
         */
        attribute process : Process readonly required;

        /*
         * The error code of underlying staging process.
         */
        attribute errorCode : string readonly required;

        /*
         * The progress identifier describing in which phase the replication process resides.
         */
        attribute progressID : string readonly required;

        /*
         * The state of all replication tasks being assigned to this process.
         */
        attribute replicationTasksState : string required;
        
        /**
         * Returns true if this process is runnable.
         */
        attribute runnable : boolean required readonly;

        /**
         * Returns true if this process can be restarted.
         */
        attribute rerunnable : boolean required readonly;
        
        /**
         * Returns true if this process can be undone.
         */
        attribute undoable : boolean required readonly;
        
        /**
         * Returns true if this process can be published.
         */
        attribute publishable : boolean required readonly; 

        /**
         * The replication tasks.
         */
        relation replicationTasks : ReplicationTask[0..n] pageable;
    }
}
