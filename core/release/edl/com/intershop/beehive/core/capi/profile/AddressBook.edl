import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

external Address type "com.intershop.beehive.core.capi.profile.Address";
external SystemException type "com.intershop.beehive.core.capi.common.SystemException";

namespace com.intershop.beehive.core.capi.profile
{
    /*
     * Defines an interface, all address books should implement.
     * 
     * @see         com.intershop.beehive.bts.service.profile.BasicAddressBook
     * @isobject
     * 
     * @deprecated Deprecated since 7.8. 
     */
    cartridge interface AddressBook
    {
        /*
         * Creates a new, empty address object (factory method).
         * 
         * @param       name        the name of the address
         * @return      the new address object
         * 
         * @deprecated Deprecated since 7.8. 
         */
        operation createAddress(name : string) : Address throws SystemException;

        /*
         * Removes the passed address from the addressbook.
         * 
         * @param       address         the address to remove
         * 
         * @deprecated Deprecated since 7.8. 
         */
        operation removeAddress(address : Address) : void throws SystemException;

        /*
         * Creates an address view for a given address id. The address view
         * provides methods to set / get quite a lot of important attributes.
         * 
         * @param   anAddressID An address identifier (at this time an uuid).
         * @return  The address object or null, if the address does not exist.
         * 
         * @deprecated Deprecated since 7.8. 
         */
        operation getAddressByID(anAddressID : string) : Address throws SystemException;

        /*
         * Returns the defined default Address for this AddressBook. It
         * iterates through all addresses returning the first one it finds where
         * the DefaultFlag is set.
         * 
         * @return the default Address object or null, if the address does not exist
         * @isattribute DefaultAddress
         * 
         * @deprecated Deprecated since 7.8. 
         */
        operation getDefaultAddress() : Address throws SystemException;

        /*
         * Creates an iterator of all addresses in the addressbook.
         * 
         * @return    Iterator with address objects
         * @isiterator AddressIterator com.intershop.beehive.bts.businesspartner.Address
         * 
         * @deprecated Deprecated since 7.8. 
         */
        operation createAddressIterator() : Iterator throws SystemException;

        /*
         * Creates an iterator of all registered ship-from addresses.
         * 
         * @return Iterator with shipping addresses.
         * @see com.intershop.beehive.bts.businesspartner.Address#isShipFromAddress
         * @isiterator ShipFromAddressIterator com.intershop.beehive.bts.businesspartner.Address
         * 
         * @deprecated Deprecated since 7.8. 
         */
        operation createShipFromAddressIterator() : Iterator throws SystemException;

        /*
         * Creates an iterator of all registered ship-to addresses.
         * 
         * @return Iterator with shipping addresses.
         * @see com.intershop.beehive.bts.businesspartner.Address#isShipToAddress
         * @isiterator ShipToAddressIterator com.intershop.beehive.bts.businesspartner.Address
         * 
         * @deprecated Deprecated since 7.8. 
         */
        operation createShipToAddressIterator() : Iterator throws SystemException;

        /*
         * Creates an iterator of all registered invoice-to addresses.
         * 
         * @return Iterator with invoice addresses.
         * @see com.intershop.beehive.bts.businesspartner.Address#isInvoiceToAddress
         * @isiterator InvoiceToAddressIterator com.intershop.beehive.bts.businesspartner.Address
         * 
         * @deprecated Deprecated since 7.8. 
         */
        operation createInvoiceToAddressIterator() : Iterator throws SystemException;

        /*
         * Sets the default Address for this AddressBook. It searches for the
         * current default Address and unsets it, then sets the given Address as
         * default.
         * 
         * @param       anAddress the Address to be set as default
         * @see com.intershop.beehive.bts.businesspartner.Address#isDefaultAddress
         * @see com.intershop.beehive.bts.businesspartner.Address#setDefaultAddress
         * 
         * @deprecated Deprecated since 7.8. 
         */
        operation setDefaultAddress(anAddress : Address) : void throws SystemException;

        /*
         * Returns whether the passed address is the default address.
         * 
         * @param      anAddress   The address in question.
         * @return     Whether the passed address is the default address.
         * @see com.intershop.beehive.bts.businesspartner.Address#isDefaultAddress
         */
        operation isDefaultAddress(anAddress : Address) : boolean throws SystemException;
        
        /*
         * Sets the default ShipTo Address for this AddressBook. It searches for the
         * current default ShipTo Address and unsets it, then sets the given Address as
         * default.
         * 
         * @param       anAddress the Address to be set as default ShipTo
         * 
         * @deprecated Deprecated since 7.8. 
         
         */
        operation setDefaultShipToAddress(anAddress : Address) : void throws SystemException;

        /*
         * Returns whether the passed address is the default ShipTo address.
         * 
         * @param      anAddress   The address in question.
         * @return     Whether the passed address is the default ShipTo address.
         */
        operation isDefaultShipToAddress(anAddress : Address) : boolean throws SystemException;
        
        /*
         * Sets the default ShipFrom Address for this AddressBook. It searches for the
         * current default ShipFrom Address and unsets it, then sets the given Address as
         * default.
         * 
         * @param       anAddress the Address to be set as default ShipFrom
         */
        operation setDefaultShipFromAddress(anAddress : Address) : void throws SystemException;

        /*
         * Returns whether the passed address is the default ShipFrom address.
         * 
         * @param      anAddress   The address in question.
         * @return     Whether the passed address is the default ShipFrom address.
         */
        operation isDefaultShipFromAddress(anAddress : Address) : boolean throws SystemException;
        
        /*
         * Sets the default InvoiceTo Address for this AddressBook. It searches for the
         * current default InvoiceTo Address and unsets it, then sets the given Address as
         * default.
         * 
         * @param       anAddress the Address to be set as default InvoiceTo
         */
        operation setDefaultInvoiceToAddress(anAddress : Address) : void throws SystemException;

        /*
         * Returns whether the passed address is the default InvoiceTo address.
         * 
         * @param      anAddress   The address in question.
         * @return     Whether the passed address is the default InvoiceTo address.
         */
        operation isDefaultInvoiceToAddress(anAddress : Address) : boolean throws SystemException;
        
        /*
         * Sets the default ServiceTo Address for this AddressBook. It searches for the
         * current default ServiceTo Address and unsets it, then sets the given Address as
         * default.
         * 
         * @param       anAddress the Address to be set as default ServiceTo
         */
        operation setDefaultServiceToAddress(anAddress : Address) : void throws SystemException;

        /*
         * Returns whether the passed address is the default ServiceTo address.
         * 
         * @param      anAddress   The address in question.
         * @return     Whether the passed address is the default ServiceTo address.
         */
        operation isDefaultServiceToAddress(anAddress : Address) : boolean throws SystemException;
        
        /*
         * Sets the default InstallTo Address for this AddressBook. It searches for the
         * current default InstallTo Address and unsets it, then sets the given Address as
         * default.
         * 
         * @param       anAddress the Address to be set as default InstallTo
         * 
         * @deprecated Deprecated since 7.8. 
         */
        operation setDefaultInstallToAddress(anAddress : Address) : void throws SystemException;

        /*
         * Returns whether the passed address is the default InstallTo address.
         * 
         * @param      anAddress   The address in question.
         * @return     Whether the passed address is the default InstallTo address.
         * 
         * @deprecated Deprecated since 7.8. 
         */
        operation isDefaultInstallToAddress(anAddress : Address) : boolean throws SystemException;

		/*
         * Returns the defined default InstallTo Address for this AddressBook. It
         * iterates through all addresses returning the first one it finds where
         * the DefaultInstallToFlag is set.
         * 
         * @return the default InstallToAddress object or null, if the address does not exist
         * @isattribute DefaultInstallToAddress
         * 
         * @deprecated Deprecated since 7.8. 
         */
        operation getDefaultInstallToAddress() : Address throws SystemException;
        
        /*
         * Returns the defined default ServiceTo Address for this AddressBook. It
         * iterates through all addresses returning the first one it finds where
         * the DefaultServiceToFlag is set.
         * 
         * @return the default ServiceToAddress object or null, if the address does not exist
         * @isattribute DefaultServiceToAddress
         * 
         * @deprecated Deprecated since 7.8. 
         */
        operation getDefaultServiceToAddress() : Address throws SystemException;
        
        /*
         * Returns the defined default InvoiceTo Address for this AddressBook. It
         * iterates through all addresses returning the first one it finds where
         * the DefaultInvoiceToFlag is set.
         * 
         * @return the default InvoiceToAddress object or null, if the address does not exist
         * @isattribute DefaultInvoiceToAddress
         * 
         * @deprecated Deprecated since 7.8. 
         */
        operation getDefaultInvoiceToAddress() : Address throws SystemException;
        
        /*
         * Returns the defined default ShipFrom Address for this AddressBook. It
         * iterates through all addresses returning the first one it finds where
         * the DefaultShipFromFlag is set.
         * 
         * @return the default ShipFromAddress object or null, if the address does not exist
         * @isattribute DefaultShipFromAddress
         * 
         * @deprecated Deprecated since 7.8. 
         */
        operation getDefaultShipFromAddress() : Address throws SystemException;
        
        /*
         * Returns the defined default ShipTo Address for this AddressBook. It
         * iterates through all addresses returning the first one it finds where
         * the DefaultShipToFlag is set.
         * 
         * @return the default ShipToAddress object or null, if the address does not exist
         * @isattribute DefaultShipToAddress
         * 
         * @deprecated Deprecated since 7.8. 
         */
        operation getDefaultShipToAddress() : Address throws SystemException;

        /*
         * Creates an address view for a given address name. The address view provides methods to set / get quite a lot of important attributes.
         * 
         * @param   anAddressName An address name.
         * @return  The address object or null, if the address does not exist.
         * 
         * @deprecated Deprecated since 7.8. 
         */
        operation getAddressByName(anAddressName : string) : Address;

        /*
         * Creates an iterator of addresses for designated type.
         * 
         * @deprecated Deprecated since 7.8. 
         */
        operation createAddressByTypeIterator(^type : int) : Iterator;

        /*
         * Creates an iterator of all registered service-to addresses.
         * 
         * @deprecated Deprecated since 7.8. 
         */
        operation createServiceToAddressIterator() : Iterator;

        /*
         * Creates an iterator of all registered install-to addresses.
         * 
         * @deprecated Deprecated since 7.8. 
         */
        operation createInstallToAddressIterator() : Iterator;
    }
}
