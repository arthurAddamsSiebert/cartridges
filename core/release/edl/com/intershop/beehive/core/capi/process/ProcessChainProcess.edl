import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

import "enfinity:/core/edl/com/intershop/beehive/core/capi/process/ProcessChainTask.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/locking/Process.edl";

external ProcessThreadExecutor type "com.intershop.beehive.core.capi.process.concurrent.ProcessThreadExecutor";
external ConcurrentTask type "com.intershop.beehive.core.capi.process.concurrent.ConcurrentTask";

namespace com.intershop.beehive.core.capi.process
{
    /*
     * Each ProcessChainProcess describes a specialized process.
     */
	cartridge interface ProcessChainProcess extends Process, ConcurrentTask
	{
		/*
		 * returned status of task 
		 */
		attribute taskStatus:String;
		
		/*
		 * masked status of task 
		 */
		attribute maskStatus:String;

		/**
		 * @return      the assigned thread pool of process
		 */
		operation getPool():ProcessThreadExecutor;

		/**
		 * @return      the locking process object
		 */
		operation getProcess():Process;
	}
}