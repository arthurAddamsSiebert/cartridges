import "enfinity:/core/edl/com/intershop/beehive/core/capi/businessevent/BusinessEventDefinition.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/Domain.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.beehive.core.capi.businessevent
{
    /*
     * See BusinessEventDefinition class documentation
     */
    cartridge interface BusinessEventPipelineInfo
    {
        /*
         * The name of the subclass of class BusinessEvent which is to be triggered, eg OrderEvent or ProductLineItemEvent
         */
        attribute eventClass : string readonly required;

        /*
         * The name identifying the kind of target object for the event, eg SellerOrder, SupplierOrder...
         */
        attribute eventTarget : string readonly required;

        /*
         * The name of the business event, eg OrderStatus-CANCELLED or OrderShippingStatus-PARTSHIPPED.
         */
        attribute eventName : string readonly required;

        attribute domainID : string readonly required;

        attribute pipelineName : string required;

        attribute startNode : string required;

        attribute ^oca : int required;

        relation businessEventDefinition : BusinessEventDefinition[0..1] readonly;

        relation domain : Domain[0..1] readonly;

        /*
         * Checks whether the value of the attribute 'pipelineName' is null.<p>
         * 
         * @return      true if the value of attribute 'pipelineName' is null, false otherwise
         */
        operation getPipelineNameNull() : boolean;

        /*
         * Sets the value of the attribute 'pipelineName' to null.<p>
         * 
         */
        operation setPipelineNameNull(aFlag : boolean) : void;

        /*
         * Checks whether the value of the attribute 'startNode' is null.<p>
         * 
         * @return      true if the value of attribute 'startNode' is null, false otherwise
         */
        operation getStartNodeNull() : boolean;

        /*
         * Sets the value of the attribute 'startNode' to null.<p>
         * 
         */
        operation setStartNodeNull(aFlag : boolean) : void;

        /*
         * Returns the Home interface name of this Bean.
         * 
         * @return  the Home interface name
         */
        operation getFactoryName() : string;

        /*
         * Checks whether the value of the attribute 'oca' is null.<p>
         * 
         * @return      true if the value of attribute 'oca' is null, false otherwise
         */
        operation getOcaNull() : boolean;

        /*
         * Sets the value of the attribute 'oca' to null.<p>
         * 
         */
        operation setOcaNull(aFlag : boolean) : void;
    }
}
