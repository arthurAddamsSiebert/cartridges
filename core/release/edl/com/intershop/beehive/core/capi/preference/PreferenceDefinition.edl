import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObject.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/preference/ApplicationPreference.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/preference/Preference.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.beehive.core.capi.preference
{
    cartridge interface PreferenceDefinition extends ExtensibleObject
    {
        /*
         * The optional default value for all preferences of a specific definition. Values of type int or double are stored in its string representation (signed decimal).
         */
        attribute defaultValue : string required;

        /*
         * the localizable description of this kind of preference
         */
        attribute description : string required localized;

        /*
         * the localizable display name of this kind of preference.
         */
        attribute displayName : string required localized;

        /*
         * foreign key to the PreferenceGroup to which this kind of preference belongs.
         */
        attribute preferenceGroupID : string required readonly;

        /*
         * The lookup name for this kind of preference definition.
         */
        attribute preferenceName : string readonly required;

        /*
         * A semicolon separated list of possible values this preference may take.
         */
        attribute valueSet : string required mapped;

        /*
         * The value type defines if associated preference values are of type integer, double or String.
         */
        attribute valueType : int required;

        /*
         * By setting this flag a hint can be given to any kind of User Interface whether this preference should be visible or not.
         */
        attribute visible : boolean required;

        /*
         * By setting this flag the according preferences are updated in the target system during the replication process.
         */
        attribute replicatable : boolean required;

        relation domainPreferences : Preference[0..n] readonly;
        relation applicationPreferences : ApplicationPreference[0..n] readonly;             
    }
}
