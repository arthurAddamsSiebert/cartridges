import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/Domain.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObject.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/replication/ReplicationProcess.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/replication/ReplicationTaskHistory.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/staging/StagingGroup.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

external CreateException type "com.intershop.beehive.core.capi.common.CreateException";
external RemoveException type "com.intershop.beehive.core.capi.common.RemoveException";
external User type "com.intershop.beehive.core.capi.user.User";

namespace com.intershop.beehive.core.capi.replication
{
    /*
     * This defines the business interface methods for ReplicationTask as defined in the
     * object model.
     * Classes implementing this interface represent replication tasks.
     * @iscomment Generated by jGen. Do not edit!
     */
    cartridge interface ReplicationTask extends ExtensibleObject
    {
        attribute taskID : string required;

        attribute requester : User required;

        attribute requestTime : datetime required;

        attribute startTime : datetime required;

        attribute dueTime : datetime required;

        attribute state : string required;

        /*
         * Contains the description of replication task.
         */
        attribute description : string required localized;

        relation stateModificationEntries : ReplicationTaskHistory[0..n];

        relation replicationProcess : ReplicationProcess[0..1];

        /*
         * This method is used to add a new assignment to this replication task.
         */
        operation addAssignment(domain : Domain, stagingGroup : StagingGroup) : void throws CreateException;

        /*
         * This method is used to remove given assignment.
         */
        operation removeAssignment(domain : Domain, stagingGroup : StagingGroup) : void throws RemoveException;

        /*
         * This method is used to remove all assignments to replication task.
         */
        operation removeAllAssignments() : void throws RemoveException;
    }
}
