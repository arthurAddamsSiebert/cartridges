import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObject.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/locking/ProgressMonitor.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

external Process2 type "com.intershop.beehive.core.capi.locking.Process";
external JobConfiguration type "com.intershop.beehive.core.capi.job.JobConfiguration";

namespace com.intershop.beehive.core.capi.locking
{
    /*
     * Abstraction for a process.
     */
    cartridge interface Process extends ExtensibleObject, ProgressMonitor
    {
        /*
         * The process name.
         */
        attribute name : string required;

        /*
         * The localized process description.
         */
        attribute description : string required localized;

        /*
         * The proceess start date.
         */
        attribute startDate : datetime required;

        /*
         * The process end date.
         */
        attribute endDate : datetime required;

        /*
         * The process state.
         */
        attribute state : string required;

        /*
         * The process type.
         */
        attribute ^type : string required;

        /*
         * The process owner.
         */
        attribute user : User required;

        /*
         * Contains the name of host, at which one the process is running.
         */
        attribute hostName : string readonly required;

        /*
         * The identifier of installation the application server performing this process belongs to.
         */
        attribute installationID : string readonly required;

        /*
         * The name of application server performing this process.
         */
        attribute serverName : string readonly required;

        attribute parent : Process2;

        /*
         * Contains the scheduled date, at which one the process should be started
         */
        attribute scheduledDate : datetime;
        
        /**
         * Returns the jobConfiguration triggering this process
         */
        attribute jobConfiguration : JobConfiguration readonly required;

        attribute childs : Collection readonly required;

        /*
         * Creates an iterator of all resources held by the process.
         */
        operation createResourcesIterator() : Iterator;

        /*
         * This method returns <code>true</code> if this process is started by calling application server, otherwise it returns <code>false</code>.
         */
        operation isStartedByThisAppServer() : boolean;
    }
}
