import "enfinity:/core/edl/com/intershop/beehive/core/capi/preference/PreferenceDefinition.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.beehive.core.capi.preference
{
    /*
     * Stores a single domain specific preference value.
     * <p>Because of the complex fallback mechanism used for preference lookup, this bean should never be updated directly. Instead, the respective PreferenceMgr methods should be used.
     * @see com.intershop.beehive.core.capi.common.preference.PreferenceDefinitionEJB
     * @see com.intershop.beehive.core.capi.common.preference.PreferenceGroup
     */
    cartridge interface Preference 
    {
        /*
         * The lookup name. Specifies the kind of preference for which this bean applies.
         * <p>Note: This attributes correlates with the attribute preferenceDefinitionID, i.e. beans having the same preferenceName always have the same preferenceDefinitionID, too.
         */
        attribute preferenceName : string readonly required;

        /*
         * The integer value of this preference, if it is of type integer.
         */
        attribute intValue : int required;

        /*
         * The double value of this preference, if it is of type double.
         */
        attribute doubleValue : double required;

        /*
         * The string value of this preference, if it is of type String.
         */
        attribute stringValue : string required;

        /* setter for the clob field */
        operation setTextValue(value:String ):void;  
        
        /*
         * Foreign key for the PreferenceDefinition bean, where general information about this type of preference can be found.
         * <p>Note: This attributes correlates with the attribute preferenceName, i.e. beans having the same preferenceName always have the same preferenceDefinitionID, too.
         */
        attribute preferenceDefinitionID : string required readonly ;

        relation preferenceDefinition : PreferenceDefinition[0..1] readonly;
    }
}
