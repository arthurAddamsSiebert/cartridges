<workflow>

	<!-- Validate EDL source model -->
	<component class="com.intershop.enfinity.studio.mda.generator.mwe.LogComponent"
		severity="progress"
		message="Validating EDL source model..."
	/>

	<component class="com.intershop.enfinity.studio.mda.generator.mwe.EMFValidationComponent">
		<metaModel class="com.intershop.enfinity.studio.mda.generator.mwe.CachedBeehiveEMFMetaModel"/>
		<expression value="element.eAllContents.union({element})"/>
	</component>

	<component class="org.eclipse.xtend.check.CheckComponent">
		<metaModel class="com.intershop.enfinity.studio.mda.generator.mwe.CachedBeehiveEMFMetaModel"/>
		<checkFile value="validation::EDL"/>
		<expression value="element.eAllContents.union({element})"/>
	</component>


	<!-- Transform EDL syntax model into EDL generation model -->
	<component class="com.intershop.enfinity.studio.mda.generator.mwe.LogComponent"
		severity="progress"
		message="Transforming EDL source model into EDL generation model..."
	/>

	<component class="org.eclipse.xtend.XtendComponent">
		<metaModel class="com.intershop.enfinity.studio.mda.generator.mwe.CachedBeehiveEMFMetaModel"/>
		<invoke value="transformation::EDL2CEDL::transformModel(element)"/>
		<outputSlot value="edlModel" />
	</component>


	<!-- Validate EDL generation model -->
	<component class="com.intershop.enfinity.studio.mda.generator.mwe.LogComponent"
		severity="progress"
		message="Validating EDL generation model..."
	/>

	<component class="com.intershop.enfinity.studio.mda.generator.mwe.EMFValidationComponent">
		<metaModel class="com.intershop.enfinity.studio.mda.generator.mwe.CachedBeehiveEMFMetaModel"/>
		<expression value="edlModel.eAllContents.union({edlModel})"/>
	</component>

	<!-- Validate ORM types -->
	<component class="org.eclipse.xtend.check.CheckComponent">
		<metaModel class="com.intershop.enfinity.studio.mda.generator.mwe.CachedBeehiveEMFMetaModel"/>
		<checkFile value="validation::ORM"/>
		<expression value="edlModel.eAllContents.union({edlModel})"/>
	</component>


	<!-- Validate CAPI types -->
	<component class="org.eclipse.xtend.check.CheckComponent">
		<metaModel class="com.intershop.enfinity.studio.mda.generator.mwe.CachedBeehiveEMFMetaModel"/>
		<checkFile value="validation::CAPI"/>
		<expression value="edlModel.eAllContents.union({edlModel})"/>
	</component>


	<!-- Validate RAPI types -->
	<component class="org.eclipse.xtend.check.CheckComponent">
		<metaModel class="com.intershop.enfinity.studio.mda.generator.mwe.CachedBeehiveEMFMetaModel"/>
		<checkFile value="validation::RAPI"/>
		<expression value="edlModel.eAllContents.union({edlModel})"/>
	</component>


	<!-- Validate XML types -->
	<component class="org.eclipse.xtend.check.CheckComponent">
		<metaModel class="com.intershop.enfinity.studio.mda.generator.mwe.CachedBeehiveEMFMetaModel"/>
		<checkFile value="validation::XML"/>
		<expression value="edlModel.eAllContents.union({edlModel})"/>
	</component>


	<!-- Transform EDL Model into JDBC Model -->
<!--
	<component class="com.intershop.enfinity.studio.mda.generator.mwe.LogComponent"
		severity="progress"
		message="Transforming EDL generation model into JDBC database model..."
	/>
	
	<component class="org.eclipse.xtend.XtendComponent">
		<metaModel class="com.intershop.enfinity.studio.mda.generator.mwe.CachedBeehiveEMFMetaModel"/>
		<invoke value="transformation::CEDL2JDBC::transformModel(edlModel)"/>
		<outputSlot value="jdbcModel" />
	</component>
-->	

	<!-- Validate JDBC model -->
<!--	
	<component class="com.intershop.enfinity.studio.mda.generator.mwe.LogComponent"
		severity="progress"
		message="Validating JDBC database model..."
	/>

	<component class="com.intershop.enfinity.studio.mda.generator.mwe.EMFValidationComponent">
		<metaModel class="com.intershop.enfinity.studio.mda.generator.mwe.CachedBeehiveEMFMetaModel"/>
		<expression value="jdbcModel.eAllContents.union({jdbcModel})"/>
	</component>
	
	<component class="org.eclipse.xtend.check.CheckComponent">
		<metaModel class="com.intershop.enfinity.studio.mda.generator.mwe.CachedBeehiveEMFMetaModel"/>
		<checkFile value="validation::JDBC"/>
		<expression value="jdbcModel.eAllContents.union({jdbcModel})"/>
	</component>
-->

	<!-- Transform JDBC Model into Oracle Model -->
<!--	
	<component class="com.intershop.enfinity.studio.mda.generator.mwe.LogComponent"
		severity="progress"
		message="Transforming JDBC database model into Oracle database model..."
	/>

	<component class="org.eclipse.xtend.XtendComponent">
		<metaModel class="com.intershop.enfinity.studio.mda.generator.mwe.CachedBeehiveEMFMetaModel"/>
		<invoke value="transformation::JDBC2Oracle::transformModel(jdbcModel)"/>
		<outputSlot value="oracleModel" />
	</component>
-->

	<!-- Validate Oracle model -->
<!--	
	<component class="com.intershop.enfinity.studio.mda.generator.mwe.LogComponent"
		severity="progress"
		message="Validating Oracle database model..."
	/>

	<component class="com.intershop.enfinity.studio.mda.generator.mwe.EMFValidationComponent">
		<metaModel class="com.intershop.enfinity.studio.mda.generator.mwe.CachedBeehiveEMFMetaModel"/>
		<expression value="oracleModel.eAllContents.union({oracleModel})"/>
	</component>
	
	<component class="org.eclipse.xtend.check.CheckComponent">
		<metaModel class="com.intershop.enfinity.studio.mda.generator.mwe.CachedBeehiveEMFMetaModel"/>
		<checkFile value="validation::Oracle"/>
		<expression value="oracleModel.eAllContents.union({oracleModel})"/>
	</component>
-->
</workflow>
