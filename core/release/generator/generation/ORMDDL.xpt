/*
 * Generates the DDL to create tables
 */

«IMPORT edl»
«EXTENSION util::EDLUtil»
«EXTENSION util::JDBCUtil»
«EXTENSION org::eclipse::xtend::util::stdlib::counter»
«EXTENSION org::eclipse::xtend::util::stdlib::properties»

«DEFINE generateDDLs FOR EDLModel»
    «FOREACH eAllContents.typeSelect(EDLORMType) AS t»
    	«IF !t.isAbstract() && !t.hasAnnotation("@noconstraint")»
    	   «EXPAND generateDBConstraints FOR t»
    	«ENDIF-»
    «ENDFOREACH-»
    «FOREACH eAllContents.typeSelect(EDLORMType) AS t»
    	«IF !t.isAbstract() && !t.hasAnnotation("@noindex")»
        	«EXPAND generateDBIndexes FOR t»
        «ENDIF-»
    «ENDFOREACH-»
«ENDDEFINE»

«DEFINE generateDBConstraints FOR EDLORMType-»

/*
 * Oracle constraints
 */
«FILE getClassName().replaceAll("\\.", "/") + ".dbconstraints.oracle.ddl"-»
/*
 =============================================================================
 File: «name.unescape()».dbconstraints.oracle.ddl
 Generated by JGen Code Generator from INTERSHOP Communications AG.
 =============================================================================
 The JGen Code Generator software is the property of INTERSHOP Communications AG. 
 Any rights to use are granted under the license agreement. 
 =============================================================================
 */

SET ECHO ON
SET SERVEROUTPUT ON SIZE 1000000

PROMPT /* Class «qualifiedName» */
 «FOREACH getAllRelations() AS rel-»
	«IF rel.foreignKey != null && !rel.type.isAbstract()-»
EXEC staging_ddl.add_constraint('«getTableName()»', '«maximumLength(getTableName(),23)»_CO_«threeDigitCounter(counterInc("ConstraintOracle" + qualifiedName))»', 'FOREIGN KEY («FOREACH rel.foreignKey.sourceAttributes AS a SEPARATOR ","»«a.getTableColumnNames()»«ENDFOREACH-») REFERENCES «rel.type.getTableName()» («FOREACH rel.foreignKey.targetAttributes AS a SEPARATOR ","»«a.getTableColumnNames()»«ENDFOREACH-») INITIALLY DEFERRED DEFERRABLE DISABLE NOVALIDATE');
	«ENDIF-»
 «ENDFOREACH-»
 «FOREACH getAllDependencies() AS rel-»
	«IF rel.handler == null && EDLORMType.isInstance(rel.type) && !rel.type.isAbstract()-»
EXEC staging_ddl.add_constraint('«getTableName()»', '«maximumLength(getTableName(),23)»_CO_«threeDigitCounter(counterInc("ConstraintOracle" + qualifiedName))»', 'FOREIGN KEY («rel.foreignKeyAttribute.getTableColumnNames()») REFERENCES «rel.type.getTableName()» (UUID) INITIALLY DEFERRED DEFERRABLE DISABLE NOVALIDATE');
	«ENDIF-»
 «ENDFOREACH-»
 «IF (!isAbstract() && isSubClass("com.intershop.beehive.core.capi.domain.PersistentObjectPO"))-»
EXEC staging_ddl.add_constraint('«getTableName()»', '«maximumLength(getTableName(),23)»_CO_«threeDigitCounter(counterInc("ConstraintOracle" + qualifiedName))»', 'FOREIGN KEY (DOMAINID) REFERENCES DOMAIN (UUID) INITIALLY DEFERRED DEFERRABLE DISABLE NOVALIDATE');
 «ENDIF-»
 «IF (!isAbstract() && isSubClass("com.intershop.beehive.core.capi.domain.ExtensibleObjectPO"))-»

PROMPT /* Class «qualifiedName»AttributeValuePO */
EXEC staging_ddl.add_constraint('«maximumLength(getTableName(),20)»_AV', '«maximumLength(getTableName(),20)»_AV_CO001','FOREIGN KEY (OWNERID) REFERENCES «getTableName()» (UUID) INITIALLY DEFERRED DEFERRABLE DISABLE NOVALIDATE');
 «ENDIF-»
 «REM»
 «IF (!isAbstract() && isImplementor("com.intershop.beehive.core.capi.security.AuthorizationObject"))-»
PROMPT /* Class «qualifiedName»RoleAssignmentPO */
EXEC staging_ddl.add_constraint('«maximumLength(getTableName(),20)»_RA', '«maximumLength(getTableName(),20)»_RA_CO001','FOREIGN KEY («FOREACH primaryKey.primaryKeyAttributes AS a SEPARATOR ","»AO_«a.getTableColumnNames()»«ENDFOREACH-») REFERENCES «getTableName()» («FOREACH primaryKey.primaryKeyAttributes AS a SEPARATOR ","»AO_«a.getTableColumnNames()»«ENDFOREACH-») INITIALLY DEFERRED DEFERRABLE DISABLE NOVALIDATE');
 «ENDIF-»
 «ENDREM»
 «ENDFILE»
 
/*
 * MS-SQL constraints
 */
«FILE getClassName().replaceAll("\\.", "/") + ".dbconstraints.microsoft.ddl"-»
/*
 =============================================================================
 File: «name.unescape()».dbconstraints.microsoft.ddl
 Generated by JGen Code Generator from INTERSHOP Communications AG.
 =============================================================================
 The JGen Code Generator software is the property of INTERSHOP Communications AG. 
 Any rights to use are granted under the license agreement. 
 =============================================================================
 */

PROMPT /* Class «qualifiedName» */
 «FOREACH getAllRelations() AS rel-»
	«IF rel.foreignKey != null && !rel.type.isAbstract() && !rel.hasAnnotation("@noconstraint")-»
EXEC staging_ddl.add_constraint('«getTableName()»', '«maximumLength(getTableName(),23)»_CO_«threeDigitCounter(counterInc("ConstraintMS" + qualifiedName))»', 'FOREIGN KEY («FOREACH rel.foreignKey.sourceAttributes AS a SEPARATOR ","»«a.getTableColumnNames()»«ENDFOREACH-») REFERENCES «rel.type.getTableName()» («FOREACH rel.foreignKey.targetAttributes AS a SEPARATOR ","»«a.getTableColumnNames()»«ENDFOREACH-»)');
	«ENDIF-»
 «ENDFOREACH-»
 «FOREACH getAllDependencies() AS rel-»
	«IF rel.handler == null && EDLORMType.isInstance(rel.type) && !rel.type.isAbstract() && !rel.hasAnnotation("@noconstraint")-»
EXEC staging_ddl.add_constraint('«getTableName()»', '«maximumLength(getTableName(),23)»_CO_«threeDigitCounter(counterInc("ConstraintMS" + qualifiedName))»', 'FOREIGN KEY («rel.foreignKeyAttribute.getTableColumnNames()») REFERENCES «rel.type.getTableName()» (UUID)');
	«ENDIF-»
 «ENDFOREACH-»
 «IF (!isAbstract() && isSubClass("com.intershop.beehive.core.capi.domain.PersistentObjectPO"))-»
EXEC staging_ddl.add_constraint('«getTableName()»', '«maximumLength(getTableName(),23)»_CO_«threeDigitCounter(counterInc("ConstraintMS" + qualifiedName))»', 'FOREIGN KEY (DOMAINID) REFERENCES DOMAIN (UUID)');
 «ENDIF-»
 «IF (!isAbstract() && isSubClass("com.intershop.beehive.core.capi.domain.ExtensibleObjectPO"))-»

PROMPT /* Class «qualifiedName»AttributeValuePO */
EXEC staging_ddl.add_constraint('«maximumLength(getTableName(),20)»_AV', '«maximumLength(getTableName(),20)»_AV_CO001','FOREIGN KEY (OWNERID) REFERENCES «getTableName()» (UUID)');
 «ENDIF-»
 «REM»
 «IF (!isAbstract() && isImplementor("com.intershop.beehive.core.capi.security.AuthorizationObject"))-»
PROMPT /* Class «qualifiedName»RoleAssignmentPO */
EXEC staging_ddl.add_constraint('«maximumLength(getTableName(),20)»_RA', '«maximumLength(getTableName(),20)»_RA_CO001','FOREIGN KEY («FOREACH primaryKey.primaryKeyAttributes AS a SEPARATOR ","»AO_«a.getTableColumnNames()»«ENDFOREACH-») REFERENCES «getTableName()» («FOREACH primaryKey.primaryKeyAttributes AS a SEPARATOR ","»AO_«a.getTableColumnNames()»«ENDFOREACH-»)');
 «ENDIF-»
 «ENDREM»
 «ENDFILE»
 
«ENDDEFINE»

«DEFINE generateDBIndexes FOR EDLORMType-»

/*
 * Oracle indexes
 */
«FILE getClassName().replaceAll("\\.", "/") + ".dbindex.oracle.ddl"-»
/*
 =============================================================================
 File: «name.unescape()».dbindex.oracle.ddl
 Generated by JGen Code Generator from INTERSHOP Communications AG.
 =============================================================================
 The JGen Code Generator software is the property of INTERSHOP Communications AG. 
 Any rights to use are granted under the license agreement. 
 =============================================================================
 */

SET ECHO ON

SET SERVEROUTPUT ON SIZE 1000000

VARIABLE table_space      VARCHAR2(50)
VARIABLE recreate_indexes NUMBER;

EXEC :table_space := '&index_tablespace';
EXEC :recreate_indexes := '&recreate_indexes';

PROMPT /* Class «qualifiedName» */
«IF !getAllRelations().select(rel | rel.foreignKey != null && !rel.hasAnnotation("@noindex")).isEmpty-»
PROMPT -- Foreign key indices
«FOREACH getAllRelations().select(rel | rel.foreignKey != null) AS rel-»
EXEC staging_ddl.create_index('«maximumLength(getTableName(),24)»_FK«threeDigitCounter(1000 - counterInc("fkOracle" + qualifiedName))»', '«getTableName()»', '(«FOREACH rel.foreignKey.sourceAttributes AS a SEPARATOR ","»«a.getTableColumnNames()»«ENDFOREACH-»)', :table_space, 'NONUNIQUE', :recreate_indexes);
«ENDFOREACH-»

«ENDIF-»
«IF !getAllDependencies().select(rel | rel.foreignKeyAttribute != null && !rel.hasAnnotation("@noindex") && !rel.foreignKeyAttribute.hasExplicitIndex()).isEmpty-»
PROMPT -- Foreign key indices (dependencies)
«FOREACH getAllDependencies().select(rel | rel.foreignKeyAttribute != null && !rel.hasAnnotation("@noindex") && !rel.foreignKeyAttribute.hasExplicitIndex()) AS rel-»
EXEC staging_ddl.create_index('«maximumLength(getTableName(),24)»_FK«threeDigitCounter(1000 - counterInc("fkOracle" + qualifiedName))»', '«getTableName()»', '(«rel.foreignKeyAttribute.getTableColumnNames()»)', :table_space, 'NONUNIQUE', :recreate_indexes);

«ENDFOREACH-»
«ENDIF-»
«IF !getAllIndexes().isEmpty-»
PROMPT -- Inversion Entry key indices
«FOREACH getAllIndexes() AS i-»
EXEC staging_ddl.create_index('«maximumLength(getTableName(),24)»_IE«threeDigitCounter(counterInc("IndexOracle" + qualifiedName))»', '«getTableName()»', '(«FOREACH i.indexAttributes AS a SEPARATOR ","»«a.getTableColumnNames()»«ENDFOREACH-»)', :table_space, '«IF i.modifiers.contains(EDLORMIndexModifier::unique)»UNIQUE«ELSE»NONUNIQUE«ENDIF-»', :recreate_indexes);
«ENDFOREACH-»

«ENDIF-»
«IF !getAllAttributes().select(a | a.needsSearchableIndex()).isEmpty-»
PROMPT -- Searchable attribute indices
«FOREACH getAllAttributes().select(a | a.needsSearchableIndex()) AS att-»
EXEC staging_ddl.create_index('«maximumLength(getTableName(),24)»_IE«threeDigitCounter(1000 - counterInc("searchableOracle" + qualifiedName))»', '«getTableName()»', '(«att.getTableColumnNames()»)', :table_space, 'NONUNIQUE', :recreate_indexes);
«ENDFOREACH-»

«ENDIF-»
«IF null != alternateKey-»
PROMPT -- Alternate key
EXEC staging_ddl.create_index('«maximumLength(getTableName(),24)»_AK«threeDigitCounter(counterInc("ak_indexOracle" + qualifiedName))»', '«getTableName()»', '(«FOREACH alternateKey.attributes AS a SEPARATOR ","»«a.getTableColumnNames()»«ENDFOREACH-»)', :table_space, 'UNIQUE', :recreate_indexes);

«ENDIF-»
«IF (!isAbstract() && isSubClass("com.intershop.beehive.core.capi.domain.ExtensibleObjectPO"))-»
PROMPT /* Class «qualifiedName»AttributeValue */
PROMPT -- Foreign key indices
EXEC staging_ddl.create_index('«maximumLength(getTableName(),20)»_AV_FK002', '«maximumLength(getTableName(),20)»_AV', '(ownerID)', :table_space, 'NONUNIQUE', :recreate_indexes);

PROMPT -- Inversion Entry key indices
EXEC staging_ddl.create_index('«maximumLength(getTableName(),20)»_AV_IE002', '«maximumLength(getTableName(),20)»_AV', '(intValue)', :table_space, 'NONUNIQUE', :recreate_indexes);
EXEC staging_ddl.create_index('«maximumLength(getTableName(),20)»_AV_IE003', '«maximumLength(getTableName(),20)»_AV', '(doubleValue)', :table_space, 'NONUNIQUE', :recreate_indexes);
«ENDIF-»
«IF (!isAbstract() && isImplementor("com.intershop.beehive.core.capi.security.AuthorizationObject"))-»
PROMPT /* Class «qualifiedName»RoleAssignment */
PROMPT -- Foreign key indices
«FOREACH getAllAttributes().select(a | a.isPrimaryKey()) AS att-»
EXEC staging_ddl.create_index('«maximumLength(getTableName(),20)»_RA_FK«threeDigitCounter(counterInc("pk_index" + qualifiedName))»', '«maximumLength(getTableName(),20)»_RA', '(AO_«att.getTableColumnNames()»)', :table_space, 'NONUNIQUE', :recreate_indexes);
 «ENDFOREACH-»
«ENDIF-»

 «ENDFILE»

/*
 * MS-SQL indexes
 */
«FILE getClassName().replaceAll("\\.", "/") + ".dbindex.microsoft.ddl"-»
/*
 =============================================================================
 File: «name.unescape()».dbindex.microsoft.ddl
 Generated by JGen Code Generator from INTERSHOP Communications AG.
 =============================================================================
 The JGen Code Generator software is the property of INTERSHOP Communications AG. 
 Any rights to use are granted under the license agreement. 
 =============================================================================
 */
 
VARIABLE recreate_indexes NUMBER;

EXEC :recreate_indexes := '&recreate_indexes';

PROMPT /* Class «qualifiedName» */
«IF !getAllRelations().select(rel | rel.foreignKey != null).isEmpty-»
PROMPT -- Foreign key indices
«FOREACH getAllRelations().select(rel | rel.foreignKey != null) AS rel-»
EXEC staging_ddl.create_index('«maximumLength(getTableName(),24)»_FK«threeDigitCounter(1000 - counterInc("fkMS" + qualifiedName))»', '«getTableName()»', '(«FOREACH rel.foreignKey.sourceAttributes AS a SEPARATOR ","»«a.getTableColumnNames()»«ENDFOREACH-»)', 'dummytablespace', 'NONUNIQUE', :recreate_indexes);
«ENDFOREACH-»

«ENDIF-»
«IF !getAllDependencies().select(rel | rel.foreignKeyAttribute != null && !rel.hasAnnotation("@noindex") && !rel.foreignKeyAttribute.hasExplicitIndex()).isEmpty-»
PROMPT -- Foreign key indices (dependencies)
«FOREACH getAllDependencies().select(rel | rel.foreignKeyAttribute != null && !rel.hasAnnotation("@noindex") && !rel.foreignKeyAttribute.hasExplicitIndex()) AS rel-»
EXEC staging_ddl.create_index('«maximumLength(getTableName(),24)»_FK«threeDigitCounter(1000 - counterInc("fkMS" + qualifiedName))»', '«getTableName()»', '(«rel.foreignKeyAttribute.getTableColumnNames()»)', 'dummytablespace', 'NONUNIQUE', :recreate_indexes);
«ENDFOREACH-»

«ENDIF-»
«IF !getAllIndexes().isEmpty-»
PROMPT -- Explicit indices + inversion Entry key indices
«FOREACH getAllIndexes() AS i-»
EXEC staging_ddl.create_index('«maximumLength(getTableName(),24)»_IE«threeDigitCounter(counterInc("IndexMS" + qualifiedName))»', '«getTableName()»', '(«FOREACH i.indexAttributes AS a SEPARATOR ","»«a.getTableColumnNames()»«ENDFOREACH-»)', 'dummytablespace', '«IF i.modifiers.contains(EDLORMIndexModifier::unique)»UNIQUE«ELSE»NONUNIQUE«ENDIF-»', :recreate_indexes«IF null != i.getAnnotationValue("@mssql-hint")», '«i.getAnnotationValue("@mssql-hint")»'«ENDIF-»);
«ENDFOREACH-»

«ENDIF-»
«IF !getAllAttributes().select(a | a.needsSearchableIndex()).isEmpty-»
PROMPT -- Searchable attribute indices
«FOREACH getAllAttributes().select(a | a.needsSearchableIndex()) AS att-»
EXEC staging_ddl.create_index('«maximumLength(getTableName(),24)»_IE«threeDigitCounter(1000 - counterInc("searchableMS" + qualifiedName))»', '«getTableName()»', '(«att.getTableColumnNames()»)', 'dummytablespace', 'NONUNIQUE', :recreate_indexes);
«ENDFOREACH-»

«ENDIF-»
«IF null != alternateKey-»
PROMPT -- Alternate key
EXEC staging_ddl.create_index('«maximumLength(getTableName(),24)»_AK«threeDigitCounter(counterInc("ak_indexMS" + qualifiedName))»', '«getTableName()»', '(«FOREACH alternateKey.attributes AS a SEPARATOR ","»«a.getTableColumnNames()»«ENDFOREACH-»)', 'dummytablespace', 'UNIQUE', :recreate_indexes);

«ENDIF-»
«IF (!isAbstract() && isSubClass("com.intershop.beehive.core.capi.domain.ExtensibleObjectPO"))-»
PROMPT /* Class «qualifiedName»AttributeValue */
PROMPT -- Foreign key indices
EXEC staging_ddl.create_index('«maximumLength(getTableName(),20)»_AV_FK002', '«maximumLength(getTableName(),20)»_AV', '(ownerID)', 'dummytablespace', 'NONUNIQUE', :recreate_indexes);

PROMPT -- Inversion Entry key indices
EXEC staging_ddl.create_index('«maximumLength(getTableName(),20)»_AV_IE002', '«maximumLength(getTableName(),20)»_AV', '(intValue)', 'dummytablespace', 'NONUNIQUE', :recreate_indexes);
EXEC staging_ddl.create_index('«maximumLength(getTableName(),20)»_AV_IE003', '«maximumLength(getTableName(),20)»_AV', '(doubleValue)', 'dummytablespace', 'NONUNIQUE', :recreate_indexes);
«ENDIF-»
«IF (!isAbstract() && isImplementor("com.intershop.beehive.core.capi.security.AuthorizationObject"))-»
PROMPT /* Class «qualifiedName»RoleAssignment */
PROMPT -- Foreign key indices
«FOREACH getAllAttributes().select(a | a.isPrimaryKey()) AS att-»
EXEC staging_ddl.create_index('«maximumLength(getTableName(),20)»_RA_FK«threeDigitCounter(counterInc("pk_index" + qualifiedName))»', '«maximumLength(getTableName(),20)»_RA', '(AO_«att.getTableColumnNames()»)', 'dummytablespace', 'NONUNIQUE', :recreate_indexes);
 «ENDFOREACH-»
«ENDIF-»

 «ENDFILE»

«ENDDEFINE»

«ENDDEFINE»        
