/*
 * Generates the source code for RAPI service interfaces
 */

«IMPORT edl»
«EXTENSION util::EDLUtil»
«EXTENSION org::eclipse::xtend::util::stdlib::properties»


«DEFINE generateServiceInterfaces FOR EDLModel»
    «FOREACH eAllContents.typeSelect(EDLRAPIType) AS t»
        «EXPAND generateServiceInterface FOR t»
    «ENDFOREACH»
«ENDDEFINE»


«DEFINE generateServiceInterface FOR EDLRAPIType-»
    «FILE getClassName().getServiceInterfaceName().replaceAll("\\.", "/") + ".java"-»
    «EXPAND generateHeader FOR this-»
    «LET {} AS imports-»
package «getPackageName()»;

//PREPAREIMPORTS «getPackageName()»
//{{ imports
// insert your imports here
//}} imports

/**
 * This interface defines  methods for «getClassName().getServiceInterfaceName().getShortName()» as defined in the 
 * object model.
«IF comment != null-»
 * «comment»
«ENDIF-»
 *
 * @generated 
 */
public interface «getClassName().getServiceInterfaceName().getShortName()»
    «IF superClasses.size > 0-»
        extends
        «FOREACH superClasses AS sc SEPARATOR ", "-»
            «imports.addImport(sc.getClassName().getServiceInterfaceName())-»
            «sc.getClassName().getServiceInterfaceName().getShortName()-»
        «ENDFOREACH-»
    «ENDIF-»    
    //{{ parents
    // insert your implemented interfaces here
    //}} parents
{
    /**
     * The name that can be used to lookup this bean from the naming manager.
     * Use this constant rather than creating a new string object everytime.
     *
     * @generated 
     */
    public static final String SERVICE_NAME = "«getClassName().getServiceInterfaceName().getShortName()»";
    
    «FOREACH getOperations() AS op-»
        «EXPAND generateOperation(imports) FOR op-»
    «ENDFOREACH-»
}
//ADDIMPORTS «FOREACH imports AS i SEPARATOR ", "»«i»«ENDFOREACH»
«ENDLET-»
    «ENDFILE-»
«ENDDEFINE»


«DEFINE generateHeader FOR EDLRAPIType-»
// =============================================================================
// File: «name.unescape().getServiceInterfaceName()».java
// Generated by JGen Code Generator from INTERSHOP Communications AG.
// Generator template: RAPIServiceInterface.xpt(checksum: «getProperty("RAPIServiceInterface.xpt.checksum")»)
// =============================================================================
// The JGen Code Generator software is the property of INTERSHOP Communications AG. 
// Any rights to use are granted under the license agreement. 
// =============================================================================
«ENDDEFINE»


«DEFINE generateOperation(List[String] imports) FOR EDLRAPIOperation-»
/**
«IF comment != null-»
 * «comment»
«ENDIF-»
 * @generated
 */     
public «type.getClassName().getShortName()»«dimension.getArrayDimension()» «name.unescape()»(
    «FOREACH parameters AS p SEPARATOR ", "-»
        «imports.addImport(p.type.getClassName())-»
        «p.type.getClassName().getShortName()»«p.dimension.getArrayDimension()» «p.name.unescape()»        
    «ENDFOREACH-»
    )
    «imports.addImport(type.getClassName())-»
    throws
    «FOREACH exceptions.getClassName().union({"java.rmi.RemoteException"}) AS ex SEPARATOR ", "-»
        «imports.addImport(ex)-»
        «ex.getShortName()-»
    «ENDFOREACH-»
    ;
«ENDDEFINE»
