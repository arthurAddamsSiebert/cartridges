/*
 * Generates the deployment descriptor file for ORM classes
 */

«IMPORT edl»
«EXTENSION util::EDLUtil»
«EXTENSION org::eclipse::xtend::util::stdlib::properties»


«DEFINE generateDescriptors FOR EDLModel»
    «FOREACH eAllContents.typeSelect(EDLORMType) AS t»
        «EXPAND generateDescriptor FOR t»
    «ENDFOREACH»
«ENDDEFINE»


«DEFINE generateDescriptor FOR EDLORMType-»
    «FILE getClassName().replaceAll("\\.", "/") + ".orm"-»
<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by JGen Code Generator from INTERSHOP Communications AG. -->
<!-- Generator template: ORMDescriptor.xpt(checksum: «getProperty("ORMDescriptor.xpt.checksum")») -->

<orm:orm xmlns:orm="http://www.intershop.de/enfinity/orm">
    <orm:class
        name="«getClassName()»"
        primary-key-class="«getClassName()»Key"
«IF null != getAnnotationValue("@mssql-hint-pk") || null != getAnnotationValue("@oracle-hint-pk")-»
		primary-key-extra-data="@mssql-hint=«getAnnotationValue("@mssql-hint-pk")»,@oracle-hint=«getAnnotationValue("@oracle-hint-pk")»"
«ELSEIF null != primaryKey && (null != primaryKey.getAnnotationValue("@mssql-hint") || null != primaryKey.getAnnotationValue("@oracle-hint"))-»
		primary-key-extra-data="@mssql-hint=«primaryKey.getAnnotationValue("@mssql-hint")»,@oracle-hint=«primaryKey.getAnnotationValue("@oracle-hint")»"
«ENDIF-»
«IF null != getAnnotationValue("@mssql-hint-fbi") || null != getAnnotationValue("@oracle-hint-fbi")-»
		index-extra-data="@mssql-hint=«getAnnotationValue("@mssql-hint-fbi")»,@oracle-hint=«getAnnotationValue("@oracle-hint-fbi")»" 
«ENDIF-»
«IF (alternateKey != null) || getAllSuperClasses().exists(s | s.alternateKey != null)-»
        alternate-key-class="«getClassName()»AlternateKey"
«ENDIF-»
        factory-class="«getClassName()»Factory"
«IF superClass != null-»
        super-class="«superClass.getClassName()»"
«ENDIF-»
«IF modifiers.contains(EDLORMTypeModifier::abstract)-»
        abstract="true"
«ELSE-»
        table-name="«getTableName()»"
    «IF referenceType == EDLORMReferenceType::strong-»
        reference-type="strong"
    «ELSEIF referenceType == EDLORMReferenceType::soft-»
        reference-type="soft"
    «ELSEIF referenceType == EDLORMReferenceType::weak-»
        reference-type="weak"
    «ELSEIF referenceType == EDLORMReferenceType::none-»
        reference-type="none"
    «ENDIF-»
«ENDIF-»
    >
    «FOREACH getAttributes().reject(a | a.isLocalized() || a.isMapped()) AS att-»
        «EXPAND generateAttribute FOR att-»
    «ENDFOREACH-»
        «IF modifiers.contains(EDLORMTypeModifier::oca)-»
        «EXPAND generateOca FOR this-»
    «ENDIF-»
    «IF modifiers.contains(EDLORMTypeModifier::timestamp)-»
        «EXPAND generateTimestamp FOR this-»
    «ENDIF-»
    «FOREACH getRelations() AS rel-»
        «EXPAND generateRelation FOR rel-»
    «ENDFOREACH-»
    </orm:class>
</orm:orm>
    «ENDFILE»
«ENDDEFINE»
«REM»
#boolean isExtensible = ORMUtil.isExtensibleObject(clazz);
#boolean isAuthorizationObject = (!clazz.isAbstract()  && JavaUtil.isImplementor(clazz, "com.intershop.beehive.core.capi.security.AuthorizationObject"));
#boolean isAttributeValue = JavaUtil.isImplementor(clazz, "com.intershop.beehive.core.capi.domain.AttributeValue");
#boolean isRoleAssignment = JavaUtil.isImplementor(clazz, "com.intershop.beehive.core.capi.security.RoleAssignment");

#}
#
#// special handling for extensible objects
#if (isExtensible && !clazz.isAbstract())
#{
#   ModelClass avClass = JGen.lookupClass(className + "AttributeValuePO");
        <orm:relation
            name="attributeValues"
            cardinality="0..n"
            type="$className$AttributeValuePO"
            inverse="owner"
            reference-type="strong"
        >
            <orm:foreign-key
                source-attribute-name="UUID"
                target-attribute-name="ownerID"
            />
        </orm:relation>
#}
#// special handling for authorization objects
#if (isAuthorizationObject)
#{
#   ModelClass raClass = JGen.lookupClass(className + "RoleAssignmentPO");
        <orm:relation
            name="roleAssignments"
            cardinality="0..n"
            type="$className$RoleAssignmentPO"
            inverse="authorizationObject"
            reference-type="strong"
        >
#   fields = ORMUtil.getAllPrimaryKeys(clazz);
#   while (fields.hasMoreElements())
#   {
#       ModelField field = (ModelField) fields.nextElement();
#
            <orm:foreign-key
                source-attribute-name="$field.getName()$"
                target-attribute-name="aO_$field.getName()$"
            />
#   }            
        </orm:relation>
#}
«ENDREM»


«DEFINE generateAttribute FOR EDLORMAttribute-»
    «IF type.getClassName() == "boolean"-»
        <orm:attribute
            name="«name.unescape()»Flag"
            type="boolean"
        «IF columnName != null-»
            column-name="«getColumnName()»"
        «ELSE-»
            column-name="«getColumnName()»FLAG"
        «ENDIF-»
            column-type="BOOLEAN"
        «IF isRequired()-»
            required="true"
        «ENDIF-»
        «IF isSearchable()-»
            searchable="true"
        «ENDIF-»
        «IF isLazy()-»
            lazy="true"
        «ENDIF-»
        «IF defaultValue != null && defaultValue.getPlainValue() == "true"-»
            default-value="true"
        «ENDIF-»
        />
    «ELSEIF type.getClassName() == "com.intershop.beehive.foundation.quantity.Money"-»
        <orm:attribute
            name="«name.unescape()»Code"
            type="java.lang.String"
            column-name="«getColumnName()»CODE"
            column-type="VARCHAR(3)"
        />
        <orm:attribute
            name="«name.unescape()»Value"
            type="java.math.BigDecimal"
            column-name="«getColumnName()»VALUE"
            column-type="DECIMAL"
        />
    «ELSEIF type.getClassName() == "com.intershop.beehive.foundation.quantity.Quantity"-»
        <orm:attribute
            name="«name.unescape()»Unit"
            type="java.lang.String"
            column-name="«getColumnName()»UNIT"
            column-type="VARCHAR(256)"
        />
        <orm:attribute
            name="«name.unescape()»Value"
            type="java.math.BigDecimal"
            column-name="«getColumnName()»VALUE"
            column-type="DECIMAL"
        />
    «ELSEIF type.getClassName() == "com.intershop.beehive.xcs.common.ProductRef"-»
        <orm:attribute
            name="«name.unescape()»ProductSKU"
            type="java.lang.String"
            column-name="«getColumnName()»PRODUCTSKU"
            column-type="VARCHAR(256)"
        />
        <orm:attribute
            name="«name.unescape()»DomainName"
            type="java.lang.String"
            column-name="«getColumnName()»DOMAINNAME"
            column-type="VARCHAR(256)"
        />
    «ELSEIF type.getClassName() == "com.intershop.beehive.core.capi.user.User"-»
        <orm:attribute
            name="«name.unescape()»ID"
            type="java.lang.String"
        «IF columnName != null-»
            column-name="«getColumnName()»"
        «ELSE-»
            column-name="«getColumnName()»ID"
        «ENDIF-»
            column-type="VARCHAR(28)"
        />
    «ELSEIF type.getClassName() == "com.intershop.beehive.foundation.quantity.ExchangeRate"-»
        <orm:attribute
            name="«name.unescape()»"
            type="java.lang.String"
            column-name="«getColumnName()»"
            column-type="VARCHAR(50)"
        />
    «ELSE-»
        <orm:attribute
            name="«name.unescape()»"
        «IF type.metaType == EDLPrimitiveType && ((EDLPrimitiveType) type).name.unescape() == "text"-»
            type="char[]"
        «ELSE-»
            type="«type.getClassName()»"
        «ENDIF-»
        «IF handler != null-»
            handler="«handler»"
        «ENDIF-»
        «IF isPrimaryKey()-»
            primary-key="true"
        «ENDIF-»
        «IF isAlternativeKey()-»
            alternative-key="true"
        «ENDIF-»
        «IF isForeignKey()-»
            foreign-key="true"
        «ENDIF-»
        «IF isRequired()-»
            required="true"
        «ENDIF-»
        «IF isSearchable()-»
            searchable="true"
        «ENDIF-»
        «IF isLazy()-»
            lazy="true"
        «ENDIF-»
            column-name="«getColumnName()»"
            column-type="«getJDBCType()»"
        «IF defaultValue != null-»
            default-value="«defaultValue.getPlainValue()»"
        «ENDIF-»
        />
    «ENDIF-»
«ENDDEFINE»


«DEFINE generateOca FOR EDLORMType-»
        <orm:attribute
            name="oca"
            type="int"
            optimistic-control="true"
            required="true"
            column-name="OCA"
            column-type="INTEGER"
        />
«ENDDEFINE»


«DEFINE generateTimestamp FOR EDLORMType-»
        <orm:attribute
            name="lastModified"
            type="java.util.Date"
            timestamp="true"
            required="true"
            column-name="LASTMODIFIED"
            column-type="TIMESTAMP"
        />
«ENDDEFINE»


«DEFINE generateRelation FOR EDLORMRelation-»
        <orm:relation
            name="«name.unescape()»"
    «IF cardinality == EDLORMRelationCardinality::zeroToOne-»
            cardinality="0..1"
    «ELSEIF cardinality == EDLORMRelationCardinality::oneToOne-»
            cardinality="1"
    «ELSEIF cardinality == EDLORMRelationCardinality::zeroToMany-»
            cardinality="0..n"
    «ENDIF-»
            type="«type.getClassName()»"
    «IF inverseRelation != null-»
            inverse="«inverseRelation.name.unescape()»"
    «ENDIF-»
    «IF referenceType == EDLORMReferenceType::strong-»
            reference-type="strong"
    «ELSEIF referenceType == EDLORMReferenceType::soft-»
            reference-type="soft"
    «ELSEIF referenceType == EDLORMReferenceType::weak-»
            reference-type="weak"
    «ELSEIF referenceType == EDLORMReferenceType::none-»
            reference-type="none"
    «ENDIF-»
    «IF deleteAction == EDLORMDeleteAction::propagate-»
            delete-action="propagate"
    «ELSEIF deleteAction == EDLORMDeleteAction::remove-»
            delete-action="remove"
    «ELSEIF deleteAction == EDLORMDeleteAction::block-»
            delete-action="block"
    «ENDIF-»
        >
    «IF foreignKey != null-»
        «FOREACH foreignKey.sourceAttributes AS s-»
            <orm:foreign-key
                source-attribute-name="«s.name.unescape()»"
                target-attribute-name="«foreignKey.targetAttributes.get(foreignKey.sourceAttributes.indexOf(s)).name.unescape()»"
            />
        «ENDFOREACH-»
    «ENDIF-»
    «IF inverseRelation != null && inverseRelation.foreignKey != null-»
        «FOREACH inverseRelation.foreignKey.sourceAttributes AS s-»
            <orm:foreign-key
                source-attribute-name="«inverseRelation.foreignKey.targetAttributes.get(inverseRelation.foreignKey.sourceAttributes.indexOf(s)).name.unescape()»"
                target-attribute-name="«s.name.unescape()»"
            />
        «ENDFOREACH-»
    «ENDIF-»
        </orm:relation>
«ENDDEFINE»
