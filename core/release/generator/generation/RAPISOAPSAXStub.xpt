/*
 * Generates the source code for RAPI soap stubs with SAX encoding
 */

«IMPORT edl»
«EXTENSION util::EDLUtil»
«EXTENSION org::eclipse::xtend::util::stdlib::properties»


«DEFINE generateServiceStubs FOR EDLModel»
    «FOREACH eAllContents.typeSelect(EDLRAPIType).select(t |
        t.modifiers.contains(EDLRAPITypeModifier::soap) &&
        !t.modifiers.contains(EDLRAPITypeModifier::binary)) AS t»
        «EXPAND generateServiceStub FOR t»
    «ENDFOREACH»
«ENDDEFINE»


«DEFINE generateServiceStub FOR EDLRAPIType-»
    «FILE getClassName().getServiceInterfaceName().replaceAll("\\.", "/") + "_SOAPStubSAX.java"-»
    «EXPAND generateHeader FOR this-»
    «LET {} AS imports-»
package «getPackageName()»;

//PREPAREIMPORTS «getPackageName()»

/**
 * This class represents a stub implementation of <code>«getClassName().getServiceInterfaceName().getShortName()»</code>.
 * It enables clients to remotely access the service <code>«getClassName().getServiceInterfaceName().getShortName()»</code>.
 * Internally the stub maps method calls to corresponding SOAP/HTTP messages
 * sent to the implementing server.
 *
 * @generated
 */
public «modifiers.contains(EDLRAPITypeModifier::abstract) ? "abstract" : ""» class «getClassName().getServiceInterfaceName().getShortName()»_SOAPStub
«IF superClasses.size == 0-»
    «imports.addImport("com.intershop.beehive.core.rapi.soap.SOAPStub")-»
    extends SOAPStub
«ELSE-»
    «imports.addImport(superClasses.get(0).getClassName().getServiceInterfaceName() + "_SOAPStub")-»    
    extends «superClasses.get(0).getClassName().getServiceInterfaceName().getShortName()»_SOAPStub
«ENDIF-»
    implements «getClassName().getServiceInterfaceName().getShortName()»
{
    /**
     * XML namespace URI used to identify the body block
     * @generated
     */
    private static final String BODYBLOCK_NAMESPACE_URI = XMLConstants.ENFINITY_NAMESPACE + 
        "/«getPackageName().replaceAll("\\.", "/")»";
    
    /**
     * Constructs a «getClassName().getServiceInterfaceName().getShortName()»_SOAPStub with the specified
     * connection properties like host name and user
     * credentials.
     *
     * @param   props   the properties for the URLConnection
     * @generated
     */
    public «getClassName().getServiceInterfaceName().getShortName()»_SOAPStub(ConnectionProperties props)
    «imports.addImport("com.intershop.beehive.core.rapi.soap.ConnectionProperties")-»
    {
        super(props);
    }
    «FOREACH getOperations() AS op-»
        «EXPAND generateOperation(imports) FOR op-»
    «ENDFOREACH-»
}
//ADDIMPORTS «FOREACH imports AS i SEPARATOR ", "»«i»«ENDFOREACH»
«ENDLET-»
    «ENDFILE-»
«ENDDEFINE»


«DEFINE generateHeader FOR EDLRAPIType-»
// =============================================================================
// File: «getClassName().getServiceInterfaceName().getShortName()»_SOAPStub.java
// Generated by JGen Code Generator from INTERSHOP Communications AG.
// Generator template: RAPISOAPSAXStub.xpt(checksum: «getProperty("RAPISOAPSAXStub.xpt.checksum")»)
// =============================================================================
// The JGen Code Generator software is the property of INTERSHOP Communications AG. 
// Any rights to use are granted under the license agreement. 
// =============================================================================
«ENDDEFINE»


«DEFINE generateOperation(List[String] imports) FOR EDLRAPIOperation-»
/**
 * This method represents a wrapper for the according business method
 * <code>«((EDLRAPIType) eContainer).getClassName().getServiceInterfaceName().getShortName()».«name.unescape()»</code>.
 *
 * <p>The implementation of this method maps calls to corresponding SOAP/HTTP
 * messages causing the execution of the according business method at the
 * server.<p>
 *
 * @generated
 */
public «type.getClassName().getShortName()» «name.unescape()»(
    «imports.addImport(type.getClassName())-»
    «FOREACH parameters AS p SEPARATOR ", "-»
        «imports.addImport(p.type.getClassName())-»
        «p.type.getClassName().getShortName()» «p.name.unescape()»
    «ENDFOREACH-»
    )
    throws
    «FOREACH exceptions.getClassName().union({"java.rmi.RemoteException"}) AS ex SEPARATOR ", "-»
        «imports.addImport(ex)-»
        «ex.getShortName()»
    «ENDFOREACH-»
{
    //=======================================================
    //encode arguments
    //=======================================================
    «imports.addImport("java.io.PrintWriter")-»
    «imports.addImport("java.io.StringWriter")-»    
    «imports.addImport("com.intershop.beehive.foundation.xmlutil.XMLWriter")-»
    «imports.addImport("com.intershop.beehive.foundation.xmlutil.XMLConstants")-»

    StringWriter xmlCall = new StringWriter();
    XMLWriter xmlwriter = new XMLWriter(new PrintWriter(xmlCall));
    xmlwriter.write("<");
    xmlwriter.write(XMLConstants.BODYBLOCK_PREFIX);
    xmlwriter.write(":«name.unescape()» xmlns:");
    xmlwriter.write(XMLConstants.BODYBLOCK_PREFIX);
    xmlwriter.write("=\"");
    xmlwriter.write(BODYBLOCK_NAMESPACE_URI);
    xmlwriter.write("\">");

    «IF parameters.size > 0-»
        try
        {
            «FOREACH parameters AS p-»
                xmlwriter.printAsElement("«p.name.unescape()»", «p.name.unescape()», true);
            «ENDFOREACH-»
        }
        catch (EncodeException ex)
        {
            «imports.addImport("com.intershop.beehive.foundation.xmlutil.EncodeException")-»
            «imports.addImport("com.intershop.beehive.core.rapi.soap.SOAPException")-»
            throw new SOAPException("«((EDLRAPIType) eContainer).getClassName().getServiceInterfaceName().getShortName()»: encoding of arguments failed", SOAPException.FAULTCODE_CLIENT, ex);
        }
    «ENDIF-»

    xmlwriter.write("</");
    xmlwriter.write(XMLConstants.BODYBLOCK_PREFIX);
    xmlwriter.write(":«name.unescape()»>");

    //=======================================================
    //dispatch method call
    //=======================================================

    «imports.addImport("java.net.URLConnection")-»
    URLConnection soapConnection = this.dispatchMethodCall(
        «((EDLRAPIType) eContainer).getClassName().getServiceInterfaceName().getShortName()».SERVICE_NAME, xmlCall.getBuffer());

    //=======================================================
    //parse payload and result from SOAPResponse
    //=======================================================

    «imports.addImport("com.intershop.beehive.core.rapi.soap.PayloadHandler")-»
    PayloadHandler handler = new PayloadHandler(); 
    this.parsePayload(soapConnection, handler); 
        
    if (handler.hasFault())
    {
        try
        {
            handler.getException();
        }
        catch (Exception ex)
        {
            «FOREACH exceptions AS ex-»
                 if (ex instanceof «ex.getClassName().getShortName()»)
                 {
                     throw («ex.getClassName().getShortName()») ex;
                 }
            «ENDFOREACH-»
             if (ex instanceof RemoteException)
             {
                 throw (RemoteException) ex;
             }
         }
    }
    «IF type.getClassName() != "void"-»
        return («type.getClassName().getShortName()») handler.getResult(); 
    «ENDIF-»        
}
«ENDDEFINE»
