<?xml version="1.0" encoding="UTF-8"?>

<components xmlns="http://www.intershop.de/component/2010">

	<implementation name="GenericExecutionSite"
		class="com.intershop.beehive.core.internal.component.GenericExecutionSite"
		factory="GenericFactory">
		<requires name="interface" contract="String" cardinality="1..n" />
	</implementation>

	<implementation name="ApplicationType"
		class="com.intershop.beehive.core.capi.domain.ApplicationTypeImpl"
		implements="App">
		<requires name="id" contract="String" cardinality="1..1" />
		<requires name="urlIdentifier" contract="String" cardinality="0..1" />
		<requires name="cartridgeListProvider" contract="CartridgeListProvider"
			cardinality="1..1" />
		<requires name="resourceBundleName" contract="String"
			cardinality="0..1" />
		<requires name="namedObject" contract="NamedObject"
			cardinality="0..n" />
		<requires name="applicationLifecycleListener" contract="ApplicationLifecycleListener"
			cardinality="0..n" />
	</implementation>

	<implementation name="CartridgeListProvider"
		class="com.intershop.beehive.core.internal.app.CartridgeListProviderImpl"
		implements="CartridgeListProvider">
		<requires name="selectedCartridge" contract="String"
			cardinality="0..n" />
		<requires name="optionalCartridge" contract="String"
			cardinality="0..n" />		
		<requires name="subProvider" contract="CartridgeListProvider"
			cardinality="0..n" />
		<!-- Deprecated since 7.6-->
		<requires name="parent" contract="CartridgeListProvider"
			cardinality="0..1" />
	</implementation>

	<implementation name="SystemCartridgeListProvider"
		class="com.intershop.beehive.core.internal.cartridge.SystemCartridgeListProviderImpl"
		implements="CartridgeListProvider">
	</implementation>

	<implementation name="SiteAppProviderImpl"
		class="com.intershop.beehive.core.internal.app.SiteAppProviderImpl"
		implements="SiteAppProvider">
		<requires name="appEngine" contract="AppEngine" cardinality="1..1" />
	</implementation>

	<!-- Handler that processes RenderEvent -->
	<implementation name="RemoteURLConvertHandler"
		class="com.intershop.beehive.core.internal.template.RemoteURLConvertHandler">
		<!-- remote url converters that are notified upon a remote url converting 
			request -->
		<requires name="remoteURLConverter" contract="RemoteURLConverter"
			cardinality="0..n" />
	</implementation>

	<!-- Handler that builds the current URLComposer -->
	<implementation name="URLComposerHandler"
		class="com.intershop.beehive.core.internal.url.URLComposerHandler">
		<!-- urlcomposerbuilders that are notified upon a build urlcomposer request -->
		<requires name="urlComposerBuilder" contract="URLComposerBuilder"
			cardinality="0..n" />
	</implementation>

	<implementation name="PageCacheKeywordsProviderResolver"
		implements="PageCacheKeywordsProviderResolver"
		class="com.intershop.beehive.core.internal.pagecache.PageCacheKeywordsProviderResolverImpl">
		<requires name="keywordsProvider" contract="PageCacheKeywordsProvider"
			cardinality="0..n" />
	</implementation>

	<implementation name="PersistentObjectCacheClearKeyProvider"
		implements="CacheClearKeyProvider"
		class="com.intershop.beehive.core.capi.cache.PersistentObjectCacheClearKeyProvider" />

	<implementation name="PageCache" implements="ClearableCache"
		class="com.intershop.beehive.core.internal.pagecache.PageCache" start="startCache"
		stop="stopCache">
		<requires name="cacheID" contract="String" cardinality="1..1" />
		<requires name="pageCacheKeywordsProviderResolver" contract="PageCacheKeywordsProviderResolver"
			cardinality="1..1" />
		<requires name="mBeanRegistrationProvider" contract="MBeanRegistrationProvider"
			cardinality="1..1" />
	</implementation>

	<implementation name="LRUCache" implements="ObjectCache"
		class="com.intershop.beehive.foundation.util.LRUHashMap" start="startCache"
		stop="stopCache">
		<requires name="cacheID" contract="String" cardinality="1..1" />
		<requires name="cacheClearHandler" contract="ObjectCacheClearHandler"
			cardinality="0..1" />
		<requires name="capacity" contract="Integer" cardinality="0..1" />
		<requires name="enabled" contract="Boolean" cardinality="0..1" />
		<requires name="mBeanRegistrationProvider" contract="MBeanRegistrationProvider"
			cardinality="1..1" />
	</implementation>

	<implementation name="TransactionalLRUCache" implements="ObjectCache"
		class="com.intershop.beehive.foundation.util.TransactionalLRUHashMap" start="startCache"
		stop="stopCache">
		<requires name="cacheID" contract="String" cardinality="1..1" />
		<requires name="cacheClearHandler" contract="ObjectCacheClearHandler"
			cardinality="0..1" />
		<requires name="capacity" contract="Integer" cardinality="0..1" />
		<requires name="enabled" contract="Boolean" cardinality="0..1" />
		<requires name="mBeanRegistrationProvider" contract="MBeanRegistrationProvider"
			cardinality="1..1" />
	</implementation>

	<implementation name="BeanLRUCache" implements="ObjectCache"
		class="com.intershop.beehive.foundation.util.BeanLRUCache" start="startCache"
		stop="stopCache">
		<requires name="cacheID" contract="String" cardinality="1..1" />
		<requires name="cacheClearHandler" contract="ObjectCacheClearHandler"
			cardinality="0..1" />
		<requires name="capacity" contract="Integer" cardinality="0..1" />
		<requires name="enabled" contract="Boolean" cardinality="0..1" />

		<requires name="mBeanRegistrationProvider" contract="MBeanRegistrationProvider"
			cardinality="1..1" />
	</implementation>

	<implementation name="PreferenceDefinitionLRUCache"
		implements="ObjectCache"
		class="com.intershop.beehive.core.internal.preference.PreferenceDefinitionLRUCache"
		start="startCache" stop="stopCache">
		<requires name="cacheID" contract="String" cardinality="1..1" />
		<requires name="cacheClearHandler" contract="ObjectCacheClearHandler"
			cardinality="0..1" />
		<requires name="capacity" contract="Integer" cardinality="0..1" />
		<requires name="enabled" contract="Boolean" cardinality="0..1" />
		<requires name="mBeanRegistrationProvider" contract="MBeanRegistrationProvider"
			cardinality="1..1" />
 	</implementation>

	<implementation name="DomainRelationsCache" implements="ObjectCache"
		class="com.intershop.beehive.core.internal.domain.DomainRelationsCache"
		start="startCache" stop="stopCache">
		<requires name="cacheID" contract="String" cardinality="1..1" />
		<requires name="cacheClearHandler" contract="ObjectCacheClearHandler"
			cardinality="1..1" />
		<requires name="capacity" contract="Integer" cardinality="0..1" />
		<requires name="enabled" contract="Boolean" cardinality="0..1" />
		<requires name="mBeanRegistrationProvider" contract="MBeanRegistrationProvider"
			cardinality="1..1" />
	</implementation>

	<implementation name="DomainRelationsCacheClearHandler" class="com.intershop.beehive.core.internal.domain.DomainRelationsCacheClearHandler" implements="ObjectCacheClearHandler" />

	<implementation name="InstantCacheClearProcessor"
		implements="InstantCacheClearProcessor"
		class="com.intershop.beehive.core.internal.cache.InstantCacheClearProcessorImpl"
		start="startProcessor" stop="stopProcessor">
		<requires name="processorID" contract="String"
			cardinality="1..1" />
		<requires name="cacheGroup" contract="CacheGroup"
			cardinality="0..n" />
		<requires name="mBeanRegistrationProvider" contract="MBeanRegistrationProvider"
			cardinality="1..1" />
		<requires name="cacheEngine" contract="CacheEngine"
			cardinality="1..1" />
		<requires name="messenger" contract="Messenger"
			cardinality="1..1" />
	</implementation>

	<implementation name="BatchCacheClearProcessor"
		implements="BatchCacheClearProcessor"
		class="com.intershop.beehive.core.internal.cache.BatchCacheClearProcessorImpl"
		start="startProcessor" stop="stopProcessor">
		<requires name="processorID" contract="String"
			cardinality="1..1" />
		<requires name="cacheGroup" contract="CacheGroup"
			cardinality="0..n" />
		<requires name="mBeanRegistrationProvider" contract="MBeanRegistrationProvider"
			cardinality="1..1" />
		<requires name="cacheEngine" contract="CacheEngine"
			cardinality="1..1" />
		<requires name="messenger" contract="Messenger"
			cardinality="1..1" />
	</implementation>

	<implementation name="ORMCacheSyncCacheClearProcessor"
		implements="ORMCacheSyncCacheClearProcessor"
		class="com.intershop.beehive.core.internal.cache.ORMCacheSyncCacheClearProcessorImpl"
		start="startProcessor" stop="stopProcessor">
		<requires name="processorID" contract="String"
			cardinality="1..1" />
		<requires name="mBeanRegistrationProvider" contract="MBeanRegistrationProvider"
			cardinality="1..1" />
		<requires name="cacheGroup" contract="CacheGroup"
			cardinality="0..n" />
		<requires name="cacheEngine" contract="CacheEngine"
			cardinality="1..1" />
	</implementation>

	<implementation name="ORMEngineProvider" implements="ORMEngineProvider"
		class="com.intershop.beehive.core.internal.environment.ORMEngineProviderImpl" />

	<!-- Processors for the ISFILEBUNDLE tag -->
	<implementation name="YUICSSResourceCompressor"
		implements="ResourceProcessor"
		class="com.intershop.beehive.core.internal.resource.YUICSSResourceCompressor" />

	<implementation name="YUIJSResourceCompressor"
		implements="ResourceProcessor"
		class="com.intershop.beehive.core.internal.resource.YUIJSResourceCompressor" />

	<implementation name="ResourceAppender" implements="ResourceProcessor"
		class="com.intershop.beehive.core.internal.resource.ResourceAppender">
		<requires name="stringToAppend" contract="String"
			cardinality="1..1" />
	</implementation>

	<implementation name="Messenger" implements="Messenger" factory="MessengerFactory"> 
		<requires name="channelName" contract="String" cardinality="1..1" /> 
	</implementation> 

	<!-- Localization hook for applications -->
	<implementation name="LocalizationApplicationLifecycleHook" class="com.intershop.beehive.core.internal.localization.hook.LocalizationApplicationLifecycleHook" implements="ApplicationLifecycleListener">
		<requires name="deleteOnly" contract="Boolean" cardinality="0..1" />
	</implementation>
	
	
	<implementation name="BundleResourcesCacheClearHandler" implements="ObjectCacheClearHandler" class="com.intershop.beehive.core.internal.resource.ISFileBundleCacheClearHandler"/> 
	
	<implementation name="UserGroupAssignmentsCacheClearHandler" implements="ObjectCacheClearHandler" class="com.intershop.beehive.core.internal.user.UserGroupAssignmentsCacheClearHandler"/>

	<implementation name="UserGroupParentGroupsCacheClearHandler" implements="ObjectCacheClearHandler" class="com.intershop.beehive.core.internal.user.UserGroupParentGroupsCacheClearHandler"/>
	
<!-- Registration of extensions -->
	<implementation name="BusinessObjectExtensionFactories"  
					class="com.intershop.beehive.core.capi.businessobject.BusinessObjectExtensionFactories">
									
					<requires name="extensionFactory" contract="BusinessObjectExtensionFactory" cardinality="0..n"/>		
	</implementation>

	<implementation name="PersistentObjectBOExtensionFactory" 
					implements="BusinessObjectExtensionFactory" 
					class="com.intershop.beehive.core.capi.domain.PersistentObjectBOExtensionFactory">
	</implementation>

	<implementation name="SystemDateProvider" class="com.intershop.beehive.core.capi.date.SystemDateProvider"/>
	<implementation name="RequestDateProvider" class="com.intershop.beehive.core.capi.request.RequestDateProvider"/>
	<implementation name="SessionDateProvider" class="com.intershop.beehive.core.capi.request.SessionDateProvider"/>
	
	<implementation name="NonSensitiveRequestParametersProvider" 
					implements="NonSensitiveRequestParametersProvider"
					class="com.intershop.beehive.core.internal.request.NonSensitiveRequestParametersProviderImpl"/>
					
	<implementation name="CSRFTokenProvider" 
					implements="CSRFTokenProvider"
					class="com.intershop.beehive.core.internal.security.CSRFTokenProviderImpl"/>
	
	<implementation name="MBeanORMResourceCleanupHandler" class="com.intershop.beehive.core.internal.jmx.registration.MBeanORMResourceCleanupHandler"/>
	
	<!-- Password hash processing -->
	<implementation name="MD5PasswordHashProcessor" class="com.intershop.beehive.core.internal.password.MD5PasswordHashProcessor">
		<requires name="rehashRequired" contract="Boolean" cardinality="0..1" />
	</implementation>
	  
	<implementation name="PBKDF2PasswordHashProcessor" class="com.intershop.beehive.core.internal.password.PBKDF2PasswordHashProcessor"/>
	
	<implementation name="PasswordHashProcessorCtnr" class="com.intershop.beehive.core.internal.password.PasswordHashProcessorCtnrImpl">
		<requires name="defaultPasswordHashProcessor" contract="PasswordHashProcessor" cardinality="1..1" /> 
		<requires name="passwordHashProcessor" contract="PasswordHashProcessor" cardinality="1..n" />
	</implementation>
	
	<!-- Password reminder processing -->
	<implementation name="MD5PasswordReminderHashProcessor" class="com.intershop.beehive.core.internal.password.MD5PasswordReminderHashProcessor">
		<requires name="rehashRequired" contract="Boolean" cardinality="0..1" />
	</implementation>
	  
	<implementation name="PBKDF2PasswordReminderHashProcessor" class="com.intershop.beehive.core.internal.password.PBKDF2PasswordReminderHashProcessor"/>
	
	<implementation name="PasswordReminderHashProcessorCtnr" class="com.intershop.beehive.core.internal.password.PasswordHashProcessorCtnrImpl">
		<requires name="defaultPasswordHashProcessor" contract="PasswordHashProcessor" cardinality="1..1" /> 
		<requires name="passwordHashProcessor" contract="PasswordHashProcessor" cardinality="1..n" />
	</implementation>

	<!-- Secure code processing -->
	<implementation name="MD5SecureCodeHashProcessor" class="com.intershop.beehive.core.internal.password.MD5SecureCodeHashProcessor">
		<requires name="rehashRequired" contract="Boolean" cardinality="0..1" />
	</implementation>
	  
	<implementation name="PBKDF2SecureCodeHashProcessor" class="com.intershop.beehive.core.internal.password.PBKDF2SecureCodeHashProcessor"/>

	<implementation name="SecureCodeHashProcessorCtnr" class="com.intershop.beehive.core.internal.password.PasswordHashProcessorCtnrImpl">
		<requires name="defaultPasswordHashProcessor" contract="PasswordHashProcessor" cardinality="1..1" /> 
		<requires name="passwordHashProcessor" contract="PasswordHashProcessor" cardinality="1..n" />
	</implementation>

	<implementation name="LocalizationKeyFilterExpression" class="com.intershop.beehive.core.internal.localization.filter.LocalizationKeyFilterExpression">
		<requires name="operator" contract="String" cardinality="1..1"/>
		<requires name="condition" contract="LocalizationKeyCondition" cardinality="0..n"/>
	</implementation>
	<implementation name="LocalizationKeyNameCondition" class="com.intershop.beehive.core.internal.localization.filter.KeyNameLocalizationKeyCondition">
		<requires name="exception" contract="LocalizationKeyCondition" cardinality="0..1"/>
		<requires name="equals"		contract="String" cardinality="0..n"/>
		<requires name="startsWith" contract="String" cardinality="0..n"/>
		<requires name="regex"		contract="String" cardinality="0..n"/>
	</implementation>
	<implementation name="LocalizationKeyCartridgeNameCondition" class="com.intershop.beehive.core.internal.localization.filter.CartridgeNameLocalizationKeyCondition">
		<requires name="exception" contract="LocalizationKeyCondition" cardinality="0..1"/>
		<requires name="equals"		contract="String" cardinality="0..n"/>
		<requires name="startsWith" contract="String" cardinality="0..n"/>
		<requires name="regex"		contract="String" cardinality="0..n"/>
	</implementation>

	<!-- PropertyEngine -->
	<implementation name="PropertyEngine" class="com.intershop.beehive.core.internal.property.PropertyEngineConfiguration" start="start">
		<requires name="localeFallbackProvider" contract="LocaleFallbackProvider" cardinality="1..1" /> 
		<requires name="persistenceHandlerProvider" contract="PersistenceHandlerProviderEntry" cardinality="0..n" /> 
		<requires name="fallbackStrategyProvider" contract="FallbackStrategyProviderEntry" cardinality="0..n" /> 
	</implementation>

	<implementation name="PropertyPersistenceHandler.Mapping" 
					implements="PropertyPersistenceHandler.Mapping" 
					class="com.intershop.platform.property.capi.persistence.property.PropertyGroupMapping">
		<requires name="propertyGroup" contract="String" cardinality="1..1" /> 
		<requires name="prefix" contract="String" cardinality="0..1" /> 
		<requires name="property" contract="PropertyPersistenceHandler.Mapping.Key" cardinality="0..n"/> 
	</implementation>

	<implementation name="PropertyPersistenceHandler.Mapping.Key" 
					implements="PropertyPersistenceHandler.Mapping.Key" 
					class="com.intershop.platform.property.capi.persistence.property.PropertyKeyMapping">
		<requires name="property" contract="String" cardinality="1..1" /> 
		<requires name="key" contract="String" cardinality="1..1" /> 
	</implementation>

	<implementation name="DefaultLocaleFallback" implements="LocaleFallbackProvider" class="com.intershop.beehive.core.internal.property.LocaleFallbackProviderImpl"/>

	<implementation name="PersistenceHandlerProviderEntry" class="com.intershop.beehive.core.internal.property.ProviderEntry">
		<requires name="priority" contract="Double" cardinality="1..1" /> 
		<requires name="provider" contract="PersistenceHandlerProvider" cardinality="1..1" /> 
	</implementation>
	<implementation name="FallbackStrategyProviderEntry" class="com.intershop.beehive.core.internal.property.ProviderEntry">
		<requires name="priority" contract="Double" cardinality="1..1" /> 
		<requires name="provider" contract="FallbackStrategyProvider" cardinality="1..1" /> 
	</implementation>

	<implementation name="TypeAndGroupConditionalPersistenceHandlerProvider" class="com.intershop.beehive.core.internal.property.TypeAndGroupConditionalPersistenceHandlerProvider">
		<requires name="ownerType" contract="String" cardinality="0..n" /> 
		<requires name="propertyGroup" contract="String" cardinality="0..n" /> 
		<requires name="handler" contract="PersistenceHandler" cardinality="1..1" /> 
		<requires name="validateAfterRead" contract="PersistenceHandlerProvider.ValidationMode" cardinality="0..1"/>
	</implementation>
	<implementation name="TypeAndGroupConditionalFallbackStrategyProvider" class="com.intershop.beehive.core.internal.property.TypeAndGroupConditionalFallbackStrategyProvider">
		<requires name="ownerType" contract="String" cardinality="0..n" /> 
		<requires name="propertyGroup" contract="String" cardinality="0..n" /> 
		<requires name="strategy" contract="FallbackStrategy" cardinality="1..1" /> 
	</implementation>

	<implementation name="ExtensibleObjectAttributeValuePersistenceHandler" 
					implements="PersistenceHandler" 
					class="com.intershop.beehive.core.internal.property.persistence.AttributeValuePersistenceHandler">
		<requires name="propertyGroup" contract="PropertyPersistenceHandler.Mapping" cardinality="0..n" /> 
	</implementation>

	<implementation name="ExtensibleObjectBOAttributeValuePersistenceHandler" 
					implements="PersistenceHandler" 
					class="com.intershop.beehive.core.internal.property.persistence.BOAttributeValuePersistenceHandler"
					start="start">
		<requires name="propertyGroup" contract="PropertyPersistenceHandler.Mapping" cardinality="0..n" /> 
	</implementation>
	
	<!-- Context Filter -->
	<implementation name="ContextFilter.And" 
					class="com.intershop.beehive.core.internal.contextfilter.CombinedFilter"
					implements="ContextFilter">
	  	<requires name="contextFilter" contract="ContextFilter" cardinality="0..n"/>
	</implementation>
	
	<implementation name="RequestContextFilter" 
					class="com.intershop.beehive.core.internal.contextfilter.RequestContextFilter"
					implements="ContextFilter" />
	
	<implementation name="ServerStatusContextFilter" 
					class="com.intershop.beehive.core.internal.contextfilter.ServerStatusContextFilter"
					implements="ContextFilter" />
	
	<implementation name="StorefrontSessionRequestContextFilter" 
					class="com.intershop.beehive.core.internal.contextfilter.StorefrontSessionRequestContextFilter"
					implements="ContextFilter" />
	
	<!-- 
	<implementation name="AppContextFilter" 
					class="com.intershop.beehive.core.internal.contextfilter.AppContextFilter"
					implements="ContextFilter" />
	 -->
	
	 <implementation name="ContextFilter.IsImpex" 
					class="com.intershop.beehive.core.internal.contextfilter.ImpexContextFilter"
					implements="ContextFilter" />
	
	<implementation name="ContextFilter.Not" 
					class="com.intershop.beehive.core.internal.contextfilter.NotContextFilter"
					implements="ContextFilter">
		<requires name="contextFilter" contract="ContextFilter" cardinality="1..1"/>
	</implementation>

	<implementation name="BusinessObjectWebFormValidator"
					class="com.intershop.beehive.core.internal.businessobject.validation.BusinessObjectWebFormValidatorImpl"
					implements="BusinessObjectWebFormValidator">
		<requires name="mapping" contract="BusinessObjectWebFormMapping" cardinality="0..n"/>
	</implementation>
	<implementation name="BusinessObjectWebFormMapping"
					class="com.intershop.beehive.core.internal.businessobject.validation.BusinessObjectWebFormMappingImpl"
					implements="BusinessObjectWebFormMapping">
		<requires name="businessObjectClass" contract="String" cardinality="1..1"/>
		<requires name="webFormResource" contract="String" cardinality="0..1"/>
		<requires name="webFormName" contract="String" cardinality="0..1"/>
		<requires name="filterCondition" contract="BusinessObjectFilterCondition" cardinality="0..1"/>
		<requires name="propertyMapping" contract="BusinessObjectWebFormPropertyMapping" cardinality="0..n"/>
	</implementation>
	<implementation name="BusinessObjectWebFormPropertyMapping"
				class="com.intershop.beehive.core.internal.businessobject.validation.BusinessObjectWebFormPropertyMappingImpl">
		<requires name="businessObjectProperty" contract="String" cardinality="1..1"/>
		<requires name="formParameter" contract="String" cardinality="1..1"/>
	</implementation>
	<implementation name="BusinessObjectFilterCondition.AND"
					class="com.intershop.beehive.core.internal.businessobject.validation.AndBusinessObjectFilterConditionImpl"
					implements="BusinessObjectFilterCondition">
		<requires name="subCondition" contract="BusinessObjectFilterCondition" cardinality="1..n"/>
	</implementation>
	<implementation name="BusinessObjectFilterCondition.OR"
					class="com.intershop.beehive.core.internal.businessobject.validation.OrBusinessObjectFilterConditionImpl"
					implements="BusinessObjectFilterCondition">
		<requires name="subCondition" contract="BusinessObjectFilterCondition" cardinality="1..n"/>
	</implementation>
	<implementation name="BusinessObjectFilterCondition.NOT"
					class="com.intershop.beehive.core.internal.businessobject.validation.NotBusinessObjectFilterConditionImpl"
					implements="BusinessObjectFilterCondition">
		<requires name="subCondition" contract="BusinessObjectFilterCondition" cardinality="1..1"/>
	</implementation>
	<implementation name="BusinessObjectFilterCondition.HasPropertyWithStringValue"
					class="com.intershop.beehive.core.internal.businessobject.validation.HasPropertyWithStringValueBusinessObjectFilterConditionImpl"
					implements="BusinessObjectFilterCondition">
		<requires name="property" contract="String" cardinality="1..1"/>
		<requires name="value" contract="String" cardinality="0..1"/>
	</implementation>

	<implementation name="EnumerationKeyProvider"
		class="com.intershop.beehive.core.internal.common.EnumerationKeyProviderImpl"
		factory="JavaBeanFactory">
		<requires name="key" contract="String" cardinality="0..n" />
	</implementation>
	<implementation name="LocalizedEnumerationKeyProvider"
		class="com.intershop.beehive.core.internal.common.LocalizedEnumerationKeyProviderImpl"
		factory="JavaBeanFactory">
		<requires name="key" contract="String" cardinality="0..n" />
		<requires name="countryCode" contract="String" cardinality="0..n" />
	</implementation>
	<implementation name="LocalizedEnumerationKeyProviderCtnr"
		class="com.intershop.beehive.core.internal.common.LocalizedEnumerationKeyProviderCtnrImpl"
		factory="JavaBeanFactory">
		<requires name="salutationEnumerationKeyProvider" contract="LocalizedEnumerationKeyProvider"
			cardinality="0..n" />
		<requires name="defaultSalutationEnumerationKeyProvider"
			contract="LocalizedEnumerationKeyProvider" cardinality="1..1" />
	</implementation>
</components>
