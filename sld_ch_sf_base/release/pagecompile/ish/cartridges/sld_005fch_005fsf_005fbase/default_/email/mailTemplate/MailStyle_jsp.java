/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:29:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.sld_005fch_005fsf_005fbase.default_.email.mailTemplate;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class MailStyle_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

 protected Boolean printTemplateMarker() { return Boolean.FALSE; } 
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 

setEncodingType("text/html"); 
      out.write("<style type=\"text/css\">\nbody {margin: 0; padding: 0; min-width: 100%!important; font-family: Arial; font-size: 16px; }\ntable {border-collapse:separate; mso-table-lspace:0pt; mso-table-rspace:0pt;}\na, a:link, a:visited {text-decoration: underline; color: ");
      out.print(context.getFormattedValue("#",null));
      out.write("1db5b5; }\na, a:focus, a:hover, a:active {outline: 0 !important; }\na:hover {text-decoration: underline;}\nh2,h2 a,h2 a:visited,h3,h3 a,h3 a:visited,h4,h5,h6,.t_cht {color:");
      out.print(context.getFormattedValue("#",null));
      out.write("000 !important}\n.ExternalClass p, .ExternalClass span, .ExternalClass font, .ExternalClass td {line-height: 100%}\n.ExternalClass {width: 100%;}\n.ExternalClass .ecxhm { display:none; }\n.ExternalClass .ecxhm2 {display: inline !important; font-size: 11px !important; color:");
      out.print(context.getFormattedValue("#",null));
      out.write("000000 !important;}\n");
      out.print(context.getFormattedValue("#",null));
      out.write("outlook a {padding:0;} /* Force Outlook to provide a \"view in browser\" menu link. */\nimg {display: block; outline: none; text-decoration: none; -ms-interpolation-mode: bicubic;}\na img {border: none;}\na, a:focus, a:hover, a:active {outline: 0 !important; }\na {color: ");
      out.print(context.getFormattedValue("#",null));
      out.write("1db5b5; text-decoration: underline;}\np {font-size: 16px;}\np.header {font-size: 24px; padding-bottom: 15px; font-weight: bold;}\np.header span.name{color: ");
      out.print(context.getFormattedValue("#",null));
      out.write("999999;}\n.button {text-align: center; font-size: 18px; font-family: Arial; padding: 0 10px;}\n.button a {color: ");
      out.print(context.getFormattedValue("#",null));
      out.write("ffffff; text-decoration: none; text-transform: uppercase;}\n.emailContent {width: 100%; max-width: 600px;}\n.emailHeader {font-family: Arial;}\n.emailHeader .logo {padding: 10px 0;}\n.emailHeader .headerNav {padding: 10px; font-size: 16px; background-color: ");
      out.print(context.getFormattedValue("#",null));
      out.write("eeeeee; width: 100%;}\n.emailBody{font-family: Arial; line-height: 22px; font-size: 16px; padding: 40px 10px 80px 10px;}\n.emailBodyElement {padding-bottom: 10px;}\n.emailFooter {color: ");
      out.print(context.getFormattedValue("#",null));
      out.write("222222; font-size: 13px; font-family: Arial;}\n.emailFooter a {font-size: 13px;}\n.footerDisclaimer {background: ");
      out.print(context.getFormattedValue("#",null));
      out.write("dddddd; font-family: Arial; font-size: 12px; color: ");
      out.print(context.getFormattedValue("#",null));
      out.write("222222; padding: 10px;}\n.footerAddress {background: ");
      out.print(context.getFormattedValue("#",null));
      out.write("eeeeee; padding: 10px;}\n.footerAddressItem {font-family: Arial; font-size: 12px; color: ");
      out.print(context.getFormattedValue("#",null));
      out.write("222222;}\n.footerImprint {background: ");
      out.print(context.getFormattedValue("#",null));
      out.write("666666; font-family: Arial; font-size: 12px; color: ");
      out.print(context.getFormattedValue("#",null));
      out.write("ffffff; padding: 10px;}\n.footerImprint a {color: ");
      out.print(context.getFormattedValue("#",null));
      out.write("ffffff;}\n.productTitle {margin-bottom: 10px;}\ntable[class=pattern] .mobileTable td td {width: 50%;}\n@media only screen and (max-width: 550px), screen and (max-device-width: 550px) {\n.emailHeader .logo {padding-left: 10px;}\n.emailBody {padding: 10px;}\ntable[class=pattern] .mobileTable {\ndisplay: table-footer-group;\n}\ntable[class=pattern] .mobileTable td td {\ndisplay: inline-block;\nwidth: 100%;\n-moz-box-sizing: border-box;\n-webkit-box-sizing: border-box;\nbox-sizing: border-box;\n}\ntable[class=mobileButtonPattern] {width: 100%;}\ntable[class=pattern] .mobileTable td table.dataList td:last-child {padding-bottom: 10px;}\nbody[yahoo] .hide {display: none!important;}\nbody[yahoo] .buttonwrapper {background-color: transparent!important;}\nbody[yahoo] .button {padding: 0px!important; text-transform:uppercase;}\nbody[yahoo] .button a {background-color: ");
      out.print(context.getFormattedValue("#",null));
      out.write("1db5b5; padding: 10px 15px !important;}\n}\n@media only screen and (min-device-width: 601px) {\n.emailContent {width: 600px !important;}\n.col380 {width: 380px!important;}\n.col425 {width: 425px!important;}\n}\n</style>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
