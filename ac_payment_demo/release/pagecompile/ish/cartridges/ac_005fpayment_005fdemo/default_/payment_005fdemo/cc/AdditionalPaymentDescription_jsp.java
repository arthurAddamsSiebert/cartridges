/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:30:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.ac_005fpayment_005fdemo.default_.payment_005fdemo.cc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class AdditionalPaymentDescription_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("PaymentServiceBO:PaymentServiceID"),null).equals(context.getFormattedValue("ISH_CREDITCARD",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",3,e);}if (_boolean_result) { 
      out.write("<ul class=\"creditcards list-inline\">\n<li \nclass=\"creditcards-vsa\" title=\"Visa\">Visa</li><li \nclass=\"creditcards-dcv\" title=\"Discover\">Discover</li><li \nclass=\"creditcards-amx\" title=\"American Express\">American Express</li><li \nclass=\"creditcards-mas\" title=\"Master Card\">Master Card</li><li \nclass=\"creditcards-jcb\" title=\"JCB\">JCB\n</li>\n</ul>\n<script type=\"text/javascript\">\n$(document).ready(function() {\n/* Mask credit card number, expiration date and iban*/\nmaskPropertyInput($(\"input[name$='creditCardNumber']\"), '9999-9999-9999-9?999', {unmaskOnSubmit: true});\nmaskPropertyInput($(\"input[name$='creditCardExpiryDate']\"), '99/99');\nmaskPropertyInput($(\"input[name$='IBAN']\"), 'aa99 9999 9999 999?9 9999 9999 9999 9999 99', {unmaskOnSubmit:true});\n/**\n* Credit Card formatting and match test\n**/\n$(\"input[name$='creditCardNumber']\").on('keyup', function(e){\nvar ccnum = $(e.target).val().replace(/[^\\d]/g, '');\n$(\"select[name$='creditCardType']\").removeAttr('disabled');\nif (ccnum.match(/^4[0-9]{12}(?:[0-9]{3})?$/)) {\n// Visa: length 16 or 13 (old cards), prefix 4 \n");
      out.write("selectCreditCard('Visa', 'vsa', $(e.target));\n} else if (ccnum.match(/^5[1-5]\\d{2}-?\\d{4}-?\\d{4}-?\\d{4}$/)) {\n// Mastercard: length 16, prefix 51-55, dashes optional.\nselectCreditCard('MasterCard', 'mas', $(e.target));\n} else if (ccnum.match(/^6(?:011|5[0-9]{2})-?\\d{4}-?\\d{4}-?\\d{4}$/)) {\n// Discover: length 16, prefix 6011 or 65, dashes optional.\nselectCreditCard('Discover', 'dcv', $(e.target));\n} else if (ccnum.match(/^3[4,7]\\d{13}$/)) {\n// American Express: length 15, prefix 34 or 37.\nselectCreditCard('Amex', 'amx', $(e.target));\n} else if (ccnum.match(/^(?:2131|1800|35\\d{3})\\d{11}$/)) { \n// JCB: length 14, prefix 30, 36, or 38.\nselectCreditCard('JCB', 'jcb', $(e.target));\n} \n});\n/**\n* Select credit card type based on cardnumber entered\n*/\nfunction selectCreditCard(type, id, ccinput){ \nccinput.closest('.propertygroup').find(\"select[name$='creditCardType']\").trigger(\"change.propertygroup\").val(id).attr('disabled', 'disabled'); \n}\n/**\n* Maskiere ein property input field\n*/\nfunction maskPropertyInput(selector, masking, options){ \n");
      out.write("selector.mask(masking, {placeholder:\" \", autoclear:false}).closest(\"form\").addClass('form-maskedinput'); \nselector.on('keyup', function(e){ \n$(e.target).trigger(\"input.propertygroup\"); /* property group editor fix */\n});\n/* on submit remove formatting signs */\nif (options && options.unmaskOnSubmit) {\n$(\".form-maskedinput\").on('beforesubmit', function(e){\nvar value = selector.unmask().val();\nif (value) {\nselector.val(value.replace(/(\\-| )/g, ''));\n}\n});\n} \n}\n}); \n</script>\n<div class=\"hidden\" data-creditcard-data-dialog>\n<div class=\"modal-dialog\">\n<div class=\"modal-content\">\n<div class=\"modal-header\">\n<button type=\"button\" class=\"close\" data-dismiss=\"modal\" title=\"");
 {out.write(localizeISText("dialog.close.text","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\" aria-label=\"");
 {out.write(localizeISText("dialog.close.text","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("\"><span aria-hidden=\"true\">&times;</span></button>\n<h2 class=\"modal-title\">");
 {out.write(localizeISText("CheckoutMini.ISHCreditCardDemoData","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</h2>\n</div>\n<div class=\"modal-body\">\n<p>");
 {out.write(localizeISText("CheckoutMini.PleaseUseOneOfTheFollowingCreditCardsFor","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>");
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"payment_demo/ishpay/inc/CreditCardDemoData", null, "89");} 
      out.write("</div>\n</div>\n</div>\n</div> \n");
 } 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
