/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:30:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.ac_005fpayment_005fdemo.default_.payment_005fdemo.ishpay;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class ISHPay3DSecurePopUp_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"modules/common/Modules", null, "2");} 
      out.write("<div class=\"ipay-creditcardLogo\"><img src=\"");
      out.print(context.getFormattedValue(context.webRoot(),null));
      out.write("/images/CreditCard_logo.png\" width=\"132\" height=\"17\" alt=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("ISHPay3DSecurePopUp.ISHPAYCreditCardLogo.alt",null)),null));
      out.write("\"/></div>\n<h3>");
 {out.write(localizeISText("ISHPay3DSecurePopUp.ConfirmPayment","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</h3>");
 URLPipelineAction action3 = new URLPipelineAction(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ISHPayRedirect-3DSecureSubmit",null)))),null));String site3 = null;String serverGroup3 = null;String actionValue3 = context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ISHPayRedirect-3DSecureSubmit",null)))),null);if (site3 == null){  site3 = action3.getDomain();  if (site3 == null)  {      site3 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getDomainName();  }}if (serverGroup3 == null){  serverGroup3 = action3.getServerGroup();  if (serverGroup3 == null)  {      serverGroup3 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getServerGroup();  }}out.print("<form");out.print(" method=\"");out.print("post");out.print("\"");out.print(" action=\"");out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ISHPayRedirect-3DSecureSubmit",null)))),null));out.print("\"");out.print(" name=\"");out.print("OnlinePayAccountForm");out.print("\"");out.print(" id=\"");out.print("OnlinePayAccountForm");out.print("\"");out.print(">");out.print(context.prepareWACSRFTag(actionValue3, site3, serverGroup3,true)); 
      out.write("<div>");
 {out.write(localizeISText("ISHPay3DSecurePopUp.PleaseEnterThe3DSecureCodeOfYourCreditCa","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</div>\n<div class=\"ipay-text-testingPurposes\">");
 {out.write(localizeISText("ISHPay3DSecurePopUp.ForTestingPurposesUseThe.ipay","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(" \n<a href=\"");
      out.print(context.getFormattedValue("#",null));
      out.write("\" class=\"ipay-js-dialogOpener\">");
 {out.write(localizeISText("ISHPay3DSecurePopUp.DemoData.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a>\n<div class=\"ui-dialog ui-widget ui-widget-content ui-corner-all\">\n<div class=\"ui-dialog-content\">\n<h3>");
 {out.write(localizeISText("ISHPay3DSecurePopUp.ISHCreditCardDemoData","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</h3>\n<p>");
 {out.write(localizeISText("ISHPay3DSecurePopUp.PleaseUseOneOfTheFollowingCreditCardsFor","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>");
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"payment_demo/ishpay/inc/CreditCardDemoData", null, "16");} 
      out.write("</div>\n</div>.\n</div>\n<div class=\"ipay-field\">\n<span class=\"ipay-label\">");
 {out.write(localizeISText("ISHPay3DSecurePopUp.TotalOrderValue.ipay","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</span><span class=\"ipay-text-data\">");
 {String value = null;try{value=context.getFormattedValue(getObject("amount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {22}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</span>\n</div>\n<div class=\"ipay-field\">\n<span class=\"ipay-label\">");
 {out.write(localizeISText("ISHPay3DSecurePopUp.ShopName.ipay","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(" </span><span class=\"ipay-text-data\">");
 {String value = null;try{value=context.getFormattedValue(getObject("Repository:DisplayName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {25}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</span>\n</div>");
 processOpenTag(response, pageContext, "garblestring", new TagParameter[] {
new TagParameter("output","truncatedCreditCardNumber"),
new TagParameter("character","x"),
new TagParameter("length","4"),
new TagParameter("text",getObject("card_number")),
new TagParameter("direction","begin")}, 28); 
      out.write("<div class=\"ipay-field ipay-field-left\">\n<span class=\"ipay-label\">");
 {out.write(localizeISText("ISHPay3DSecurePopUp.CreditCard.ipay","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</span><span class=\"ipay-text-data\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("card_type"),null).equals(context.getFormattedValue("vsa",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",31,e);}if (_boolean_result) { 
 {out.write(localizeISText("ISHPay3DSecurePopUp.VISA.ipay","",null,null,null,null,null,null,null,null,null,null,null));} 
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("card_type"),null).equals(context.getFormattedValue("mas",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",32,e);}if (_boolean_result) { 
 {out.write(localizeISText("ISHPay3DSecurePopUp.MASTER.ipay","",null,null,null,null,null,null,null,null,null,null,null));} 
 }} 
      out.write("&nbsp;");
 {String value = null;try{value=context.getFormattedValue(getObject("truncatedCreditCardNumber"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {33}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</span>\n</div>\n<div class=\"ipay-card ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("card_type"),null).equals(context.getFormattedValue("vsa",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",36,e);}if (_boolean_result) { 
      out.write("ipay-card-vsa");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("card_type"),null).equals(context.getFormattedValue("mas",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",36,e);}if (_boolean_result) { 
      out.write("ipay-card-mas");
 }} 
      out.write('"');
      out.write('>');
 {out.write(localizeISText("ISHPay3DSecurePopUp.Visa.ipay","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</div>\n<fieldset>\n<div class=\"ipay-field ");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("count_out"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",39,e);}if (_boolean_result) { 
      out.write("ipay-error-field");
 } 
      out.write('"');
      out.write('>');
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("count_out"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",40,e);}if (_boolean_result) { 
      out.write("<div class=\"ipay-formShift\">");
 {out.write(localizeISText("ISHPay3DSecurePopUp.TheCodeYouEnteredIsNotCorrectPleaseTryAg.ipay","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("<br />");
 {String value = null;try{value=context.getFormattedValue(getObject("count_out"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {41}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(' ');
 {out.write(localizeISText("ISHPay3DSecurePopUp.AttemptSRemaining.ipay","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</div>\n<input type=\"hidden\" name=\"count_in\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("count_out"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {42}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 } else { 
      out.write("<input type=\"hidden\" name=\"count_in\" value=\"3\">");
 } 
      out.write("<label>");
 {out.write(localizeISText("ISHPay3DSecurePopUp.3DSecureCode.label","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</label><input autocomplete=\"off\" class=\"ipay-input-small\" type=\"password\" name=\"secure_code\" value=\"1111\"/>\n</div>\n</fieldset>\n<button class=\"ipay-formShift\" type=\"submit\" name=\"ok\">");
 {out.write(localizeISText("ISHPay3DSecurePopUp.Continue.button","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</button>\n<a class=\"ipay-link-cancel\" href=\"");
      out.print(context.getFormattedValue("#",null));
      out.write("\" onclick=\"document.OnlinePayAccountForm.action='");
      out.print(context.getFormattedValue(encodeString(context.getFormattedValue(getObject("cancelURL"),null)),null));
      out.write("'; document.OnlinePayAccountForm.submit();\">");
 {out.write(localizeISText("ISHPay3DSecurePopUp.Cancel.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a>\n<input type=\"hidden\" name=\"currency\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("currency"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {53}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<input type=\"hidden\" name=\"amount\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("amount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {54}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<input type=\"hidden\" name=\"card_number\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("card_number"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {55}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<input type=\"hidden\" name=\"card_type\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("card_type"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {56}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<input type=\"hidden\" name=\"successURL\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("successURL"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {57}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&ECI=123&CAVV=456&XID=789&BasketUUID=");
 {String value = null;try{value=context.getFormattedValue(getObject("BasketUUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {57}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<input type=\"hidden\" name=\"BasketUUID\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("BasketUUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {58}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<input type=\"hidden\" name=\"failURL\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("failURL"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {59}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\">\n<input type=\"hidden\" name=\"cancelURL\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("cancelURL"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {60}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('>');
 out.print("</form>"); 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
