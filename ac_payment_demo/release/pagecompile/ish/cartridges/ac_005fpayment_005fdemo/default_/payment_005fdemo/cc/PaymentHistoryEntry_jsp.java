/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:30:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.ac_005fpayment_005fdemo.default_.payment_005fdemo.cc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class PaymentHistoryEntry_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
 
setEncodingType("text/html"); 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("PH:EventID"),null).equals(context.getFormattedValue("Authorize",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",2,e);}if (_boolean_result) { 
      out.write("<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.Amount.table_detail_name","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:Amount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {5}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>\n<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.AuthStatus.table_detail_name","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:AuthStatus"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {8}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>\n<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.ErrorCode.table_detail_name","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:ErrorCode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {11}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>\n<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.TransactionID.table_detail_name","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:TransactionID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {14}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PH:ErrorMsg"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",16,e);}if (_boolean_result) { 
      out.write("<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.ErrorMsg.table_detail_name","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:ErrorMsg"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {18}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>");
 } 
      out.write("</table>");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("PH:EventID"),null).equals(context.getFormattedValue("Reduce",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",22,e);}if (_boolean_result) { 
      out.write("<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.ReduceStatus.table_detail_name","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:ReduceStatus"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {25}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>\n<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.ErrorCode.table_detail_name1","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:ErrorCode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {28}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>\n<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.Amount.table_detail_name1","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:Amount"),"* #00.0#",null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {31}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(" &nbsp;</td>\n</tr>\n<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.TransactionID.table_detail_name1","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:TransactionID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {34}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PH:ErrorMsg"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",36,e);}if (_boolean_result) { 
      out.write("<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.ErrorMsg.table_detail_name1","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:ErrorMsg"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {38}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>");
 } 
      out.write("</table>");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("PH:EventID"),null).equals(context.getFormattedValue("Capture",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",42,e);}if (_boolean_result) { 
      out.write("<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.CaptureStatus.table_detail_name","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:CaptureStatus"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {45}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>\n<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.ErrorCode.table_detail_name2","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:ErrorCode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {48}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>\n<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.Amount.table_detail_name2","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:Amount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {51}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>\n<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.TransactionID.table_detail_name2","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:TransactionID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {54}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PH:ErrorMsg"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",56,e);}if (_boolean_result) { 
      out.write("<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.ErrorMsg.table_detail_name2","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:ErrorMsg"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {58}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>");
 } 
      out.write("</table>");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("PH:EventID"),null).equals(context.getFormattedValue("Cancel",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",62,e);}if (_boolean_result) { 
      out.write("<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.CancelStatus.table_detail_name","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:CancelStatus"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {65}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>\n<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.ErrorCode.table_detail_name3","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:ErrorCode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {68}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>\n<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.TransactionID.table_detail_name3","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:TransactionID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {71}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PH:ErrorMsg"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",73,e);}if (_boolean_result) { 
      out.write("<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.ErrorMsg.table_detail_name3","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:ErrorMsg"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {75}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>");
 } 
      out.write("</table>");
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("PH:EventID"),null).equals(context.getFormattedValue("Refund",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",79,e);}if (_boolean_result) { 
      out.write("<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.RefundStatus.table_detail_name","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:RefundStatus"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {82}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>\n<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.ErrorCode.table_detail_name4","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:ErrorCode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {85}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>\n<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.Amount.table_detail_name3","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:Amount"),new Integer(MONEY_SHORT),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {88}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>\n<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.TransactionID.table_detail_name4","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:TransactionID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {91}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>\n<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.DocumentNo.table_detail_name","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:DocumentNo"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {94}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>\n<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.RefundReson.table_detail_name","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:RefundReason"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {97}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PH:ErrorMsg"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",99,e);}if (_boolean_result) { 
      out.write("<tr>\n<td class=\"fielditem\">");
 {out.write(localizeISText("PaymentHistoryEntry.ErrorMsg.table_detail_name4","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td><td class=\"table_detail\">");
 {String value = null;try{value=context.getFormattedValue(getObject("PH:ErrorMsg"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {101}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;</td>\n</tr>");
 } 
      out.write("</table>");
 }}}}} 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
