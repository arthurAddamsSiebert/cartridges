<%@  page buffer="none" import="java.util.*,java.io.*,com.intershop.beehive.core.internal.template.*,com.intershop.beehive.core.internal.template.isml.*,com.intershop.beehive.core.capi.log.*,com.intershop.beehive.core.capi.resource.*,com.intershop.beehive.core.capi.util.UUIDMgr,com.intershop.beehive.core.capi.util.XMLHelper,com.intershop.beehive.foundation.util.*,com.intershop.beehive.core.internal.url.*,com.intershop.beehive.core.internal.resource.*,com.intershop.beehive.core.internal.wsrp.*,com.intershop.beehive.core.capi.pipeline.PipelineDictionary,com.intershop.beehive.core.capi.naming.NamingMgr,com.intershop.beehive.core.capi.pagecache.PageCacheMgr,com.intershop.beehive.core.capi.request.SessionMgr,com.intershop.beehive.core.internal.request.SessionMgrImpl,com.intershop.beehive.core.pipelet.PipelineConstants" extends="com.intershop.beehive.core.internal.template.AbstractTemplate" %><% 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 %><% %><%@ page contentType="text/html;charset=utf-8" %><%setEncodingType("text/html"); %><div class="ipay-fastpayLogo"><img src="<%=context.getFormattedValue(context.webRoot(),null)%>/images/FastPAY_logo.png" width="107" height="17" alt="<%=context.getFormattedValue(localizeText(context.getFormattedValue("ISHPayFastPayLogin.ISHPAYLogo.alt",null)),null)%>"/></div><% {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"payment_demo/ishpay/inc/ISHPayOrderDetails", null, "4");} %><div>
<h3><% {out.write(localizeISText("ISHPayFastPayLogin.LoginToCheckoutYourOrderViaISHFastPay","",null,null,null,null,null,null,null,null,null,null,null));} %></h3>
<div class="ipay-text-testingPurposes"><% {out.write(localizeISText("ISHPayFastPayLogin.ForTestingPurposesUseThe.ipay","",null,null,null,null,null,null,null,null,null,null,null));} %> 
<a href="<%=context.getFormattedValue("#",null)%>" class="ipay-js-dialogOpener"><% {out.write(localizeISText("ISHPayFastPayLogin.DemoData.link","",null,null,null,null,null,null,null,null,null,null,null));} %></a>
<div class="ui-dialog ui-widget ui-widget-content ui-corner-all">
<div class="ui-dialog-content">
<h3><% {out.write(localizeISText("ISHPayFastPayLogin.ISHFastPayDemoData","",null,null,null,null,null,null,null,null,null,null,null));} %></h3>
<p><% {out.write(localizeISText("ISHPayFastPayLogin.PleaseUseOneOfTheFollowingAccountsForTes","",null,null,null,null,null,null,null,null,null,null,null));} %></p>
<h4><% {out.write(localizeISText("ISHPayFastPayLogin.RegularTestAccount.ipay",null,null,null,null,null,null,null,null,null,null,null,null));} %></h4>
<div class="ipay-field">
<div><span class="ipay-label"><% {out.write(localizeISText("ISHPayFastPayLogin.Email","",null,null,null,null,null,null,null,null,null,null,null));} %></span><span class="ipay-text-data">payment1@test.intershop.de</span></div>
<div><span class="ipay-label"><% {out.write(localizeISText("ISHPayFastPayLogin.Password","",null,null,null,null,null,null,null,null,null,null,null));} %></span><span class="ipay-text-data">!InterShop00!</span></div>
</div>
<h4><% {out.write(localizeISText("ISHPayFastPayLogin.OverchargedTestAccount.ipay",null,null,null,null,null,null,null,null,null,null,null,null));} %></h4>
<div class="ipay-field">
<div><span class="ipay-label"><% {out.write(localizeISText("ISHPayFastPayLogin.Email","",null,null,null,null,null,null,null,null,null,null,null));} %></span><span class="ipay-text-data">payment2@test.intershop.de</span></div>
<div><span class="ipay-label"><% {out.write(localizeISText("ISHPayFastPayLogin.Password","",null,null,null,null,null,null,null,null,null,null,null));} %></span><span class="ipay-text-data">!InterShop00!</span></div>
</div>
</div>
</div>.
</div><% URLPipelineAction action8 = new URLPipelineAction(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ISHPayRedirect-FastPayLogin",null)))),null));String site8 = null;String serverGroup8 = null;String actionValue8 = context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ISHPayRedirect-FastPayLogin",null)))),null);if (site8 == null){  site8 = action8.getDomain();  if (site8 == null)  {      site8 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getDomainName();  }}if (serverGroup8 == null){  serverGroup8 = action8.getServerGroup();  if (serverGroup8 == null)  {      serverGroup8 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getServerGroup();  }}out.print("<form");out.print(" method=\"");out.print("post");out.print("\"");out.print(" action=\"");out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue("ISHPayRedirect-FastPayLogin",null)))),null));out.print("\"");out.print(" name=\"");out.print("FastPayLoginForm");out.print("\"");out.print(" id=\"");out.print("FastPayLoginForm");out.print("\"");out.print(">");out.print(context.prepareWACSRFTag(actionValue8, site8, serverGroup8,true)); %><fieldset><% _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("count_out"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",34,e);}if (_boolean_result) { %><p class="ipay-error"><% {out.write(localizeISText("ISHPayFastPayLogin.PleaseCorrectTheErrorSIndicatedBelow0Att",null,null,context.getFormattedValue(getObject("count_out"),null),null,null,null,null,null,null,null,null,null));} %></p><% } %><div class="ipay-field <% _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("count_out"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",37,e);}if (_boolean_result) { %>ipay-error-field<% } %>">
<label><% {out.write(localizeISText("ISHPayFastPayLogin.EmailAddress","",null,null,null,null,null,null,null,null,null,null,null));} %></label><input autocomplete="off" type="text" name="login" value="payment1@test.intershop.de"/>
</div>
<div class="ipay-field <% _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("count_out"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",40,e);}if (_boolean_result) { %>ipay-error-field<% } %>">
<label><% {out.write(localizeISText("ISHPayFastPayLogin.Password","",null,null,null,null,null,null,null,null,null,null,null));} %></label><input autocomplete="off" type="password" name="password" value="!InterShop00!"/>
</div>
</fieldset>
<div class="ipay-formShift">
<button type="submit" name="ok" class="ipay-button"><% {out.write(localizeISText("ISHPayFastPayLogin.Login.button","",null,null,null,null,null,null,null,null,null,null,null));} %></button>
<a class="ipay-link-cancel" href="<%=context.getFormattedValue("#",null)%>" onclick="document.FastPayLoginForm.action='<%=context.getFormattedValue(encodeString(context.getFormattedValue(getObject("cancelURL"),null)),null)%>'; document.FastPayLoginForm.submit();"><% {out.write(localizeISText("ISHPayFastPayLogin.Cancel.link","",null,null,null,null,null,null,null,null,null,null,null));} %></a>
</div><% _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("ita_fname"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",49,e);}if (_boolean_result) { %><input type="hidden" name="ita_fname" value="<% {String value = null;try{value=context.getFormattedValue(getObject("ita_fname"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {50}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>">
<input type="hidden" name="ita_lname" value="<% {String value = null;try{value=context.getFormattedValue(getObject("ita_lname"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {51}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>">
<input type="hidden" name="ita_street" value="<% {String value = null;try{value=context.getFormattedValue(getObject("ita_street"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {52}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>">
<input type="hidden" name="ita_pcode" value="<% {String value = null;try{value=context.getFormattedValue(getObject("ita_pcode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {53}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>">
<input type="hidden" name="ita_city" value="<% {String value = null;try{value=context.getFormattedValue(getObject("ita_city"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {54}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>">
<input type="hidden" name="ita_country" value="<% {String value = null;try{value=context.getFormattedValue(getObject("ita_country"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {55}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>">
<input type="hidden" name="ita_countrycode" value="<% {String value = null;try{value=context.getFormattedValue(getObject("ita_countrycode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {56}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>"><% } %><% _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("sfa_fname"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",58,e);}if (_boolean_result) { %><input type="hidden" name="sfa_fname" value="<% {String value = null;try{value=context.getFormattedValue(getObject("sfa_fname"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {59}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>">
<input type="hidden" name="sfa_lname" value="<% {String value = null;try{value=context.getFormattedValue(getObject("sfa_lname"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {60}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>">
<input type="hidden" name="sfa_street" value="<% {String value = null;try{value=context.getFormattedValue(getObject("sfa_street"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {61}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>">
<input type="hidden" name="sfa_pcode" value="<% {String value = null;try{value=context.getFormattedValue(getObject("sfa_pcode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {62}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>">
<input type="hidden" name="sfa_city" value="<% {String value = null;try{value=context.getFormattedValue(getObject("sfa_city"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {63}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>">
<input type="hidden" name="sfa_country" value="<% {String value = null;try{value=context.getFormattedValue(getObject("sfa_country"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {64}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>">
<input type="hidden" name="sfa_countrycode" value="<% {String value = null;try{value=context.getFormattedValue(getObject("sfa_countrycode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {65}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>"><% } %><% _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("count_out"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",67,e);}if (_boolean_result) { %><input type="hidden" name="count_in" value="<% {String value = null;try{value=context.getFormattedValue(getObject("count_out"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {68}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>"><% } else { %><input type="hidden" name="count_in" value="3"><% } %><input type="hidden" name="token" value="<% {String value = null;try{value=context.getFormattedValue(getObject("token"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {72}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>">
<input type="hidden" name="currency" value="<% {String value = null;try{value=context.getFormattedValue(getObject("currency"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {73}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>">
<input type="hidden" name="amount" value="<% {String value = null;try{value=context.getFormattedValue(getObject("amount"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {74}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>">
<input type="hidden" name="email" value="<% {String value = null;try{value=context.getFormattedValue(getObject("email"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {75}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>">
<input type="hidden" name="BasketUUID" value="<% {String value = null;try{value=context.getFormattedValue(getObject("BasketUUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {76}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>">
<input type="hidden" name="successURL" value="<% {String value = null;try{value=context.getFormattedValue(getObject("successURL"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {77}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>">
<input type="hidden" name="failURL" value="<% {String value = null;try{value=context.getFormattedValue(getObject("failURL"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {78}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>">
<input type="hidden" name="cancelURL" value="<% {String value = null;try{value=context.getFormattedValue(getObject("cancelURL"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {79}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} %>"><% out.print("</form>"); %></div><% printFooter(out); %>