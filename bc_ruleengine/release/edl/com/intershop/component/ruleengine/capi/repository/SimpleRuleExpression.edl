import "enfinity:/bc_ruleengine/edl/com/intershop/component/ruleengine/capi/repository/Binding.edl";
import "enfinity:/bc_ruleengine/edl/com/intershop/component/ruleengine/capi/repository/ExpressionValue.edl";
import "enfinity:/bc_ruleengine/edl/com/intershop/component/ruleengine/capi/repository/RuleExpression.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.component.ruleengine.capi.repository
{
    /*
     * A simple rule expression is the smallest part of an expression,
     * like "a = b" or "a >= b".
     */
    cartridge interface SimpleRuleExpression extends RuleExpression
    {
        /*
         * The attribute of the simple rule expression.
         * The attribute is "a" in "a == b".
         */
        attribute ^attribute: string;

        /*
         * The operator of the simple rule expression.
         * The operator is "==" in "a == b".
         */
        attribute operator: string;

        /*
         * A optional binding to a bound object that is used in the simple rule expression.
         * If the binding is set to "$b", the expression will be: "a == $b" or
         * if the binding is set to "a_binding", the expression will be: "a == a_binding".
         */
        relation binding: Binding[0..1];
        
        /*
         * Set the value of the simple rule expression.
         * The attribute is "b" in "a == b"
         */
        operation setExpressionValue(value : ExpressionValue) : void;
        
        /*
         * Set the value of the simple rule expression.
         * The attribute is "b" in "a == b"
         */
        operation setExpressionValue(value : string, ^type : string) : void;
        
        /*
         * Get the value of the simple rule expression.
         * The attribute is "b" in "a == b"
         */
        operation getExpressionValue() : ExpressionValue;
    }

}
