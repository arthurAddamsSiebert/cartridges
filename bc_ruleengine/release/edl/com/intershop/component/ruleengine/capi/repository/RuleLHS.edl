import "enfinity:/bc_ruleengine/edl/com/intershop/component/ruleengine/capi/repository/BoundObject.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/PersistentObject.edl";
import "enfinity:/bc_ruleengine/edl/com/intershop/component/ruleengine/capi/repository/EvalExpression.edl";
import "enfinity:/bc_ruleengine/edl/com/intershop/component/ruleengine/capi/repository/ComplexRuleExpression.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.component.ruleengine.capi.repository
{
    /*
     * The rule's left-hand-side is either a collection of bound objects that are all
     * implicit combined by an logical AND and/or a collection of eval-expressions.
     *
     */
    cartridge interface RuleLHS extends PersistentObject
    {
        /*
         * The bound objects participating on this left-hand-side.
         */
        relation boundObjects: BoundObject[0..n];

        /*
         * The eval expressions participating on this left-hand-side.
         */
        relation evalExpressions: EvalExpression[0..n] readonly;

        /*
         * The expressions participating on this left-hand-side.
         */
        relation complexRuleExpressions: ComplexRuleExpression[0..n] readonly;
        
        /*
         * Get a collection of all bindings participating on this LHS (e.g. from all expressions).
         * 
         * @return a collection of com.intershop.component.ruleengine.capi.repository.Binding
         */
        operation getBindings(): Collection;
    }

}
