import "enfinity:/bc_ruleengine/edl/com/intershop/component/ruleengine/capi/repository/Binding.edl";
import "enfinity:/bc_ruleengine/edl/com/intershop/component/ruleengine/capi/repository/ExpressionValue.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/PersistentObject.edl";
import "enfinity:/bc_ruleengine/edl/com/intershop/component/ruleengine/capi/repository/RuleFunction.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.component.ruleengine.capi.repository
{
    /*
     * This is the parameter for a right-hand-side action operation.
     *
     */
    cartridge interface RHSOperationParameter extends PersistentObject
    {
        /*
         * The function that should be called on the binding.
         */
        attribute bindingFunction: string;

        /*
         * The binding for this operation parameter.
         */
        relation binding: Binding[0..1];

        /*
         * The rule function used in this parameter. 
         */
        relation function: RuleFunction[0..1];
        
        /*
         * Set the value for the used function at the given position.
         * 
         * @param position The position in the functions parameter list
         * @param value
         */
        operation setFunctionValue (position : int, value : ExpressionValue) : void;
        
         /* Set the value for the used function at the given position.
         * 
         * @param position The position in the functions parameter list
         * @param value
         * @param type
         */
        operation setFunctionValue (position : int, value : string, ^type : string) : void;
        
        /*
         * Set the given binding at the given position of the called function.
         * 
         * @param position The position in the functions parameter list
         * @param binding The used binding at this parameter position
         */
        operation setFunctionValue(position : int, binding : Binding) : void;
        
        /*
         * Get the value of the used function from the given position. <br/>
         * If the set value is a binding, ExpressionValue.getValue() will return the binding name and
         * ExpressionValue.getType() will return com.intershop.component.ruleengine.capi.repository.Binding.
         */
        operation getFunctionValue(position : int) : ExpressionValue;
        
        /*
         * Checks whether the value of the attribute 'functionValue' at the given position is null.
         */
        operation getFunctionValueNull(position : int) : boolean;
        
        /*
         * Set the value of the literal.
         */
        operation setLiteral (value : ExpressionValue) : void;
        
        /*
         * Set the value of the literal.
         */
        operation setLiteral (value : string, ^type : string) : void;
        
		/*
         * Get the value of the literal.
         */
        operation getLiteral ( ) : ExpressionValue;
    }

}
