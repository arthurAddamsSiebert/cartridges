import "enfinity:/bc_ruleengine/edl/com/intershop/component/ruleengine/capi/repository/RuleExpression.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.component.ruleengine.capi.repository
{
    /*
     * This rule expression combines all sub conditions with the logical
     * operators AND or OR.
     *
     */
    cartridge interface ComplexRuleExpression extends RuleExpression
    {
        /*
         * The condition type of this expression. This is one of the ExpressionConstants.CONDTION_TYPE_... constants.
         */
        attribute conditionType: string required;

        /*
         * The expressions, participating on this expression.
         */
        relation expressions: RuleExpression[0..n];
        
        /*
         * Get the bound objects that are assigned to this complex rule expression. <br/>
         * The assignment is the ComplexExpression(1)-->(0..*)BoundObject assignment.
         * 
         * @return a collection of com.intershop.component.ruleengine.capi.repository.BoundObject 
         */
        operation getBoundObjects() : Collection;
    }

}
