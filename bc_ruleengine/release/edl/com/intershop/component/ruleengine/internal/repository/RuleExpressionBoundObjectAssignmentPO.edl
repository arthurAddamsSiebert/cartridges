import "enfinity:/bc_ruleengine/edl/com/intershop/component/ruleengine/internal/repository/BoundObjectPO.edl";
import "enfinity:/bc_ruleengine/edl/com/intershop/component/ruleengine/internal/repository/ExpressionPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/PersistentObjectPO.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

namespace com.intershop.component.ruleengine.internal.repository
{
	/*
	 */
	oca timestamp orm class RuleExpressionBoundObjectAssignmentPO 
		table "RULE2_RULEEXPRBOUNDOBJASSIGNM"
	{
		attribute ruleExpressionId : uuid;
		
		attribute boundObjectId : uuid;
		
		// for knowing which type of assignment we have
		// values are: CONSTRAINT  which means, this assingment works as a constraint assignment
		//                         meaning a bound object has one constraint assigned
		//             BOUNDOBJECT a complex rule expression has one or more bound objects assigned
		attribute assignmentType : string;
		
		primary key (ruleExpressionId, boundObjectId, assignmentType);
		
		relation ruleExpressionPO : ExpressionPO[1..1] inverse boundObjectPO
		{
			foreign key (ruleExpressionId) -> (UUID);
		}
		
		relation boundObjectPO : BoundObjectPO[1..1] inverse expressionPO
		{
			foreign key (boundObjectId) -> (UUID);
		}
	}
}
