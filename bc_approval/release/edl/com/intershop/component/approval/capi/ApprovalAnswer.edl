import "enfinity:/core/edl/com/intershop/beehive/core/capi/domain/ExtensibleObject.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/capi/workflow/WorkflowActivity.edl";
import "enfinity:/core/edl/com/intershop/beehive/core/types.edl";

external User type "com.intershop.beehive.core.capi.user.User";

namespace com.intershop.component.approval.capi
{
    /*
     * The ApprovalAnswer stores one answer given by an approver
     * during an approval workflow.
     * @deprecated since 7.9. A {@link BusinessObject} based approval workflow is available through the {@link BusinessObjectApprovalExtension} and should be used instead.
     * Complex approval processes can be implemented as an {@link ApprovalService}, including external system integrations.
     */
    cartridge interface ApprovalAnswer extends ExtensibleObject
    {
        /*
         * The user who has given the answer.
         */
        attribute answeringUser : User readonly required;

        /*
         * The user on behalf the answer was given by the answering user. AnsweringUser and OnBehalfUser may be identical.
         */
        attribute onBehalfUser : User readonly required;

        /*
         * The ID of the ApprovalObject within the WorkflowActivity to which the answer belongs to.
         */
        attribute objectID : string readonly required;

        /*
         * The aspect for that the answers was given.
         */
        attribute aspect : string readonly required;

        /*
         * The answer given by the user.
         */
        attribute approved : boolean readonly required;

        /*
         * The optionally given comment or an empty String if no comment was given.
         */
        attribute comment : string required;

        /*
         * Tells the time when the user has given this answer.
         * 
         * @return time of the answer
         */
        operation getDate() : datetime;

        /*
         * The answer given by the user.
         * 
         * @return the given answer
         */
        operation hasApproved() : boolean;

        /*
         * The WorkflowActivity to which the answer belongs to.
         * 
         * @return the associated WorkflowActivity
         */
        operation getActivity() : WorkflowActivity;
    }
}
