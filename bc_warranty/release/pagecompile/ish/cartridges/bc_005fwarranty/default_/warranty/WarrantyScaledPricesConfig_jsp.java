/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-13 15:30:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.bc_005fwarranty.default_.warranty;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.webform.Form;

public final class WarrantyScaledPricesConfig_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
      out.write('\n');
      out.write('\n');
 
setEncodingType("text/html"); 
 {try{executePipeline("ProcessWarrantyPrices-PrepareScaledPriceConfig",((java.util.Map)(((new ParameterMap().addParameter(new ParameterEntry("ProductID",getObject("Product:UUID")))).addParameter(new ParameterEntry("ProductDomainID",getObject("Product:DomainID")))))),"warrantyPricesResultDict");}catch(Exception e){Logger.error(this,"ISPIPELINE failed. Line: 5.",e);}} 
 {Object temp_obj = (getObject("warrantyPricesResultDict:ScaledPriceForm")); getPipelineDictionary().put("ScaledPriceForm", temp_obj);} 
 {Object temp_obj = (getObject("warrantyPricesResultDict:ScaledPriceMoreThanForm")); getPipelineDictionary().put("ScaledPriceMoreThanForm", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (disableErrorMessages().isDefined(getObject("AddScaledPriceForm")))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",11,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("warrantyPricesResultDict:AddScaledPriceForm")); getPipelineDictionary().put("AddScaledPriceForm", temp_obj);} 
 } 
 {Object temp_obj = (getObject("warrantyPricesResultDict:BaseProductWarrantyBO")); getPipelineDictionary().put("BaseProductWarrantyBO", temp_obj);} 
 {Object temp_obj = (context.getFormattedValue(getObject("DispatchPipeline"),null) + context.getFormattedValue("-DispatchScaledPrice",null)); getPipelineDictionary().put("DispatchPipeline", temp_obj);} 
 URLPipelineAction action1 = new URLPipelineAction(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue(getObject("DispatchPipeline"),null)))),null));String site1 = null;String serverGroup1 = null;String actionValue1 = context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue(getObject("DispatchPipeline"),null)))),null);if (site1 == null){  site1 = action1.getDomain();  if (site1 == null)  {      site1 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getDomainName();  }}if (serverGroup1 == null){  serverGroup1 = action1.getServerGroup();  if (serverGroup1 == null)  {      serverGroup1 = com.intershop.beehive.core.capi.request.Request.getCurrent().getRequestSite().getServerGroup();  }}out.print("<form");out.print(" method=\"");out.print("POST");out.print("\"");out.print(" action=\"");out.print(context.getFormattedValue(url(true,(new URLPipelineAction(context.getFormattedValue(getObject("DispatchPipeline"),null)))),null));out.print("\"");out.print(" data-testing-id=\"");out.print("bo-product-classification-warranty-scaled-price-config");out.print("\"");out.print(" name=\"");out.print("ScaledPriceForm");out.print("\"");out.print(">");out.print(context.prepareWACSRFTag(actionValue1, site1, serverGroup1,true)); 
      out.write("<input type=\"hidden\" name=\"\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("WarrantyBO:PriceProviderName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {18}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n<input type=\"hidden\" name=\"ChannelID\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("ChannelID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {19}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n<input type=\"hidden\" name=\"ProductID\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Product:UUID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {20}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n<input type=\"hidden\" name=\"ProductDomainID\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("Product:DomainID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {21}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n<table border=\"0\" cellpadding=\"4\" cellspacing=\"0\" width=\"100%\" class=\"infobox w e\">\n<tr><td width=\"100%\" class=\"infobox_title\">");
 {out.write(localizeISText("WarrantyScaledPricesConfig.ScaledPrice.infobox_title","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td></tr>\n</table>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PermissionMap:SLD_MANAGE_PRICES"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",27,e);}if (_boolean_result) { 
      out.write("<table border=\"0\" cellpadding=\"4\" cellspacing=\"0\" width=\"100%\" class=\"infobox w e \">\n<tr>\n<td class=\"infobox_item\" nowrap=\"nowrap\">");
 {out.write(localizeISText("WarrantyScaledPricesConfig.Currency.infobox_item","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n<td> \n");
 {out.write("<");out.write("SELECT class=\"dropdown inputfield_en\" NAME=\""+context.getFormattedValue(getObject("AddScaledPriceForm:Threshold:ThresholdCurrency:QualifiedName"),null)+"\">");String value, description;while (loop("Currencies",null)){out.write("<");out.write("OPTION ");_boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("Currencies:Mnemonic"),null).equals(context.getFormattedValue(getObject("CurrentSession:CurrencyCode"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",33,e);}if (_boolean_result) {out.write("SELECTED ");}out.print("VALUE =\"");value = context.getFormattedValue(getObject("Currencies:Mnemonic"),null);description = context.getFormattedValue(getObject("Currencies:CurrencyName"),null);value = encodeString(value);description = encodeString(description);out.write(value + "\">");out.write(description + "</OPTION>");}out.write("</SELECT>");} 
      out.write("</td>\n<td class=\"infobox_item\" nowrap=\"nowrap\">");
 {out.write(localizeISText("WarrantyScaledPricesConfig.ProductSalePriceUpTo.infobox_item","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n<td>\n<input type=\"text\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("AddScaledPriceForm:Threshold:ThresholdValue:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {42}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" \nvalue=\"\"\nmaxlength=\"30\" size=\"30\" \nclass=\"inputfield_en\"\n/>\n</td>\n<td class=\"infobox_item\" nowrap=\"nowrap\">");
 {out.write(localizeISText("WarrantyScaledPricesConfig.WarrantyPrice.infobox_item","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n<td>\n<input type=\"text\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("AddScaledPriceForm:Price:PriceValue:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {50}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" \nvalue=\"\"\nmaxlength=\"30\" size=\"30\" \nclass=\"inputfield_en\"\n/>\n</td>\n<td width=\"100%\">\n<table border=\"0\" cellspacing=\"2\" cellpadding=\"0\">\n<tr>\n<td class=\"button\">\n<input type=\"submit\" name=\"add\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("WarrantyScaledPricesConfig.Add.button",null)),null));
      out.write("\" class=\"button\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (disableErrorMessages().isDefined(getObject("ProductLockedForMe")))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",60,e);}if (_boolean_result) { 
      out.write("disabled=\"disabled\"");
 } 
      out.write(" />\n</td>\n</tr>\n</table>\n</td>\n</tr> \n</table>");
 } 
      out.write("<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" class=\"n e w\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((hasLoopElements("ScaledPriceForm:Instances") ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",71,e);}if (_boolean_result) { 
      out.write("<tr>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PermissionMap:SLD_MANAGE_PRICES"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",73,e);}if (_boolean_result) { 
      out.write("<td class=\"left e s\" nowrap=\"nowrap\" width=\"80\">\n<div id=\"A\">\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" class=\"table_header center\" width=\"80\">\n<tr>\n<td nowrap=\"nowrap\">\n<a href=\"javascript:selectAll('ScaledPriceForm','SelectedObjectUUID','A','B');\" class=\"tableheader\">");
 {out.write(localizeISText("WarrantyScaledPricesConfig.SelectAll.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a>\n</td>\n</tr>\n</table>\n</div>\n<div id=\"B\" style=\"display:none\">\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" class=\"table_header center\" width=\"80\">\n<tr>\n<td nowrap=\"nowrap\">\n<a href=\"javascript:selectAll('ScaledPriceForm','SelectedObjectUUID','A','B');\" class=\"tableheader\">");
 {out.write(localizeISText("WarrantyScaledPricesConfig.ClearAll.link","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</a>\n</td>\n</tr>\n</table>\n</div>\n</td>");
 } 
      out.write("<td class=\"table_header e s\">");
 {out.write(localizeISText("WarrantyScaledPricesConfig.Currency.table_header","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td> \n<td class=\"table_header e s\">");
 {out.write(localizeISText("WarrantyScaledPricesConfig.ProductSalePriceUpTo.table_header","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n<td width=\"100%\" class=\"table_header s\">");
 {out.write(localizeISText("WarrantyScaledPricesConfig.WarrantyPrice.table_header","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>");
 {Object temp_obj = (new Double(0)); getPipelineDictionary().put("LastThreshold", temp_obj);} 
 while (loop("ScaledPriceForm:Instances","SubForm",null)) { 
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) ((( ((Number) getObject("SubForm:Threshold:Value:Value")).doubleValue() ==((Number)(new Double(0.00))).doubleValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",105,e);}if (_boolean_result) { 
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("LastCurrencyCode")))).booleanValue() && !((Boolean) ((((context.getFormattedValue(getObject("LastCurrencyCode"),null).equals(context.getFormattedValue(getObject("SubForm:Price:Value:CurrencyMnemonic"),null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",106,e);}if (_boolean_result) { 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"warranty/inc/MoreThanScaledPriceConfig", null, "108");} 
      out.write("<tr><td colspan=\"4\" class=\"table_header s\">&nbsp;</td></tr>");
 } 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("SubForm:Price:Invalid"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",113,e);}if (_boolean_result) { 
 {Object temp_obj = (getObject("SubForm:Price:PriceCurrency:Value")); getPipelineDictionary().put("LastCurrencyCode", temp_obj);} 
 } else { 
 {Object temp_obj = (getObject("SubForm:Price:Value:CurrencyMnemonic")); getPipelineDictionary().put("LastCurrencyCode", temp_obj);} 
 } 
 {Object temp_obj = (getObject("SubForm:Threshold:Value")); getPipelineDictionary().put("LastThreshold", temp_obj);} 
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("Product:DerivedProduct"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",120,e);}if (_boolean_result) { 
 {try{executePipeline("ProcessWarrantyPrices-IsDerivedProductWarrantyScaledPrice",((java.util.Map)(((new ParameterMap().addParameter(new ParameterEntry("Product",getObject("Product")))).addParameter(new ParameterEntry("WarrantyBO",getObject("WarrantyBO"))).addParameter(new ParameterEntry("BaseProductWarrantyBO",getObject("BaseProductWarrantyBO"))).addParameter(new ParameterEntry("CurrencyCode",getObject("LastCurrencyCode"))).addParameter(new ParameterEntry("ThresholdValue",getObject("SubForm:Threshold:Value"))).addParameter(new ParameterEntry("PriceValue",getObject("SubForm:Price:Value")))))),"WarrantyScaledPriceResult");}catch(Exception e){Logger.error(this,"ISPIPELINE failed. Line: 121.",e);}} 
 _boolean_result=false;try {_boolean_result=((Boolean)((((context.getFormattedValue(getObject("WarrantyScaledPriceResult:IsDerivedProductWarrantyScaledPrice"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",125,e);}if (_boolean_result) { 
 {Object temp_obj = ("true"); getPipelineDictionary().put("BaseProductScaledPrice", temp_obj);} 
 } else { 
 {Object temp_obj = ("false"); getPipelineDictionary().put("BaseProductScaledPrice", temp_obj);} 
 } 
 } 
      out.write("<tr>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PermissionMap:SLD_MANAGE_PRICES"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",133,e);}if (_boolean_result) { 
      out.write("<td class=\"table_bg e s center\">\n<input type=\"hidden\" name=\"ObjectUUID\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("SubForm:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {135}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n<input type=\"checkbox\" name=\"SelectedObjectUUID\" value=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("SubForm:ID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {136}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write(' ');
      out.write('\n');
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("Clipboard:contains(SubForm:ID)"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",137,e);}if (_boolean_result) { 
      out.write(" checked=\"checked\"");
 } 
      out.write(' ');
      out.write('\n');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("BaseProductScaledPrice")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("BaseProductScaledPrice"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",138,e);}if (_boolean_result) { 
      out.write(" disabled=\"disabled\"");
 } 
      out.write("\n/>\n</td>");
 } 
      out.write("<td class=\"table_detail2 e s\"> \n<input type=\"hidden\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("SubForm:Threshold:ThresholdCurrency:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {144}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" \nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("LastCurrencyCode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {145}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"/>\n<input type=\"hidden\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("SubForm:Price:PriceCurrency:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {146}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" \nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("LastCurrencyCode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {147}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('/');
      out.write('>');
 {String value = null;try{value=context.getFormattedValue(getObject("LastCurrencyCode"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {148}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n<td class=\"table_detail2 e s\">");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PermissionMap:SLD_MANAGE_PRICES"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",151,e);}if (_boolean_result) { 
      out.write("<input type=\"text\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("SubForm:Threshold:ThresholdValue:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {152}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" \nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("SubForm:Threshold:Value"),new Integer(MONEY_SHORT),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {153}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nmaxlength=\"30\" size=\"30\" \nclass=\"inputfield_en\"\n");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("BaseProductScaledPrice")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("BaseProductScaledPrice"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",156,e);}if (_boolean_result) { 
      out.write(" readonly=\"readonly\" ");
 } 
      out.write('\n');
      out.write('/');
      out.write('>');
 } else { 
 {String value = null;try{value=context.getFormattedValue(getObject("SubForm:Threshold:Value"),new Integer(MONEY_SHORT),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {159}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } 

								Form form = (Form) getObject("SubForm");
								PipelineDictionary dict = getPipelineDictionary();
								Object oldThreshold = getObject("Old_" + form.getParameter("Threshold").getField("ThresholdValue").getQualifiedName());
								dict.put("OldThreshold", oldThreshold);
							
      out.write("<input type=\"hidden\" name=\"Old_");
 {String value = null;try{value=context.getFormattedValue(getObject("SubForm:Threshold:ThresholdValue:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {167}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('\n');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("SubForm:Submitted")).booleanValue() && ((Boolean) getObject("SubForm:Invalid")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",168,e);}if (_boolean_result) { 
      out.write("\nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("OldThreshold"),new Integer(MONEY_SHORT),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {169}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('\n');
 } else { 
      out.write("\nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("SubForm:Threshold:Value"),new Integer(MONEY_SHORT),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {171}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write(' ');
      out.write('\n');
 } 
      out.write("\n/>\n</td>\n<td class=\"table_detail2 s\">\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<td>");
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PermissionMap:SLD_MANAGE_PRICES"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",179,e);}if (_boolean_result) { 
      out.write("<input type=\"text\" name=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("SubForm:Price:PriceValue:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {180}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\" \nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("SubForm:Price:Value"),new Integer(MONEY_SHORT),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {181}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("\"\nmaxlength=\"30\" size=\"30\" \nclass=\"inputfield_en\"/>");
 } else { 
 {String value = null;try{value=context.getFormattedValue(getObject("SubForm:Price:Value"),new Integer(MONEY_SHORT),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {185}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
 } 

											Object oldPrice = getObject("Old_" + form.getParameter("Price").getField("PriceValue").getQualifiedName());
											dict.put("OldPrice", oldPrice);
										
      out.write("<input type=\"hidden\" name=\"Old_");
 {String value = null;try{value=context.getFormattedValue(getObject("SubForm:Price:PriceValue:QualifiedName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {191}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('\n');
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) getObject("SubForm:Submitted")).booleanValue() && ((Boolean) getObject("SubForm:Invalid")).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",192,e);}if (_boolean_result) { 
      out.write("\nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("OldPrice"),new Integer(MONEY_SHORT),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {193}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write('\n');
 } else { 
      out.write("\nvalue=\"");
 {String value = null;try{value=context.getFormattedValue(getObject("SubForm:Price:Value"),new Integer(MONEY_SHORT),null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {195}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write('"');
      out.write(' ');
      out.write('\n');
 } 
      out.write("\n/>\n</td>");
 _boolean_result=false;try {_boolean_result=((Boolean)(getObject("Product:DerivedProduct"))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",199,e);}if (_boolean_result) { 
      out.write("<td>&nbsp;\n");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) (disableErrorMessages().isDefined(getObject("BaseProductScaledPrice")))).booleanValue() && ((Boolean) ((((context.getFormattedValue(getObject("BaseProductScaledPrice"),null).equals(context.getFormattedValue("true",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",201,e);}if (_boolean_result) { 
      out.write('\n');
      out.write('(');
 {out.write(localizeISText("WarrantyScaledPricesConfig.SharedPrice","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(')');
      out.write('\n');
 } else {_boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("WarrantyScaledPriceResult:BaseProductPriceValue"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",203,e);}if (_boolean_result) { 
      out.write('\n');
      out.write('(');
 {out.write(localizeISText("WarrantyScaledPricesConfig.ChannelPriceSharedPrice","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(' ');
 {String value = null;try{value=context.getFormattedValue(getObject("WarrantyScaledPriceResult:BaseProductPriceValue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {204}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(')');
      out.write('\n');
 } else { 
      out.write('\n');
      out.write('(');
 {out.write(localizeISText("WarrantyScaledPricesConfig.ChannelPrice","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(')');
      out.write('\n');
 }} 
      out.write(" \n</td>");
 } 
      out.write("</tr>\n</table>\n</td>\n</tr> \n");
 } 
 } 
 {out.flush();processLocalIncludeByServer((com.intershop.beehive.core.capi.request.ServletResponse)response,"warranty/inc/MoreThanScaledPriceConfig", null, "220");} 
 _boolean_result=false;try {_boolean_result=((Boolean)((disableErrorMessages().isDefined(getObject("PermissionMap:SLD_MANAGE_PRICES"))))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",222,e);}if (_boolean_result) { 
      out.write("<tr>\n<td width=\"100%\" colspan=\"4\" class=\"s\">\n<table border=\"0\" cellspacing=\"4\" cellpadding=\"0\" align=\"right\">\n<tr>\n<td class=\"button\"><input type=\"submit\" name=\"apply\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("WarrantyScaledPricesConfig.Apply.button",null)),null));
      out.write("\" class=\"button\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (disableErrorMessages().isDefined(getObject("ProductLockedForMe")))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",228,e);}if (_boolean_result) { 
      out.write("disabled=\"disabled\"");
 } 
      out.write("/></td>\n<td class=\"button\"><input type=\"submit\" name=\"reset\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("WarrantyScaledPricesConfig.Reset.button",null)),null));
      out.write("\" class=\"button\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (disableErrorMessages().isDefined(getObject("ProductLockedForMe")))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",229,e);}if (_boolean_result) { 
      out.write("disabled=\"disabled\"");
 } 
      out.write("/></td>\n<td class=\"button\"><input type=\"submit\" name=\"confirmDelete\" value=\"");
      out.print(context.getFormattedValue(localizeText(context.getFormattedValue("WarrantyScaledPricesConfig.Delete.button",null)),null));
      out.write("\" class=\"button\" ");
 _boolean_result=false;try {_boolean_result=((Boolean)((((Boolean) (disableErrorMessages().isDefined(getObject("ProductLockedForMe")))).booleanValue() ? Boolean.FALSE : Boolean.TRUE) )).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",230,e);}if (_boolean_result) { 
      out.write("disabled=\"disabled\"");
 } 
      out.write("/></td>\n</tr>\n</table>\n</td>\n</tr>");
 } 
 } else { 
      out.write("<tr>\n<td colspan=\"4\" class=\"table_detail s\">");
 {out.write(localizeISText("WarrantyScaledPricesConfig.ThereAreCurrentlyNoPricesToShowHere.table_detail","",null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</td>\n</tr>");
 } 
      out.write("</table>");
 out.print("</form>"); 
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
