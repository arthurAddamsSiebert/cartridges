/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspCServletContext/1.0
 * Generated at: 2019-02-14 11:34:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package ish.cartridges.bc_005fcontract.default_.contract;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import com.intershop.beehive.core.internal.template.*;
import com.intershop.beehive.core.internal.template.isml.*;
import com.intershop.beehive.core.capi.log.*;
import com.intershop.beehive.core.capi.resource.*;
import com.intershop.beehive.core.capi.util.UUIDMgr;
import com.intershop.beehive.core.capi.util.XMLHelper;
import com.intershop.beehive.foundation.util.*;
import com.intershop.beehive.core.internal.url.*;
import com.intershop.beehive.core.internal.resource.*;
import com.intershop.beehive.core.internal.wsrp.*;
import com.intershop.beehive.core.capi.pipeline.PipelineDictionary;
import com.intershop.beehive.core.capi.naming.NamingMgr;
import com.intershop.beehive.core.capi.pagecache.PageCacheMgr;
import com.intershop.beehive.core.capi.request.SessionMgr;
import com.intershop.beehive.core.internal.request.SessionMgrImpl;
import com.intershop.beehive.core.pipelet.PipelineConstants;

public final class ContractNotificationEmail_jsp extends com.intershop.beehive.core.internal.template.AbstractTemplate
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
boolean _boolean_result=false;
TemplateExecutionConfig context = getTemplateExecutionConfig();
createTemplatePageConfig(context.getServletRequest());
printHeader(out);
 
      out.write('\n');
 
setEncodingType("text/html"); 
 {Object temp_obj = (getObject("UserBO:FirstName")); getPipelineDictionary().put("Firstname", temp_obj);} 
 {Object temp_obj = (getObject("UserBO:LastName")); getPipelineDictionary().put("Lastname", temp_obj);} 
 {Object temp_obj = (getObject("ContractBO:CustomerBO:CustomerNo")); getPipelineDictionary().put("CustomerName", temp_obj);} 
 {Object temp_obj = (getObject("ContractBO:Name")); getPipelineDictionary().put("ContractName", temp_obj);} 
 {Object temp_obj = (getObject("ContractBO:ContractID")); getPipelineDictionary().put("ContractID", temp_obj);} 
 {Object temp_obj = (getObject("ContractBO:SalesTarget:Target")); getPipelineDictionary().put("TargetRevenue", temp_obj);} 
 {Object temp_obj = (getObject("ContractBO:SalesTarget:Actual")); getPipelineDictionary().put("ReachedRevenue", temp_obj);} 
 {Object temp_obj = (getObject("ContractBO:EndDate")); getPipelineDictionary().put("ExpirationDate", temp_obj);} 
 {Object temp_obj = (getObject("CurrentOrganization:DisplayName")); getPipelineDictionary().put("Organization", temp_obj);} 
      out.write("<subject>");
 {out.write(localizeISText("contract.email.notification.template.subject",null,null,getObject("Organization"),null,null,null,null,null,null,null,null,null));} 
      out.write("</subject><html>\n\t<head>");
 insertIntershopSignature(request,(com.intershop.beehive.core.capi.request.ServletResponse)response); 
      out.write("<style type=\"text/css\">\nbody {\nfont: 80% Verdana, Arial, Helvetica, sans-serif;\ncolor: #000;\nbackground: #fff;\n}\nbody p { \nfont-size: 100%;\n}\np {\nfont-size: 0.75em;\n}\np.footer {\nfont-size: 90%;\ntext-align: center;\ncolor: #808080;\n}\ntd {\nvertical-align: top;\n}\ntd.indent {\npadding-left: 20px;\n}\n</style>\n</head>\n<body>\n<p>");
 _boolean_result=false;try {_boolean_result=((Boolean)(((((Boolean) ((disableErrorMessages().isDefined(getObject("Firstname"))))).booleanValue() && ((Boolean) ((disableErrorMessages().isDefined(getObject("Lastname"))))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("Firstname"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue() && ((Boolean) (((!(context.getFormattedValue(getObject("Lastname"),null).equals(context.getFormattedValue("",null)))) ? Boolean.TRUE : Boolean.FALSE))).booleanValue()) ? Boolean.TRUE : Boolean.FALSE))).booleanValue();} catch (Exception e) {Logger.debug(this,"Boolean expression in line {} could not be evaluated. False returned. Consider using the 'isDefined' ISML function.",44,e);}if (_boolean_result) { 
 {out.write(localizeISText("contract.email.notification.template.salutation",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("&nbsp;");
 {String value = null;try{value=context.getFormattedValue(getObject("Firstname"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {45}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("&nbsp;");
 {String value = null;try{value=context.getFormattedValue(getObject("Lastname"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {45}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write(',');
      out.write('\n');
 } else { 
 {out.write(localizeISText("contract.email.notification.template.salutation",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(',');
      out.write('\n');
 } 
      out.write("</p>\n<p>");
 {out.write(localizeISText("contract.email.notification.template.notification",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>\n<p>\n<table>\n<tr>\n<td nowrap=\"nowrap\">");
 {out.write(localizeISText("contract.email.notification.template.customer_name",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":\n</td>\n<td class=\"indent\">");
 {String value = null;try{value=context.getFormattedValue(getObject("CustomerName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {60}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n</tr>\n<tr>\n<td nowrap=\"nowrap\">");
 {out.write(localizeISText("contract.email.notification.template.contract_name",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":\n</td>\n<td class=\"indent\">");
 {String value = null;try{value=context.getFormattedValue(getObject("ContractName"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {68}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n</tr>\n<tr>\n<td nowrap=\"nowrap\">");
 {out.write(localizeISText("contract.email.notification.template.contract_id",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":\n</td>\n<td class=\"indent\">");
 {String value = null;try{value=context.getFormattedValue(getObject("ContractID"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {76}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n</tr>\n<tr><td>&nbsp;</td></tr>\n<tr>\n<td nowrap=\"nowrap\">");
 {out.write(localizeISText("contract.email.notification.template.target_revenue",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":\n</td>\n<td class=\"indent\">");
 {String value = null;try{value=context.getFormattedValue(getObject("TargetRevenue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {85}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n</tr>\n<tr>\n<td nowrap=\"nowrap\">");
 {out.write(localizeISText("contract.email.notification.template.reached_revenue",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":\n</td>\n<td class=\"indent\">");
 {String value = null;try{value=context.getFormattedValue(getObject("ReachedRevenue"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {93}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n</tr>\n<tr><td>&nbsp;</td></tr>\n<tr>\n<td nowrap=\"nowrap\">");
 {out.write(localizeISText("contract.email.notification.template.expiration_date",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write(":\n</td>\n<td class=\"indent\">");
 {String value = null;try{value=context.getFormattedValue(getObject("ExpirationDate"),null,null);}catch(Exception e){value=null;Logger.error(this,"ISPRINT has an invalid expression. Returning empty string. Line: {102}",e);}if (value==null) value="";value = encodeString(value);out.write(value);} 
      out.write("</td>\n</tr>\n</table>\n</p>\n</br>\n<p>");
 {out.write(localizeISText("contract.email.notification.template.complimentary_close",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</br>");
 {out.write(localizeISText("contract.email.notification.template.service",null,null,getObject("Organization"),null,null,null,null,null,null,null,null,null));} 
      out.write("</p>\n<p class=\"footer\">");
 {out.write(localizeISText("contract.email.notification.template.footer1",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</br>");
 {out.write(localizeISText("contract.email.notification.template.footer2",null,null,null,null,null,null,null,null,null,null,null,null));} 
      out.write("</p>\n</body>\n</html>");
 printFooter(out); 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
